{"version":3,"sources":["segments/shop/OrderAddress.tsx","segments/shop/ShopCloseAlert.tsx","segments/shop/ShopIntro.tsx","segments/shop/ShopLogo.tsx","segments/shop/ShopOpeningHours.tsx","segments/shop/Sticker.tsx","segments/shop/ShopHeader.tsx","segments/shop/ShopHeaderView.tsx","segments/finish/FinishView.tsx","segments/map/PickupMapBranch.tsx","segments/map/PickupMap.tsx","segments/map/OrderMap.tsx","segments/map/views/MapView.tsx","segments/orderForm/OrderPaymentMethod.tsx","segments/orderForm/OrderForm.tsx","segments/orderForm/OrderFormView.tsx","segments/shop/ShopOverview.tsx","app/DesktopApp.tsx"],"names":["OrderAddress","_ref","address","_useRoot","useRoot","order","location","useObserver","orderMethod","DeliveryTypeEnum","Messenger","react_default","a","createElement","i18n","_","Pickup","ShopAddress","ShopCloseAlert","status","_useShopStatus","useShopStatus","decision","closingIn","closingInPlural","reactstrap_es","className","ShopIntroStyled","styled","div","withConfig","displayName","componentId","ShopIntro","intro","data-testid","headerText","LogoLink","url","children","href","react_router_dom","to","LogoContainerStyled","ShopLogo","props","ShopLogo_LogoLink","BackgroundThemed","imageName","size","ShopOpeningHoursContainer","Container","ShopOpeningHoursTimes","ShopOpeningHoursStatus","ShopOpeningHoursIcon","ShopOpeningHours","branch","openingHours","businessHours","filter","RM","propEq","fluid","length","map","businessHour","idx","key","concat","formatTime","openAt","closeAt","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","StickerThemed","theme","primary","IconStyled","span","Sticker","_ref2","_ref2$success","success","classNames","order-method-unselected","order-method-selected","ShopHeaderStyled","ShopHeaderInfoStyled","ShopHeader","isLoading","ShopHeaderIcons","ColStyle","Fragment","ShopLogo_ShopLogo","homepageUrl","react_router","exact","path","render","Sticker_Sticker","_lingui_react","id","ShopIntro_ShopIntro","ShopClosingTimeModal","OrderAddress_OrderAddress","ShopOpeningHours_ShopOpeningHours","ShopCloseAlert_ShopCloseAlert","ShopHeaderView","observer","business","_useQShopHeader","useQShopHeader","Object","objectSpread","brandOrBranch","branchId","skip","isValid","data","loading","ShopHeader_ShopHeader","FinishView","objectDestructuringEmpty","shop_ShopHeaderView","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","companyBranch","FinishViewFooter","finish","StyledPickupMapBranch","tertiaryText","_ref3","Color","lighten","toString","PickupMapBranch","_ref4","onConfirm","onClose","shopStatus","onClick","name","Buttons","color","disabled","pickupEnabled","_ref5","openingIn","values","toLocaleUpperCase","getButtonText","mapByOrderMethod","_mapByOrderMethod","defineProperty","createFactory","DeliveryMap","_useState","useState","_useState2","slicedToArray","activeBranchId","setActiveBranch","useDisposable","when","useEffect","prefetchFoodMenu","onConfirmPickup","useCallback","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setBranch","createPickupOrder","stop","_x","apply","this","arguments","renderBranchMarker","lib","position","gpsToLatLng","gps","renderBranchInfo","getPixelPositionOffset","width","x","y","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","PickupMapBranch_PickupMapBranch","isBrand","PickupMap_graphql","variables","brandId","renderLoading","branches","businessBranch","find","activeBranch","MapPanning","OrderMap","BaseMap","model","MapView","history","useRouterContext","OrderMethod","OrderMap_OrderMap","push","OrderPaymentMethod","OrderPaymentButton","method","PaymentGateEnum","Gopay","Cash","OrderFormTipInput","OrderForm","orderModel","_useQOrderForm","useQOrderForm","orderId","canSubmit","isVamInitialized","countWares","OrderFormSetup","form","isSubmitting","OrderFormAutoFill","onFill","setAllValues","OrderFormInputs","OrderPaymentMethod_OrderPaymentMethod","OrderAgreements","OrderSubmitLine","submitForm","OrderFormView","React","memo","OrderGoPayModal","OrderErrorModal","OrderTimePicker","ShopOverview","hasOrder","ThemeSwitchProvider","FoodMenuView","CartView","OrderFormView_OrderFormView","OrderFormStorageNotice","DesktopApp","useReleaseCabinet","alert","component"],"mappings":"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","file":"static/js/12.f14b060d.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { DeliveryTypeEnum, FAddressFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  address: FAddressFragment\n}\n\nexport const OrderAddress: React.FC<IProps> = ({ address }) => {\n  const { order, location } = useRoot()\n  return useObserver(() => {\n    switch (order.orderMethod) {\n      case DeliveryTypeEnum.Messenger:\n        return (\n          <span>\n            {i18n.t`Order to address`}: <b>{location.address}</b>\n          </span>\n        )\n      case DeliveryTypeEnum.Pickup:\n        return (\n          <span>\n            {i18n.t`Pickup at address`}:{' '}\n            <b>\n              <ShopAddress address={address} />\n            </b>\n          </span>\n        )\n      default:\n        return null\n    }\n  })\n}\n","import './ShopCloseAlert.css'\n\nimport React from 'react'\nimport { Alert } from 'reactstrap'\n\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n}\n\nexport const ShopCloseAlert: React.FC<IProps> = ({ status }) => {\n  const { decision, closingIn } = useShopStatus({\n    status,\n  })\n  if (decision === 'ClosingSoon') {\n    const closingInPlural = i18n.plural({\n      value: closingIn,\n      one: 'closing in 1 minute',\n      few: 'closing in # minutes',\n      other: 'closing in # minutes',\n    })\n    return (\n      <Alert className=\"shop__header__alert\">\n        {i18n.t`Beware! We are ${closingInPlural}. Finish your order quickly.`}\n      </Alert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { QShopHeaderIntro } from '../../graph/generated'\n\ninterface IProps {\n  intro?: Maybe<QShopHeaderIntro>\n}\n\nconst ShopIntroStyled = styled.div`\n  margin: 0.8rem 1rem 1rem 1.3rem;\n`\n\nexport const ShopIntro: React.FC<IProps> = ({ intro }) => (\n  <ShopIntroStyled data-testid=\"headerText\">\n    {intro ? intro.headerText : ''}\n  </ShopIntroStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { BackgroundThemed } from '../../common/BackgroundThemed'\n\ninterface IProps {\n  url: Maybe<string>\n}\n\nconst LogoLink: React.FC<IProps> = ({ url, children }) =>\n  url ? <a href={url}>{children}</a> : <Link to=\"/\">{children}</Link>\n\nconst LogoContainerStyled = styled.div`\n  height: 200px;\n  width: 400px;\n  flex: 0 0 400px;\n  & .shop__header__logo {\n    height: 100%;\n  }\n`\n\nexport const ShopLogo: React.FC<IProps> = props => (\n  <LogoContainerStyled>\n    <LogoLink {...props}>\n      <BackgroundThemed\n        className=\"shop__header__logo\"\n        imageName=\"storeLogo\"\n        size=\"cover\"\n      />\n    </LogoLink>\n  </LogoContainerStyled>\n)\n","import React from 'react'\nimport { Container } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { FShopOpeningHours } from '../../graph/types'\nimport { formatTime } from '../../helpers/formats'\nimport { RM } from '../../helpers/ramda'\nimport { ShopStatusDisplay } from './ShopStatusDisplay'\n\ninterface IProps {\n  branch: FShopOpeningHours.Fragment\n}\n\nconst ShopOpeningHoursContainer = styled(Container)`\n  margin: 0.4rem 0 0 0.1rem;\n  display: flex;\n`\n\nconst ShopOpeningHoursTimes = styled.div`\n  padding-left: 2rem;\n`\n\nconst ShopOpeningHoursStatus = styled.div`\n  padding-left: 2rem;\n`\n\nconst ShopOpeningHoursIcon = styled.div`\n  margin: -0.2rem 0 0 -1rem;\n  position: absolute;\n`\n\nexport const ShopOpeningHours: React.FC<IProps> = ({ branch }) => {\n  const openingHours = branch.businessHours.filter(RM.propEq('closed', false))\n  return (\n    <ShopOpeningHoursContainer fluid={true}>\n      <ShopOpeningHoursIcon className=\"flaticon-clock\" />\n      {openingHours.length > 0 && (\n        <ShopOpeningHoursTimes>\n          {openingHours.map((businessHour, idx) => (\n            <div data-testid=\"openingHours\" key={idx}>\n              {`${formatTime(businessHour.openAt)} - ${formatTime(\n                businessHour.closeAt,\n              )}`}\n            </div>\n          ))}\n        </ShopOpeningHoursTimes>\n      )}\n      <ShopOpeningHoursStatus>\n        <ShopStatusDisplay\n          status={branch}\n          deliveryTime={branch.defaultDeliveryTime}\n          pickupTime={branch.defaultPickupTime}\n        />\n      </ShopOpeningHoursStatus>\n    </ShopOpeningHoursContainer>\n  )\n}\n","import classNames from 'classnames'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nconst StickerThemed = styled.div`\n  background: ${({ theme }) => theme.primary};\n  color: white;\n  margin-top: 1rem;\n  padding: 0;\n  border-radius: 0 0.7rem 0.7rem 0;\n  white-space: nowrap;\n  flex: none;\n\n  & p {\n    display: inline-block;\n    margin: 0.6rem 1rem 0 0;\n    vertical-align: top;\n    white-space: nowrap;\n  }\n`\n\nconst IconStyled = styled.span`\n  margin: 0.5rem 1rem 0 0.1rem;\n  &:before,\n  :after {\n    font-size: 1.8rem;\n    margin: 0 0 0 1rem;\n  }\n`\n\ninterface IProps {\n  success?: boolean\n}\n\nexport const Sticker: React.FC<IProps> = ({ success = false, children }) => (\n  <StickerThemed\n    className={classNames('right__sticker', {\n      'order-method-unselected': !success,\n      'order-method-selected': success,\n    })}\n  >\n    <IconStyled className=\"flaticon-transport\" />\n    <p>{children}</p>\n  </StickerThemed>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Row } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport { QShopHeaderBranch, QShopHeaderIntro } from '../../graph/generated'\nimport { OrderAddress } from './OrderAddress'\nimport { ShopCloseAlert } from './ShopCloseAlert'\nimport { ShopClosingTimeModal } from './ShopClosingTimeModal'\nimport { ShopHeaderIcons } from './ShopHeaderIcons'\nimport { ShopIntro } from './ShopIntro'\nimport { ShopLogo } from './ShopLogo'\nimport { ShopOpeningHours } from './ShopOpeningHours'\nimport { Sticker } from './Sticker'\n\ninterface IProps {\n  branch?: QShopHeaderBranch\n  intro?: QShopHeaderIntro\n  isLoading: boolean\n}\n\nconst ShopHeaderStyled = styled.div`\n  display: flex;\n  min-height: 200px;\n`\n\nconst ShopHeaderInfoStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`\n\nexport const ShopHeader: React.FC<IProps> = ({ branch, intro, isLoading }) => (\n  <div>\n    <Row className=\"justify-content-md-center\">\n      <ShopHeaderIcons />\n    </Row>\n\n    <Row className=\"row-white justify-content-md-center\">\n      <ColStyle>\n        <ShopHeaderStyled data-testid=\"shopHeader\">\n          {isLoading || !branch ? null : (\n            <>\n              <ShopLogo url={intro ? intro.homepageUrl : null} />\n\n              <ShopHeaderInfoStyled>\n                <Route\n                  exact={true}\n                  path=\"/\"\n                  render={() => (\n                    <>\n                      <Sticker>\n                        <Trans>Choose your delivery option below</Trans>\n                      </Sticker>\n                      <ShopIntro intro={intro} />\n                    </>\n                  )}\n                />\n                <Route\n                  path=\"/order\"\n                  render={() => (\n                    <>\n                      <ShopClosingTimeModal status={branch} />\n                      <Sticker success={true}>\n                        <OrderAddress address={branch.address} />\n                      </Sticker>\n                      <ShopOpeningHours branch={branch} />\n                      <ShopCloseAlert status={branch} />\n                      <ShopIntro intro={intro} />\n                    </>\n                  )}\n                />\n                <Route\n                  path=\"/finish\"\n                  render={() => (\n                    <>\n                      <Sticker success={true}>\n                        <Trans>Order was send</Trans>\n                      </Sticker>\n                      <ShopOpeningHours branch={branch} />\n                      <ShopIntro intro={intro} />\n                    </>\n                  )}\n                />\n              </ShopHeaderInfoStyled>\n            </>\n          )}\n        </ShopHeaderStyled>\n      </ColStyle>\n    </Row>\n  </div>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useQShopHeader } from '../../graph/generated'\nimport { ShopHeader } from './ShopHeader'\n\nexport const ShopHeaderView = observer(() => {\n  const { order, business } = useRoot()\n  const { data, loading } = useQShopHeader(\n    {\n      ...business.brandOrBranch,\n      // need to use branchId from order first as it reflects branch for which\n      // order is being made and it might have different eg. business hours\n      // then the one obtained through business code\n      branchId: order.branchId || business.branchId!,\n    },\n    { skip: !business.isValid },\n  )\n\n  return (\n    <ShopHeader branch={data.branch} intro={data.intro} isLoading={loading} />\n  )\n})\n\nexport default ShopHeaderView\n","import './FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport ShopHeaderView from '../shop/ShopHeaderView'\nimport { FinishViewFooter } from './FinishViewFooter'\nimport { FinishViewLoader } from './FinishViewLoader'\nimport { FinishViewOrder } from './FinishViewOrder'\nimport { FinishViewSupport } from './FinishViewSupport'\n\ninterface IProps {}\n\nexport const FinishView: React.FC<IProps> = ({}) => (\n  <>\n    <ShopHeaderView />\n    <Row className=\"justify-content-md-center\">\n      <ColStyle>\n        <div className=\"finish__view\">\n          <FinishViewLoader\n            render={result => (\n              <>\n                <FinishViewOrder order={result.order} />\n                <FinishViewSupport branch={result.companyBranch} />\n                <FinishViewFooter finish={result} />\n              </>\n            )}\n          />\n        </div>\n      </ColStyle>\n    </Row>\n  </>\n)\n","import { Plural, Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { GPickupBranch } from '../../graph/types'\nimport { IShopStatus, useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  branch: GPickupBranch.Fragment\n  onConfirm(): void\n  onClose(): void\n}\n\nconst StyledPickupMapBranch = styled.div`\n  font-size: 1rem;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  max-width: 18rem;\n  min-width: 13rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 7px 1px rgba(0, 0, 0, 0.3);\n\n  > header {\n    flex: 0 0 auto;\n    background-color: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.tertiaryText};\n    padding: 0.4rem;\n    padding-right: 1.3rem;\n    border-radius: 8px 8px 0 0;\n  }\n\n  > p {\n    flex: 1 1 0;\n    margin: 0.5rem;\n  }\n\n  > button {\n    flex: 1 0 auto;\n    margin: 0 0.3rem 0.3rem 0.3rem;\n  }\n\n  > .close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 0.5rem;\n    font-size: 0.9rem;\n    cursor: pointer;\n\n    &:hover {\n      border-radius: 0 8px 0 0;\n      background-color: ${({ theme }) =>\n        Color(theme.primary)\n          .lighten(0.5)\n          .toString()};\n    }\n  }\n`\n\nexport const PickupMapBranch: React.FC<IProps> = ({\n  branch,\n  onConfirm,\n  onClose,\n}) => {\n  const shopStatus = useShopStatus({\n    status: branch,\n  })\n  return (\n    <StyledPickupMapBranch>\n      <div className=\"close\" onClick={onClose}>\n        🗙\n      </div>\n      <header>{branch.name}</header>\n      <p>\n        <ShopAddress address={branch.address} />\n      </p>\n      <PrimaryButton\n        color=\"primary\"\n        data-testid=\"submitPickupBranch\"\n        disabled={!branch.pickupEnabled}\n        onClick={onConfirm}\n      >\n        {branch.pickupEnabled ? (\n          getButtonText(shopStatus)\n        ) : (\n          <Trans>Delivery only</Trans>\n        )}\n      </PrimaryButton>\n    </StyledPickupMapBranch>\n  )\n}\n\nfunction getButtonText({ decision, openingIn, closingIn }: IShopStatus) {\n  switch (decision) {\n    case 'Closed':\n      return <Trans>Closed</Trans>\n    case 'ClosingSoon':\n      return (\n        <Plural\n          value={closingIn}\n          one=\"Closing in 1 minute\"\n          other=\"Closing in # minutes\"\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <Plural\n          value={openingIn}\n          one=\"Opening in 1 minute\"\n          other=\"Opening in # minutes\"\n        />\n      )\n    default:\n      return i18n.t`Pickup here`.toLocaleUpperCase()\n  }\n}\n","import './PickupMap.css'\n\nimport { Marker, OverlayView } from '@react-google-maps/api'\nimport { when } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { RM } from '../../helpers/ramda'\nimport { MapPanning } from './atoms/MapPanning'\nimport { QueryPickupMapBranch, QueryPickupMapBrand } from './PickupMap.graphql'\nimport { PickupMapBranch } from './PickupMapBranch'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const PickupMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, business, map } = useRoot()\n  const [activeBranchId, setActiveBranch] = useState<MaybeID>(null)\n\n  useDisposable(() =>\n    when(\n      () => business.branchId !== null && activeBranchId === null,\n      () => {\n        setActiveBranch(business.branchId)\n      },\n    ),\n  )\n\n  useEffect(() => {\n    if (activeBranchId) {\n      order.prefetchFoodMenu(activeBranchId)\n    }\n  }, [activeBranchId])\n\n  const onConfirmPickup = useCallback(\n    async (branchId: ID) => {\n      // it's necessary to set asap so correct data are displayed further\n      order.setBranch(branchId)\n      await order.createPickupOrder(branchId)\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  const renderBranchMarker = (branch: GPickupBranch.Fragment) => (\n    <Marker\n      key={branch.id}\n      position={gpsToLatLng(branch.gps)}\n      onClick={() => setActiveBranch(branch.id)}\n    />\n  )\n\n  const renderBranchInfo = (branch: GPickupBranch.Fragment) => (\n    <OverlayView\n      key={branch.id}\n      position={gpsToLatLng(branch.gps)}\n      getPixelPositionOffset={width => ({\n        x: width === 0 ? -131 : -(width / 2),\n        y: 8,\n      })}\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n    >\n      <PickupMapBranch\n        branch={branch}\n        onClose={() => {\n          setActiveBranch(null)\n        }}\n        onConfirm={() => {\n          onConfirmPickup(branch.id)\n        }}\n      />\n    </OverlayView>\n  )\n\n  return useObserver(() => {\n    if (business.isBrand) {\n      return (\n        <QueryPickupMapBrand\n          variables={{ brandId: business.brandId! }}\n          renderLoading={false}\n          render={({ branches }) => {\n            const businessBranch =\n              branches && branches.find(RM.propEq('id', business.branchId))\n            const activeBranch =\n              activeBranchId !== null &&\n              branches &&\n              branches.find(RM.propEq('id', activeBranchId))\n            return (\n              <>\n                <MapPanning\n                  map={map}\n                  gps={businessBranch && businessBranch.gps}\n                />\n                {branches && branches.map(renderBranchMarker)}\n                {activeBranch && renderBranchInfo(activeBranch)}\n              </>\n            )\n          }}\n        />\n      )\n    }\n    return (\n      <QueryPickupMapBranch\n        variables={{ branchId: business.branchId! }}\n        renderLoading={false}\n        render={({ branch }) => (\n          <>\n            <MapPanning map={map} gps={branch && branch.gps} />\n            {branch && (\n              <>\n                {renderBranchMarker(branch)}\n                {renderBranchInfo(branch)}}\n              </>\n            )}\n          </>\n        )}\n      />\n    )\n  })\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React, { createFactory } from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { DeliveryTypeEnum } from '../../graph/generated'\nimport { DeliveryMap } from './DeliveryMap'\nimport { PickupMap } from './PickupMap'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst mapByOrderMethod = {\n  [DeliveryTypeEnum.Messenger]: createFactory<IProps>(DeliveryMap),\n  [DeliveryTypeEnum.Pickup]: createFactory<IProps>(PickupMap),\n}\n\nexport const OrderMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, map } = useRoot()\n  return useObserver(() => (\n    <BaseMap model={map}>\n      {mapByOrderMethod[order.orderMethod]({ onConfirm })}\n    </BaseMap>\n  ))\n}\n","import './MapView.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../../common/ColStyle'\nimport { OrderMethod } from '../../destination/OrderMethod'\nimport ShopHeaderView from '../../shop/ShopHeaderView'\nimport { OrderMap } from '../OrderMap'\n\nexport const MapView = () => {\n  const { history } = useRouterContext()\n  return (\n    <>\n      <ShopHeaderView />\n      <Row className=\"justify-content-md-center\">\n        <ColStyle>\n          <div className=\"map__view\">\n            <div className=\"map__view__header\">\n              <OrderMethod />\n            </div>\n            <OrderMap onConfirm={() => history.push(`/order`)} />\n          </div>\n        </ColStyle>\n      </Row>\n    </>\n  )\n}\n","import './OrderPaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { OrderFormTipInput } from './OrderFormTipInput'\nimport { OrderPaymentButton } from './OrderPaymentButton'\n\nexport const OrderPaymentMethod: React.FC = () => (\n  <div className=\"order__payment__method\">\n    <OrderPaymentButton\n      method={PaymentGateEnum.Gopay}\n      data-testid=\"orderPaymentMethod__GoPay\"\n    >\n      {i18n.t`Pay by card`.toLocaleUpperCase()}\n    </OrderPaymentButton>\n    <OrderPaymentButton\n      method={PaymentGateEnum.Cash}\n      data-testid=\"orderPaymentMethod__Cash\"\n    >\n      {i18n.t`Pay by cash`.toLocaleUpperCase()}\n    </OrderPaymentButton>\n\n    <OrderFormTipInput />\n  </div>\n)\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useQOrderForm } from '../../graph/generated'\nimport { OrderAgreements } from './OrderAgreements'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\nimport { OrderFormInputs } from './OrderFormInputs'\nimport { OrderFormSetup } from './OrderFormSetup'\nimport { OrderPaymentMethod } from './OrderPaymentMethod'\nimport { OrderSubmitLine } from './OrderSubmitLine'\n\nexport const OrderForm = observer(() => {\n  const { order: orderModel } = useRoot()\n\n  const { data, loading } = useQOrderForm(\n    { orderId: orderModel.orderId! },\n    { skip: !orderModel.orderId },\n  )\n\n  const canSubmit =\n    orderModel.isVamInitialized && !loading && data.order.countWares > 0\n\n  return (\n    <OrderFormSetup\n      render={(form, isSubmitting) => (\n        <div className=\"order__form\">\n          <div className=\"order__form__inner\">\n            <OrderFormAutoFill onFill={values => form.setAllValues(values)} />\n            <OrderFormInputs />\n            <OrderPaymentMethod />\n            <OrderAgreements />\n          </div>\n          <OrderSubmitLine\n            onClick={form.submitForm}\n            canSubmit={canSubmit}\n            isSubmitting={isSubmitting}\n          >\n            <Trans>Place order</Trans>\n          </OrderSubmitLine>\n        </div>\n      )}\n    />\n  )\n})\n","import './OrderFormView.css'\n\nimport React from 'react'\n\nimport { OrderErrorModal } from './OrderErrorModal'\nimport { OrderForm } from './OrderForm'\nimport { OrderGoPayModal } from './OrderGoPayModal'\nimport { OrderTimePicker } from './OrderTimePicker'\n\nexport const OrderFormView = React.memo(() => {\n  return (\n    <>\n      <OrderForm />\n      <OrderGoPayModal />\n      <OrderErrorModal />\n      <OrderTimePicker />\n    </>\n  )\n})\n","import './ShopOverview.css'\n\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Row } from 'reactstrap'\n\nimport ThemeSwitchProvider from '../../app/ThemeSwitchProvider'\nimport { useRoot } from '../../app/useRoot'\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { ColStyleLeft, ColStyleRight } from '../../common/ColStyle'\nimport { i18n } from '../../i18n'\nimport { CartView } from '../cart/CartView'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderFormView } from '../orderForm/OrderFormView'\nimport ShopHeaderView from './ShopHeaderView'\n\nexport const ShopOverview: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  if (!orderModel.hasOrder) {\n    return <Redirect to=\"/\" />\n  }\n  return (\n    <ThemeSwitchProvider branchId={orderModel.branchId}>\n      <>\n        <ShopHeaderView />\n        <Row className=\"justify-content-md-center\">\n          <ColStyleLeft>\n            <div className=\"shop__overview__column\">\n              <FoodMenuView />\n            </div>\n          </ColStyleLeft>\n\n          <ColStyleRight>\n            <div className=\"shop__overview__column cart__column\">\n              <div className=\"cart__column__header\">\n                <span className=\"flaticon-cart cart__column__header__icon\" />\n                <h4>{i18n.t`Your order`}</h4>\n              </div>\n\n              <BackgroundThemed\n                className=\"cart__column__cart\"\n                imageName=\"backgroundCart\"\n              >\n                <CartView />\n              </BackgroundThemed>\n\n              <OrderFormView />\n            </div>\n          </ColStyleRight>\n          <OrderFormStorageNotice />\n        </Row>\n      </>\n    </ThemeSwitchProvider>\n  )\n}\n","import { useReleaseCabinet } from '@speedlo/tools'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { FinishView } from '../segments/finish/FinishView'\nimport { MapView } from '../segments/map/views/MapView'\nimport { ShopOverview } from '../segments/shop/ShopOverview'\n\nconst DesktopApp = () => {\n  useReleaseCabinet(alert)\n  return (\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MapView} />\n      <Route path=\"/order\" component={ShopOverview} />\n      <Route path=\"/finish\" component={FinishView} />\n    </Container>\n  )\n}\n\nexport default DesktopApp\n"],"sourceRoot":""}