{"version":3,"sources":["segments/mobile/MobileConfirmView.tsx","common/ScrollToTop.tsx","segments/mobile/MobilePaymentMethod.tsx","segments/mobile/MobilePaymentButton.tsx","segments/mobile/MobileDeliveryView.tsx","segments/mobile/MobileFinishView.tsx","segments/mobile/MobileIntroView.tsx","segments/mobile/MobileShopIntro.tsx","segments/mobile/MobileShopIntro.graphql.ts","segments/mobile/MobileOrderView.tsx","segments/mobile/MobileCart.tsx","segments/mobile/MobileCartSummary.tsx","segments/mobile/MobileClosingTimeModal.tsx","segments/mobile/MobileClosingTimeModal.graphql.ts","segments/mobile/MobilePickupView.tsx","segments/mobile/MobilePickupList.tsx","segments/mobile/MobilePickupMap.tsx","segments/mobile/MobileSmartBanner.tsx","segments/mobile/MobileSmartBanner.graphql.ts","app/MobileApp.tsx","segments/mobile/MobileHeader.tsx"],"names":["__webpack_require__","_react","_react2","_interopRequireDefault","_ScrollToTop","_i18n","_OrderAgreements","_OrderErrorModal","_OrderFormAutoFill","_OrderFormInputs","_OrderFormSetup","_OrderFormStorageNotice","_OrderGoPayModal","_OrderTimePicker","_MobileHeader","_MobilePaymentMethod","history","default","createElement","className","text","i18n","_","buttonText","onButtonClick","goBack","OrderFormSetup","render","form","Fragment","ScrollToTop","OrderFormStorageNotice","OrderGoPayModal","OrderErrorModal","OrderTimePicker","OrderFormAutoFill","onFill","values","setAllValues","Trans","id","OrderFormInputs","OrderAgreements","MobilePaymentMethod","onConfirm","submitForm","PureComponent","[object Object]","window","scrollTo","_types","_MobilePaymentButton","MobilePaymentButton","method","PaymentGateEnum","Gopay","onClick","data-testid","toLocaleUpperCase","Cash","_reactForm","_Buttons","_SubmitSpinner","_WithOrder","_a","disabled","children","props","__rest","WithOrder","observe","order","Field","field","fieldApi","SelectButtonThemed","_extends","selected","value","isSubmitting","setValue","_BaseMap","_WithRoot","_DeliveryMap","map","useRoot","BaseMap","model","DeliveryMap","push","_reactstrap","_ColStyle","_FinishViewFooter","_FinishViewLoader","_FinishViewOrder","_FinishViewSupport","Row","ColStyle","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","branch","companyBranch","FinishViewFooter","finish","_reactRouterDom","_BackgroundThemed","_OrderMethod","_ShopHeaderIcons","_MobileShopIntro","imageName","size","fixed","ShopHeaderIcons","MobileShopIntro","Route","OrderMethod","onChange","usingDeliveryOrderMethod","usingPickupOrderMethod","_mobxReactLite","business","useObserver","QueryMobileShopIntro","variables","brandOrBranch","skip","isValid","renderLoading","intro","headerText","_graphqlTag","_buildQuery","MobileShopIntroQuery","buildQuery","_reactRouter","_AddToCartModal","_FoodMenuView","_MobileCart","_MobileClosingTimeModal","orderModel","hasOrder","FoodMenuView","MobileCart","orderId","AddToCartModal","MobileClosingTimeModal","branchId","Redirect","to","_hooks","_classnames","_interopRequireWildcard","_reactApolloHooks","_CartView","_useCartRefresh","_OrderSubmitLine","_MobileCart2","_MobileCartSummary","useRouterContext","data","loading","refetch","useQuery","MobileCartQuery","suspend","useCartRefresh","isOpen","setOpen","useState","count","price","isEmpty","countWares","totalSum","formattedValue","useEffect","mobile__sliding__cart__open","MobileCartSummary","isLoading","open","CartView","OrderSubmitLine","canSubmit","_styledComponents","_logger","MobileCartSummaryCountThemed","div","withConfig","displayName","theme","secondary","MobileCartSummaryPriceThemed","span","primary","logDebug","showContent","components","_ShopClosingTimeModal","QueryMobileShopStatus","ShopClosingTimeModal","status","_graph","_fragments","MobileShopStatusQuery","CompanyBranchStatusFragment","_ramda","_PickupMap","_MobilePickupList","_MobilePickupMap","match","onSelectBranch","__awaiter","createPickupOrder","renderHeader","name","renderMap","onSelect","params","isBrand","QueryPickupMapBrand","brandId","branches","find","RM","propEq","onShowMap","onPrefetch","prefetchFoodMenu","renderList","QueryPickupMapBranch","_ShopAddress","_ShopStatusDisplay","StatusDisplayPosition","key","ShopAddress","address","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","SecondaryButton","pickupEnabled","PrimaryButton","onMouseEnter","toLocaleLowerCase","_reactGoogleMaps","_ButtonStripe","_gps","ButtonStripeContainerStyled","this","panToBranch","panToLocation","gps","latlng","gpsToLatLng","latitude","Number","longitude","undefined","Marker","position","_uaParserJs","_MobileSmartBanner2","SmartBannerContainer","getPlatformType","os","navigator","userAgent","getOS","MobilePlatformEnum","Ios","Android","WithRoot","platform","banner","ensureBannerForCurrentBranch","shouldBeVisible","QueryBanner","app","setClosedNow","style","backgroundImage","icon","title","href","url","setInstalledNow","BannerQuery","_MobileConfirmView","_MobileDeliveryView","_MobileFinishView","_MobileIntroView","_MobileOrderView","_MobilePickupView","_MobileSmartBanner","path","component","MobileSmartBanner","Container","fluid","exact","MobileIntroView","MobilePickupView","MobileDeliveryView","MobileOrderView","MobileConfirmView","MobileFinishView","buttonRight","leftButton","MobileHeaderButton","rightButton","isConfirm"],"mappings":"uKAAAA,EAAA,MAEA,IAAAC,EAAAD,EAAA,KACAE,EAAAC,EAAAH,EAAA,IAGAI,EAAAJ,EAAA,MACAK,EAAAL,EAAA,IACAM,EAAAN,EAAA,MACAO,EAAAP,EAAA,MACAQ,EAAAR,EAAA,MACAS,EAAAT,EAAA,MACAU,EAAAV,EAAA,MACAW,EAAAX,EAAA,MACAY,EAAAZ,EAAA,MACAa,EAAAb,EAAA,MACAc,EAAAX,EAAAH,EAAA,MACAe,EAAAf,EAAA,6EAIoD,GAAGgB,aACrDd,EAAAe,QAAAC,cAAA,OAAKC,UAAU,yBACbjB,EAAAe,QAAAC,cAACJ,EAAAG,QAAD,CACEG,KAAMf,EAAAgB,KAAAC,EAAA,sBACNC,WAAYlB,EAAAgB,KAAAC,EAAA,UACZE,cAAe,IAAMR,EAAQS,WAE/BvB,EAAAe,QAAAC,cAACR,EAAAgB,eAAD,CACEC,OAAQC,GACN1B,EAAAe,QAAAC,cAAAhB,EAAAe,QAAAY,SAAA,KACE3B,EAAAe,QAAAC,cAACd,EAAA0B,YAAD,MACA5B,EAAAe,QAAAC,cAACP,EAAAoB,uBAAD,MACA7B,EAAAe,QAAAC,cAACN,EAAAoB,gBAAD,MACA9B,EAAAe,QAAAC,cAACX,EAAA0B,gBAAD,MACA/B,EAAAe,QAAAC,cAACL,EAAAqB,gBAAD,MACAhC,EAAAe,QAAAC,cAACV,EAAA2B,kBAAD,CAAmBC,OAAQC,GAAUT,EAAKU,aAAaD,KACvDnC,EAAAe,QAAAC,cAAA,OAAKC,UAAU,+BACbjB,EAAAe,QAAAC,cAAA,UACEhB,EAAAe,QAAAC,cAACjB,EAAAsC,MAAD,CAAAC,GAAA,mCAEFtC,EAAAe,QAAAC,cAACT,EAAAgC,gBAAD,MACAvC,EAAAe,QAAAC,cAACZ,EAAAoC,gBAAD,OAEFxC,EAAAe,QAAAC,cAAA,OAAKC,UAAU,iCACbjB,EAAAe,QAAAC,cAAA,UACEhB,EAAAe,QAAAC,cAACjB,EAAAsC,MAAD,CAAAC,GAAA,iBAEFtC,EAAAe,QAAAC,cAACH,EAAA4B,oBAAD,CAAqBC,UAAWhB,EAAKiB,mJChDjD,IAAA5C,EAAAD,EAAA,iBAIM,cAA2BC,EAAA6C,cAC/BC,oBACEC,OAAOC,SAAS,EAAG,GAGrBF,SACE,OAAO,+ICVX/C,EAAA,MAEA,MAAAC,KAAAD,EAAA,gCAEAkD,EAAAlD,EAAA,KACAK,EAAAL,EAAA,IACAmD,EAAAnD,EAAA,4BAMqD,GAAG4C,eAEpD3C,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,oCACblB,EAAAgB,QAAAC,cAACiC,EAAAC,oBAAD,CACEC,OAAQH,EAAAI,gBAAgBC,MACxBC,QAASZ,EACTa,cAAY,4BAEZxD,EAAAgB,QAAAC,cAAA,QAAMC,UAAU,wBACbd,EAAAgB,KAAAC,EAAA,eAAoBoC,sBAGzBzD,EAAAgB,QAAAC,cAACiC,EAAAC,oBAAD,CACEC,OAAQH,EAAAI,gBAAgBK,KACxBH,QAASZ,EACTa,cAAY,2BAEZxD,EAAAgB,QAAAC,cAAA,QAAMC,UAAU,kBACbd,EAAAgB,KAAAC,EAAA,eAAoBoC,gKC9B/B,IAAAzD,EAAAE,EAAAH,EAAA,IACA4D,EAAA5D,EAAA,KAEA6D,EAAA7D,EAAA,KACA8D,EAAA3D,EAAAH,EAAA,OACA+D,EAAA/D,EAAA,0jBASuDgE,SAAAX,OACrDA,EADqDY,SAErDA,EAFqDT,QAGrDA,EAHqDU,SAIrDA,GAAQF,EACRG,EAAAC,EAAAJ,EAAA,4CACI,OACJ/D,EAAAgB,QAAAC,cAAC6C,EAAAM,UAAD,CACEC,SAAS,EACT3C,OAAQ4C,GACNtE,EAAAgB,QAAAC,cAAC0C,EAAAY,MAAD,CACEC,MAAM,UACN9C,OAAQ+C,GACNzE,EAAAgB,QAAAC,cAAC2C,EAAAc,mBAADC,EAAA,CACEC,SAAUH,EAASI,QAAUzB,EAC7BY,SAAUA,GAAYM,EAAMQ,aAC5BvB,QAAS,KACPkB,EAASM,SAAS3B,GAClBG,MAEEW,GAEHI,EAAMQ,cAAgBL,EAASI,QAAUzB,EACxCpD,EAAAgB,QAAAC,cAAC4C,EAAA7C,QAAD,MAEAiD,yHCvCdlE,EAAA,MAGA,IAAAC,EAAAE,EAAAH,EAAA,IAGAiF,EAAAjF,EAAA,KACAkF,EAAAlF,EAAA,IACAK,EAAAL,EAAA,IACAmF,EAAAnF,EAAA,KACAc,EAAAX,EAAAH,EAAA,8EAMoD,GAAGgB,cACrD,MAAMoE,IAAEA,IAAQ,EAAAF,EAAAG,WAChB,OACEpF,EAAAgB,QAAAC,cAAA,WACEjB,EAAAgB,QAAAC,cAACJ,EAAAG,QAAD,CACEG,KAAMf,EAAAgB,KAAAC,EAAA,qBACNC,WAAYlB,EAAAgB,KAAAC,EAAA,QACZE,cAAe,IAAMR,EAAQS,WAE/BxB,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,qBACblB,EAAAgB,QAAAC,cAAC+D,EAAAK,QAAD,CAASC,MAAOH,GACdnF,EAAAgB,QAAAC,cAACiE,EAAAK,YAAD,CAAa5C,UAAW,IAAM5B,EAAQyE,KAAK,sJC3BrDzF,EAAA,KAEA,MAAAC,KAAAD,EAAA,gCACA0F,EAAA1F,EAAA,KAEA2F,EAAA3F,EAAA,KAEA4F,EAAA5F,EAAA,KACA6F,EAAA7F,EAAA,KACA8F,EAAA9F,EAAA,KACA+F,EAAA/F,EAAA,wBAImD,OACjDC,EAAAgB,QAAAC,cAACwE,EAAAM,IAAD,CAAK7E,UAAU,6BACblB,EAAAgB,QAAAC,cAACyE,EAAAM,SAAD,KACEhG,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,wBACblB,EAAAgB,QAAAC,cAAC2E,EAAAK,iBAAD,CACEvE,OAAQwE,GACNlG,EAAAgB,QAAAC,cAAAjB,EAAAgB,QAAAY,SAAA,KACE5B,EAAAgB,QAAAC,cAAC4E,EAAAM,gBAAD,CAAiB7B,MAAO4B,EAAO5B,QAC/BtE,EAAAgB,QAAAC,cAAC6E,EAAAM,kBAAD,CAAmBC,OAAQH,EAAOI,gBAClCtG,EAAAgB,QAAAC,cAAC0E,EAAAY,iBAAD,CAAkBC,OAAQN,wHCvBxCnG,EAAA,MAEA,IAAAC,EAAAE,EAAAH,EAAA,IACA0G,EAAA1G,EAAA,KAEA2G,EAAAxG,EAAAH,EAAA,MACA4G,EAAA5G,EAAA,KACA6G,EAAA7G,EAAA,KACA8G,EAAA9G,EAAA,2EAE0C,KACxCC,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,iBACblB,EAAAgB,QAAAC,cAACyF,EAAA1F,QAAD,CACEE,UAAU,sBACVsC,cAAY,oCACZsD,UAAU,kBACVC,KAAK,QACLC,OAAO,GAEPhH,EAAAgB,QAAAC,cAAC2F,EAAAK,gBAAD,OAEFjH,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,uBACblB,EAAAgB,QAAAC,cAAC4F,EAAAK,gBAAD,MACAlH,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,KACG,EAAGpG,aACFf,EAAAgB,QAAAC,cAAC0F,EAAAS,YAAD,CACEC,SAAU/C,IACJA,EAAMgD,yBACRvG,EAAQyE,KAAK,aACJlB,EAAMiD,wBACfxG,EAAQyE,KAAK,sJC9B7B,MAAAgC,EAAAzH,EAAA,KACAC,KAAAD,EAAA,gCAEAkF,EAAAlF,EAAA,IACA8G,EAAA9G,EAAA,wBAEyC,MACvC,MAAM0H,SAAEA,IAAa,EAAAxC,EAAAG,WACrB,OAAO,EAAAoC,EAAAE,aAAY,IACjB1H,EAAAgB,QAAAC,cAAC4F,EAAAc,qBAAD,CACEC,UAAWH,EAASI,cACpBC,MAAOL,EAASM,QAChBC,cAAe,IAAM,KACrBtG,OAAQ,EAAGuG,OAASC,iBAClBlI,EAAAgB,QAAAC,cAAA,OAAKuC,cAAY,mBAAmB0E,iJCd5C,MAAAC,KAAApI,EAAA,iCAEAqI,EAAArI,EAAA,IAGO,MAAMsI,EAAuBF,EAAAnH;;;;;;;2BAS7B,MAAM2G,GAAuB,EAAAS,EAAAE,YAGlCD,yICjBFtI,EAAA,MAEA,MAAAyH,EAAAzH,EAAA,KACAC,KAAAD,EAAA,gCACAwI,EAAAxI,EAAA,IAEAkF,EAAAlF,EAAA,IACAyI,EAAAzI,EAAA,KACA0I,EAAA1I,EAAA,KACA2I,EAAA3I,EAAA,MACA4I,EAAA5I,EAAA,wBAE+B,MAC7B,MAAQuE,MAAOsE,IAAe,EAAA3D,EAAAG,WAC9B,OAAKwD,EAAWC,UAGT,EAAArB,EAAAE,aAAY,IACjB1H,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,uBACblB,EAAAgB,QAAAC,cAACwH,EAAAK,aAAD,MACA9I,EAAAgB,QAAAC,cAACyH,EAAAK,WAAD,CAAYC,QAASJ,EAAWI,UAChChJ,EAAAgB,QAAAC,cAACuH,EAAAS,eAAD,MACAjJ,EAAAgB,QAAAC,cAAC0H,EAAAO,uBAAD,CAAwBC,SAAUP,EAAWO,aAPxCnJ,EAAAgB,QAAAC,cAACsH,EAAAa,SAAD,CAAUC,GAAG,uICfxBtJ,EAAA,MACAA,EAAA,MAEA,MAAAuJ,EAAAvJ,EAAA,KACAwJ,KAAAxJ,EAAA,gCACAC,ySAAAwJ,CAAAzJ,EAAA,IACA0J,EAAA1J,EAAA,KAGA2J,EAAA3J,EAAA,KACA4J,EAAA5J,EAAA,KACA6J,EAAA7J,EAAA,MACA8J,EAAA9J,EAAA,KACA+J,EAAA/J,EAAA,mBAM4C,GAAGiJ,cAC7C,MAAMjI,QAAEA,IAAY,EAAAuI,EAAAS,qBACdC,KAAEA,EAAFC,QAAQA,EAARC,QAAiBA,IAAY,EAAAT,EAAAU,UAGjCN,EAAAO,gBAAiB,CAAEC,SAAS,EAAOzC,UAAW,CAAEoB,cAElD,EAAAW,EAAAW,gBAAeJ,GAEf,MAAOK,EAAQC,IAAW,EAAAxK,EAAAyK,WAAS,GAInC,IAAIC,EAAQ,EACRC,EAAQ,MACRC,GAAU,EACd,GAAIZ,GAAQA,EAAK1F,MAAO,CACtB,MAAMuG,WAAEA,EAAFC,SAAcA,GAAad,EAAK1F,MACtCoG,EAAQG,EACRD,EAAyB,IAAfC,EACVF,EAAQG,EAASC,gBAGnB,EAAA/K,EAAAgL,WACE,KAEgB,IAAVN,IAA0B,IAAXH,GACjBC,GAAQ,IAGZ,CAACE,EAAOH,IAOV,OACEvK,EAAAgB,QAAAC,cAAA,OACEC,WAAW,EAAAqI,EAAAvI,SAAW,wBAAyB,CAC7CiK,4BAA6BV,KAG/BvK,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,sBACblB,EAAAgB,QAAAC,cAAC6I,EAAAoB,kBAAD,CACER,MAAOA,EACPC,MAAOA,EACPQ,UAAWlB,KAAaD,GAAQA,EAAK1F,OACrCf,QAfS,KACfiH,EAAQY,KAAUA,GAAkB,IAAVV,OAgBrBH,EACCvK,EAAAgB,QAAAC,cAAAjB,EAAAgB,QAAAY,SAAA,KACE5B,EAAAgB,QAAAC,cAACyI,EAAA2B,SAAD,CAAUrC,QAASA,IACnBhJ,EAAAgB,QAAAC,cAAC2I,EAAA0B,gBAAD,CAAiBC,WAAYX,EAASrH,QA1C/B,IAAMxC,EAAQyE,KAAK,eA4C1B,sKC1EZzF,EAAA,MAEA,IAAAC,EAAAD,EAAA,KACAE,EAAAC,EAAAH,EAAA,IACAyL,EAAAtL,EAAAH,EAAA,KAEA0L,EAAA1L,EAAA,IACAK,EAAAL,EAAA,uDASA,MAAM2L,EAA+BF,EAAAxK,QAAO2K,IAAGC,WAAA,CAAAC,YAAA;sBACzB,EAAGC,WAAYA,EAAMC;EAGrCC,EAA+BR,EAAAxK,QAAOiL,KAAIL,WAAA,CAAAC,YAAA;WACrC,EAAGC,WAAYA,EAAMI;sBAGoB,GAClDxB,QACAC,QACAQ,YACA5H,eAEA,EAAAkI,EAAAU,UAASzB,EAAOS,GAChB,MAAMiB,EAAc1B,EAAQ,IAAmB,IAAdS,EACjC,OACElL,EAAAe,QAAAC,cAAA,OACEC,UAAU,wBACVsC,cAAY,oBACZD,QAASA,GAER6I,EACCnM,EAAAe,QAAAC,cAAA,OAAKC,UAAU,iCACbjB,EAAAe,QAAAC,cAAA,QAAMC,UAAU,yBAEhB,KAEJjB,EAAAe,QAAAC,cAAA,OAAKC,UAAU,+BACbjB,EAAAe,QAAAC,cAAA,QAAMC,UAAU,kBACfkL,EACCnM,EAAAe,QAAAC,cAACyK,EAAD,CACExK,UAAU,+BACVsC,cAAY,4BAEXkH,GAAS,KAEV,KACF0B,EAGAnM,EAAAe,QAAAC,cAAA,OACEC,UAAU,2CACVsC,cAAY,4BAEZvD,EAAAe,QAAAC,cAACjB,EAAAsC,MAAD,CAAAC,GAAA,+CAAAH,OAAA,CAGKuI,SAHL0B,WAAA,CAEEpM,EAAAe,QAAAC,cAAC+K,EAAD,CAA8B9K,UAAU,qCAR5CjB,EAAAe,QAAAC,cAAA,QAAMuC,cAAY,eAAepD,EAAAgB,KAAAC,EAAA,iKCvD3C,MAAArB,KAAAD,EAAA,gCAEAuM,EAAAvM,EAAA,KACA4I,EAAA5I,EAAA,+BAMyD,GAAGoJ,cAC1DnJ,EAAAgB,QAAAC,cAAC0H,EAAA4D,sBAAD,CACE3E,UAAW,CAAEuB,YACbzH,OAAQ,EAAG2E,YAAaA,GAAUrG,EAAAgB,QAAAC,cAACqL,EAAAE,qBAAD,CAAsBC,OAAQpG,kJCZpE,MAAA8B,KAAApI,EAAA,iCAEA2M,EAAA3M,EAAA,KACA4M,EAAA5M,EAAA,IAGO,MAAM6M,EAAwBzE,EAAAnH;;;;;;;IAOjC2L,EAAAE;4BAGG,MAAMN,GAAwB,EAAAG,EAAApE,YAGnCsE,2ICnBF,IAAA5M,EAAAE,EAAAH,EAAA,IAGAkF,EAAAlF,EAAA,IAEA+M,EAAA/M,EAAA,KACAK,EAAAL,EAAA,IACAgN,EAAAhN,EAAA,KAIAc,EAAAX,EAAAH,EAAA,MACAiN,EAAA9M,EAAAH,EAAA,OACAkN,EAAA/M,EAAAH,EAAA,sVAQkD,GAAGgB,UAASmM,YAC5D,MAAM5I,MAAEA,EAAFa,IAASA,EAATsC,SAAcA,IAAa,EAAAxC,EAAAG,WAC3B+H,EAAwB5K,GAAU6K,OAAA,kCAChC9I,EAAM+I,kBAAkB9K,GAC9BxB,EAAQyE,KAAK,YAET8H,EAAgBjH,GACpBrG,EAAAgB,QAAAC,cAACJ,EAAAG,QAAD,CACEG,KAAMkF,EAASA,EAAOkH,KAAOnN,EAAAgB,KAAAC,EAAA,iBAC7BC,WAAYlB,EAAAgB,KAAAC,EAAA,QACZE,cAAe,IAAMR,EAAQS,WAG3BgM,EAAanH,GACjBrG,EAAAgB,QAAAC,cAACgM,EAAAjM,QAAD,CACEsE,MAAOH,EACPkB,OAAQA,EACRoH,SAAU,IAAMpH,GAAU8G,EAAe9G,EAAO9D,OAY9C4G,SAAEA,GAAa+D,EAAMQ,OAE3B,OAAOjG,EAASkG,QACd3N,EAAAgB,QAAAC,cAAC8L,EAAAa,oBAAD,CACEhG,UAAW,CAAEiG,QAASpG,EAASoG,SAC/B7F,eAAgBmB,EAChBzH,OAAQ,EAAGoM,eACT,MAAMzH,EACHyH,GAAYA,EAASC,KAAKjB,EAAAkB,GAAGC,OAAO,KAAM9E,KAAe,KAC5D,OACEnJ,EAAAgB,QAAAC,cAAAjB,EAAAgB,QAAAY,SAAA,KACG0L,EAAajH,GACbA,EAASmH,EAAUnH,GArBVyH,IAClB9N,EAAAgB,QAAAC,cAAC+L,EAAAhM,QAAD,CACE8M,SAAUA,EACVI,UAAW,EAAG3L,QAASxB,EAAQyE,gBAAgBjD,KAC/CkL,SAAU,EAAGlL,QAAS4K,EAAe5K,GACrC4L,WAAY5L,GAAM+B,EAAM8J,iBAAiB7L,KAgBL8L,CAAWP,OAMjD9N,EAAAgB,QAAAC,cAAC8L,EAAAuB,qBAAD,CACE1G,UAAW,CAAEuB,SAAU1B,EAAS0B,UAChCnB,eAAe,EACftG,OAAQ,EAAG2E,WAAY4D,aACrBjK,EAAAgB,QAAAC,cAAAjB,EAAAgB,QAAAY,SAAA,KACG0L,EAAajH,GACbmH,EAAUnH,6GC1ErBtG,EAAA,MAEA,IAAAC,EAAAE,EAAAH,EAAA,IACAyL,EAAAtL,EAAAH,EAAA,KAEA6D,EAAA7D,EAAA,KACAwO,EAAAxO,EAAA,KAEAK,EAAAL,EAAA,IACAyO,EAAAzO,EAAA,wDASA,MAAM0O,EAAwBjD,EAAAxK,QAAO2K,IAAGC,WAAA,CAAAC,YAAA,kCAEI,EAC1CiC,WACAL,WACAS,YACAC,iBA8CA,OACEnO,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,wBACZ4M,GAAYA,EAAS3I,IA9CJkB,GAElBrG,EAAAgB,QAAAC,cAAA,OACEC,UAAU,6BACVsC,cAAY,mBACZkL,IAAKrI,EAAO9D,IAEZvC,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,gCAAgCmF,EAAOkH,MACtDvN,EAAAgB,QAAAC,cAACsN,EAAAI,YAAD,CAAaC,QAASvI,EAAOuI,UAC7B5O,EAAAgB,QAAAC,cAACwN,EAAD,KACEzO,EAAAgB,QAAAC,cAACuN,EAAAK,kBAAD,CACEpC,OAAQpG,EACRyI,aAAczI,EAAO0I,oBACrBC,WAAY3I,EAAO4I,qBAIvBjP,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,iCACblB,EAAAgB,QAAAC,cAAC2C,EAAAsL,gBAAD,CAAiB3L,QAAS,IAAM2K,EAAU7H,IACxCrG,EAAAgB,QAAAC,cAAA,QAAMC,UAAU,kBACbd,EAAAgB,KAAAC,EAAA,eAAoBoC,sBAGxB4C,EAAO8I,cACNnP,EAAAgB,QAAAC,cAAC2C,EAAAwL,cAAD,CACE7L,QAAS,IAAMkK,EAASpH,GACxBgJ,aAAc,IAAMlB,EAAW9H,EAAO9D,KAEtCvC,EAAAgB,QAAAC,cAAA,QAAMC,UAAU,iBACbd,EAAAgB,KAAAC,EAAA,UAAeoC,sBAIpBzD,EAAAgB,QAAAC,cAAC2C,EAAAwL,cAAD,CAAepL,UAAU,GACvBhE,EAAAgB,QAAAC,cAAA,QAAMC,UAAU,iBACbd,EAAAgB,KAAAC,EAAA,iBAAsBiO,mKC7DvC,IAAAtP,ySAAAwJ,CAAAzJ,EAAA,IACAwP,EAAAxP,EAAA,KACAyL,EAAAtL,EAAAH,EAAA,KAEAiF,EAAAjF,EAAA,KACA6D,EAAA7D,EAAA,KACAyP,EAAAtP,EAAAH,EAAA,MAEA0P,EAAA1P,EAAA,KACAK,EAAAL,EAAA,uDASA,MAAM2P,EAA8BlE,EAAAxK,QAAO2K,IAAGC,WAAA,CAAAC,YAAA;;;QAK9C,cAA8B7L,EAAA6C,cAC5BC,oBACE6M,KAAKC,cAEP9M,qBACE6M,KAAKC,cAEP9M,cACE,MAAMwC,MAAEA,EAAFe,OAASA,GAAWsJ,KAAKzL,MAC3BmC,GACFf,EAAMuK,cAAcxJ,EAAOyJ,KAG/BhN,SACE,MAAMwC,MAAEA,EAAFe,OAASA,EAAToH,SAAiBA,GAAakC,KAAKzL,MACnC6L,EAAS1J,GACX,EAAAoJ,EAAAO,aAAY,CACVC,SAAUC,OAAO7J,EAAOyJ,IAAIG,UAC5BE,UAAWD,OAAO7J,EAAOyJ,IAAIK,kBAE/BC,EACJ,OACEpQ,EAAAgB,QAAAC,cAAA,WACEjB,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,qBACblB,EAAAgB,QAAAC,cAAC+D,EAAAK,QAAD,CAASC,MAAOA,GACdtF,EAAAgB,QAAAC,cAACsO,EAAAc,OAAD,CAAQC,SAAUP,MAGrB1J,GAAUA,EAAO8I,eAChBnP,EAAAgB,QAAAC,cAACyO,EAAD,KACE1P,EAAAgB,QAAAC,cAACuO,EAAAxO,QAAD,KACEhB,EAAAgB,QAAAC,cAAC2C,EAAAwL,cAAD,CACE7L,QAASkK,EACTjK,cAAY,iCAEXpD,EAAAgB,KAAAC,EAAA,iBAAsBoC,uBAK9B4C,IAAWA,EAAO8I,eACjBnP,EAAAgB,QAAAC,cAACyO,EAAD,KACE1P,EAAAgB,QAAAC,cAACuO,EAAAxO,QAAD,KACEhB,EAAAgB,QAAAC,cAAC2C,EAAAwL,cAAD,CACEpL,UAAU,EACVR,cAAY,iCAEXpD,EAAAgB,KAAAC,EAAA,iBAAsBiO,yKCtEvCvP,EAAA,MAEA,IAAAC,EAAAD,EAAA,KACAE,EAAAC,EAAAH,EAAA,IACAyL,EAAAtL,EAAAH,EAAA,KACAwQ,EAAArQ,EAAAH,EAAA,OAEAkF,EAAAlF,EAAA,IACAkD,EAAAlD,EAAA,KACAyQ,EAAAzQ,EAAA,yDAIA,MAAM0Q,EAAuBjF,EAAAxK,QAAO2K,IAAGC,WAAA,CAAAC,YAAA;;;;;;;EAuEjC,SAAU6E,IACd,MACMC,EADQ,IAAIJ,EAAAvP,QAAS+B,OAAO6N,UAAUC,WAC3BC,QACjB,MAAgB,QAAZH,EAAGpD,KACEtK,EAAA8N,mBAAmBC,IACL,YAAZL,EAAGpD,KACLtK,EAAA8N,mBAAmBE,QAErB,yBAtE2C/M,IAClDjE,EAAAe,QAAAC,cAACgE,EAAAiM,SAAD,CACE7M,SAAS,EACT3C,OAAQ,EAAG+F,eACT,MAAM0J,EAAWT,IACjB,IAAKjJ,EAASM,SAAwB,OAAboJ,EACvB,OAAO,KAET,MAAMC,EAAS3J,EAAS4J,+BACxB,OAAKD,EAAOE,gBAKVrR,EAAAe,QAAAC,cAACuP,EAAAe,YAAD,CACE3J,UAAW,CACTuB,SAAUiI,EAAOjI,SACjBgI,YAEFzP,OAAQ,EAAG8P,SACFA,EACLvR,EAAAe,QAAAC,cAACwP,EAAD,KACExQ,EAAAe,QAAAC,cAAA,OAAKC,UAVU,+CAWbjB,EAAAe,QAAAC,cAAA,OAAKC,UAAU,yBACbjB,EAAAe,QAAAC,cAAA,KACEC,UAAU,oBACVqC,QAAS6N,EAAOK,cAFlB,QAMAxR,EAAAe,QAAAC,cAAA,QACEC,UAAU,mBACVwQ,MAAO,CAAEC,uBAAwBH,EAAII,WAEvC3R,EAAAe,QAAAC,cAAA,OAAKC,UAAU,oBACbjB,EAAAe,QAAAC,cAAA,OAAKC,UAAU,qBAAqBsQ,EAAIK,OACxC5R,EAAAe,QAAAC,cAAA,OAAKC,UAAU,2BACbjB,EAAAe,QAAAC,cAACjB,EAAAsC,MAAD,CAAAC,GAAA,WAGJtC,EAAAe,QAAAC,cAAA,OAAKC,UAAU,uBACbjB,EAAAe,QAAAC,cAAA,KACE6Q,KAAMN,EAAIO,IACVxO,QAAS6N,EAAOY,gBAChB9Q,UAAU,sBAEVjB,EAAAe,QAAAC,cAAA,QAAMC,UAAU,2BACdjB,EAAAe,QAAAC,cAACjB,EAAAsC,MAAD,CAAAC,GAAA,mBAOV,OA5CD,yIChCf,MAAA4F,KAAApI,EAAA,iCAEA2M,EAAA3M,EAAA,KAGA,MAAMkS,EAAc9J,EAAAnH;;;;;;;;;;;EAaPuQ,GAAc,EAAA7E,EAAApE,YAGzB2J,uHCrBF,MAAAjS,KAAAD,EAAA,gCACA0G,EAAA1G,EAAA,KACA0F,EAAA1F,EAAA,KAEAmS,EAAAnS,EAAA,MACAoS,EAAApS,EAAA,MACAqS,EAAArS,EAAA,MACAsS,EAAAtS,EAAA,MACAuS,EAAAvS,EAAA,MACAwS,EAAAxS,EAAA,MACAyS,EAAAzS,EAAA,YAEkB,IAChBC,EAAAgB,QAAAC,cAAAjB,EAAAgB,QAAAY,SAAA,KACE5B,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,CAAOsL,KAAK,IAAIC,UAAWF,EAAAG,oBAC3B3S,EAAAgB,QAAAC,cAACwE,EAAAmN,UAAD,CAAWC,OAAO,GAChB7S,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,CAAO2L,OAAO,EAAML,KAAK,IAAIC,UAAWL,EAAAU,kBACxC/S,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,CAAOsL,KAAK,qBAAqBC,UAAWH,EAAAS,mBAC5ChT,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,CAAOsL,KAAK,YAAYC,UAAWP,EAAAc,qBACnCjT,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,CAAOsL,KAAK,SAASC,UAAWJ,EAAAY,kBAChClT,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,CAAOsL,KAAK,WAAWC,UAAWR,EAAAiB,oBAClCnT,EAAAgB,QAAAC,cAACwF,EAAAU,MAAD,CAAOsL,KAAK,UAAUC,UAAWN,EAAAgB,qICrBvCrT,EAAA,MAEA,MAAAC,KAAAD,EAAA,gCAEA6D,EAAA7D,EAAA,WASwC,EACtCoB,OACAG,aACA+R,eAAc,EACd9R,oBAEA,MAAM+R,GACY,IAAhBD,EACErT,EAAAgB,QAAAC,cAAC2C,EAAA2P,mBAAD,CACErS,UAAU,yBACVsC,cAAY,2BAEZD,QAAShC,GAERD,GAED,KACAkS,GACY,IAAhBH,EACErT,EAAAgB,QAAAC,cAAC2C,EAAA2P,mBAAD,CACErS,UAAU,yBACVsC,cAAY,4BAEZD,QAAShC,EACTkS,WAAW,GAEVnS,GAED,KACN,OACEtB,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,kBACZoS,EACDtT,EAAAgB,QAAAC,cAAA,OAAKC,UAAU,wBAAwBC,GACtCqS","file":"static/js/4.03f27ca6.chunk.js","sourcesContent":["import './MobileConfirmView.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { ScrollToTop } from '../../common/ScrollToTop'\nimport { i18n } from '../../i18n'\nimport { OrderAgreements } from '../orderForm/OrderAgreements'\nimport { OrderErrorModal } from '../orderForm/OrderErrorModal'\nimport { OrderFormAutoFill } from '../orderForm/OrderFormAutoFill'\nimport { OrderFormInputs } from '../orderForm/OrderFormInputs'\nimport { OrderFormSetup } from '../orderForm/OrderFormSetup'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderGoPayModal } from '../orderForm/OrderGoPayModal'\nimport { OrderTimePicker } from '../orderForm/OrderTimePicker'\nimport MobileHeader from './MobileHeader'\nimport { MobilePaymentMethod } from './MobilePaymentMethod'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MobileConfirmView: React.SFC<IProps> = ({ history }) => (\n  <div className=\"mobile__confirm__view\">\n    <MobileHeader\n      text={i18n.t`Order confirmation`}\n      buttonText={i18n.t`Cancel`}\n      onButtonClick={() => history.goBack()}\n    />\n    <OrderFormSetup\n      render={form => (\n        <>\n          <ScrollToTop />\n          <OrderFormStorageNotice />\n          <OrderGoPayModal />\n          <OrderErrorModal />\n          <OrderTimePicker />\n          <OrderFormAutoFill onFill={values => form.setAllValues(values)} />\n          <div className=\"mobile__confirm__view__form\">\n            <h3>\n              <Trans>Where and to whom we deliver?</Trans>\n            </h3>\n            <OrderFormInputs />\n            <OrderAgreements />\n          </div>\n          <div className=\"mobile__confirm__view__submit\">\n            <h4>\n              <Trans>Place order</Trans>\n            </h4>\n            <MobilePaymentMethod onConfirm={form.submitForm} />\n          </div>\n        </>\n      )}\n    />\n  </div>\n)\n","import { PureComponent } from 'react'\n\ninterface IProps {}\n\nexport class ScrollToTop extends PureComponent<IProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return null\n  }\n}\n","import './MobilePaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { MobilePaymentButton } from './MobilePaymentButton'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const MobilePaymentMethod: React.FC<IProps> = ({ onConfirm }) => {\n  return (\n    <div className=\"mobile__confirm__payment__method\">\n      <MobilePaymentButton\n        method={PaymentGateEnum.Gopay}\n        onClick={onConfirm}\n        data-testid=\"mobilePaymentMethodGoPay\"\n      >\n        <span className=\"flaticon-credit-card\">\n          {i18n.t`Pay by card`.toLocaleUpperCase()}\n        </span>\n      </MobilePaymentButton>\n      <MobilePaymentButton\n        method={PaymentGateEnum.Cash}\n        onClick={onConfirm}\n        data-testid=\"mobilePaymentMethodCash\"\n      >\n        <span className=\"flaticon-money\">\n          {i18n.t`Pay by cash`.toLocaleUpperCase()}\n        </span>\n      </MobilePaymentButton>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Field } from 'react-form'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { PaymentGateEnum } from '../../graph/types'\n\ninterface IProps {\n  method: PaymentGateEnum\n  disabled?: boolean\n  onClick(): void\n}\n\nexport const MobilePaymentButton: React.SFC<IProps> = ({\n  method,\n  disabled,\n  onClick,\n  children,\n  ...props\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <Field\n        field=\"payment\"\n        render={fieldApi => (\n          <SelectButtonThemed\n            selected={fieldApi.value === method}\n            disabled={disabled || order.isSubmitting}\n            onClick={() => {\n              fieldApi.setValue(method)\n              onClick()\n            }}\n            {...props}\n          >\n            {order.isSubmitting && fieldApi.value === method ? (\n              <SubmitSpinner />\n            ) : (\n              children\n            )}\n          </SelectButtonThemed>\n        )}\n      />\n    )}\n  />\n)\n","import './MobileMap.css'\n\nimport { History } from 'history'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { DeliveryMap } from '../map/DeliveryMap'\nimport MobileHeader from './MobileHeader'\n\ninterface IProps extends RouteComponentProps<{}> {\n  history: History\n}\n\nexport const MobileDeliveryView: React.FC<IProps> = ({ history }) => {\n  const { map } = useRoot()\n  return (\n    <div>\n      <MobileHeader\n        text={i18n.t`Enter the address`}\n        buttonText={i18n.t`Back`}\n        onButtonClick={() => history.goBack()}\n      />\n      <div className=\"mobile__map__view\">\n        <BaseMap model={map}>\n          <DeliveryMap onConfirm={() => history.push('/order')} />\n        </BaseMap>\n      </div>\n    </div>\n  )\n}\n","import '../finish/FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport { FinishViewFooter } from '../finish/FinishViewFooter'\nimport { FinishViewLoader } from '../finish/FinishViewLoader'\nimport { FinishViewOrder } from '../finish/FinishViewOrder'\nimport { FinishViewSupport } from '../finish/FinishViewSupport'\n\ninterface IProps {}\n\nexport const MobileFinishView: React.SFC<IProps> = ({}) => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyle>\n      <div className=\"finish__view__mobile\">\n        <FinishViewLoader\n          render={result => (\n            <>\n              <FinishViewOrder order={result.order} />\n              <FinishViewSupport branch={result.companyBranch} />\n              <FinishViewFooter finish={result} />\n            </>\n          )}\n        />\n      </div>\n    </ColStyle>\n  </Row>\n)\n","import './MobileIntroView.css'\n\nimport React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { OrderMethod } from '../destination/OrderMethod'\nimport { ShopHeaderIcons } from '../shop/ShopHeaderIcons'\nimport { MobileShopIntro } from './MobileShopIntro'\n\nexport const MobileIntroView: React.SFC = () => (\n  <div className=\"mobile__intro\">\n    <BackgroundThemed\n      className=\"mobile__intro__logo\"\n      data-testid=\"MobileIntroView__BackgroundThemed\"\n      imageName=\"storeLogoMobile\"\n      size=\"cover\"\n      fixed={false}\n    >\n      <ShopHeaderIcons />\n    </BackgroundThemed>\n    <div className=\"mobile__intro__info\">\n      <MobileShopIntro />\n      <Route>\n        {({ history }) => (\n          <OrderMethod\n            onChange={order => {\n              if (order.usingDeliveryOrderMethod) {\n                history.push('/delivery')\n              } else if (order.usingPickupOrderMethod) {\n                history.push('/pickup')\n              }\n            }}\n          />\n        )}\n      </Route>\n    </div>\n  </div>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { QueryMobileShopIntro } from './MobileShopIntro.graphql'\n\nexport const MobileShopIntro: React.FC = () => {\n  const { business } = useRoot()\n  return useObserver(() => (\n    <QueryMobileShopIntro\n      variables={business.brandOrBranch}\n      skip={!business.isValid}\n      renderLoading={() => null}\n      render={({ intro: { headerText } }) => (\n        <div data-testid=\"MobileShopIntro\">{headerText}</div>\n      )}\n    />\n  ))\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph/buildQuery'\nimport { GMobileShopIntro } from '../../graph/types'\n\nexport const MobileShopIntroQuery = gql`\n  query GMobileShopIntro($brandId: ID!, $branchId: ID) {\n    intro: applicationSettings(brand: $brandId, companyBranch: $branchId) {\n      headerText\n      homepageUrl\n    }\n  }\n`\n\nexport const QueryMobileShopIntro = buildQuery<\n  GMobileShopIntro.Query,\n  GMobileShopIntro.Variables\n>(MobileShopIntroQuery)\n","import './MobileOrderView.css'\n\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Redirect } from 'react-router'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { AddToCartModal } from '../cart/AddToCartModal'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { MobileCart } from './MobileCart'\nimport { MobileClosingTimeModal } from './MobileClosingTimeModal'\n\nexport const MobileOrderView = () => {\n  const { order: orderModel } = useRoot()\n  if (!orderModel.hasOrder) {\n    return <Redirect to=\"/\" />\n  }\n  return useObserver(() => (\n    <div className=\"mobile__order__view\">\n      <FoodMenuView />\n      <MobileCart orderId={orderModel.orderId!} />\n      <AddToCartModal />\n      <MobileClosingTimeModal branchId={orderModel.branchId!} />\n    </div>\n  ))\n}\n","import './MobileCart.css'\nimport './MobileSlidingCart.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport classNames from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { GMobileCart } from '../../graph/types'\nimport { CartView } from '../cart/CartView'\nimport { useCartRefresh } from '../cart/useCartRefresh'\nimport { OrderSubmitLine } from '../orderForm/OrderSubmitLine'\nimport { MobileCartQuery } from './MobileCart.graphql'\nimport { MobileCartSummary } from './MobileCartSummary'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const MobileCart: React.FC<IProps> = ({ orderId }) => {\n  const { history } = useRouterContext()\n  const { data, loading, refetch } = useQuery<\n    GMobileCart.Query,\n    GMobileCart.Variables\n  >(MobileCartQuery, { suspend: false, variables: { orderId } })\n\n  useCartRefresh(refetch)\n\n  const [isOpen, setOpen] = useState(false)\n\n  const onSubmit = () => history.push('/confirm')\n\n  let count = 0\n  let price = '???'\n  let isEmpty = true\n  if (data && data.order) {\n    const { countWares, totalSum } = data.order\n    count = countWares\n    isEmpty = countWares === 0\n    price = totalSum.formattedValue\n  }\n\n  useEffect(\n    () => {\n      // auto close empty cart\n      if (count === 0 && isOpen === true) {\n        setOpen(false)\n      }\n    },\n    [count, isOpen],\n  )\n\n  const onToggle = () => {\n    setOpen(open => !(open || count === 0))\n  }\n\n  return (\n    <div\n      className={classNames('mobile__sliding__cart', {\n        mobile__sliding__cart__open: isOpen,\n      })}\n    >\n      <div className=\"mobile__cart__view\">\n        <MobileCartSummary\n          count={count}\n          price={price}\n          isLoading={loading || !(data && data.order)}\n          onClick={onToggle}\n        />\n        {isOpen ? (\n          <>\n            <CartView orderId={orderId} />\n            <OrderSubmitLine canSubmit={!isEmpty} onClick={onSubmit} />\n          </>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n","import './MobileCartSummary.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { logDebug } from '../../helpers/logger'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  count: number\n  price: string\n  isLoading: boolean\n  onClick(): void\n}\n\nconst MobileCartSummaryCountThemed = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n`\n\nconst MobileCartSummaryPriceThemed = styled.span`\n  color: ${({ theme }) => theme.primary};\n`\n\nexport const MobileCartSummary: React.SFC<IProps> = ({\n  count,\n  price,\n  isLoading,\n  onClick,\n}) => {\n  logDebug(count, isLoading)\n  const showContent = count > 0 || isLoading === true\n  return (\n    <div\n      className=\"mobile__cart__summary\"\n      data-testid=\"mobileCartSummary\"\n      onClick={onClick}\n    >\n      {showContent ? (\n        <div className=\"mobile__cart__summary__toggle\">\n          <span className=\"flaticon-chevron-up\" />\n        </div>\n      ) : null}\n\n      <div className=\"mobile__cart__summary__info\">\n        <span className=\"flaticon-cart\" />\n        {showContent ? (\n          <MobileCartSummaryCountThemed\n            className=\"mobile__cart__summary__count\"\n            data-testid=\"mobileCartSummary__Count\"\n          >\n            {count || '?'}\n          </MobileCartSummaryCountThemed>\n        ) : null}\n        {!showContent ? (\n          <span data-testid=\"cartIsEmpty\">{i18n.t`Cart is empty`}</span>\n        ) : (\n          <div\n            className=\"mobile__cart__summary__cart__with__price\"\n            data-testid=\"mobileCartSummary__Price\"\n          >\n            <Trans>\n              In the cart you have goods for\n              <MobileCartSummaryPriceThemed className=\"mobile__cart__summary__price\">\n                {price}\n              </MobileCartSummaryPriceThemed>\n            </Trans>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { ShopClosingTimeModal } from '../shop/ShopClosingTimeModal'\nimport { QueryMobileShopStatus } from './MobileClosingTimeModal.graphql'\n\ninterface IProps {\n  branchId: ID\n}\n\nexport const MobileClosingTimeModal: React.SFC<IProps> = ({ branchId }) => (\n  <QueryMobileShopStatus\n    variables={{ branchId }}\n    render={({ branch }) => branch && <ShopClosingTimeModal status={branch} />}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { CompanyBranchStatusFragment } from '../../graph/fragments.graphql'\nimport { GMobileShopStatus } from '../../graph/types'\n\nexport const MobileShopStatusQuery = gql`\n  query GMobileShopStatus($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      ...GCompanyBranchStatus\n    }\n  }\n  ${CompanyBranchStatusFragment}\n`\n\nexport const QueryMobileShopStatus = buildQuery<\n  GMobileShopStatus.Query,\n  GMobileShopStatus.Variables\n>(MobileShopStatusQuery)\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport {\n  QueryPickupMapBranch,\n  QueryPickupMapBrand,\n} from '../map/PickupMap.graphql'\nimport MobileHeader from './MobileHeader'\nimport MobilePickupList from './MobilePickupList'\nimport MobilePickupMap from './MobilePickupMap'\n\ninterface IRouteParams {\n  branchId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const MobilePickupView: React.FC<IProps> = ({ history, match }) => {\n  const { order, map, business } = useRoot()\n  const onSelectBranch = async (id: ID) => {\n    await order.createPickupOrder(id)\n    history.push('/order')\n  }\n  const renderHeader = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobileHeader\n      text={branch ? branch.name : i18n.t`Choose branch`}\n      buttonText={i18n.t`Back`}\n      onButtonClick={() => history.goBack()}\n    />\n  )\n  const renderMap = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobilePickupMap\n      model={map}\n      branch={branch}\n      onSelect={() => branch && onSelectBranch(branch.id)}\n    />\n  )\n  const renderList = (branches: ReadonlyArray<GPickupBranch.Fragment>) => (\n    <MobilePickupList\n      branches={branches}\n      onShowMap={({ id }) => history.push(`/pickup/${id}`)}\n      onSelect={({ id }) => onSelectBranch(id)}\n      onPrefetch={id => order.prefetchFoodMenu(id)}\n    />\n  )\n\n  const { branchId } = match.params\n\n  return business.isBrand ? (\n    <QueryPickupMapBrand\n      variables={{ brandId: business.brandId! }}\n      renderLoading={!branchId}\n      render={({ branches }) => {\n        const branch =\n          (branches && branches.find(RM.propEq('id', branchId))) || null\n        return (\n          <>\n            {renderHeader(branch)}\n            {branch ? renderMap(branch) : renderList(branches)}\n          </>\n        )\n      }}\n    />\n  ) : (\n    <QueryPickupMapBranch\n      variables={{ branchId: business.branchId! }}\n      renderLoading={false}\n      render={({ branch }, { loading }) => (\n        <>\n          {renderHeader(branch)}\n          {renderMap(branch)}\n        </>\n      )}\n    />\n  )\n}\n","import './MobilePickupList.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { PrimaryButton, SecondaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { GPickupBranch } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { ShopStatusDisplay } from '../shop/ShopStatusDisplay'\n\ninterface IProps {\n  branches: ReadonlyArray<GPickupBranch.Fragment>\n  onSelect(site: GPickupBranch.Fragment): void\n  onShowMap(site: GPickupBranch.Fragment): void\n  onPrefetch(branchId: ID): void\n}\n\nconst StatusDisplayPosition = styled.div``\n\nconst MobilePickupList: React.SFC<IProps> = ({\n  branches,\n  onSelect,\n  onShowMap,\n  onPrefetch,\n}) => {\n  const renderBranch = (branch: GPickupBranch.Fragment) => {\n    return (\n      <div\n        className=\"mobile__pickup__list__item\"\n        data-testid=\"MobilePickupList\"\n        key={branch.id}\n      >\n        <div className=\"mobile__pickup__list__header\">{branch.name}</div>\n        <ShopAddress address={branch.address} />\n        <StatusDisplayPosition>\n          <ShopStatusDisplay\n            status={branch}\n            deliveryTime={branch.defaultDeliveryTime}\n            pickupTime={branch.defaultPickupTime}\n          />\n        </StatusDisplayPosition>\n\n        <div className=\"mobile__pickup__list__buttons\">\n          <SecondaryButton onClick={() => onShowMap(branch)}>\n            <span className=\"flaticon-signs\">\n              {i18n.t`Show on map`.toLocaleUpperCase()}\n            </span>\n          </SecondaryButton>\n          {branch.pickupEnabled ? (\n            <PrimaryButton\n              onClick={() => onSelect(branch)}\n              onMouseEnter={() => onPrefetch(branch.id)}\n            >\n              <span className=\"flaticon-mark\">\n                {i18n.t`Choose`.toLocaleUpperCase()}\n              </span>\n            </PrimaryButton>\n          ) : (\n            <PrimaryButton disabled={true}>\n              <span className=\"flaticon-mark\">\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </span>\n            </PrimaryButton>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"mobile__pickup__list\">\n      {branches && branches.map(renderBranch)}\n    </div>\n  )\n}\n\nexport default MobilePickupList\n","import React, { PureComponent } from 'react'\nimport { Marker } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { TMapModel } from '../../models/MapModel'\n\ninterface IProps {\n  model: TMapModel\n  branch: Maybe<GPickupBranch.Fragment>\n  onSelect(): void\n}\n\nconst ButtonStripeContainerStyled = styled.div`\n  margin-top: 2rem;\n  z-index: 10;\n`\n\nclass MobilePickupMap extends PureComponent<IProps> {\n  componentDidMount() {\n    this.panToBranch()\n  }\n  componentDidUpdate() {\n    this.panToBranch()\n  }\n  panToBranch() {\n    const { model, branch } = this.props\n    if (branch) {\n      model.panToLocation(branch.gps)\n    }\n  }\n  render() {\n    const { model, branch, onSelect } = this.props\n    const latlng = branch\n      ? gpsToLatLng({\n          latitude: Number(branch.gps.latitude),\n          longitude: Number(branch.gps.longitude),\n        })\n      : undefined\n    return (\n      <div>\n        <div className=\"mobile__map__view\">\n          <BaseMap model={model}>\n            <Marker position={latlng} />\n          </BaseMap>\n        </div>\n        {branch && branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                onClick={onSelect}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Choose branch`.toLocaleUpperCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n        {branch && !branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                disabled={true}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default MobilePickupMap\n","import './MobileSmartBanner.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\nimport UAParser from 'ua-parser-js'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { MobilePlatformEnum } from '../../graph/types'\nimport { QueryBanner } from './MobileSmartBanner.graphql'\n\ninterface IProps {}\n\nconst SmartBannerContainer = styled.div`\n  border-bottom: 1px solid #8f8f8f;\n  height: 81px;\n  position: absolute;\n  z-index: 1;\n  top: 3rem;\n  width: 100%;\n`\n\nexport const MobileSmartBanner: React.SFC<IProps> = props => (\n  <WithRoot\n    observe={true}\n    render={({ business }) => {\n      const platform = getPlatformType()\n      if (!business.isValid || platform === null) {\n        return null\n      }\n      const banner = business.ensureBannerForCurrentBranch()\n      if (!banner.shouldBeVisible) {\n        return null\n      }\n      const wrapperClassName = `smartbanner smartbanner-ios smartbanner-top`\n      return (\n        <QueryBanner\n          variables={{\n            branchId: banner.branchId,\n            platform,\n          }}\n          render={({ app }) => {\n            return app ? (\n              <SmartBannerContainer>\n                <div className={wrapperClassName}>\n                  <div className=\"smartbanner-container\">\n                    <a\n                      className=\"smartbanner-close\"\n                      onClick={banner.setClosedNow}\n                    >\n                      &times;\n                    </a>\n                    <span\n                      className=\"smartbanner-icon\"\n                      style={{ backgroundImage: `url(${app.icon})` }}\n                    />\n                    <div className=\"smartbanner-info\">\n                      <div className=\"smartbanner-title\">{app.title}</div>\n                      <div className=\"smartbanner-description\">\n                        <Trans>Free</Trans>\n                      </div>\n                    </div>\n                    <div className=\"smartbanner-wrapper\">\n                      <a\n                        href={app.url}\n                        onClick={banner.setInstalledNow}\n                        className=\"smartbanner-button\"\n                      >\n                        <span className=\"smartbanner-button-text\">\n                          <Trans>Show app</Trans>\n                        </span>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </SmartBannerContainer>\n            ) : null\n          }}\n        />\n      )\n    }}\n  />\n)\n\nexport function getPlatformType(): Maybe<MobilePlatformEnum> {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  if (os.name === 'iOS') {\n    return MobilePlatformEnum.Ios\n  } else if (os.name === 'Android') {\n    return MobilePlatformEnum.Android\n  }\n  return null\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GSmartBanner } from '../../graph/types'\n\nconst BannerQuery = gql`\n  query GSmartBanner($branchId: ID!, $platform: MobilePlatformEnum!) {\n    app: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: $platform\n    ) {\n      title\n      url\n      icon\n    }\n  }\n`\n\nexport const QueryBanner = buildQuery<\n  GSmartBanner.Query,\n  GSmartBanner.Variables\n>(BannerQuery)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { MobileConfirmView } from '../segments/mobile/MobileConfirmView'\nimport { MobileDeliveryView } from '../segments/mobile/MobileDeliveryView'\nimport { MobileFinishView } from '../segments/mobile/MobileFinishView'\nimport { MobileIntroView } from '../segments/mobile/MobileIntroView'\nimport { MobileOrderView } from '../segments/mobile/MobileOrderView'\nimport { MobilePickupView } from '../segments/mobile/MobilePickupView'\nimport { MobileSmartBanner } from '../segments/mobile/MobileSmartBanner'\n\nconst MobileApp = () => (\n  <>\n    <Route path=\"/\" component={MobileSmartBanner} />\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MobileIntroView} />\n      <Route path=\"/pickup/:branchId?\" component={MobilePickupView} />\n      <Route path=\"/delivery\" component={MobileDeliveryView} />\n      <Route path=\"/order\" component={MobileOrderView} />\n      <Route path=\"/confirm\" component={MobileConfirmView} />\n      <Route path=\"/finish\" component={MobileFinishView} />\n    </Container>\n  </>\n)\n\nexport default MobileApp\n","import './MobileHeader.css'\n\nimport React from 'react'\n\nimport { MobileHeaderButton } from '../../common/Buttons'\n\ninterface IProps {\n  text: string\n  buttonText: string\n  buttonRight?: boolean\n  onButtonClick(): void\n}\n\nconst MobileHeader: React.SFC<IProps> = ({\n  text,\n  buttonText,\n  buttonRight = false,\n  onButtonClick,\n}) => {\n  const leftButton =\n    buttonRight === false ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Left\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  const rightButton =\n    buttonRight === true ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Right\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n        isConfirm={true}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  return (\n    <div className=\"mobile__header\">\n      {leftButton}\n      <div className=\"mobile__header__text\">{text}</div>\n      {rightButton}\n    </div>\n  )\n}\n\nexport default MobileHeader\n"],"sourceRoot":""}