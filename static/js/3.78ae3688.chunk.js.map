{"version":3,"sources":["app/DesktopApp.tsx","segments/finish/FinishView.tsx","segments/map/views/MapView.tsx","segments/map/OrderMap.tsx","segments/map/PickupMap.tsx","segments/map/PickupMapBranch.tsx","segments/shop/ShopHeaderView.tsx","segments/shop/ShopHeader.tsx","segments/shop/OrderAddress.tsx","segments/shop/ShopCloseAlert.tsx","segments/shop/ShopIntro.tsx","segments/shop/ShopLogo.tsx","segments/shop/ShopOpeningHours.tsx","segments/shop/Sticker.tsx","segments/shop/ShopHeader.graphql.ts","segments/shop/ShopOverview.tsx","segments/orderForm/OrderFormView.tsx","segments/orderForm/OrderForm.tsx","segments/orderForm/OrderPaymentMethod.tsx","segments/orderForm/OrderPaymentButton.tsx"],"names":["_react","__webpack_require__","_reactRouterDom","_reactstrap","_FinishView","_MapView","_ShopHeaderView","_ShopOverview","default","createElement","Container","fluid","Route","path","component","ShopHeaderView","exact","MapView","ShopOverview","FinishView","_ColStyle","_FinishViewFooter","_FinishViewLoader","_FinishViewOrder","_FinishViewSupport","Row","className","ColStyle","FinishViewLoader","render","result","Fragment","FinishViewOrder","order","FinishViewSupport","branch","companyBranch","FinishViewFooter","finish","_hooks","_OrderMethod","_OrderMap","history","useRouterContext","OrderMethod","OrderMap","onConfirm","push","_mobxReactLite","_interopRequireWildcard","_BaseMap","_WithRoot","_types","_DeliveryMap","_PickupMap","mapByOrderMethod","[object Object]","DeliveryTypeEnum","Messenger","createFactory","DeliveryMap","Pickup","PickupMap","map","useRoot","useObserver","BaseMap","model","orderMethod","_reactGoogleMaps","_gps","_ramda","_MapPanning","_PickupMap2","_PickupMapBranch","business","activeBranch","setActiveBranch","useState","useEffectOnce","branchId","useEffect","prefetchFoodMenu","onConfirmPickup","useCallback","__awaiter","setBranch","createPickupOrder","renderSite","Marker","key","id","position","gpsToLatLng","gps","onClick","InfoWindow","onCloseClick","defaultOptions","maxWidth","PickupMapBranch","isBrand","QueryPickupMapBrand","variables","brandId","renderLoading","branches","find","RM","propEq","MapPanning","QueryPickupMapBranch","_react2","_interopRequireDefault","_styledComponents","_Buttons","_ShopAddress","_ShopStatus","_i18n","PickupMapHeaderStyled","div","withConfig","displayName","theme","primary","tertiaryText","name","ShopAddress","address","ShopStatus","status","opts","PrimaryButton","color","data-testid","disabled","pickupEnabled","decision","openingIn","closingIn","Trans","values","i18n","_","toLocaleUpperCase","getButtonText","_ShopHeader","_ShopHeader2","props","WithRoot","observe","root","QueryShopHeader","skip","isValid","loading","ShopHeader","isLoading","_reactRouter","_OrderAddress","_ShopCloseAlert","_ShopClosingTimeModal","_ShopHeaderIcons","_ShopIntro","_ShopLogo","_ShopOpeningHours","_Sticker","ShopHeaderStyled","ShopHeaderInfoStyled","ShopHeaderIcons","ShopLogo","url","homepageUrl","Sticker","ShopIntro","ShopClosingTimeModal","success","OrderAddress","ShopOpeningHours","ShopCloseAlert","location","now","Alert","ShopIntroStyled","headerText","_BackgroundThemed","LogoLink","children","href","Link","to","LogoContainerStyled","BackgroundThemed","imageName","size","_ShopStatusDisplay","ContainerStyled","OpeningHoursStyled","StatusDisplayPosition","span","businessHours","businessHour","closed","closedNote","openAt","closeAt","ShopStatusDisplay","_classnames","StickerThemed","IconStyled","order-method-unselected","order-method-selected","_graphqlTag","_graph","_fragments","ShopHeaderQuery","AddressFragment","CompanyBranchStatusFragment","buildQuery","_CartView","_FoodMenuView","_OrderFormStorageNotice","_OrderFormView","ColStyleLeft","FoodMenuView","ColStyleRight","CartView","OrderFormView","OrderFormStorageNotice","_WithOrder","_OrderErrorModal","_OrderForm","_OrderFormView2","_OrderGoPayModal","WithOrder","orderModel","QueryOrderForm","orderId","countWares","OrderForm","OrderGoPayModal","OrderErrorModal","_OrderAgreements","_OrderFormInputs","_OrderFormSetup","_OrderPaymentMethod","_OrderSubmitLine","OrderFormSetup","form","OrderFormInputs","OrderPaymentMethod","OrderAgreements","OrderSubmitLine","submitForm","canSubmit","isVamInitialized","_OrderPaymentButton","OrderPaymentButton","method","PaymentGateEnum","Gopay","Cash","_reactForm","Checkmark","show","_a","__rest","Field","field","fieldApi","SelectButtonThemed","_extends","selected","value","setValue"],"mappings":"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","file":"static/js/3.78ae3688.chunk.js","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { FinishView } from '../segments/finish/FinishView'\nimport { MapView } from '../segments/map/views/MapView'\nimport { ShopHeaderView } from '../segments/shop/ShopHeaderView'\nimport { ShopOverview } from '../segments/shop/ShopOverview'\n\nconst DesktopApp = () => (\n  <Container fluid={true}>\n    <Route path=\"/\" component={ShopHeaderView} />\n    <Route exact={true} path=\"/\" component={MapView} />\n    <Route path=\"/order\" component={ShopOverview} />\n    <Route path=\"/finish\" component={FinishView} />\n  </Container>\n)\n\nexport default DesktopApp\n","import './FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport { FinishViewFooter } from './FinishViewFooter'\nimport { FinishViewLoader } from './FinishViewLoader'\nimport { FinishViewOrder } from './FinishViewOrder'\nimport { FinishViewSupport } from './FinishViewSupport'\n\ninterface IProps {}\n\nexport const FinishView: React.SFC<IProps> = ({}) => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyle>\n      <div className=\"finish__view\">\n        <FinishViewLoader\n          render={result => (\n            <>\n              <FinishViewOrder order={result.order} />\n              <FinishViewSupport branch={result.companyBranch} />\n              <FinishViewFooter finish={result} />\n            </>\n          )}\n        />\n      </div>\n    </ColStyle>\n  </Row>\n)\n","import './MapView.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../../common/ColStyle'\nimport { OrderMethod } from '../../destination/OrderMethod'\nimport { OrderMap } from '../OrderMap'\n\nexport const MapView = () => {\n  const { history } = useRouterContext()\n  return (\n    <Row className=\"justify-content-md-center\">\n      <ColStyle>\n        <div className=\"map__view\">\n          <div className=\"map__view__header\">\n            <OrderMethod />\n          </div>\n          <OrderMap onConfirm={() => history.push(`/order`)} />\n        </div>\n      </ColStyle>\n    </Row>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React, { createFactory } from 'react'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { useRoot } from '../../common/WithRoot'\nimport { DeliveryTypeEnum } from '../../graph/types'\nimport { DeliveryMap } from './DeliveryMap'\nimport { PickupMap } from './PickupMap'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst mapByOrderMethod = {\n  [DeliveryTypeEnum.Messenger]: createFactory<IProps>(DeliveryMap),\n  [DeliveryTypeEnum.Pickup]: createFactory<IProps>(PickupMap),\n}\n\nexport const OrderMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, map } = useRoot()\n  return useObserver(() => (\n    <BaseMap model={map}>\n      {mapByOrderMethod[order.orderMethod]({ onConfirm })}\n    </BaseMap>\n  ))\n}\n","import './PickupMap.css'\n\nimport { useEffectOnce } from '@speedlo/hooks'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { InfoWindow, Marker } from 'react-google-maps'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { RM } from '../../helpers/ramda'\nimport { MapPanning } from './atoms/MapPanning'\nimport { QueryPickupMapBranch, QueryPickupMapBrand } from './PickupMap.graphql'\nimport { PickupMapBranch } from './PickupMapBranch'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const PickupMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, business, map } = useRoot()\n  const [activeBranch, setActiveBranch] = useState<MaybeID>(null)\n\n  useEffectOnce(() => {\n    if (business.branchId) {\n      setActiveBranch(business.branchId)\n    }\n  })\n\n  useEffect(\n    () => {\n      if (activeBranch) {\n        order.prefetchFoodMenu(activeBranch)\n      }\n    },\n    [activeBranch],\n  )\n\n  const onConfirmPickup = useCallback(\n    async (branchId: ID) => {\n      // it's necessary to set asap so correct data are displayed further\n      order.setBranch(branchId)\n      await order.createPickupOrder(branchId)\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  const renderSite = (branch: GPickupBranch.Fragment) => (\n    <Marker\n      key={branch.id}\n      position={gpsToLatLng(branch.gps)}\n      onClick={() => setActiveBranch(branch.id)}\n    >\n      {activeBranch === branch.id ? (\n        <InfoWindow\n          onCloseClick={() => setActiveBranch(null)}\n          defaultOptions={{ maxWidth: 200 }}\n        >\n          <PickupMapBranch\n            branch={branch}\n            onConfirm={() => {\n              onConfirmPickup(branch.id)\n            }}\n          />\n        </InfoWindow>\n      ) : null}\n    </Marker>\n  )\n\n  return useObserver(() => {\n    if (business.isBrand) {\n      return (\n        <QueryPickupMapBrand\n          variables={{ brandId: business.brandId! }}\n          renderLoading={false}\n          render={({ branches }) => {\n            const branch =\n              branches && branches.find(RM.propEq('id', business.branchId))\n            return (\n              <>\n                <MapPanning map={map} gps={branch && branch.gps} />\n                {branches && branches.map(renderSite)}\n              </>\n            )\n          }}\n        />\n      )\n    }\n    return (\n      <QueryPickupMapBranch\n        variables={{ branchId: business.branchId! }}\n        renderLoading={false}\n        render={({ branch }) => (\n          <>\n            <MapPanning map={map} gps={branch && branch.gps} />\n            {branch && renderSite(branch)}\n          </>\n        )}\n      />\n    )\n  })\n}\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { IShopStatusRender, ShopStatus } from '../../common/ShopStatus'\nimport { GPickupBranch } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  branch: GPickupBranch.Fragment\n  onConfirm(): void\n}\n\nconst PickupMapHeaderStyled = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.tertiaryText};\n  text-align: center;\n  padding: 0.4rem 0.2rem 0.2rem 0.2rem;\n  height: 2rem;\n  vertical-align: middle;\n`\n\nexport const PickupMapBranch: React.SFC<IProps> = ({ branch, onConfirm }) => (\n  <div className=\"pickup__map\">\n    <PickupMapHeaderStyled className=\"pickup__map__header\">\n      {branch.name}\n    </PickupMapHeaderStyled>\n    <div className=\"pickup__map__info\">\n      <ShopAddress address={branch.address} />\n    </div>\n    <ShopStatus\n      status={branch}\n      render={opts => (\n        <PrimaryButton\n          color=\"primary\"\n          data-testid=\"submitPickupBranch\"\n          disabled={!branch.pickupEnabled}\n          onClick={onConfirm}\n        >\n          {branch.pickupEnabled ? (\n            getButtonText(opts)\n          ) : (\n            <Trans>Delivery only</Trans>\n          )}\n        </PrimaryButton>\n      )}\n    />\n  </div>\n)\n\nfunction getButtonText({ decision, openingIn, closingIn }: IShopStatusRender) {\n  switch (decision) {\n    case 'Closed':\n      return <Trans>Closed</Trans>\n    case 'ClosingSoon':\n      return (\n        <Plural\n          value={closingIn}\n          one=\"Closing in 1 minute\"\n          other=\"Closing in # minutes\"\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <Plural\n          value={openingIn}\n          one=\"Opening in 1 minute\"\n          other=\"Opening in # minutes\"\n        />\n      )\n    default:\n      return i18n.t`Pickup here`.toLocaleUpperCase()\n  }\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../common/WithRoot'\n\nimport { ShopHeader } from './ShopHeader'\nimport { QueryShopHeader } from './ShopHeader.graphql'\n\ninterface IProps {}\n\nexport const ShopHeaderView: React.SFC<IProps> = props => (\n  <WithRoot\n    observe={true}\n    render={root => (\n      <QueryShopHeader\n        // need to use branchId from order first as it reflects branch for which\n        // order is being made and it might have different eg. business hours\n        // then the one obtained through business code\n        variables={{ branchId: root.order.branchId || root.business.branchId! }}\n        skip={!root.business.isValid}\n        renderLoading={false}\n        render={({ branch }, { loading }) => (\n          <ShopHeader branch={branch} isLoading={loading} />\n        )}\n      />\n    )}\n  />\n)\n\nexport default ShopHeaderView\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router'\nimport { Row } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport { GShopHeader } from '../../graph/types'\n\nimport { OrderAddress } from './OrderAddress'\nimport { ShopCloseAlert } from './ShopCloseAlert'\nimport { ShopClosingTimeModal } from './ShopClosingTimeModal'\nimport { ShopHeaderIcons } from './ShopHeaderIcons'\nimport { ShopIntro } from './ShopIntro'\nimport { ShopLogo } from './ShopLogo'\nimport { ShopOpeningHours } from './ShopOpeningHours'\nimport { Sticker } from './Sticker'\n\ninterface IProps {\n  branch?: GShopHeader.Branch\n  isLoading: boolean\n}\n\nconst ShopHeaderStyled = styled.div`\n  display: flex;\n  min-height: 200px;\n`\n\nconst ShopHeaderInfoStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`\n\nexport const ShopHeader: React.SFC<IProps> = ({ branch, isLoading }) => (\n  <div>\n    <Row className=\"justify-content-md-center\">\n      <ShopHeaderIcons />\n    </Row>\n\n    <Row className=\"row-white justify-content-md-center\">\n      <ColStyle>\n        <ShopHeaderStyled data-testid=\"shopHeader\">\n          {isLoading ? null : (\n            <>\n              <ShopLogo url={(branch && branch.homepageUrl) || ''} />\n\n              <ShopHeaderInfoStyled>\n                <Route\n                  exact={true}\n                  path=\"/\"\n                  render={() => (\n                    <>\n                      <Sticker>\n                        <Trans>Choose your delivery option below</Trans>\n                      </Sticker>\n                      <ShopIntro branch={branch} />\n                    </>\n                  )}\n                />\n                <Route\n                  path=\"/order\"\n                  render={() => (\n                    <>\n                      <ShopClosingTimeModal status={branch} />\n                      <Sticker success={true}>\n                        <OrderAddress address={branch && branch.address} />\n                      </Sticker>\n                      <ShopOpeningHours branch={branch} />\n                      <ShopIntro branch={branch} />\n                    </>\n                  )}\n                />\n                <Route\n                  path=\"/finish\"\n                  render={() => (\n                    <>\n                      <Sticker success={true}>\n                        <Trans>Order was send</Trans>\n                      </Sticker>\n                      <ShopOpeningHours branch={branch} />\n                      <ShopIntro branch={branch} />\n                    </>\n                  )}\n                />\n              </ShopHeaderInfoStyled>\n              <ShopCloseAlert status={branch} />\n            </>\n          )}\n        </ShopHeaderStyled>\n      </ColStyle>\n    </Row>\n  </div>\n)\n","import React from 'react'\n\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { WithRoot } from '../../common/WithRoot'\nimport { DeliveryTypeEnum, GShopHeader } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  address?: GShopHeader.Address\n}\n\nexport const OrderAddress: React.SFC<IProps> = ({ address }) => (\n  <WithRoot\n    render={root => {\n      switch (root.order.orderMethod) {\n        case DeliveryTypeEnum.Messenger:\n          return (\n            <span>\n              {i18n.t`Order to address`}: <b>{root.location.address}</b>\n            </span>\n          )\n        case DeliveryTypeEnum.Pickup:\n          return (\n            <span>\n              {i18n.t`Pickup at address`}:{' '}\n              <b>\n                <ShopAddress address={address} />\n              </b>\n            </span>\n          )\n        default:\n          return null\n      }\n    }}\n  />\n)\n","import './ShopCloseAlert.css'\n\nimport { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport { Alert } from 'reactstrap'\n\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { GCompanyBranchStatus } from '../../graph/types'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n  now?: Date\n}\n\nexport const ShopCloseAlert: React.SFC<IProps> = ({ status, now }) => {\n  return status ? (\n    <ShopStatus\n      now={now}\n      status={status}\n      render={({ decision, closingIn }) => {\n        if (decision === 'ClosingSoon') {\n          return (\n            <Alert className=\"shop__header__alert\">\n              <Trans>\n                Beware! We are\n                <Plural\n                  value={closingIn}\n                  one=\"closing in 1 minute\"\n                  other=\"closing in # minutes\"\n                />\n                . Finish your order quickly.\n              </Trans>\n            </Alert>\n          )\n        }\n        return null\n      }}\n    />\n  ) : null\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GShopHeader } from '../../graph/types'\n\ninterface IProps {\n  branch?: Maybe<GShopHeader.Branch>\n}\n\nconst ShopIntroStyled = styled.div`\n  margin: 0.8rem 1rem 1rem 1.3rem;\n`\n\nexport const ShopIntro: React.SFC<IProps> = ({ branch }) => (\n  <ShopIntroStyled data-testid=\"headerText\">\n    {branch ? branch.headerText : ''}\n  </ShopIntroStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { BackgroundThemed } from '../../common/BackgroundThemed'\n\ninterface IProps {\n  url: string\n}\n\nconst LogoLink: React.SFC<IProps> = ({ url, children }) =>\n  url ? <a href={url}>{children}</a> : <Link to=\"/\">{children}</Link>\n\nconst LogoContainerStyled = styled.div`\n  height: 200px;\n  width: 400px;\n  flex: 0 0 400px;\n  & .shop__header__logo {\n    height: 100%;\n  }\n`\n\nexport const ShopLogo: React.SFC<IProps> = props => (\n  <LogoContainerStyled>\n    <LogoLink {...props}>\n      <BackgroundThemed\n        className=\"shop__header__logo\"\n        imageName=\"storeLogo\"\n        size=\"cover\"\n      />\n    </LogoLink>\n  </LogoContainerStyled>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { GShopHeader } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { ShopStatusDisplay } from './ShopStatusDisplay'\n\ninterface IProps {\n  branch?: GShopHeader.Branch\n}\n\nconst ContainerStyled = styled.div`\n  margin: 0.4rem 0 0 0.1rem;\n`\n\nconst OpeningHoursStyled = styled.div`\n  margin: -0.2rem 0 0 1.35rem;\n  display: inline-block;\n  vertical-align: middle;\n`\n\nconst StatusDisplayPosition = styled.span`\n  padding-left: 2rem;\n`\n\nexport const ShopOpeningHours: React.SFC<IProps> = ({ branch }) => (\n  <ContainerStyled>\n    <span className=\"flaticon-clock\" />\n    {branch &&\n      branch.businessHours.map(businessHour => (\n        <OpeningHoursStyled data-testid=\"openingHours\" key={businessHour.id}>\n          {businessHour.closed\n            ? businessHour.closedNote || i18n.t`Closed`\n            : `${businessHour.openAt} - ${businessHour.closeAt}`}\n        </OpeningHoursStyled>\n      ))}\n    <StatusDisplayPosition>\n      <ShopStatusDisplay status={branch} />\n    </StatusDisplayPosition>\n  </ContainerStyled>\n)\n","import classNames from 'classnames'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StickerThemed = styled.div`\n  background: ${({ theme }) => theme.primary};\n  color: white;\n  margin-top: 1rem;\n  padding: 0;\n  border-radius: 0 0.7rem 0.7rem 0;\n  white-space: nowrap;\n  flex: none;\n\n  & p {\n    display: inline-block;\n    margin: 0.6rem 1rem 0 0;\n    vertical-align: top;\n    white-space: nowrap;\n  }\n`\n\nconst IconStyled = styled.span`\n  margin: 0.5rem 1rem 0 0.1rem;\n  &:before,:after {\n  font-size: 1.8rem;\n  margin: 0 0 0 1rem;\n  }\n}\n`\n\ninterface IProps {\n  success?: boolean\n}\n\nexport const Sticker: React.SFC<IProps> = ({ success = false, children }) => (\n  <StickerThemed\n    className={classNames('right__sticker', {\n      'order-method-unselected': !success,\n      'order-method-selected': success,\n    })}\n  >\n    <IconStyled className=\"flaticon-transport\" />\n    <p>{children}</p>\n  </StickerThemed>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport {\n  AddressFragment,\n  CompanyBranchStatusFragment,\n} from '../../graph/fragments.graphql'\nimport { GShopHeader } from '../../graph/types'\n\nexport const ShopHeaderQuery = gql`\n  query GShopHeader($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      name\n      phone\n      homepageUrl\n      headerText\n      address {\n        ...GAddress\n      }\n      ...GCompanyBranchStatus\n    }\n  }\n  ${AddressFragment}\n  ${CompanyBranchStatusFragment}\n`\n\nexport const QueryShopHeader = buildQuery<\n  GShopHeader.Query,\n  GShopHeader.Variables\n>(ShopHeaderQuery)\n","import './ShopOverview.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { ColStyleLeft, ColStyleRight } from '../../common/ColStyle'\nimport { i18n } from '../../i18n'\nimport { CartView } from '../cart/CartView'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderFormView } from '../orderForm/OrderFormView'\n\nexport const ShopOverview = () => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyleLeft>\n      <div className=\"shop__overview__column\">\n        <FoodMenuView />\n      </div>\n    </ColStyleLeft>\n\n    <ColStyleRight>\n      <div className=\"shop__overview__column cart__column\">\n        <div className=\"cart__column__header\">\n          <span className=\"flaticon-cart cart__column__header__icon\" />\n          <h4>{i18n.t`Your order`}</h4>\n        </div>\n\n        <BackgroundThemed\n          className=\"cart__column__cart\"\n          imageName=\"backgroundCart\"\n        >\n          <CartView />\n        </BackgroundThemed>\n\n        <OrderFormView />\n      </div>\n    </ColStyleRight>\n    <OrderFormStorageNotice />\n  </Row>\n)\n","import './OrderFormView.css'\n\nimport React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\n\nimport { OrderErrorModal } from './OrderErrorModal'\nimport { OrderForm } from './OrderForm'\nimport { QueryOrderForm } from './OrderFormView.graphql'\nimport { OrderGoPayModal } from './OrderGoPayModal'\n\nexport const OrderFormView: React.SFC = () => (\n  <WithOrder\n    render={orderModel => (\n      <>\n        <QueryOrderForm\n          variables={{ orderId: orderModel.orderId! }}\n          renderLoading={false}\n          render={({ order }) => {\n            return !order || order.countWares === 0 ? null : (\n              <OrderForm order={orderModel} />\n            )\n          }}\n        />\n        <OrderGoPayModal order={orderModel} />\n        <OrderErrorModal />\n      </>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { TOrderModel } from '../../models/OrderModel'\nimport { OrderAgreements } from './OrderAgreements'\nimport { OrderFormInputs } from './OrderFormInputs'\nimport { OrderFormSetup } from './OrderFormSetup'\nimport { OrderPaymentMethod } from './OrderPaymentMethod'\nimport { OrderSubmitLine } from './OrderSubmitLine'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nexport const OrderForm: React.SFC<IProps> = ({ order }) => (\n  <OrderFormSetup\n    order={order}\n    render={form => (\n      <div className=\"order__form\">\n        <div className=\"order__form__inner\">\n          <OrderFormInputs />\n          <OrderPaymentMethod />\n          <OrderAgreements />\n        </div>\n        <OrderSubmitLine\n          onClick={form.submitForm}\n          canSubmit={order.isVamInitialized}\n        />\n      </div>\n    )}\n  />\n)\n","import './OrderPaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { OrderPaymentButton } from './OrderPaymentButton'\n\nexport const OrderPaymentMethod: React.SFC = () => (\n  <div className=\"order__payment__method\">\n    <OrderPaymentButton\n      method={PaymentGateEnum.Gopay}\n      data-testid=\"orderPaymentMethod__GoPay\"\n    >\n      {i18n.t`Pay by card`.toLocaleUpperCase()}\n    </OrderPaymentButton>\n    <OrderPaymentButton\n      method={PaymentGateEnum.Cash}\n      data-testid=\"orderPaymentMethod__Cash\"\n    >\n      {i18n.t`Pay by cash`.toLocaleUpperCase()}\n    </OrderPaymentButton>\n  </div>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\n\nexport interface IPaymentButtonProps {\n  method: PaymentGateEnum\n  disabled?: boolean\n}\n\nexport const OrderPaymentButton: React.SFC<IPaymentButtonProps> = ({\n  children,\n  disabled,\n  method,\n  ...props\n}) => (\n  <Field\n    field=\"payment\"\n    render={fieldApi => (\n      <SelectButtonThemed\n        disabled={disabled}\n        selected={fieldApi.value === method}\n        onClick={() => {\n          fieldApi.setValue(method)\n        }}\n        {...props}\n      >\n        <Checkmark show={fieldApi.value === method} />\n        {children}\n      </SelectButtonThemed>\n    )}\n  />\n)\n\nfunction Checkmark({ show }: { show: boolean }) {\n  return show ? (\n    <span className=\"flaticon-mark order__payment__method__button__checked\" />\n  ) : (\n    <div className=\"order__payment__method__button__unchecked\" />\n  )\n}\n"],"sourceRoot":""}