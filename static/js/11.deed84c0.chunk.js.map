{"version":3,"sources":["app/icons/share-icon.svg","segments/mobile/AppleBanner.tsx","common/ScrollToTop.tsx","segments/mobile/MobileHeader.tsx","segments/mobile/MobileConfirmView.tsx","segments/mobile/MobileDeliveryView.tsx","segments/mobile/MobileFinishView.tsx","segments/mobile/MobileShopIntro.tsx","segments/mobile/MobileIntroView.tsx","segments/mobile/MobileClosingTimeModal.tsx","segments/mobile/MobileOrderView.tsx","segments/mobile/MobilePickupBranch.tsx","segments/mobile/MobilePickupList.tsx","segments/mobile/MobilePickupMap.tsx","segments/mobile/MobilePickupView.tsx","segments/mobile/MobileSmartBanner.tsx","app/MobileApp.tsx"],"names":["module","exports","StyledAppleBanner","styled","div","ShareIcon","width","height","src","shareIcon","alt","AppleBanner","user","useRoot","useObserver","showAppleBanner","UAParser","window","navigator","userAgent","getOS","name","standalone","onClick","hideAppleBanner","ScrollToTop","scrollTo","PureComponent","StyledMobileHeader","theme","primary","MobileHeader","text","buttonText","onButtonClick","data-testid","Button","className","StyledMobileConfirmView","MobileConfirmView","orderModel","useOrderModel","history","useRouterContext","useEmptyOrderRedirect","i18n","goBack","OrderFormStorageNotice","CartSystem","orderId","isReadonly","isMobileConfirm","OrderFormSetup","OrderGoPayModal","OrderErrorModal","OrderTimePicker","OrderFormAutoFill","OrderFormInputs","OrderTimeButtons","OrderPromoInput","OrderAgreements","OrderPaymentMethod","OrderFormTipInput","OrderSubmitButton","MobileDeliveryView","map","BaseMap","model","isMobile","DeliveryMap","onConfirm","push","MobileFinishView","Row","ColStyle","FinishViewLoader","render","result","FinishViewOrder","order","FinishViewSupport","branch","companyBranch","FinishViewFooter","finish","MobileShopIntro","observer","business","useQMobileShopIntro","brandOrBranch","skip","isValid","data","loading","intro","headerText","StyledMobileIntroView","MobileIntroView","BackgroundThemed","imageName","size","fixed","ShopHeaderIcons","LanguagePicker","OrderMethod","onChange","usingDeliveryOrderMethod","usingPickupOrderMethod","MobileClosingTimeModal","branchId","useQMobileShopStatus","ShopClosingTimeModal","status","MobileOrderView","useOrderPayment","FoodMenuView","CartView","StyledMobilePickupBranch","MobilePickupBranch","children","key","id","ShopAddress","address","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","StyledMobilePickupList","MobilePickupList","branches","onSelect","onShowMap","pickupEnabled","disabled","StyledMobilePickupMap","MobilePickupMap","React","useEffect","updatePosition","gps","MapBranchMarker","ButtonStripe","MobilePickupView","match","showBranchId","params","usePickupMapQuery","createPickupOrder","useOrderCreate","renderHeader","renderMap","Pacman","isBrand","brand","length","find","idPropEq","renderList","SmartBannerContainer","MobileSmartBanner","platform","os","MobilePlatformEnum","Ios","Android","getPlatformType","showBanner","banner","ensureBannerForCurrentBranch","shouldBeVisible","useQSmartBanner","app","setClosedNow","style","backgroundImage","icon","title","href","url","setInstalledNow","MobileApp","Container","fluid","exact","path","component"],"mappings":"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","file":"static/js/11.deed84c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/share-icon.9dc3f608.svg\";","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\nimport { UAParser } from 'ua-parser-js'\n\nimport shareIcon from '../../app/icons/share-icon.svg'\nimport { useRoot } from '../../app/useRoot'\n\nconst StyledAppleBanner = styled.div`\n  width: 100%;\n  height: 5rem;\n  background: #f4f4f4;\n  padding: 1rem;\n  position: absolute;\n  bottom: 0rem;\n  z-index: 50;\n  opacity: 0.9;\n\n  a {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0 5px 0 0;\n    font-family: ArialRoundedMTBold, Arial;\n    font-size: 20px;\n    text-align: center;\n  }\n`\n\nconst ShareIcon: React.FC = () => {\n  return <img width=\"26\" height=\"26\" src={shareIcon} alt=\"Share\" />\n}\n\nexport const AppleBanner: React.FC = () => {\n  const { user } = useRoot()\n\n  return useObserver(() => {\n    if (user.showAppleBanner && isIos() && !isInStandaloneMode()) {\n      return (\n        <StyledAppleBanner onClick={user.hideAppleBanner}>\n          {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n          <a>&times;</a>\n          <Trans>\n            Install this webapp on your device: Tap <ShareIcon /> and then Add\n            to homescreen.\n          </Trans>\n        </StyledAppleBanner>\n      )\n    }\n    return null\n  })\n}\n\nfunction isIos() {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  return os.name === 'iOS'\n}\n\nfunction isInStandaloneMode() {\n  // @ts-ignore standalone typing\n  return 'standalone' in window.navigator && window.navigator.standalone\n}\n","import { PureComponent } from 'react'\n\ninterface IProps {}\n\nexport class ScrollToTop extends PureComponent<IProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return null\n  }\n}\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\ninterface IProps {\n  text: string\n  buttonText: string\n  onButtonClick(): void\n}\n\nconst StyledMobileHeader = styled.div`\n  z-index: 10;\n  background: black;\n  height: 3rem;\n  display: flex;\n  padding: 0.5rem;\n\n  div.mobile__header__text {\n    color: white;\n    flex: 1;\n    padding: 0.25rem 1rem;\n    font-size: 1.2rem;\n    text-align: center;\n    overflow: hidden;\n  }\n\n  .mobile__header__button {\n    padding: 0.1rem 1rem 0 1rem;\n    text-transform: uppercase;\n    font-size: 0.9rem;\n    font-weight: bold;\n    background-color: white;\n    color: ${({ theme }) => theme.primary};\n  }\n`\n\nconst MobileHeader: React.FC<IProps> = ({\n  text,\n  buttonText,\n  onButtonClick,\n}) => {\n  return (\n    <StyledMobileHeader data-testid=\"MobileHeader\">\n      <Button\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Left\"\n        onClick={onButtonClick}\n      >\n        {buttonText}\n      </Button>\n      <div className=\"mobile__header__text\">{text}</div>\n    </StyledMobileHeader>\n  )\n}\n\nexport default MobileHeader\n","import { Trans } from '@lingui/macro'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ScrollToTop } from '../../common/ScrollToTop'\nimport { useEmptyOrderRedirect } from '../../hooks/useEmptyOrderRedirect'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\nimport { CartSystem } from '../cart/CartSystem'\nimport { OrderAgreements } from '../orderForm/OrderAgreements'\nimport { OrderErrorModal } from '../orderForm/OrderErrorModal'\nimport { OrderFormAutoFill } from '../orderForm/OrderFormAutoFill'\nimport { OrderFormInputs } from '../orderForm/OrderFormInputs'\nimport { OrderFormSetup } from '../orderForm/OrderFormSetup'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderFormTipInput } from '../orderForm/OrderFormTipInput'\nimport { OrderGoPayModal } from '../orderForm/OrderGoPayModal'\nimport { OrderPaymentMethod } from '../orderForm/OrderPaymentMethod'\nimport { OrderPromoInput } from '../orderForm/OrderPromoInput'\nimport { OrderSubmitButton } from '../orderForm/OrderSubmitButton'\nimport { OrderTimeButtons } from '../orderForm/OrderTimeButtons'\nimport { OrderTimePicker } from '../orderForm/OrderTimePicker'\nimport MobileHeader from './MobileHeader'\n\nconst StyledMobileConfirmView = styled.div`\n  background-color: #f3f3f3;\n  padding-bottom: 3rem;\n\n  div.form {\n    margin: 1rem;\n  }\n\n  h3 {\n    font-size: 1.4rem;\n    font-weight: bold;\n  }\n  h4 {\n    font-size: 1.05rem;\n    font-weight: bold;\n    margin-top: 0.9rem;\n  }\n  div.submit {\n    background-color: white;\n    padding: 0.1rem 1rem 1.3rem 1rem;\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n`\n\nexport const MobileConfirmView: React.FC = () => {\n  const orderModel = useOrderModel()\n  const { history } = useRouterContext()\n  useEmptyOrderRedirect()\n  return (\n    <StyledMobileConfirmView>\n      <MobileHeader\n        text={i18n.t`Order confirmation`}\n        buttonText={i18n.t`Change`}\n        onButtonClick={() => history.goBack()}\n      />\n      <ScrollToTop />\n      <OrderFormStorageNotice />\n      <CartSystem orderId={orderModel.orderId!} isReadonly isMobileConfirm />\n      <OrderFormSetup>\n        <OrderGoPayModal />\n        <OrderErrorModal />\n        <OrderTimePicker />\n        <OrderFormAutoFill />\n        <div className=\"form\">\n          <h3>\n            <Trans>To whom we deliver?</Trans>\n          </h3>\n          <OrderFormInputs />\n          <OrderTimeButtons />\n          <OrderPromoInput />\n          <OrderAgreements />\n        </div>\n        <div className=\"submit\">\n          <h4>\n            <Trans>Place order</Trans>\n          </h4>\n          <OrderPaymentMethod />\n          <OrderFormTipInput />\n          <OrderSubmitButton>\n            <Trans>Send order</Trans>\n          </OrderSubmitButton>\n        </div>\n      </OrderFormSetup>\n    </StyledMobileConfirmView>\n  )\n}\n","import './MobileMap.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { i18n } from '../../i18n'\nimport { DeliveryMap } from '../map/DeliveryMap'\nimport MobileHeader from './MobileHeader'\n\nexport const MobileDeliveryView: React.FC = () => {\n  const { map } = useRoot()\n  const { history } = useRouterContext()\n  return (\n    <div>\n      <MobileHeader\n        text={i18n.t`Enter the address`}\n        buttonText={i18n.t`Back`}\n        onButtonClick={() => history.goBack()}\n      />\n      <div className=\"mobile__map__view\">\n        <BaseMap model={map} isMobile={true}>\n          <DeliveryMap onConfirm={() => history.push('/order')} />\n        </BaseMap>\n      </div>\n    </div>\n  )\n}\n","import '../finish/FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport { FinishViewFooter } from '../finish/FinishViewFooter'\nimport { FinishViewLoader } from '../finish/FinishViewLoader'\nimport { FinishViewOrder } from '../finish/FinishViewOrder'\nimport { FinishViewSupport } from '../finish/FinishViewSupport'\n\ninterface IProps {}\n\nexport const MobileFinishView: React.FC<IProps> = () => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyle>\n      <div className=\"finish__view__mobile\">\n        <FinishViewLoader\n          render={result => (\n            <>\n              <FinishViewOrder order={result.order} />\n              <FinishViewSupport branch={result.companyBranch} />\n              <FinishViewFooter finish={result} />\n            </>\n          )}\n        />\n      </div>\n    </ColStyle>\n  </Row>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useQMobileShopIntro } from '../../graph/generated'\n\nexport const MobileShopIntro = observer(() => {\n  const { business } = useRoot()\n  const { data, loading } = useQMobileShopIntro(business.brandOrBranch, {\n    skip: !business.isValid,\n  })\n\n  return loading ? null : (\n    <div data-testid=\"MobileShopIntro\">{data.intro.headerText}</div>\n  )\n})\n","import { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { ColStyle } from '../../common/ColStyle'\nimport { LanguagePicker } from '../../common/LanguagePicker'\nimport { OrderMethod } from '../map/destination/OrderMethod'\nimport { ShopHeaderIcons } from '../shop/ShopHeaderIcons'\nimport { MobileShopIntro } from './MobileShopIntro'\n\nconst StyledMobileIntroView = styled.div`\n  text-align: left;\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  background-color: #e9e9e9;\n\n  .mobile__intro__logo {\n    position: relative;\n    flex-grow: 2;\n    background-size: cover;\n    -moz-background-size: cover;\n    -webkit-background-size: cover;\n    -o-background-size: cover;\n    width: 100%;\n    margin: 0;\n\n    & > div:first-of-type {\n      margin-top: 0.5rem;\n    }\n  }\n  .mobile__intro__info {\n    flex-basis: auto;\n    text-align: center;\n    padding: 1rem 1rem;\n    -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 9);\n    -moz-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.9);\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0.9);\n    position: relative;\n    z-index: 10;\n  }\n\n  .mobile__intro__info p {\n    color: #5a5a5a;\n  }\n\n  .mobile_languagePicker {\n    position: absolute;\n    right: 0.3rem;\n    margin-top: 0.5rem;\n  }\n`\n\nexport const MobileIntroView: React.FC = () => {\n  const { history } = useRouterContext()\n  return (\n    <StyledMobileIntroView>\n      <BackgroundThemed\n        className=\"mobile__intro__logo\"\n        data-testid=\"MobileIntroView__BackgroundThemed\"\n        imageName=\"storeLogoMobile\"\n        size=\"cover\"\n        fixed={false}\n      >\n        <ColStyle>\n          <ShopHeaderIcons />\n        </ColStyle>\n\n        <LanguagePicker className=\"mobile_languagePicker\" />\n      </BackgroundThemed>\n      <div className=\"mobile__intro__info\">\n        <MobileShopIntro />\n        <OrderMethod\n          onChange={order => {\n            if (order.usingDeliveryOrderMethod) {\n              history.push('/delivery')\n            } else if (order.usingPickupOrderMethod) {\n              history.push('/pickup')\n            }\n          }}\n        />\n      </div>\n    </StyledMobileIntroView>\n  )\n}\n","import React from 'react'\n\nimport { useQMobileShopStatus } from '../../graph/generated'\nimport { ShopClosingTimeModal } from '../shop/ShopClosingTimeModal'\n\ninterface IProps {\n  branchId: ID\n}\n\nexport const MobileClosingTimeModal: React.FC<IProps> = ({ branchId }) => {\n  const { data, loading } = useQMobileShopStatus({\n    branchId,\n  })\n\n  return loading ? null : <ShopClosingTimeModal status={data.branch} />\n}\n","import './MobileOrderView.css'\n\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useEmptyOrderRedirect } from '../../hooks/useEmptyOrderRedirect'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { CartView } from '../cart/CartView'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { useOrderPayment } from '../orderForm/hooks/useOrderPayment'\nimport { MobileClosingTimeModal } from './MobileClosingTimeModal'\n\nexport const MobileOrderView = () => {\n  const orderModel = useOrderModel()\n  useEmptyOrderRedirect()\n  useOrderPayment()\n  return useObserver(() => (\n    <div className=\"mobile__order__view\">\n      <FoodMenuView />\n      <CartView />\n      <MobileClosingTimeModal branchId={orderModel.branchId!} />\n    </div>\n  ))\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { ShopStatusDisplay } from '../shop/ShopStatusDisplay'\n\ninterface IProps {\n  branch: FPickupBranchFragment\n}\n\nconst StyledMobilePickupBranch = styled.div`\n  background-color: white;\n  color: #5a5a5a;\n  margin: 0.9rem;\n  padding: 0.6rem 0.5rem 0.5rem 0.9rem;\n  border-radius: 0.9rem;\n\n  .header {\n    color: black;\n    font-size: 1.2rem;\n    font-weight: bold;\n  }\n`\n\nexport const MobilePickupBranch: React.FC<IProps> = ({ branch, children }) => {\n  return (\n    <StyledMobilePickupBranch\n      data-testid=\"MobilePickupListBranch\"\n      key={branch.id}\n    >\n      <div className=\"header\">{branch.name}</div>\n      <ShopAddress address={branch.address} />\n      <div>\n        <ShopStatusDisplay\n          status={branch}\n          deliveryTime={branch.defaultDeliveryTime}\n          pickupTime={branch.defaultPickupTime}\n        />\n      </div>\n      {children}\n    </StyledMobilePickupBranch>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton, SecondaryButton } from '../../common/Buttons'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { MobilePickupBranch } from './MobilePickupBranch'\n\ntype TBranch = FPickupBranchFragment\n\ninterface IProps {\n  branches: ReadonlyArray<TBranch>\n  onSelect(site: TBranch): void\n  onShowMap(site: TBranch): void\n}\n\nconst StyledMobilePickupList = styled.div`\n  .buttons {\n    text-align: right;\n\n    & button {\n      font-size: 0.9rem;\n      padding: 0.3rem 0.6rem;\n      margin: 0.5rem 0 0 0.4rem;\n    }\n\n    .flaticon-mark::before,\n    .flaticon-signs::before {\n      margin: 0 0.6rem 0 0;\n      font-size: 0.9rem;\n      font-weight: initial;\n    }\n  }\n`\n\nconst MobilePickupList: React.FC<IProps> = ({\n  branches,\n  onSelect,\n  onShowMap,\n}) => {\n  const renderBranch = (branch: TBranch) => {\n    return (\n      <MobilePickupBranch\n        branch={branch}\n        data-testid=\"MobilePickupListBranch\"\n        key={branch.id}\n      >\n        <div className=\"buttons\">\n          <SecondaryButton onClick={() => onShowMap(branch)}>\n            <span className=\"flaticon-signs\">{i18n.t`Show on map`}</span>\n          </SecondaryButton>\n          {branch.pickupEnabled ? (\n            <PrimaryButton onClick={() => onSelect(branch)}>\n              <span className=\"flaticon-mark\">{i18n.t`Choose`}</span>\n            </PrimaryButton>\n          ) : (\n            <PrimaryButton disabled={true}>\n              <span className=\"flaticon-mark\">{i18n.t`Delivery only`}</span>\n            </PrimaryButton>\n          )}\n        </div>\n      </MobilePickupBranch>\n    )\n  }\n\n  return (\n    <StyledMobilePickupList data-testid=\"MobilePickupList\">\n      {branches && branches.map(renderBranch)}\n    </StyledMobilePickupList>\n  )\n}\n\nexport default MobilePickupList\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { MapBranchMarker } from '../../common/MapBranchMarker'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { MobilePickupBranch } from './MobilePickupBranch'\n\ninterface IProps {\n  branch: FPickupBranchFragment\n  onSelect(): void\n}\n\nconst StyledMobilePickupMap = styled.div`\n  .branch {\n    position: absolute;\n    top: 3rem;\n    opacity: 0.8;\n    font-size: 0.8rem;\n    width: 100%;\n\n    .header {\n      font-size: 1rem;\n    }\n  }\n\n  .submit {\n    position: fixed;\n    bottom: 3rem;\n    width: 100%;\n    z-index: 10;\n  }\n`\n\nexport const MobilePickupMap: React.FC<IProps> = ({ branch, onSelect }) => {\n  const { map } = useRoot()\n\n  React.useEffect(() => {\n    map.updatePosition(branch.gps)\n  }, [branch, map])\n\n  return (\n    <StyledMobilePickupMap>\n      <div className=\"mobile__map__view\">\n        <BaseMap model={map} isMobile={true}>\n          <MapBranchMarker branch={branch} />\n        </BaseMap>\n      </div>\n      <div className=\"branch\">\n        <MobilePickupBranch branch={branch} />\n      </div>\n      <div className=\"submit\">\n        <ButtonStripe>\n          <PrimaryButton\n            onClick={onSelect}\n            disabled={!branch.pickupEnabled}\n            data-testid=\"mobilePickupMap__SubmitButton\"\n          >\n            {branch.pickupEnabled\n              ? i18n.t`Choose branch`\n              : i18n.t`Delivery only`}\n          </PrimaryButton>\n        </ButtonStripe>\n      </div>\n    </StyledMobilePickupMap>\n  )\n}\n","import { idPropEq } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { useRoot } from '../../app/useRoot'\nimport Pacman from '../../common/Pacman'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { useOrderCreate } from '../map/hooks/useOrderCreate'\nimport { usePickupMapQuery } from '../map/hooks/usePickupMapQuery'\nimport MobileHeader from './MobileHeader'\nimport MobilePickupList from './MobilePickupList'\nimport { MobilePickupMap } from './MobilePickupMap'\n\ntype TBranch = FPickupBranchFragment\n\ninterface IRouteParams {\n  branchId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const MobilePickupView = observer<IProps>(({ history, match }) => {\n  const { business } = useRoot()\n\n  const showBranchId = match.params.branchId\n\n  const { data, loading } = usePickupMapQuery(showBranchId)\n  const { createPickupOrder } = useOrderCreate(() => {\n    history.push('/order')\n  })\n\n  const renderHeader = (branch: Maybe<TBranch>) => (\n    <MobileHeader\n      text={branch ? i18n.t`Pickup at branch` : i18n.t`Choose branch`}\n      buttonText={i18n.t`Back`}\n      onButtonClick={() => history.goBack()}\n    />\n  )\n  const renderMap = (branch: TBranch) => (\n    <MobilePickupMap\n      branch={branch}\n      onSelect={() => branch && createPickupOrder(branch.id)}\n    />\n  )\n  const renderList = (branches: ReadonlyArray<TBranch>) => (\n    <MobilePickupList\n      branches={branches}\n      onShowMap={({ id }) => history.push(`/pickup/${id}`)}\n      onSelect={({ id }) => createPickupOrder(id)}\n    />\n  )\n\n  if (loading) {\n    return <Pacman />\n  }\n\n  if (business.isBrand && data.brand) {\n    const branches = data.brand\n    const branch =\n      branches.length === 1\n        ? branches[0]\n        : (showBranchId && branches.find(idPropEq(showBranchId))) || null\n    return (\n      <>\n        {renderHeader(branch)}\n        {branch ? renderMap(branch) : renderList(branches)}\n      </>\n    )\n  } else {\n    const branch = data.branch\n    return (\n      <>\n        {renderHeader(branch)}\n        {renderMap(branch)}\n      </>\n    )\n  }\n})\n","import './MobileSmartBanner.css'\n\nimport { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\nimport { UAParser } from 'ua-parser-js'\n\nimport { useRoot } from '../../app/useRoot'\nimport { MobilePlatformEnum, useQSmartBanner } from '../../graph/generated'\nimport { TBannerModel } from '../../models/BannerModel'\n\nconst SmartBannerContainer = styled.div`\n  border-bottom: 1px solid #8f8f8f;\n  height: 81px;\n  position: absolute;\n  z-index: 1;\n  top: 3rem;\n  width: 100%;\n`\n\nexport const MobileSmartBanner = observer(() => {\n  const { business } = useRoot()\n  const platform = getPlatformType()\n\n  let showBanner: Maybe<TBannerModel> = null\n  if (business.isValid && platform !== null) {\n    const banner = business.ensureBannerForCurrentBranch()\n    if (banner.shouldBeVisible) {\n      showBanner = banner\n    }\n  }\n\n  const { data, loading } = useQSmartBanner(\n    {\n      branchId: business.branchId!,\n      platform: platform!,\n    },\n    {\n      skip: showBanner === null,\n    },\n  )\n\n  if (showBanner === null || loading || !data.app) {\n    return null\n  }\n\n  const { app } = data\n\n  const wrapperClassName = `smartbanner smartbanner-ios smartbanner-top`\n\n  return (\n    <SmartBannerContainer>\n      <div className={wrapperClassName}>\n        <div className=\"smartbanner-container\">\n          {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n          <a className=\"smartbanner-close\" onClick={showBanner.setClosedNow}>\n            &times;\n          </a>\n          <span\n            className=\"smartbanner-icon\"\n            style={{ backgroundImage: `url(${app.icon})` }}\n          />\n          <div className=\"smartbanner-info\">\n            <div className=\"smartbanner-title\">{app.title}</div>\n            <div className=\"smartbanner-description\">\n              <Trans>Free</Trans>\n            </div>\n          </div>\n          <div className=\"smartbanner-wrapper\">\n            <a\n              href={app.url}\n              onClick={showBanner.setInstalledNow}\n              className=\"smartbanner-button\"\n            >\n              <span className=\"smartbanner-button-text\">\n                <Trans>Show app</Trans>\n              </span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </SmartBannerContainer>\n  )\n})\n\nexport function getPlatformType(): Maybe<MobilePlatformEnum> {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  if (os.name === 'iOS') {\n    return MobilePlatformEnum.Ios\n  } else if (os.name === 'Android') {\n    return MobilePlatformEnum.Android\n  }\n  return null\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { AppleBanner } from '../segments/mobile/AppleBanner'\nimport { MobileConfirmView } from '../segments/mobile/MobileConfirmView'\nimport { MobileDeliveryView } from '../segments/mobile/MobileDeliveryView'\nimport { MobileFinishView } from '../segments/mobile/MobileFinishView'\nimport { MobileIntroView } from '../segments/mobile/MobileIntroView'\nimport { MobileOrderView } from '../segments/mobile/MobileOrderView'\nimport { MobilePickupView } from '../segments/mobile/MobilePickupView'\nimport { MobileSmartBanner } from '../segments/mobile/MobileSmartBanner'\n\nconst MobileApp = () => (\n  <>\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MobileIntroView} />\n      <Route path=\"/pickup/:branchId?\" component={MobilePickupView} />\n      <Route path=\"/delivery\" component={MobileDeliveryView} />\n      <Route path=\"/order\" component={MobileOrderView} />\n      <Route path=\"/confirm\" component={MobileConfirmView} />\n      <Route path=\"/finish\" component={MobileFinishView} />\n    </Container>\n    <Route path={['/', '/finish']} exact={true} component={MobileSmartBanner} />\n    <AppleBanner />\n  </>\n)\n\nexport default MobileApp\n"],"sourceRoot":""}