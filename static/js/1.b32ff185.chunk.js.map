{"version":3,"sources":["common/ColStyle.tsx","helpers/constants.ts","hooks/useEmptyOrderRedirect.ts","forms/FormTextInput.tsx","hooks/useShopStatus.ts","common/ShopAddress.tsx","hooks/useDelayedOrder.ts","common/BackgroundThemed.tsx","segments/map/hooks/usePickupMapQuery.ts","common/BaseMap.tsx","segments/foodMenu/hooks/useFoodMenuQuery.ts","segments/orderForm/OrderFormSetup.tsx","segments/timePicker/TimePickerButton.tsx","segments/timePicker/TimePicker.tsx","segments/orderForm/OrderTimePicker.tsx","common/LanguagePicker.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","segments/finish/hooks/useFinishViewLoader.ts","hooks/usePortalNavigation.ts","common/ButtonStripe.tsx","segments/map/hooks/useMapPanning.ts","common/MapBranchMarker.tsx","hooks/useAddToCart.ts","common/PickerButton.tsx","common/ButtonStrip.tsx","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderFormAutoFill.tsx","segments/orderForm/hooks/useOrderFormCheck.ts","segments/orderForm/hooks/useOrderPayment.ts","segments/orderForm/OrderFormTipInput.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/orderForm/OrderPromoInput.tsx","segments/orderForm/OrderSubmitButton.tsx","segments/orderForm/OrderTimeButtons.tsx","segments/orderForm/OrderFormStorageNotice.tsx","segments/map/AddressSubmit.tsx","segments/map/destination/AddressSearchInput.tsx","hooks/useDebounce.ts","segments/map/destination/GeolocationButton.tsx","segments/map/destination/ResolvedAddress.tsx","segments/map/hooks/useAddressSearch.ts","segments/map/ExtraAddressResult.tsx","segments/map/DeliveryAddressSearch.tsx","segments/map/DeliveryMap.tsx","hooks/useLocationResolver.ts","segments/map/hooks/useDeliveryMapPanning.ts","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishRemoveButton.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/sidedishPicker/SidedishPicker.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartModal.tsx","segments/cart/AddToCartModal.tsx","segments/cart/ChangeCartModal.tsx","segments/cart/CartView.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/hooks/useFoodMenuPresence.ts","segments/foodMenu/OrderLimitModal.tsx","segments/foodMenu/OrderLocked.tsx","segments/foodMenu/FoodMenuView.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderFormInputs.tsx","forms/FormCheckbox.tsx","segments/orderForm/OrderAgreementBox.tsx","segments/orderForm/OrderAgreements.tsx","segments/map/destination/OrderMethodButton.tsx","segments/map/destination/OrderMethod.tsx","segments/orderForm/OrderPaymentButton.tsx","segments/orderForm/OrderPaymentMethod.tsx","segments/cart/CartSystem.tsx","segments/cart/hooks/useCartControl.ts"],"names":["ColStyle","children","className","sm","md","lg","xl","ColStyleLeft","ColStyleRight","ARRAY_EMPTY","useEmptyOrderRedirect","root","useRoot","orderModel","useOrderModel","history","useRouterContext","useWhen","initialized","hasOrder","log","push","hiddenError","FormTextInput","observer","name","label","errorForceDisplay","element","useXFieldForInput","field","getFieldProps","labelNode","for","hidden","placeholder","showError","touched","type","valid","error","invalid","Boolean","disabled","disableInteraction","tooltip","useShopStatus","status","updateInterval","SECOND","openSoonThresholdInMinutes","closeSoonThresholdInMinutes","getNow","useNow","useTimer","interval","enabled","now","isOpen","willCloseAt","willOpenAt","openingIn","differenceInMinutes","closingIn","decision","isSoon","closedNote","currentInterval","dateTime","threshold","Math","abs","ShopAddress","address","location","street","houseNumber","city","STEP_SIZE_MINUTES","useDelayedOrder","order","cart","skip","branchId","delayedOrder","getStash","useQDelayedOrder","data","getSteps","React","useCallback","intervals","RM","flatten","map","createTimeSteps","canBeDelayed","length","useMOrderDeliveryTime","updateOrder","changeDeliveryTime","deliverAt","orderId","withGoods","setDeliverAt","isEnabled","time","minuteStep","start","end","current","startOfMinute","addMinutes","subMinutes","getMinutes","timeClampDown","steps","endMinute","endOfMinute","BackgroundThemed","imageName","fallbackColor","fixed","size","component","otherProps","createElement","styled","props","theme","usePickupMapQuery","business","useQPickupMap","branchSpecific","isBrand","brandId","isValid","fetchPolicy","disableBatching","getMapOptions","isMobile","streetViewControl","mapTypeControl","fullscreenControl","clickableIcons","draggableCursor","minZoom","zoomControlOptions","position","google","maps","ControlPosition","RIGHT_CENTER","RIGHT_TOP","libraries","BaseMap","model","user","useLoadScript","id","version","googleMapsApiKey","appConfig","googleMapsApi","language","isLoaded","loadError","googleMapUrl","url","googleAvailable","Reflect","has","window","Sentry","withScope","scope","setExtras","captureException","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","onClick","onLoad","setMapRef","onUnmount","options","mapContainerStyle","borderRadius","overflow","height","noMargin","useFoodMenuQuery","result","useQFoodMenu","useReaction","refetch","NOTE_MAX_LENGTH","OrderFormSetup","useOrderPayment","executeGoPayPayment","paymentErrorModal","useMSubmitOrder","submitOrder","validationSchema","useMemo","createObjectValidation","Yup","firstname","string","required","lastname","phonePrefix","phone","matches","email","note","notRequired","max","value","isOrderInCart","useOrderFormCheck","useEffect","replace","onSubmit","values","a","submitStarted","variables","getSubmitVariables","submitFailed","userErrors","gopayUrl","paymentMethod","PaymentGateEnum","Cash","submitFinished","Gopay","finally","captureMessage","xform","useXForm","initialValues","agreements","onFormChanges","console","setOrderSubmitting","state","isSubmitting","handlers","handleSubmit","customer","firstName","lastName","emails","phones","tips","paymentGate","Time","div","TimePickerButton","buttonProps","PickerButton","outline","width","data-testid","getTime","formatTime","TimePickerContainer","TimePickerDay","TimePicker","rawSteps","initialTime","onStepChange","filtered","filter","isAfter","sort","ascend","invoker","days","uniq","startOfDay","useState","stepIdx","setStepIdx","DF","closestIndexTo","day","key","getDate","format","month","weekday","step","idx","isEqual","isSelected","canBeSelected","OrderTimePicker","selectedTime","useRef","onConfirmAndClose","closeTimePicker","header","usingDeliveryOrderMethod","i18n","timePickerOpen","toggle","autoFocus","backdrop","fade","ModalHeader","tag","Container","ModalBody","LanguagePicker","availableLanguages","branch","supportedLanguages","selectedLanguage","onChange","selectLanguage","setTimeout","reload","backgroundColor","arrowColor","ShopClosingTimeModal","isDelayed","closingTimeAlertHidden","onClose","hideClosingTime","headerText","openTimePicker","ShopHeaderIcons","src","getLogo","alt","StyledStatusDisplayOpen","span","StyledStatusDisplayClosed","ShopStatusDisplay","deliveryTime","pickupTime","closestBH","businessHours","timingDisplay","defaultDeliveryTimeEnabled","usingPickupOrderMethod","defaultPickupTimeEnabled","path","render","formatOpenTime","opetAt","nowDate","Date","hour","minute","isSameDay","CenteredButtonContainer","FinishViewFooter","finish","androidApp","iosApp","renderHomeButton","to","href","color","style","textAlign","HeaderThemed","primary","PriceThemed","PriceCornerThemed","FinishViewOrder","orderPayments","some","hasMethod","PaymentTypeEnum","Credit","getPaymentInfo","items","item","OrderItem","totalSum","getPaymentPrice","formattedValue","paymentType","payment","enum","recipe","sideDishes","nameLabel","join","PhoneNumberLinkStyled","FinishViewSupport","useFinishViewLoader","useQOrderFinish","loading","usePortalNavigation","info","URL","isPickup","searchParams","get","searchAddress","decodeAddress","useOrderMethod","DeliveryTypeEnum","Pickup","resetResolution","setInitialSearchAddress","encodedAddress","Base64","decode","ButtonStripe","useMapPanning","mapRef","useGoogleMap","prevGps","gps","prev","latitude","longitude","latLng","gpsToLatLngLit","panTo","panToGps","StyledPickupMapMarker","MapBranchMarker","gpsToLatLng","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","getPixelPositionOffset","x","y","title","counter","NO_SIDEDISHES","useAddToCart","cartModel","client","useApolloClient","useMAddToCart","addToCart","recipeId","withPresence","optimisticResponse","makeOptimisticResponse","readQuery","query","QCartDocument","__typename","add","countWares","readFragment","fragment","FRecipeFragmentDoc","fragmentName","automatic","price","addItem","presence","PickerButtonStyled","tertiary","tertiaryText","tertiaryHover","onSelect","StyledButtonStrip","mediaMobile","ButtonStrip","OrderErrorModal","useObserver","hasErrors","clearErrors","submitErrors","OrderFormAutoFill","useXFormCtx","useQOrderForm","orderStateCategory","OrderStateCategoryEnum","InCart","hasItemsInCart","useAlertModal","alertPaymentError","useLazyQOrderPaymentStatus","executePaymentStatusCheck","onFinish","onError","errors","queryPaymentStatus","userToken","goPayStatusCheck","context","invalidateWithToken","then","Promise","resolve","useGoPay","paymentProcessing","paymentLoading","StyledOrderFormTipInput","OrderFormTipInput","useMOrderTipUpdate","updateTip","usingPaymentMethodWithTips","Number","ev","setTips","parseInt","target","TextPadding","OrderGoPayModal","isGoPayChecking","CodesPanel","OrderPromoInput","memo","errorModal","useQOrderPromoCodes","useMOrderPromoAdd","addCodeMutation","useMOrderPromoRemove","removeCodeMutation","onCodeAdd","code","onCodeRemove","codeId","useOrderPromoCodes","onCodeErrors","msg","getValidatingMessage","inputProps","inputRef","codes","promoCodes","innerRef","autoComplete","role","OrderSubmitButton","submitBlocked","submitBlockReason","isVamInitialized","fadeIn","StyledOrderTimeButtons","OrderTimeButtons","selected","NoticeButton","Button","StorageNotice","Alert","mediaDesktop","OrderFormStorageNotice","rememberForm","setFormRememberYes","setFormRememberNo","AddressSubmit","AddressSearchInput","onSearch","isVisible","focus","onSearchDebounced","cb","deps","debounced","debounce","clear","useDebounce","Input","cn","search","setSearchValue","trim","clearAddress","onKeyPress","onFocus","select","searchValue","GeolocationButton","alert","makeAlert","isGeolocationAvailable","isResolving","navigator","geolocation","getCurrentPosition","coords","accuracy","setGeolocationPoint","err","disableGeolocation","enableHighAccuracy","maximumAge","ResolvedAddress","onValidClick","wait","undefined","urlCache","Map","useAddressSearch","count","watchLocation","useLocalStore","results","phrase","searching","params","doFetch","fetch","resp","json","validateResult","mapResult","set","debouncedFetch","nextPhrase","useReactionNow","initialSearchAddress","reaction","userData","category","suggestFirstRow","suggestSecondRow","suffix","municipality","district","country","find","Styled","ExtraAddressResult","open","hasSearchValue","usefulResults","bounceInLeft","bounceIn","toString","setSearchResult","StyledDeliveryAddressSearch","secondary","DeliveryAddressSearch","setIsResolving","setAsNotResolved","singleResult","startsWith","setAsNotAddress","hasAddress","ErrorMessage","hasResolutionResult","isResolved","isStreetAddress","inDeliveryLocation","StyledDeliveryMap","DeliveryMap","onConfirm","resolver","useLazyQResolveLocation","resolveLocation","getResolutionTarget","setResolutionResult","useLocationResolver","resolveUserLocation","setLocation","hasLocation","geoPoint","clickPoint","clearClickPoint","isDeliveryAddress","useQInitialDeliveryLocation","source","useAsObservableSource","initial","prop","useAutorun","geolocationPoint","gpsCoordinates","useDeliveryMapPanning","createDeliveryOrder","useOrderCreate","draggable","onDragEnd","latLngToGps","CategoryValidationMessage","minCount","maxCount","message","_","StyledSidedishRemoveButton","primaryHover","SidedishRemoveButton","StyledSidedishCheckbox","SidedishCheckbox","sidedish","canBeRemoved","onAdd","onRemove","StyledSidedishPicker","SidedishPicker","selection","useSideDishValidator","categories","isCategoryValid","i","includes","CartOrderButton","isConfirming","setConfirming","heartBeat","every","catch","CartModal","isLoading","initialSideDishes","updateSelection","onCloseModal","onAddSidedish","sidedishId","sel","append","onRemoveSidedish","remove","indexOf","Pacman","descriptionLabel","AddToCartModal","addToCartRecipeId","useQCartRecipe","executeAddToCart","ChangeCartModal","itemId","changeCartItemId","useQCartItem","useMChangeCartItem","changeItem","changeCartItem","sideDishesSelection","CartView","isReadonly","CartSystem","StyledCategoryNavigator","CategoryNavigator","activeCategoryIndex","setActiveCategoryIndex","Link","active","onSetActive","offset","smooth","spy","pictogram","Truncate","lines","FoodCategoryStyled","FoodCategoryTitleStyled","FoodCategory","Element","StyledFoodMenuItem","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItem","onAddToCart","hasSideDishes","sideDishCount","useLazyQCartRecipe","prefetchFoodItem","onMouseEnter","previousPresence","lastActiveRecipeId","image","recipePresence","pulse","zoomIn","renderPresence","StyledFoodMenu","config","useQFoodMenuCartPresence","observable","runInAction","forEach","useFoodMenuPresence","hasSideDish","orderItemsMax","showOrderLimit","setUsedRecipeId","recipes","OrderLimitModal","AlertModal","orderLimitAlertHidden","hideOrderLimit","StyledOrderLocked","OrderLocked","StyledMobileHeader","FoodMenuView","wareCategories","cat","OrderEmailInput","FormGroup","OrderNameInput","InputGroup","OrderNoteInput","ingredientsDescription","FormText","OrderPhoneInput","isMobileSafari","UAParser","userAgent","getBrowser","prefixField","useXFieldState","prefix","defaultPhonePrefix","memoryApplied","setValue","setTouched","OrderFormInputs","StyledFormCheckbox","StyledOrderAgreementBox","OrderAgreementBox","agreement","isCollapsed","titleNode","descriptionNode","onInvalid","setCustomValidity","isMandatory","htmlFor","toLocaleLowerCase","Collapse","OrderAgreements","formState","useXFormState","setVariables","updateVariablesLater","dispose","autorun","input","extractVariables","useQOrderFormAgreements","hasError","initVam","useVamAgreements","renderVamAgreements","validate","confirmedAgreements","useXField","confirmed","Array","from","AgreementBox","OrderMethodButton","orderMethod","data-testselected","StyledOrderMethod","OrderMethod","identity","Messenger","OrderPaymentButton","setPaymentMethod","Checkmark","show","StyledOrderPaymentMethod","OrderPaymentMethod","StyledCartSystem","isMobileConfirm","useTheme","labels","getCartLabels","onItemEdit","useMRemoveCartItem","removeItem","onItemRemove","makeOptimisticRemove","onPlaceOrder","onChangeOrder","rejectItem","reject","idPropEq","useCartControl","renderMobileSubmit","shouldPlaceOrder","renderGoodsLoading","useCartSystem","colors","sumRowBg","sumRowText","mobileSummaryItemCount","mobileBreakpoint","backgroundImage","backgroundCart","updateDisplay","store","showGoods","useQCart","updateSummary","updateGoods","renderCart","noSideDish","noCost","cartSumHeader","totalPrice","emptyCart","totalDiscount","coverPrice","transportFee","tip","minimalOrderPrice"],"mappings":"uGAAA,8HAGaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,kBAAC,IAAD,CAAKC,UAAU,UAAUC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACjDL,IAIQM,EAAe,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAH,OAC1B,kBAAC,IAAD,CAAKC,UAAU,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC9CL,IAIQO,EAAgB,SAAC,GAAD,IAAGP,EAAH,EAAGA,SAAH,OAC3B,kBAAC,IAAD,CAAKC,UAAU,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC9CL,K,kCCjBL,gCAAO,IAAMQ,EAAwB,I,kCCArC,6DAKO,SAASC,IACd,IAAMC,EAAOC,cACPC,EAAaC,cACXC,EAAYC,cAAZD,QAERE,YACE,kBAAMN,EAAKO,aACX,WACOL,EAAWM,WACdN,EAAWO,IAAI,4BACfL,EAAQM,KAAK,U,+LCFRC,EAAc,WAEdC,EAAgBC,YAC3B,YAA6D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,MAAmD,IAA5CC,yBAA4C,SAAdC,EAAc,oDACpDf,EAAaC,cADuC,EAE3Be,YAAkBJ,GAFS,mBAEnDK,EAFmD,KAE5CC,EAF4C,KAIpDC,EACJ,kBAAC,IAAD,CAAOC,IAAKR,EAAMS,QAASR,GACxBE,EAAQO,aAAeT,GAItBU,EAAYT,GAAqBG,EAAMO,QAE7C,OACE,oCACGL,EACD,kBAAC,IAAD,iBACMD,IACAH,EAFN,CAGEU,KAAK,OACLC,MAAOT,EAAMO,UAAYP,EAAMU,MAC/BC,QAASL,GAAaM,QAAQZ,EAAMU,OACpCG,SAAU9B,EAAW+B,sBAEtBR,GAAaN,EAAMU,QAAUlB,EAC5B,kBAAC,IAAD,CAAciB,OAAO,EAAOM,SAAS,GAClCf,EAAMU,OAEP,S,kCC3CZ,qDAwBO,SAASM,EAAT,GAKK,IAJVC,EAIS,EAJTA,OAIS,IAHTC,sBAGS,MAHQ,GAAKC,IAGb,MAFTC,kCAES,MAFoB,GAEpB,MADTC,mCACS,MADqB,GACrB,EACHC,EAASC,cAEfC,YAAS,CACPC,SAAUP,EACVQ,QAASR,EAAiB,IAG5B,IAAMS,EAAML,IACJM,EAAoCX,EAApCW,OAAQC,EAA4BZ,EAA5BY,YAAaC,EAAeb,EAAfa,WAIvBC,EAAYD,EAAaE,YAAoBF,EAAYH,GAAO,EAChEM,EAAYJ,EAAcG,YAAoBH,EAAaF,GAAO,EA8BxE,MANgC,CAC9BO,SAvBEN,EACEC,GAAeI,GAAa,EACnB,SAEAE,EAAON,EAAaR,EAA6BM,GACxD,cACA,OAGFG,GAAcC,GAAa,EAClB,OAEAI,EAAOL,EAAYV,EAA4BO,GACtD,cACA,SAUNI,YACAE,YACAG,WARiBnB,EAAOoB,gBACtBpB,EAAOoB,gBAAgBD,WACvB,MAWN,SAASD,EAAOG,EAAuBC,EAAmBZ,GACxD,QAAOW,GACHE,KAAKC,IAAIT,YAAoBM,EAAUX,KAASY,I,kCC9EtD,4DASaG,EAAgC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9C,IAAKA,IAAYA,EAAQC,SACvB,OAAO,8BAAO,IAAK,EAAD,oBAFwC,IAIpDA,EAAaD,EAAbC,SACR,OACE,wCAAUA,EAASC,OAAnB,YAA6BD,EAASE,YAAtC,eACEF,EAASG,S,oKCCTC,EAAoB,GAEnB,SAASC,IAAmB,IAAD,EACRnE,cAAhBoE,EADwB,EACxBA,MAAOC,EADiB,EACjBA,KAETC,GAAQF,EAAMG,SAIdC,GAAeC,EAFAC,YAAiB,CAAEH,SAAUH,EAAMG,UAAa,CAAED,SAA/DG,UAEsB,SAAAE,GAAI,OAAIA,EAAKH,eAErCI,EAAWC,IAAMC,YAAY,WACjC,OAAqB,OAAjBN,EACK,MA+BQO,EA7BEP,EAAaO,UA8B3BC,IAAGC,QAAQF,EAAUG,IAAIC,KADlC,IAAqBJ,GA5BhB,CAACP,IAEEY,EAAeP,IAAMC,YAAY,WACrC,OAAwB,OAAjBN,GAAyBA,EAAaO,UAAUM,OAAS,GAC/D,CAACb,IAlB4B,EAoBVc,cAAfC,EApByB,oBAsB1BC,EAAqBX,IAAMC,YAC/B,SAACW,GACCF,EAAY,CACVG,QAAStB,EAAMsB,QACfC,UAAWtB,EAAKsB,UAChBF,cAEFrB,EAAMwB,aAAaH,IAErB,CAACpB,EAAMD,EAAOmB,IAGhB,MAAO,CACLX,WACAQ,eACAS,UAAW/D,QAAQ0C,IAAiBA,EAAc5B,QAClD4C,sBAQJ,SAASL,EAAT,GAAkE,IAW7CW,EAAYC,EAXNC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,IAC5BC,EAAUC,aAUKL,EAVqBE,EAUTD,EAVgB7B,EAWxCkC,YAGT,SAAuBN,EAAYC,GACjC,OAAOM,YAAWP,EAAMQ,YAAWR,GAAQC,GAJzBQ,CAAcT,EAAMC,GAAaA,KAV7CS,EAAgB,GAChBC,EAAYC,YAAYL,YAAWJ,EAAK,IAC9C,GACEO,EAAM/F,KAAKyF,GACXA,EAAUE,YAAWF,EAAShC,SACvBgC,GAAWO,GACpB,OAAOD,I,uGC5DIG,EAAqC,SAAC,GAAD,IAChDC,EADgD,EAChDA,UADgD,KAEhDC,cAFgD,EAGhDC,cAHgD,aAIhDC,YAJgD,MAIzC,UAJyC,EAKhD1H,EALgD,EAKhDA,SALgD,IAMhD2H,iBANgD,MAMpC,MANoC,EAO7CC,EAP6C,0FAShDpC,IAAMqC,cACJC,YAAOH,GADT,uEACEG,CADF,iIAEwB,SAAAC,GAAK,oBAAWA,EAAMC,MAAMT,GAAvB,MACA,SAAAQ,GAAK,OAAKN,EAAQ,QAAU,WAGlC,SAAAM,GAAK,OAAIL,IAE9BE,EACA5H,IAGWsH,O,kUC7BR,SAASW,EAAkB/C,GAAgB,IACxCgD,EAAavH,cAAbuH,SACR,OAAOC,YACL,CACEC,gBAAiBF,EAASG,WAAanD,EACvCoD,QAASJ,EAASI,QAClBpD,SAAUA,GAAYgD,EAAShD,U,qVAJf,EAOhBD,MAAOiD,EAASK,QAChBC,YAAa,eACVC,sB,iJCGHC,EAAgB,SAACC,GACrB,MAAO,CACLC,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,EACnBC,gBAAgB,EAChBC,gBAAiB,UACjBC,QAAS,GACTC,mBAAoB,CAClBC,SAAUR,EACNS,OAAOC,KAAKC,gBAAgBC,aAC5BH,OAAOC,KAAKC,gBAAgBE,aAKhCC,EAAY,CAAC,UAENC,EAAUnI,YACrB,YAA4C,IAAzCoI,EAAwC,EAAxCA,MAAwC,IAAjChB,gBAAiC,SAAf3I,EAAe,EAAfA,SAClB4J,EAASjJ,cAATiJ,KADiC,EAGUC,YAAc,CAC/DC,GAAI,gBACJC,QAAS,SACTC,iBAAkBC,IAAUC,cAC5BT,YACAU,SAAUP,EAAKO,WALTC,EAHiC,EAGjCA,SAAUC,EAHuB,EAGvBA,UAAgBC,EAHO,EAGZC,IA8BvBC,EAAkBC,QAAQC,IAAIC,OAAQ,UAE5C,OAAIN,GAAcD,IAAaI,GACzBH,GACFO,IAAOC,UAAU,SAAAC,GACfA,EAAMC,UAAU,CAAET,iBAClBM,IAAOI,iBAAiBX,KAI1B,4BACE,kBAAC,QAAD,6DAKCD,EApCH,kBAAC,IAAD,CACEa,KAAMtB,EAAMsB,KACZC,OAAQvB,EAAMuB,OACdC,gBAAiBxB,EAAMyB,eACvBC,cAAe1B,EAAM2B,WACrBC,QAAS5B,EAAM4B,QACfC,OAAQ7B,EAAM8B,UACdC,UAAW,kBAAM/B,EAAM8B,UAAU,OACjCE,QAASjD,EAAcC,GACvBiD,kBAAmB,CACjBC,aAAc,oBACdC,SAAU,SACVC,OAAQpD,EAAW,OAAS,yBAGT,oBAAb3I,EAA0BA,IAAaA,GAqBrB,kBAAC,IAAD,CAAQgM,UAAU,O,kCCvFtD,4DAKO,SAASC,EAAiB/G,GAAoB,IAC3C0E,EAASjJ,cAATiJ,KACFsC,EAASC,YACb,CAAEjH,SAAUA,GACZ,CAAED,MAAOC,EAAUsD,YAAa,gBAUlC,OAPA4D,YACE,kBAAMxC,EAAKO,UACX,WACE+B,EAAOG,YAIJH,I,iPCIII,EAAkB,GAElBC,EAA2B,SAAC,GAAkB,IAAhBvM,EAAe,EAAfA,SACnCY,EAAaC,cACXC,EAAYC,cAAZD,QAFgD,EAIL0L,cAA3CC,EAJgD,EAIhDA,oBAAqBC,EAJ2B,EAI3BA,kBAJ2B,EAMlCC,cAAfC,EANiD,oBAQlDC,EAAmBrH,IAAMsH,QAC7B,kBACEC,YAAuB,SAAAC,GAAG,MAAK,CAC7BC,UAAWD,EAAIE,SAASC,SAAS9L,KACjC+L,SAAUJ,EAAIE,SAASC,SAAS9L,KAChCgM,YAAaL,EAAIE,SAASC,SAAS9L,KACnCiM,MAAON,EAAIE,SACRC,SAAS9L,KACTkM,QAAQ,MAAO,IAAK,EAAD,mCACtBC,MAAOR,EAAIE,SACRC,SAAS9L,KACTmM,MAAM,IAAK,EAAD,yBACbC,KAAMT,EAAIE,SACPQ,cACAC,IACCrB,EACA,gBAAGsB,EAAH,EAAGA,MAAH,OACE,IAAK,EAAD,kIAIKA,EAAM5H,OAHNsG,0BASnB,IAGMuB,EAAkBC,cAAlBD,cAERrI,IAAMuI,UAAU,WACVnN,EAAWM,WAAa2M,GAC1B/M,EAAQkN,QAAQ,OAIpB,IAAMC,EAAWzI,IAAMC,YAAN,sCACf,WAAOyI,GAAP,uBAAAC,EAAA,4DACEvN,EAAWwN,gBAELC,EAAYC,EAAmBJ,EAAQtN,GAH/C,SAIuBgM,EAAYyB,GAJnC,UAIQnC,EAJR,8BAOItL,EAAW2N,eAPf,+BAWmCrC,EAAOU,YAAhC4B,EAXV,EAWUA,WAAYC,EAXtB,EAWsBA,UAChBD,EAAWxI,OAZjB,wBAaIpF,EAAW2N,aAAaC,GAb5B,8BAiBM5N,EAAW8N,gBAAkBC,IAAgBC,KAjBnD,wBAkBIhO,EAAWiO,iBACX/N,EAAQkN,QAAR,WAnBJ,2BAuBMpN,EAAW8N,gBAAkBC,IAAgBG,MAC3CL,EACFhC,EAAoBgC,GAAUM,QAAQ,WACpCnO,EAAWiO,oBAGbjE,IAAOC,UAAU,SAAAC,GACfA,EAAMC,UAAU,CAAEsD,cAClBzD,IAAOoE,eAAe,4CAExBpO,EAAW2N,iBAGb3D,IAAOC,UAAU,SAAAC,GACfA,EAAMC,UAAU,CAAEsD,cAClBzD,IAAOoE,eAAP,+BAC0BpO,EAAW8N,kBAGvC9N,EAAW2N,gBA1Cf,0CADe,sDA8Cf,CAAC9B,EAAqB3L,EAASF,EAAYgM,IAGvCqC,EAAQC,YAAS,CACrBC,cAqBK,CACLlC,UAAW,GACXG,SAAU,GACVI,MAAO,GACPF,MAAO,GACPD,YAAa,GACbI,KAAM,GACN2B,WAAY,IA3BZvC,mBACAoB,WACAoB,cAAeC,QAAQnO,MAOzB,OAJAqE,IAAMuI,UAAU,WACdnN,EAAWF,KAAKsE,KAAKuK,mBAAmBN,EAAMO,MAAMC,eACnD,CAACR,EAAMO,MAAO5O,EAAWF,KAAKsE,OAG/B,oCACG0H,EACD,kBAAC,IAAD,CAAekB,MAAOqB,GACpB,kBAAC,IAAD,CAAMhB,SAAUgB,EAAMS,SAASC,cAAe3P,MAkBtD,SAASsO,EACPJ,EACAtN,GAEA,MAAO,CACLyF,QAASzF,EAAWyF,QACpBuJ,SAAU,CACRC,UAAW3B,EAAOjB,UAClB6C,SAAU5B,EAAOd,SACjB2C,OAAQ,CAAC,CAAEvC,MAAOU,EAAOV,QACzBwC,OAAQ,CAAC,CAAE1C,MAAM,GAAD,OAAKY,EAAOb,aAAZ,OAA0Ba,EAAOZ,UAEnDG,KAAMS,EAAOT,KACbwC,KAAMrP,EAAWqP,KACjBC,YAAatP,EAAW8N,cACxBtI,UAAWxF,EAAWwF,UACtBgJ,WAAYlB,EAAOkB,c,gPC5JjBe,EAAOrI,IAAOsI,IAAV,uDAAGtI,CAAH,uBAIGuI,EAAqC,SAAC,GAAD,IAChD5J,EADgD,EAChDA,KACG6J,EAF6C,+BAIhD,kBAACC,EAAA,EAAD,eACE7I,KAAK,KACL8I,SAAS,EACTC,MAAM,QACNC,cAAA,4BAAkCjK,EAAKkK,YACnCL,GAEJ,kBAACH,EAAD,KAAOS,YAAWnK,MCZhBoK,EAAsB/I,IAAOsI,IAAV,0EAAGtI,CAAH,sBAInBgJ,EAAgBhJ,IAAOsI,IAAV,oEAAGtI,CAAH,+EAONiJ,EAA+B,SAAC,GAItC,IAHEC,EAGH,EAHJ7J,MACA8J,EAEI,EAFJA,YACAC,EACI,EADJA,aAEM/N,EAASC,cAET+D,EAAQ3B,IAAMsH,QAAQ,WAC1B,IAAMqE,EAAWH,EAASI,OAAOC,YAAQlO,MACzC,OAAOwC,IAAG2L,KAAK3L,IAAG4L,OAAO5L,IAAG6L,QAAQ,EAAG,YAAaL,IACnD,CAAChO,EAAQ6N,IAENS,EAAOjM,IAAMsH,QAAQ,WACzB,OAAOnH,IAAG+L,KAAK/L,IAAGE,IAAI8L,IAAYxK,KACjC,CAACA,IAVA,EAY0B3B,IAAMoM,SAAS,GAZzC,mBAYGC,EAZH,KAYYC,EAZZ,KAoBJ,OANAtM,IAAMuI,UAAU,WACVkD,GACFa,EAAWC,IAAGC,eAAef,EAAa9J,KAE3C,CAAC8J,EAAa9J,IAGf,kBAAC0J,EAAD,KACGY,EAAK5L,IAAI,SAAAoM,GAAG,OACX,kBAAC,WAAD,CAAUC,IAAKD,EAAIE,WACjB,kBAACrB,EAAD,KACE,kBAAC,aAAD,CACElD,MAAOqE,EACPG,OAAQ,CAAEC,MAAO,OAAQJ,IAAK,UAAWK,QAAS,WAGrDnL,EAAMtB,IAAI,SAAC0M,EAAMC,GAAP,OACTT,IAAGU,QAAQR,EAAKF,IAAGJ,WAAWY,IAC5B,kBAAC,EAAD,CACEL,IAAKK,EAAK5B,UACVlK,KAAM8L,EACNG,WAAYF,IAAQX,EACpBc,eAAe,EACfpH,QAAS,WACPuG,EAAWU,GACXtB,EAAaqB,MAGf,Y,gCC5DT,IAAMK,EAAkBrR,YAAS,WAAO,IACrCwD,EAAUpE,cAAVoE,MADoC,EAGWD,cAA/CS,EAHoC,EAGpCA,SAAUQ,EAH0B,EAG1BA,aAAcI,EAHY,EAGZA,mBAE1B0M,EAAerN,IAAMsN,OAAoB/N,EAAMqB,WAC/C8K,EAAe1L,IAAMC,YAAY,SAAC8M,GACtCM,EAAahM,QAAU0L,GACtB,IAEGQ,EAAoB,WACxB,IAAMtM,EAAOoM,EAAahM,QAC1BV,EAAmBM,GACnB1B,EAAMiO,mBAuCFC,EAASlO,EAAMmO,yBACjBC,EAAA,EAAK,EAAD,yBACJA,EAAA,EAAK,EAAD,mCAER,OACE,kBAAC,IAAD,CACE1P,OAAQsB,EAAMqO,eACdC,OAAQtO,EAAMiO,gBACd/S,UAAU,mBACVqT,WAAW,EACXC,SAAS,SACTC,MAAM,GAEN,kBAACC,EAAA,EAAD,CACEJ,OAAQtO,EAAMiO,gBACdU,IAAKC,IACL1T,UAAU,iBAEV,8BAAOgT,IAET,kBAACW,EAAA,EAAD,CAAW3T,UAAU,eACnB,yBAAKA,UAAU,wBAxDd8F,IASH,kBAAC,EAAD,CACEoB,MAAO5B,IACP0L,YAAalM,EAAMqB,UACnB8K,aAAcA,IAVd,kBAAC,QAAD,yEAuDA,yBAAKjR,UAAU,6BAvCd8F,IAIH,oCACE,yBAAK9F,UAAU,+BACf,kBAAC,IAAD,CACEyH,KAAK,KACL6D,QAASwH,EACT9S,UAAU,uBAEV,kBAAC,QAAD,uBAVG,W,yDCjDb,6EAUa4T,EAAiBtS,YAAiB,YAAoB,IAAjBtB,EAAgB,EAAhBA,UAAgB,EACrCU,cAAnBuH,EADwD,EACxDA,SAAU0B,EAD8C,EAC9CA,KAClB,OAAK1B,EAASK,QAIZ,kBAAC,IAAD,CACEuL,mBAAoB5L,EAAS6L,OAAQC,mBACrCC,iBAAkBrK,EAAKO,SACvB+J,SAAU,SAAA/J,GACJA,IAAaP,EAAKO,WACpBP,EAAKuK,eAAehK,GAEpBiK,WAAW,WACTzJ,OAAOlG,SAAS4P,UACf,OAGPpU,UAAWA,EACXqU,gBAAgB,QAChBC,WAAW,YAjBN,Q,kCCbX,0HAgBaC,EAAuBjT,YAAiB,YAAiB,IAAduB,EAAa,EAAbA,OAAa,EAC3CnC,cAAhBiJ,EAD2D,EAC3DA,KAAM7E,EADqD,EACrDA,MADqD,EAEvBlC,YAAc,CACxDC,SAEAC,eAAgB,IAHVgB,EAF2D,EAE3DA,SAAUH,EAFiD,EAEjDA,UAAWK,EAFsC,EAEtCA,WAFsC,EAQ/Ba,cAA5BiB,EAR2D,EAQ3DA,aAAcS,EAR6C,EAQ7CA,UAEtB,OAAIzB,EAAM0P,UAED,KAIP,kBAAC,IAAD,CACEhR,QACgB,WAAbM,GAAsC,gBAAbA,KACzB6F,EAAK8K,uBAERC,QAAS/K,EAAKgL,gBACdC,WAAY,IAAK,EAAD,4BAEhB,2BACG5Q,GACC,IAAK,EAAD,+DAEM,gBAAbF,GACC,2BACE,kBAAC,QAAD,sIAGWH,gBAQd4C,GAAaT,KACZ,kBAAC,IAAD,CACEwF,QAAS,WACP3B,EAAKgL,kBACL7P,EAAM+P,mBAGR,kBAAC,QAAD,kC,kCChEV,qEAKaC,EAAkB,kBAC7B,oCACE,yBACEC,IAAKC,kBAAQ,UACbhV,UAAU,8BACVyQ,cAAY,2BACZwE,IAAI,mBAEN,yBACEF,IAAKC,kBAAQ,cACbhV,UAAU,gCACViV,IAAI,eAEN,yBACEF,IAAKC,kBAAQ,QACbhV,UAAU,gCACVyQ,cAAY,4BACZwE,IAAI,SAEN,yBACEF,IAAKC,kBAAQ,SACbhV,UAAU,6BACViV,IAAI,QACJxE,cAAY,kC,4WCZX,IAAMyE,EAA0BrN,IAAOsN,KAAV,0EAAGtN,CAAH,sCAKvBuN,EAA4BvN,IAAOsN,KAAV,4EAAGtN,CAAH,sCAKzBwN,EAAsC,SAAC,GAI7C,IAHLxS,EAGI,EAHJA,OACAyS,EAEI,EAFJA,aACAC,EACI,EADJA,WAEQzQ,EAAUpE,cAAVoE,MADJ,EAEuClC,YAAc,CACvDC,WADMiB,EAFJ,EAEIA,SAAUH,EAFd,EAEcA,UAAWE,EAFzB,EAEyBA,UAI7B,IAAKhB,EACH,OAAO,KAGT,IAAsB,IAAlBA,EAAOW,OAAkB,CAC3B,IAAKX,EAAOa,WACV,OACE,kBAAC0R,EAAD,KACE,kBAAC,QAAD,4CAIN,IAAMI,EAAY3S,EAAO4S,cAAc,GACvC,GAAID,GAAaA,EAAUxR,WACzB,OACE,kBAACoR,EAAD,KACGI,EAAUxR,YAMnB,OAAQF,GACN,IAAK,OACH,IAAI4R,EAWJ,OAVI5Q,EAAMmO,0BAA4BpQ,EAAO8S,6BAC3CD,EACE,kBAAC,QAAD,0DAA6BJ,mBAG7BxQ,EAAM8Q,wBAA0B/S,EAAOgT,2BACzCH,EACE,kBAAC,QAAD,gEAAqCH,iBAIvC,kBAAC,IAAD,CACEO,KAAK,SACLC,OAAQ,kBACN,kBAACb,EAAD,CAAyBzE,cAAY,qBAClCiF,MAKX,IAAK,cACH,OACE,kBAACN,EAAD,KACE,oHACSzR,gBAMf,IAAK,cACH,OACE,kBAACuR,EAAD,KACE,oHACSrR,gBAMf,IAAK,SACH,OACE,kBAACuR,EAAD,KACGvS,EAAOa,WACN,kBAAC,QAAD,oCAAwBsS,EAAenT,EAAOa,eAE9C,kBAAC,QAAD,kBAOL,SAASsS,EAAeC,GAC7B,IAAMC,EAAU,IAAIC,KAChBhE,EAAqC,CACvCiE,KAAM,UACNC,OAAQ,WAQV,OANKC,YAAUL,EAAQC,KACrB/D,E,qVAAM,IACDA,EADC,CAEJE,QAAS,UAGN,kBAAC,aAAD,CAAY1E,MAAOsI,EAAQ9D,OAAQA,M,0ICjHtCoE,EAA0B1O,IAAOsI,IAAV,8EAAGtI,CAAH,wBAIhB2O,EAAqC,SAAC,GAE5C,IAAD,IADJC,OAAUC,EACN,EADMA,WAAYC,EAClB,EADkBA,OAEhBC,EAAmB,kBACvB,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAe7W,UAAU,sCACvB,kBAAC,QAAD,6BAIN,OACE,oCACE,kBAAC,IAAD,MACI0W,GAAcC,IACd,yBAAK3W,UAAU,mCACb,yBAAKA,UAAU,2CACb,kBAAC,QAAD,gCAEF,yBAAKA,UAAU,gDACb,kBAAC,QAAD,wEAKD0W,GACC,uBAAGI,KAAMJ,EAAWpM,KAClB,kBAAC,IAAD,CACEtK,UAAU,0CACV+W,MAAM,aAFR,gBASHJ,GACC,uBAAGG,KAAMH,EAAOrM,KACd,kBAAC,IAAD,CACEtK,UAAU,0CACV+W,MAAM,aAFR,eAUR,kBAACR,EAAD,KAA0BK,MAG5B,kBAAC,IAAD,KACE,yBACE5W,UAAU,6BACVgX,MAAO,CAAEC,UAAW,WAEpB,yBAAKjX,UAAU,sCACd4W,S,+HCxDLM,EAAerP,IAAOsI,IAAV,+DAAGtI,CAAH,0BACI,qBAAGE,MAAkBoP,UAGrCC,EAAcvP,IAAOsI,IAAV,8DAAGtI,CAAH,0BACK,qBAAGE,MAAkBoP,UAGrCE,EAAoBxP,IAAOsI,IAAV,oEAAGtI,CAAH,qCACD,qBAAGE,MAAkBoP,UAG9BG,EAAoC,SAAC,GAAD,IAAGxS,EAAH,EAAGA,MAAH,OAC/C,oCACE,kBAACoS,EAAD,CAAclX,UAAU,wBACtB,yBAAKA,UAAU,+BACb,0BAAMA,UAAU,oDAChB,4BACE,kBAAC,QAAD,oCAIN,4BACE,kBAAC,QAAD,8CAAqD,IAsB3D,YAAoE,IAA1CuX,EAAyC,EAAzCA,cACxB,GAAIA,EAAcC,KAAKC,EAAUC,IAAgB/I,OAC/C,OAAO,IAAK,EAAD,2BAEb,GAAI4I,EAAcC,KAAKC,EAAUC,IAAgBC,SAC/C,OAAO,IAAK,EAAD,mBAEb,OAAO,KA5BFC,CAAe9S,IAElB,yBAAK9E,UAAU,uBACb,yBAAKA,UAAU,iCACb,kBAAC,QAAD,kCAED8E,EAAM+S,MAAMjS,IAAI,SAAAkS,GAAI,OACnB,kBAACC,EAAD,eAAW9F,IAAK6F,EAAKjO,IAAQiO,MAE/B,kBAACT,EAAD,CAAmBrX,UAAU,uCAC7B,kBAACoX,EAAD,CAAapX,UAAU,8BAqB7B,YAA+E,IAApDuX,EAAmD,EAAnDA,cAAmD,EAApCS,SACxC,GAAIT,EAAcC,KAAKC,EAAUC,IAAgB/I,OAC/C,OAAO,IAAK,EAAD,2BAEb,GAAI4I,EAAcC,KAAKC,EAAUC,IAAgBC,SAC/C,OAAO,IAAK,EAAD,qBAEb,OAAO,KA3BAM,CAAgBnT,GADnB,IAC2B,2BAAIA,EAAMkT,SAASE,oBAM9CT,EAAY,SAACU,GAAD,OAAkC,SAClDC,GADkD,OAE/CA,EAAQ3J,cAAc0J,YAAYE,OAASF,IAsBhD,SAASJ,EAAT,GAAiE,IAA5CO,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,WAC3B,OACE,6BACE,2BAAID,EAAOE,WACVD,EAAWxS,OAAX,aACSwS,EAAW3S,IAAIF,IAAGoQ,KAAK,CAAC,SAAU,eAAe2C,KAAK,MAC5D,Q,sGC9EJC,EAAwB7Q,IAAOqG,EAAV,4EAAGrG,CAAH,4EAQd8Q,EAAsC,SAAC,GAAD,IAAG7E,EAAH,EAAGA,OAAH,OACjD,yBAAK9T,UAAU,yBACb,4BACE,kBAAC,QAAD,oDAEF,0BAAMA,UAAU,oDAChB,0BAAMA,UAAU,gCACd,kBAAC0Y,EAAD,CAAuB5B,KAAI,cAAShD,EAAOzG,QACxCyG,EAAOzG,W,kCC1BhB,oDAGO,SAASuL,IAAuB,IAC7B9T,EAAUpE,cAAVoE,MAD4B,EAGV+T,YACxB,CACE5T,SAAUH,EAAMG,SAChBmB,QAAStB,EAAMsB,SAEjB,CACEpB,OAAQF,EAAMG,UAAYH,EAAMsB,WAN5Bf,EAH4B,EAG5BA,KAUR,OAboC,EAGtByT,UAUKzT,EAAO,KAAOA,I,kCChBnC,sFAcO,SAAS0T,IAAuC,IAAnBrQ,EAAkB,wDAC5C7H,EAAYC,cAAZD,QAD4C,EAExBH,cAApBoE,EAF4C,EAE5CA,MAAON,EAFqC,EAErCA,SAETwU,EAAOzT,IAAMsH,QAAQ,WACzB,IAAMvC,EAAM,IAAII,OAAOuO,IAAIvO,OAAOlG,SAASsS,MACrCoC,EAAW5O,EAAI6O,aAAa1O,IAAI,UAChClG,EAAU+F,EAAI6O,aAAaC,IAAI,WACrC,MAAO,CACLF,WACAG,cAAe9U,GAAW+U,EAAc/U,KAEzC,IAEHgB,IAAMuI,UACJ,WACMkL,EAAKE,WACPpU,EAAMyU,eAAeC,IAAiBC,QAClC/Q,GACF7H,EAAQM,KAAK,aAInB,CAAC2D,EAAO4D,EAAU7H,EAASmY,EAAKE,WAGlC3T,IAAMuI,UACJ,WACMkL,EAAKK,gBACP7U,EAASkV,kBACTlV,EAASmV,wBAAwBX,EAAKK,eAClC3Q,GACF7H,EAAQM,KAAK,eAInB,CAACN,EAASmY,EAAKK,cAAe3Q,EAAUlE,IAI5C,SAAS8U,EAAcM,GACrB,IACE,OAAOC,SAAOC,OAAOF,GACrB,SACA,OAAO,Q,kCC1DX,4BAWeG,IAPgB,SAAC,GAAD,IAAGha,EAAH,EAAGA,SAAH,OAC7B,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,0BAA0BD,M,kCCP7C,+EAMO,SAASia,IAAiB,IACvBpU,EAAQlF,cAARkF,IACFqU,EAASC,cAETC,EAAU5U,IAAMsN,OAAwB,MAa9C,OAAO,SAACuH,GACN,IAAMC,EAAOF,EAAQvT,UAElByT,GACAA,EAAKC,WAAaF,EAAIE,UAAYD,EAAKE,YAAcH,EAAIG,YAf7C,SAACH,GAChB,GAAKH,EAAL,CAIA,IAAMO,EAASC,YAAeL,GAC9BxU,EAAI1E,IAAI,gBAAiBsZ,GACzBP,EAAOS,MAAMF,GACbL,EAAQvT,QAAUwT,OANhBxU,EAAI1E,IAAI,0CAeRyZ,CAASP,M,iHCjBTQ,EAAwB/S,IAAOsI,IAAV,4EAAGtI,CAAH,6IAcdgT,EAAoC,SAAC,GAAyB,IAAvB/G,EAAsB,EAAtBA,OAAQxI,EAAc,EAAdA,QAC1D,OACE,kBAAC,IAAD,CACEpC,SAAU4R,YAAYhH,EAAOsG,KAC7BW,YAAaC,IAAYC,qBACzBC,uBAAwB,SAAC1K,EAAO1E,GAAR,MAAoB,CAC1CqP,EAAa,IAAV3K,GAAe,IAAOA,EAAQ,EACjC4K,EAAc,IAAXtP,GAAgB,IAAOA,EAAS,KAGrC,kBAAC8O,EAAD,CACE5a,UAAU,sBACVyQ,cAAY,kBACZ4K,MAAOvH,EAAOvS,KACd+J,QAASA,O,0qBCxBjB,IAAIgQ,EAAU,EAERC,EAAgB,GAEf,SAASC,IAAgB,IAAD,EACM9a,cAA3BoE,EADqB,EACrBA,MAAa2W,EADQ,EACd1W,KACT2W,EAASC,4BAFc,EAITC,YAAcpT,mBAA3BqT,EAJsB,oBAsB7B,OAhByB,SACvBC,GAEI,IADJvD,EACG,uDADmBgD,EAEhBnN,EAAiC,CACrChI,QAAStB,EAAMsB,QACf0V,WACAvD,aACAlS,UAAWoV,EAAUpV,UACrB0V,aAAcN,EAAUM,cAE1B,OAAOF,EAAUzN,EAAW,CAC1B4N,mBAAoBC,EAAuB7N,MAM/C,SAAS6N,EACP7N,GAEA,IAAMxH,EAAU8U,EAAOQ,UACrB,CACEC,MAAOC,IACPhO,UAAW,CACThI,QAASgI,EAAUhI,QACnBC,UAAWoV,EAAUpV,UACrB0V,aAAcN,EAAUM,gBAG5B,GAEF,GAAKnV,EAAL,CAGA,IAAMiD,EAAE,WAAOyR,KAgDf,MAAO,CACLe,WAAY,WACZC,IAAI,EAAD,GACE1V,EAAQ9B,MADV,CAEDyX,WAAY3V,EAAQ9B,MAAMyX,WAAa,EACvCvE,SAAS,EAAD,GACHpR,EAAQ9B,MAAMkT,SADX,CAENrK,OAAQ,IAEVkK,MAxCY,WACd,IAAK4D,EAAUpV,UACb,OAAOO,EAAQ9B,MAAM+S,MAEvB,IAAMS,EAASoD,EAAOc,aACpB,CACE3S,GAAG,UAAD,OAAYuE,EAAU0N,UACxBW,SAAUC,IACVC,aAAc,YAEhB,GAEF,OAAKrE,EAGC,GAAN,mBACK1R,EAAQ9B,MAAM+S,OADnB,CAEE,CACEwE,WAAY,cACZO,WAAW,EACX/S,KACAgT,MAAO,CACLR,WAAY,iBACZnE,eAAgB,MAChBvK,OAAQ,GAEV2K,SACAC,WAAY,MAdP3R,EAAQ9B,MAAM+S,MA2BdiF,GACPC,SAxDGtB,EAAUM,aAGT,GAAN,mBACKnV,EAAQ9B,MAAMiY,UADnB,CAEE,CACEV,WAAY,cACZxS,KACAyO,OAAQ,CACN+D,WAAY,SACZxS,GAAIuE,EAAU0N,aATXlV,EAAQ9B,MAAMiY,gB,gHCvDvBC,EAAqBnV,YAAO,cAAG4K,WAAH,EAAejC,MAAf,IAAyB1I,EAAzB,6CAChC,kBAAC,IAAWA,KADU,yEAAGD,CAAH,yRAKF,SAAAC,GAAK,OACvBA,EAAM2K,WAAa3K,EAAMC,MAAMkV,SAAW,eACnC,SAAAnV,GAAK,OACZA,EAAM2K,WAAa3K,EAAMC,MAAMmV,aAAe,WAE9B,qBAAGnV,MAAkBoV,eAE9B,SAAArV,GAAK,OAAIA,EAAM0I,QAabF,EAAiC,SAAC,GAKxC,IAJLmC,EAII,EAJJA,WAEA1S,GAEI,EAHJqd,SAGI,EAFJrd,UACGsQ,EACC,oDACJ,OACE,kBAAC2M,EAAD,eAAoBvK,WAAYA,GAAgBpC,GAC7CtQ,K,sPCnCP,IAAMsd,EAAoBxV,IAAOsI,IAAV,uEAAGtI,CAAH,6PAOnByV,YAPmB,MA6BVC,EAAgC,SAAC,GAAkB,IAAhBxd,EAAe,EAAfA,SAC9C,OACE,kBAACsd,EAAD,KACE,yBAAKrd,UAAU,UACdD,K,oKC/BMyd,EAA4B,WAAO,IACtC1Y,EAAUpE,cAAVoE,MACR,OAAO2Y,YAAY,kBACjB,kBAAC,IAAD,CACEja,OAAQsB,EAAM4Y,UACdtK,OAAQtO,EAAM6Y,YACd3d,UAAU,oBAEV,kBAAC,IAAD,CACEoT,OAAQtO,EAAM6Y,YACdlK,IAAKC,IACL1T,UAAU,iBAEV,8BACE,kBAAC,QAAD,qCAGJ,kBAAC,IAAD,CAAWA,UAAU,eACnB,yBAAKA,UAAU,wBACZ8E,EAAM4Y,WACL5Y,EAAM8Y,aAAchY,IAAI,SAACtD,EAAOiQ,GAAR,OACtB,yBAAKN,IAAKM,GAAMjQ,MAGtB,yBAAKtC,UAAU,6BACb,yBAAKA,UAAU,+BACf,kBAAC,IAAD,CACEA,UAAU,sBACV+W,MAAM,UACNzL,QAASxG,EAAM6Y,aAEf,kBAAC,QAAD,sBAPJ,Y,kCCjCR,4EAQaE,GARb,QAQ2C,WACtBjd,cACLkd,cAEZ,OAAO,Q,kCCZX,qDAGO,SAASjQ,IACd,IAAMlN,EAAaC,cAOnB,OACEuE,EANmB4Y,YACnB,CAAE3X,QAASzF,EAAWyF,SACtB,CAAEpB,MAAOrE,EAAWyF,UAFdjB,UAMG,SAAAE,GAAI,MAAK,CAChBuI,cACEvI,EAAKP,MAAMkZ,qBAAuBC,IAAuBC,OAC3DC,eAAgB9Y,EAAKP,MAAMyX,WAAa,MACnC,CACL3O,eAAe,EACfuQ,gBAAgB,K,otBCRf,SAAS5R,IAAmB,IAAD,EACQ7L,cAAzBC,EADiB,EACxBmE,MAAmBmD,EADK,EACLA,SACnBpH,EAAYC,cAAZD,QAFwB,EAIeud,cAJf,mBAIzB3R,EAJyB,KAIN4R,EAJM,OAMIC,YAA2B,CAC7D/V,YAAa,aADRgW,EANyB,oBAU1BC,EAAWjZ,IAAMC,YAAY,WACjC3E,EAAQkN,QAAQ,YACf,CAAClN,IAEE4d,EAAUlZ,IAAMC,YACpB,SAAAkZ,GACE,IAAMrR,EAAQpF,EAAS6L,OAAQzG,MAC/BgR,EACE,IAAK,EAAD,mCACJK,EAAO3Y,OACH2Y,EAAOjG,KAAK,UACZ,IAAK,EAAD,iGAA2FpL,YAGvG,CAACgR,EAAmBpW,IAGhB0W,EAAqBpZ,IAAMC,YAC/B,WAA+C,IAA9CY,EAA6C,uDAAnCzF,EAAWyF,QAAUwY,EAAc,uCAC5C,OAAKxY,GAGLzF,EAAWke,kBAAiB,GACrBN,EACL,CAAEnY,WACF,CACEmC,YAAa,WACbuW,QAAQ,EAAD,CACLC,oBAAqBH,GAClBpW,kBAAgBsW,WAItBE,KAAK,SAAA/S,GACJ,OAAOA,EAASA,EAAOpJ,OAAS,OAEjCiM,QAAQ,WAEP,OADAnO,EAAWke,kBAAiB,GACrB,QAlBFI,QAAQC,QAAQ,OAqB3B,CAACX,EAA2B5d,IAnDE,EAsDmCwe,YACjER,EACA,CACEF,UACAD,aAIJ,MAAO,CAAE/R,oBAAmBD,oBA9DI,EAsDxBA,oBAQyC4S,kBA9DjB,EAsDHC,kB,oLCrDzBC,EAA0BzX,IAAOsI,IAAV,0EAAGtI,CAAH,+BAIhB0X,EAAoBje,YAAS,WAAO,IAAD,EACtBZ,cAAhBoE,EADsC,EACtCA,MAAOC,EAD+B,EAC/BA,KAD+B,EAE1Bya,cAAbC,EAFuC,oBAgB9C,OAXAtT,YACE,kBAAOrH,EAAM4a,2BAA6BC,OAAO7a,EAAMkL,MAAQ,GAC/D,SAAAA,GACEyP,EAAU,CACRzP,OACA5J,QAAStB,EAAMsB,QACfC,UAAWtB,EAAKsB,cAKjBvB,EAAM4a,2BAKT,kBAACJ,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEld,KAAK,SACLuL,MAAO7I,EAAMkL,KACbiE,SAAU,SAAA2L,GACR9a,EAAM+a,QAAQF,OAAOG,SAASF,EAAGG,OAAOpS,MAAO,MAEjDlL,SAAUqC,EAAMpC,mBAChB+N,cAAY,mBAEZ,4BAAQ9C,MAAO,GAAI,IAAK,EAAD,iBACvB,4BAAQA,MAAO,GAAI,IAAK,EAAD,YACvB,4BAAQA,MAAO,IAAK,IAAK,EAAD,aACxB,4BAAQA,MAAO,IAAK,IAAK,EAAD,aACxB,4BAAQA,MAAO,IAAK,IAAK,EAAD,aACxB,4BAAQA,MAAO,IAAK,IAAK,EAAD,gBApBvB,Q,wICvBLqS,EAAcnY,IAAOsI,IAAV,8DAAGtI,CAAH,0BAIJoY,EAA4B,WAAO,IAC/Btf,EAAeD,cAAtBoE,MACR,OAAO2Y,YAAY,kBACjB,kBAAC,IAAD,CAAYja,OAAQ7C,EAAWuf,gBAAiBtL,WAAW,gBACzD,kBAACoL,EAAD,KACE,kBAAC,QAAD,qDAEF,kBAAC,IAAD,CAAQjU,UAAU,S,kOCHlBoU,EAAatY,IAAOsI,IAAV,4DAAGtI,CAAH,uEAQHuY,EAAkB7a,IAAM8a,KAAK,WAAO,IAAD,EACV3f,cAArBC,EAD+B,EACtCmE,MAAmBC,EADmB,EACnBA,KADmB,EAEdqZ,cAFc,mBAEvCkC,EAFuC,KAE3Bpe,EAF2B,KAItCiD,EAAaob,YACnB,CAAEna,QAASzF,EAAWyF,SACtB,CAAEpB,MAAOrE,EAAWyF,UAFdjB,SAJsC,EAQpBqb,cAAnBC,EARuC,sBASjBC,cAAtBC,EATuC,oBAWxCC,EAAYrb,IAAMC,YAAN,sCAChB,WAAOqb,GAAP,SAAA3S,EAAA,wDACOvN,EAAWyF,QADlB,0EAISqa,EAAgB,CACrBI,OACAza,QAASzF,EAAWyF,QACpBC,UAAWtB,EAAKsB,aAPpB,yCADgB,sDAWhB,CAACoa,EAAiB1b,EAAMpE,IAGpBmgB,EAAY,sCAAG,WAAOC,GAAP,SAAA7S,EAAA,qDACfvN,EAAWyF,SACbua,EAAmB,CACjBI,SACA3a,QAASzF,EAAWyF,QACpBC,UAAWtB,EAAKsB,YALD,yCAAH,sDAzB4B,EA8Cb2a,YAAmB,CAClDJ,YACAK,aAbmB,SAACJ,EAAMnC,GAC1Bxc,EACE,IAAK,EAAD,kCAAiB2e,SACrB,6BACGnC,EAAO9Y,IAAI,SAAAsb,GAAG,OACb,yBAAKjP,IAAKiP,GAAMA,QAStBC,qBAAsB,SAAAN,GAAI,OAAI,IAAK,EAAD,mCAA2BA,YAHvDO,EA9CsC,EA8CtCA,WAAYC,EA9C0B,EA8C1BA,SAMdC,EAAQnc,EAAS,SAAAE,GAAI,OAAIA,EAAKP,MAAMyc,cAAehhB,IAEzD,OAAOkd,YAAY,kBACjB,kBAAC,IAAD,KACG6C,EACD,kBAAC,IAAD,KACE,kBAAC,IAAD,eACEkB,SAAUH,EACVI,aAAa,MACbxf,YAAa,IAAK,EAAD,gBACbmf,EAJN,CAKE3e,SAAU2e,EAAW3e,UAAY9B,EAAW+B,uBAGhD,kBAACyd,EAAD,CAAY1P,cAAY,mBACrB6Q,EAAM1b,IAAI,gBAAGiE,EAAH,EAAGA,GAAIgX,EAAP,EAAOA,KAAP,OACT,kBAAC,IAAD,CACE5O,IAAKpI,EACL6X,KAAK,SACLjf,SAAU9B,EAAW+B,mBACrB4I,QAAS,kBAAMwV,EAAajX,KAJ9B,UAMMgX,EANN,qB,kCC7FV,2HAcac,EAAoBrgB,YAAiB,YAAmB,IAAhBvB,EAAe,EAAfA,SAC7CiP,EAAQ8O,cACRnd,EAAaC,cAIfghB,GAAgB,EAChBC,EAAoB,GAYxB,OAf2BhU,cAAnBsQ,eAOIxd,EAAWmhB,iBAEX9S,EAAMO,MAAMjH,QAGtBsZ,GAAgB,EAFhBC,EAAoB,IAAK,EAAD,0BAFxBA,EAAoB,IAAK,EAAD,sCAFxBA,EAAoB,IAAK,EAAD,iBAUxB,oCACE,kBAAC,IAAD,CACEhY,GAAG,oBACHwR,MAAOwG,EACPzf,KAAK,SACL2U,MAAM,UACNtP,KAAK,KACLhF,SAAUmf,GAAiB5S,EAAMO,MAAMC,cAEtCR,EAAMO,MAAMC,aACX,kBAAC,IAAD,CAASjO,KAAK,SAASwgB,OAAO,OAAOhL,MAAM,SAE3ChX,O,0ICrCJiiB,EAAyBna,IAAOsI,IAAV,6EAAGtI,CAAH,oJAafoa,EAAmB,WAC9B,IAAMthB,EAAaC,cADiB,EAGMiE,cAAlC0B,EAH4B,EAG5BA,UAAWL,EAHiB,EAGjBA,mBAEnB,OAAOuX,YAAY,WACjB,OAAKlX,EAIH,kBAACyb,EAAD,KACE,kBAAC,IAAD,CACEvR,cAAY,qBACZyR,UAAWvhB,EAAW6T,UACtB/R,SAAU9B,EAAW+B,mBACrB4I,QAAS,kBAAMpF,EAAmB,QAElC,kBAAC,QAAD,uBAEF,kBAAC,IAAD,CACEuK,cAAY,uBACZyR,SAAUvhB,EAAW6T,UACrB/R,SAAU9B,EAAW+B,mBACrB4I,QAAS3K,EAAWkU,gBAEnBlU,EAAW6T,UACV,kBAAC,aAAD,CACE7G,MAAOhN,EAAWwF,UAClBgM,OAAQ,CAAEE,QAAS,OAAQ+D,KAAM,UAAWC,OAAQ,aAGtD,kBAAC,QAAD,sBAxBC,S,2aClBb,IAAM8L,EAAeta,YAAOua,KAAV,mEAAGva,CAAH,6DAMZwa,EAAgBxa,YAAOya,KAAV,oEAAGza,CAAH,iFAGf0a,YAHe,KAQfjF,YARe,MAiBNkF,EAA2C,WAAO,IACrD7Y,EAASjJ,cAATiJ,KAER,OAAO8T,YAAY,WACjB,OAA0B,OAAtB9T,EAAK8Y,aACA,KAGP,kBAACJ,EAAD,CACE5R,cAAY,yBACZzQ,UAAU,sBAEV,2BACE,kBAAC,QAAD,iIAMF,kBAACmiB,EAAD,CACEpL,MAAM,UACNtP,KAAK,KACL6D,QAAS3B,EAAK+Y,mBACdjS,cAAY,+BAEZ,kBAAC,QAAD,yBAEF,kBAAC0R,EAAD,CACEpL,MAAM,YACNtP,KAAK,KACL6D,QAAS3B,EAAKgZ,kBACdlS,cAAY,8BAEZ,kBAAC,QAAD,2B,svBCxDGmS,EAAkC,SAAC,GAAD,IAAGtf,EAAH,EAAGA,QAASgI,EAAZ,EAAYA,QAAZ,OAC7C,kBAACyO,EAAA,EAAD,KACE,kBAAC,IAAD,CACEhD,MAAM,UACNtU,UAAWa,EACXgI,QAASA,EACTmF,cAAY,iBAEXyC,EAAA,EAAK,EAAD,sB,iFCLJ,IAAM2P,EAAqBvhB,YAChC,YAA0C,IAAvCwhB,EAAsC,EAAtCA,SAAU1B,EAA4B,EAA5BA,WAAY2B,EAAgB,EAAhBA,UACfve,EAAa9D,cAAb8D,SACF6c,EAAW9b,IAAMsN,OAAgC,MAEvDtN,IAAMuI,UACJ,WACMiV,GAAkC,OAArB1B,EAASza,SACxBya,EAASza,QAAQoc,SAGrB,CAACD,IAGH,IAAME,ECzBH,SACLC,GAGC,IAFD1c,EAEA,uDAFe,IACf2c,EACA,uDAD6B,GAEvBC,EAAY7d,IAAMC,YAAY6d,IAASH,EAAI1c,GAA/B,sBAA0C2c,GAA1C,CAAgDD,EAAI1c,KAQtE,OANAjB,IAAMuI,UAAU,WACd,OAAO,WACLsV,EAAUE,UAEX,CAACF,IAEGA,EDYqBG,CAAYT,EAAU,KAEhDvd,IAAMuI,UAAU,WACd,OAAO,kBAAMmV,EAAkBK,UAC9B,CAACL,IA0BJ,OACE,kBAACO,EAAA,EAAD,eACExjB,UAAWyjB,YAAG,CAAEzhB,QAAS+gB,IACzB9O,SA3Ba,SACf2L,GAEA,IAAM8D,EAAS9D,EAAGG,OAAOpS,OAAS,GAClCnJ,EAASmf,eAAeD,GACK,IAAzBA,EAAOE,OAAO7d,QAChBvB,EAASqf,eAEXZ,KAoBEa,WAjBe,SACjBlE,GAEe,UAAXA,EAAG3N,MACLgR,EAAkBK,QAClBR,MAaAiB,QATY,WACd1C,EAASza,QAASod,UAShBrW,MAAOnJ,EAASyf,YAChBzC,SAAUH,EACV5Q,cAAY,eACR2Q,M,SEbG8C,EA/CkB5iB,YAAS,WAAO,IACvCkD,EAAa9D,cAAb8D,SADsC,EAGnB4Z,cAHmB,mBAGvC+F,EAHuC,KAGhCC,EAHgC,KAK9C,IAAK5f,EAAS6f,wBAA0B7f,EAAS8f,YAC/C,OAAO,KA+BT,OACE,oCACGH,EACD,yBAAKnkB,UAAU,MAAMsL,QA/BE,WACzB9G,EAAStD,IAAI,kBACbqjB,UAAUC,YAAYC,mBACpB,YAAiB,IAAdC,EAAa,EAAbA,OACOpK,EAAwBoK,EAAxBpK,SAAUC,EAAcmK,EAAdnK,UAClB/V,EAAStD,IACP,wCACAwjB,EAAOpK,SACPoK,EAAOnK,UACPmK,EAAOC,UAETngB,EAASogB,oBAAoB,CAAEtK,WAAUC,eAE3C,SAAAsK,GACErgB,EAAStD,IAAI,qBAAsB2jB,GACnCrgB,EAASsgB,qBACTV,EACElR,EAAA,EAAK,EAAD,sBACJA,EAAA,EAAK,EAAD,gDAGR,CACE6R,oBAAoB,EACpBC,WAAY,QASZ,0BAAMhlB,UAAU,qB,kBCrCXilB,EAAoC,SAAC,GAK3C,IAJL1gB,EAII,EAJJA,QACAwe,EAGI,EAHJA,UACAuB,EAEI,EAFJA,YACAY,EACI,EADJA,aAEA,OACE,yBACEzU,cAAY,kBACZzQ,UAAWyjB,YAAG,oBAAqB,CACjC0B,KAAMb,EACNtiB,QAAS+gB,IAEXzX,QAASgZ,OAAcc,EAAYF,GAElCZ,EAAc,kBAAC,IAAD,CAAS/iB,KAAK,YAAYwgB,OAAO,SAAYxd,I,4OCXlE,IAAM8gB,EAAW,IAAIC,IAEd,SAASC,IAGgB,IAAD,yDAAJ,GAAI,IAF7BC,aAE6B,MAFrB,EAEqB,MAD7BC,qBAC6B,WACH/kB,cAAlBkF,EADqB,EACrBA,IAAKpB,EADgB,EAChBA,SAEP+K,EAAQmW,YAAc,iBAAO,CACjCC,QAAS,KACTC,OAAQphB,EAASyf,YACjB4B,WAAW,EACX,UACE,IAAMC,EAAS,CAAC,SAAD,OACJN,GADI,cAEN5f,EAAI2U,WAFE,cAGN3U,EAAI0U,UAHE,eAIL1U,EAAIoF,MAJC,sCAQf,MAAM,gCAAN,OAAuC8a,EAAOrN,KAAK,UAIjDsN,EAAUxgB,IAAMC,YAAY,WAChC,GAA4B,IAAxB+J,EAAMqW,OAAO7f,OAAjB,CAKAvB,EAAStD,IAAT,4BAAkCqO,EAAMqW,SACxC,IAAMtb,EAAG,UAAMiF,EAAMjF,IAAZ,mBAA0BiF,EAAMqW,QAErCP,EAAS5a,IAAIH,GACfiF,EAAMoW,QAAUN,EAASjM,IAAI9O,IAI/BiF,EAAMsW,WAAY,EAElBG,MAAM1b,GACH0U,KAAK,SAAAiH,GAAI,OAAIA,EAAKC,SAClBlH,KAAK,SAAAkH,GACJ,IAAMP,EAAUO,EAAKja,OAAOkF,OAAOgV,GAAgBvgB,IAAIwgB,GACvDf,EAASgB,IAAI/b,EAAKqb,GAClBpW,EAAMoW,QAAUA,IAEjB7W,QAAQ,WACPS,EAAMsW,WAAY,UAtBpBtW,EAAMoW,QAAU,MAwBjB,CAACnhB,EAAU+K,IAER+W,EAAiB/gB,IAAMsN,OAAOwQ,mBAAS0C,EAAS,MAEhDjD,EAAWvd,IAAMC,YACrB,WAAgD,IAA/C+gB,EAA8C,uDAAzB/hB,EAASyf,YAC7Bzf,EAAStD,IAAT,mBAAyBqlB,IACzBhX,EAAMqW,OAASW,EAAW3C,OAC1B0C,EAAe1f,QAAQ0c,QACvByC,KAGF,CAACA,EAASvhB,IAoCZ,OAjCA2H,YACE,kBAAM3H,EAASyf,aACf,SAAAtW,GACuB,IAAjBA,EAAM5H,SACRwJ,EAAMqW,OAAS,GACfrW,EAAMoW,QAAU,KAChBW,EAAe1f,QAAQ0c,WAK7BkD,YACE,kBAAMhiB,EAASiiB,sBACf,SAAA9Y,GACMA,GACFmV,EAASnV,KAKfpI,IAAMuI,UACJ,kBACE4Y,mBACE,kBAAMnX,EAAMjF,KACZ,WACMmb,GACFa,EAAe1f,aAIvB,CAAC2I,EAAMjF,IAAKmb,I,qVAGP,IAAKlW,EAAZ,CAAmBuT,aAGrB,SAASqD,EAAT,GAAuC,IAAbQ,EAAY,EAAZA,SAChBrM,EAAwBqM,EAAxBrM,SAAUC,EAAcoM,EAAdpM,UAClB,OAAOD,GAAYC,EAGrB,SAAS6L,EAAT,GAA4C,IAAvBQ,EAAsB,EAAtBA,SAAUD,EAAY,EAAZA,SAE3B9c,EAQE8c,EARF9c,GACAyQ,EAOEqM,EAPFrM,SACAC,EAMEoM,EANFpM,UACAsM,EAKEF,EALFE,gBACAC,EAIEH,EAJFG,iBAMIC,EACJ,CAHEJ,EAHFK,aAGEL,EAFFM,SAEEN,EADFO,QAIkCJ,GAAkBK,KAAK3kB,UAAY,GAEvE,MAAO,CACLqH,KACA+c,WACAxM,IAAK,CACHE,WACAC,aAEFhW,QAAQ,GAAD,OAAKsiB,GAAL,OAAuBE,EAAM,YAAQA,GAAW,K,g3BCnI3D,IAAMK,EAASvf,IAAOsI,IAAV,KAgDCkX,EAAqB/lB,YAAiB,SAAAwG,GAAU,IACnDtD,EAAa9D,cAAb8D,SACF+K,EAAQmW,YAAc,iBAAO,CACjC4B,MAAM,KAHkD,EAMjB/B,EAAiB,CACxDC,MAAO,EACPC,cAAelW,EAAM+X,OAFf3B,EANkD,EAMlDA,QAASE,EANyC,EAMzCA,UAAW/C,EAN8B,EAM9BA,SAqB5B,GAhBA3W,YACE,kBAAMoD,EAAM+X,MACZ,SAAAA,GACMA,GACFxE,MAKN3W,YACE,kBAAM3H,EAASyf,aACf,WACE1U,EAAM+X,MAAO,KAIZ9iB,EAAS+iB,eACZ,OAAO,KAGT,IAAMC,EACJ7B,GAAWA,EAAQxU,OAAO,qBAAG5M,UAA0BC,EAASD,UAsDlE,OACE,kBAAC6iB,EAAD,CACEpnB,UAAWyjB,YAAG,WAAY,CACxBgE,aAAclY,EAAM+X,KACpBI,UAAWnY,EAAM+X,OAEnBrV,IAAK1C,EAAM+X,KAAKK,YAEfpY,EAAM+X,KA/CT,6BACE,2BACE,kBAAC,QAAD,mGAKDzB,GAAa,oCACb2B,GACCA,EAAc5hB,IAAI,SAAAqG,GAAM,OACtB,kBAACmW,EAAA,EAAD,CACE3a,KAAK,KACLsP,MAAM,OACN9E,IAAKhG,EAAOpC,GACZyB,QAAS,WACP9G,EAASojB,gBAAgB3b,GACzBsD,EAAM+X,MAAO,IAGdrb,EAAO1H,WAGd,kBAAC6d,EAAA,EAAD,CACE3a,KAAK,KACLsP,MAAM,OACNzL,QAAS,WACPiE,EAAM+X,MAAO,GAEftnB,UAAU,QAETwnB,GAA0C,IAAzBA,EAAczhB,OAC9B,kBAAC,QAAD,kCAEA,kBAAC,QAAD,4CA7CN,kBAACqc,EAAA,EAAD,CACEpiB,UAAU,OACV+W,MAAM,OACNzL,QAAS,WACPiE,EAAM+X,MAAO,IAGf,kBAAC,QAAD,6C,gGCvFN,IAAMO,EAA8BhgB,IAAOsI,IAAV,kFAAGtI,CAAH,ukBAW3B0a,YAX2B,KA4BpB,qBAAGxa,MAAkB+f,YA6BrBC,EAAwBzmB,YAAS,WAAO,IAAD,EACxBZ,cAAlBkF,EAD0C,EAC1CA,IAAKpB,EADqC,EACrCA,SADqC,EAGT+gB,IAAjCI,EAH0C,EAG1CA,QAASE,EAHiC,EAGjCA,UAAW/C,EAHsB,EAGtBA,SA2C5B,OAzCAvd,IAAMuI,UAAU,WACV+X,GACFrhB,EAASwjB,eAAenC,IAEzB,CAACrhB,EAAUqhB,IAEdtgB,IAAMuI,UAAU,WACd,GAAgB,OAAZ6X,EAAJ,CAIA,GAAuB,IAAnBA,EAAQ5f,OAGV,OAFAvB,EAAStD,IAAI,2CACbsD,EAASyjB,mBAPS,IAWbC,EAXa,YAWGvC,EAXH,MAalBiB,EAEEsB,EAFFtB,SAbkB,EAehBsB,EADF9N,IAAOE,EAdW,EAcXA,SAAUC,EAdC,EAcDA,UAQnB,GALI3U,EAAIqU,SACNrU,EAAI1E,IAAJ,gCAAiCoZ,EAAjC,cAA+CC,IAC/C3U,EAAIqU,OAAOS,MAAMD,YAAeyN,EAAa9N,QAGzCwM,IAAYA,EAASuB,WAAW,WAGpC,OAFA3jB,EAAStD,IAAI,0BAA2B0lB,QACxCpiB,EAAS4jB,kBAIX5jB,EAAStD,IAAT,wBAA8BgnB,EAAa3jB,UACvCC,EAAS8V,WAAaA,GAAY9V,EAAS+V,YAAcA,GAC3D/V,EAASkV,kBAEXlV,EAASojB,gBAAgBM,KACxB,CAAC1jB,EAAUoB,EAAK+f,IAGjB,kBAACkC,EAAD,KACE,yBAAK7nB,UAAU,aACb,kBAAC,EAAD,CACEuE,QAASC,EAASD,SAAW,GAC7Bwe,UAAWve,EAAS6jB,WACpB/D,YAAa9f,EAAS8f,YACtBY,aAAc1gB,EAASqf,eAEzB,kBAAChB,EAAD,CACEzB,WAAY,CACVnf,YAAaiR,EAAA,EAAK,EAAD,sCACjBuO,aAAc,2BAEhBqB,SAAUA,EACVC,YAAave,EAAS6jB,YAAc7jB,EAAS8f,eAE/C,kBAAC,EAAD,OAEF,kBAACgE,EAAD,MACA,kBAACjB,EAAD,SAKN,SAASiB,IAAgB,IACf9jB,EAAa9D,cAAb8D,SACR,OAAKA,EAAS+jB,qBAGc,IAAxB/jB,EAASgkB,WAET,kBAAClG,EAAA,EAAD,CAAOvL,MAAM,UACX,kBAAC,QAAD,sCAI2B,IAA7BvS,EAASikB,gBAET,kBAACnG,EAAA,EAAD,CAAOvL,MAAM,WACX,kBAAC,QAAD,kDAI8B,IAAhCvS,EAASkkB,mBAET,kBAACpG,EAAA,EAAD,CAAOvL,MAAM,WACX,kBAAC,QAAD,2EAMC,KAzBE,K,mEChIX,IAAM4R,GAAoB9gB,IAAOsI,IAAV,uEAAGtI,CAAH,iJAcV+gB,GAActnB,YAAiB,YAAoB,IAAjBunB,EAAgB,EAAhBA,UAAgB,EACzBnoB,cAA5BkF,EADqD,EACrDA,IAAKpB,EADgD,EAChDA,SAAUyD,EADsC,EACtCA,SAEjB6gB,EC9BD,WAAgC,IAAD,EACLpoB,cAAvB8D,EAD4B,EAC5BA,SAAUyD,EADkB,EAClBA,SADkB,EAGV8gB,YAAwB,CAChDxgB,YAAa,gBADRygB,EAH6B,oBAmCpC,OA5BiBzjB,IAAMC,YAAN,sCACf,WAAO4U,GAAP,MAaW6O,EAbX,SAAA/a,EAAA,4DAaW+a,EAbX,WAcI,OAAIhhB,EAASG,QACJ,CACLC,QAASJ,EAASI,SAGf,CACLpD,SAAUgD,EAAShD,WAnBvBT,EAASwjB,gBAAe,GAD1B,SAGqBgB,EAAgB,EAAD,GAC7BC,IAD6B,GAE7B7O,IALP,OAQe,QALP/U,EAHR,SASIb,EAAS0kB,oBAAoB7jB,EAAK2jB,iBAEpCxkB,EAASwjB,gBAAe,GAX1B,yCADe,sDAyBf,CAAC/f,EAAUzD,EAAUwkB,IDFNG,GAEXC,EAAsB,SAAChP,GAC3B5V,EAASkV,kBACTlV,EAASmf,eAAe,IACxBnf,EAAS6kB,YAAYjP,IAGvBrZ,YACE,kBAAMkH,EAASK,SACf,WACM9D,EAAS8kB,cAAgB9kB,EAAS+jB,sBACpC/jB,EAAStD,IAAI,yBACb4nB,EAAStkB,EAAS+kB,aAKxBpd,YACE,kBAAM3H,EAAS+kB,UACf,SAAAnP,GACMA,IACF5V,EAAStD,IAAI,2BACb4nB,EAAS1O,MAKfjO,YACE,kBAAMvG,EAAI4jB,YACV,SAAAA,GACMA,IACFhlB,EAAStD,IAAT,2BACAkoB,EAAoBI,GACpB5jB,EAAI6jB,qBAMVzd,YAAiBxH,EAASklB,kBAAoBllB,EAASS,SAAW,MEpE/B,WAAO,IAClCT,EAAa9D,cAAb8D,SACAW,EAAawkB,YACnB,GACA,CACEphB,YAAa,cACbvD,KAAMR,EAAS6jB,aAJXljB,SAQFykB,EAASC,YAAsB,CACnCC,QAAS3kB,EAASO,IAAGqkB,KAAK,eAGtBpP,EAAWX,eAEjBgQ,YAAW,WACLxlB,EAAS+kB,UACX/kB,EAAStD,IAAI,uBAAwBsD,EAAS+kB,UAC9C5O,EAASnW,EAAS+kB,WACT/kB,EAASylB,kBAClBzlB,EAAStD,IAAI,qBAAsBsD,EAASylB,kBAC5CtP,EAASnW,EAASylB,mBACTL,EAAOE,SAAWF,EAAOE,QAAQI,iBAC1C1lB,EAAStD,IAAI,0BAA2B0oB,EAAOE,QAAQI,gBACvDvP,EAASiP,EAAOE,QAAQI,mBAI5B/d,YACE,kBAAM3H,EAASylB,kBACf,SAAA7P,GACMA,GACFO,EAASP,KFoCf+P,GA5C6D,IA8CrDC,EAAwBC,aAAexB,GAAvCuB,oBAER,OACE,kBAACzB,GAAD,CAAmBlY,cAAY,cAC5BjM,EAASgW,OACR,kBAAC,IAAD,CACEtR,SAAU1E,EAASgW,OACnB8P,WAAW,EACXC,UAAW,YAAiB,IAAd/P,EAAa,EAAbA,OACZhW,EAAStD,IAAT,qBACAkoB,EAAoBoB,YAAYhQ,OAGlC,KACJ,yBAAKxa,UAAU,0BACb,kBAAC+nB,EAAD,OAEF,yBAAK/nB,UAAU,yBACb,kBAAC,EAAD,CACEsD,QAASkB,EAASklB,oBAAsBllB,EAAS8f,YACjDhZ,QAAS8e,S,sPGxFNK,EAA8C,SAAC,GAIrD,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAriB,EACI,EADJA,QAEIsiB,EAAU,GACd,GAAiB,IAAbF,EAAgB,CAClB,KAAIC,EAAW,GAGb,OAAO,KAFPC,EAAU1X,IAAK2X,EAAE,iCAAYF,mBAI1B,GAAiB,IAAbA,EACTC,EAAU1X,IAAK2X,EAAE,iCAAYH,mBACxB,GAAIA,IAAaC,EAAU,CAChC,IAAMnF,EAAQkF,EACdE,EAAU1X,IAAK2X,EAAE,2BAASrF,gBAE1BoF,EAAU1X,IAAK2X,EAAE,wDAAYH,WAAwBC,cAEvD,IAAM3T,EAAuB,GAI7B,OAHK1O,IACH0O,EAAMD,MAAQ,OAGd,0BAAMC,MAAOA,GACV,IACA4T,EACA,M,odChCP,IAAME,EAA6BjjB,IAAOsI,IAAV,IAOhB,qBAAGpI,MAAkBoP,SAGnB,qBAAGpP,MAAkBgjB,cAGrB,qBAAGhjB,MAAkBoP,UAW1B6T,EAAyC,SAAC,GAGhD,IAFL1f,EAEI,EAFJA,QACGxD,EACC,2BACJ,OACE,kBAACgjB,EAAD,eACExf,QAASA,EACTtL,UAAU,oBACVyQ,cAAY,wBACR3I,GAEJ,yBAAK9H,UAAU,gBCxBfirB,EAAyBpjB,IAAOsI,IAAV,yEAAGtI,CAAH,6MAsBfqjB,EAAmB3lB,IAAM8a,KACpC,YASO,IARL8K,EAQI,EARJA,SACA3F,EAOI,EAPJA,MACA9S,EAMI,EANJA,cACA0Y,EAKI,EALJA,aACAprB,EAII,EAJJA,UACAqrB,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACGjb,EACC,kGACE/E,EAAU/F,IAAMC,YAAY,WAC5BkN,GACF2Y,KAED,CAAC3Y,EAAe2Y,IACnB,OACE,kBAACJ,EAAD,CAAwBjrB,UAAWA,GACjC,kBAACsQ,EAAA,EAAD,eACEhF,QAASA,EACT7I,UAAWiQ,EACXjL,KAAK,KACL8I,SAAS,EACTC,MAAM,UACNC,cAAA,4BAAkC0a,EAASthB,KACvCwG,GAEJ,yBAAKrQ,UAAU,QACZmrB,EAAS3S,UACV,0BAAMvG,IAAKuT,EAAOxlB,UAAU,4BACzBwlB,EAAQ,GAAR,UAAgBA,EAAhB,OAGL,yBAAKxlB,UAAU,SAASmrB,EAAStO,MAAM3E,iBAExCkT,GAAgB,kBAAC,EAAD,CAAsB9f,QAASggB,O,iVC5DxD,IAAMC,EAAuB1jB,IAAOsI,IAAV,KAiBbqb,EAAmC,SAAC,GAK1C,IAJLlT,EAII,EAJJA,OACAmT,EAGI,EAHJA,UACAJ,EAEI,EAFJA,MACAC,EACI,EADJA,SACI,EACuCI,YACzCpT,EAAOqT,WACPF,GAFM/Y,EADJ,EACIA,cAAekZ,EADnB,EACmBA,gBAKvB,OACE,kBAACL,EAAD,CAAsBvrB,UAAU,0BAC7BsY,EAAOqT,WAAW/lB,IAAI,SAAAghB,GAAQ,OAC7B,kBAAC,WAAD,CAAU3U,IAAK2U,EAAS/c,IACtB,yBAAK7J,UAAU,8BACZ4mB,EAASpO,UAAW,IACrB,kBAAC,EAAD,CACEkS,SAAU9D,EAAS8D,SACnBC,SAAU/D,EAAS+D,SACnBriB,QAASsjB,EAAgBhF,MAG5BA,EAASrO,WAAW3S,IAAI,SAAAulB,GAAQ,OAC/B,kBAACD,EAAD,CACEjZ,IAAG,UAAKkZ,EAASthB,GAAd,YAAoB+c,EAAS/c,IAChCshB,SAAUA,EACV3F,MAAOiG,EAAUta,OAAO,SAAA0a,GAAC,OAAIA,IAAMV,EAASthB,KAAI9D,OAChD0M,WAAYgZ,EAAUK,SAASX,EAASthB,IACxCuhB,aAAcK,EAAUK,SAASX,EAASthB,IAC1C6I,cAAeA,EAAckU,EAAUuE,GACvCE,MAAK,6GAAE,kBAAMA,EAAMF,EAASthB,MAC5ByhB,SAAQ,6GAAE,kBAAMA,EAASH,EAASthB,MAClC7J,UAAU,sC,kBCnDX+rB,EAAkBxmB,IAAM8a,KACnC,YAAuC,IAApCoL,EAAmC,EAAnCA,UAAWnT,EAAwB,EAAxBA,OAAQuQ,EAAgB,EAAhBA,UAAgB,EACEtjB,IAAMoM,UAAS,GADjB,mBAC7Bqa,EAD6B,KACfC,EADe,KAE5BL,EAAoBF,YAC1BpT,EAASA,EAAOqT,WAAa,GAC7BF,GAFMG,gBAKR,OACE,kBAAC,IAAD,CACE5rB,UAAWyjB,YAAG,sBAAuB,WAAY,CAC/CyI,UAAWF,IAEbvpB,SACEupB,IAAiB1T,IAAWA,EAAOqT,WAAWQ,MAAMP,GAEtDnb,cAAY,kBACZnF,QAAS,WACP2gB,GAAc,GACdpD,IAAYuD,MAAM,WAChBH,GAAc,OAIjB/Y,EAAA,EAAK,EAAD,6GACIuY,EAAU1lB,YClBdsmB,EAA8B,SAAC,GAMrC,IALL/T,EAKI,EALJA,OACAgU,EAII,EAJJA,UACAC,EAGI,EAHJA,kBACA1D,EAEI,EAFJA,UACAnU,EACI,EADJA,QACI,EACiCnP,IAAMoM,SACzC,YAAI4a,IAAsBhsB,KAFxB,mBACGkrB,EADH,KACce,EADd,KAKEC,EAAelnB,IAAMC,YAAY,WACrCgnB,EAAgB,IAChB9X,KACC,CAACA,IAEE5B,EAAiB,sCAAG,sBAAA5E,EAAA,qEACd2a,EAAU4C,GADI,yCAEtBgB,IAFsB,mBAGf,GAHe,iCAKjB,GALiB,yCAAH,qDAQjBC,EAAgB,SAACC,GACrBH,EAAgB,SAAAI,GACd,OAAOlnB,IAAGmnB,OAAOF,EAAYC,MAI3BE,EAAmB,SAACH,GACxBH,EAAgB,SAAAI,GACd,OAAOlnB,IAAGqnB,OAAOrnB,IAAGsnB,QAAQL,EAAYC,GAAM,EAAGA,MA6BrD,OACE,kBAAC,IAAD,CACEppB,OAAmB,OAAX8U,EACRlF,OAAQqZ,EACRzsB,UAAU,mBACVqT,WAAW,EACXC,SAAS,SACTC,MAAM,EACN9C,cAAY,aAEZ,kBAAC+C,EAAA,EAAD,CACEJ,OAAQqZ,EACRhZ,IAAKC,IACL1T,UAAU,iBAEV,8BACE,kBAAC,QAAD,wCAGJ,kBAAC2T,EAAA,EAAD,CAAW3T,UAAU,eACnB,yBAAKA,UAAU,wBA5CfssB,EACK,kBAACW,EAAA,EAAD,MAEJ3U,EAMH,oCACE,wBAAItY,UAAU,2BAA2BsY,EAAOE,WAChD,0BAAMxY,UAAU,iCACbsY,EAAO4U,kBAEV,kBAAC,EAAD,CACE5U,OAAQA,EACRmT,UAAWA,EACXJ,MAAOqB,EACPpB,SAAUwB,KAbZ,kBAAC,QAAD,+DAwCA,yBAAK9sB,UAAU,6BACb,yBAAKA,UAAU,+BACf,kBAAC+rB,EAAD,CACEzT,OAAQA,EACRmT,UAAWA,EACX5C,UAAW/V,QC/FVqa,EAAiB7rB,YAAiB,YAAkB,IAAf8E,EAAc,EAAdA,QAC1CzF,EAAaC,cAEbkb,EAAWnb,EAAWysB,kBAHkC,EAKhCC,YAC5B,CAAEvR,SAAUA,GACZ,CAAE9W,KAAkB,OAAZoB,GAAiC,OAAb0V,EAAmBvT,YAAa,gBAFtDpD,EALsD,EAKtDA,SAAU2T,EAL4C,EAK5CA,QAKZwU,EAAmB9R,cAEnBqN,EAAYtjB,IAAMC,YAAN,sCAChB,WAAM+S,GAAN,eAAArK,EAAA,wDACkB,OAAZ9H,GAAiC,OAAb0V,EAD1B,0CAEW,GAFX,uBAIuBwR,EAAiBxR,EAAUvD,GAJlD,cAIQtM,EAJR,yBAKSzJ,QAAQyJ,IALjB,yCADgB,sDAQhB,CAACqhB,EAAkBlnB,EAAS0V,IAGxBpH,EAAUnP,IAAMC,YAAY,WAChC7E,EAAWkb,UAAU,OACpB,CAAClb,IAEE2X,EAASnT,EAAS,SAAAE,GAAI,OAAIA,EAAKiT,SAErC,OACE,kBAAC,EAAD,CACEA,OAAQA,EACRiU,kBAAmBhsB,IACnBsoB,UAAWA,EACXnU,QAASA,EACT4X,UAAWxT,M,kBCnCJyU,EAAkBjsB,YAAiB,YAAkB,IAAf8E,EAAc,EAAdA,QAAc,EAChB1F,cAAhCC,EADgD,EACvDmE,MAAyB2W,EAD8B,EACpC1W,KAErByoB,EAAS7sB,EAAW8sB,iBAHqC,EAKjCC,YAC5B,CACEF,OAAQA,GAEV,CAAExoB,KAAkB,OAAZoB,GAA+B,OAAXonB,IAJtBroB,EALuD,EAKvDA,SAAU2T,EAL6C,EAK7CA,QAL6C,EAY1C6U,cAAdC,EAZwD,oBAczD/E,EAAYtjB,IAAMC,YAAN,sCAChB,WAAM+S,GAAN,eAAArK,EAAA,wDACkB,OAAZ9H,GAA+B,OAAXonB,EAD1B,0CAEW,GAFX,uBAIuBI,EAAW,CAC9BJ,SACAjV,aACAnS,UACAC,UAAWoV,EAAUpV,YARzB,cAIQ4F,EAJR,yBAUSzJ,QAAQyJ,IAVjB,yCADgB,sDAchB,CAAC7F,EAASonB,EAAQI,IAGdlZ,EAAUnP,IAAMC,YAAY,WAChC7E,EAAWktB,eAAe,OACzB,CAACltB,IAEEmX,EAAO3S,EAASO,IAAGqkB,KAAK,SAExB+D,EAA+BhW,EACjCA,EAAKS,WAAW3S,IAAIF,IAAGoQ,KAAK,CAAC,SAAU,QACvCvV,IAEJ,OACE,kBAAC,EAAD,CACE+X,OAAQR,EAAOA,EAAKQ,OAAS,KAC7BiU,kBAAmBuB,EACnBjF,UAAWA,EACXnU,QAASA,EACT4X,UAAWxT,MC5DjB,gCAYO,IAAMiV,EAAWzsB,YAAiB,YAA6B,IAAD,IAAzB0sB,kBAAyB,SAC7DrtB,EAAaC,cACbwF,EAAUzF,EAAWyF,QAC3B,OACE,oCACE,kBAAC+mB,EAAD,CAAgB/mB,QAASA,IACzB,kBAACmnB,EAAD,CAAiBnnB,QAASA,IAC1B,kBAAC6nB,EAAA,EAAD,CACE7nB,QAASA,EACT4nB,WAAYA,GAAcrtB,EAAW+B,yB,ojBCR7C,IAAMwrB,EAA0BrmB,IAAOsI,IAAV,0EAAGtI,CAAH,8oBASzB0a,YATyB,KAYzBjF,YAZyB,MA6Fd6Q,EA/B6B,SAAC,GAAoB,IAAlBxC,EAAiB,EAAjBA,WAAiB,EACRha,mBAAS,GADD,mBACvDyc,EADuD,KAClCC,EADkC,KAE9D,OACE,kBAACH,EAAD,CAAyBzd,cAAY,qBACZ,IAAtBkb,EAAW5lB,OACR,KACA4lB,EAAW/lB,IAAI,SAACghB,EAAUrU,GAAX,OACb,kBAAC,IAAO+b,KAAR,CACEzX,GAAI+P,EAASpO,UACbvG,IAAK2U,EAAS/c,GACd7J,UAAWyjB,YAAG,OAAQ,CACpB8K,OAAQH,IAAwB7b,IAElCic,YAAa,kBAAMH,EAAuB9b,IAC1Ckc,QAAS,IACTC,QAAQ,EACRC,KAAK,EACLtT,MAAOuL,EAASpO,WAEhB,yBAAKxY,UAAU,UACb,0BAAMA,UAAS,mBAAc4mB,EAASgI,cAExC,yBAAK5uB,UAAU,eACb,kBAAC6uB,EAAA,EAAD,CAAUC,MAAO,GAAIlI,EAASpO,iB,2HCtF9C,IAAMuW,EAAqBlnB,IAAOsI,IAAV,yEAAGtI,CAAH,6EASlBmnB,EAA0BnnB,YAAO,MAAV,8EAAGA,CAAH,SACzByV,YADyB,MAIhB2R,EAAe1pB,IAAM8a,KAAa,gBAAGuG,EAAH,EAAGA,SAAU7mB,EAAb,EAAaA,SAAb,OAC7C,kBAAC,IAAOmvB,QAAR,CAAgB3tB,KAAMqlB,EAASpO,WAC7B,kBAACuW,EAAD,KACE,kBAACC,EAAD,KAA0BpI,EAASpO,WAClCzY,M,2ICPP,IAAMovB,EAAqBtnB,IAAOsI,IAAV,yEAAGtI,CAAH,0mBAgCA,qBAAGE,MAAkB+f,WAQvCxK,YAxCkB,MA8ClB8R,EAAoBvnB,IAAOwnB,IAAV,wEAAGxnB,CAAH,sIAUjBynB,EAA0BznB,IAAOsI,IAAV,8EAAGtI,CAAH,oLAGP,qBAAGE,MAAkBoP,UASrCoY,EAAoB1nB,IAAOsI,IAAV,wEAAGtI,CAAH,uOACD,qBAAGE,MAAkBoP,UA2F5BqY,EA5EMjqB,IAAM8a,KAAa,YAAwC,IAArC/H,EAAoC,EAApCA,OAAQyE,EAA4B,EAA5BA,SAAU0S,EAAkB,EAAlBA,YACrD9uB,EAAaC,cAEb8uB,EAAgBpX,EAAOqX,cAAgB,EAEvCrkB,EAAU/F,IAAMC,YAAY,WAChCiqB,EAAYnX,EAAOzO,GAAI6lB,IACtB,CAACA,EAAeD,EAAanX,EAAOzO,KAPsC,EASlD+lB,YAAmB,CAAErnB,YAAa,gBAAtDsnB,EATsE,oBAWvEC,EAAevqB,IAAMC,YAAY,WACSkqB,GAC5CG,EAAiB,CAAE/T,SAAUxD,EAAOzO,MAErC,CAAC6lB,EAAeG,EAAkBvX,EAAOzO,KAEtCkmB,EAAmBxqB,IAAMsN,QAAQ,GAuBvC,OAAO4K,YAAY,kBACjB,kBAAC0R,EAAD,CACE7jB,QAASA,EACTwkB,aAAcA,EACd9vB,UAAWyjB,YAAG,CACZ8K,OAAQ5tB,EAAWqvB,qBAAuB1X,EAAOzO,GACjDpH,SAAU9B,EAAW+B,qBAEvB+N,cAAA,wBAA8B6H,EAAOzO,KAEpCyO,EAAO2X,OACN,kBAACb,EAAD,CAAmBra,IAAKuD,EAAO2X,MAAOhb,IAAKqD,EAAOE,YAGpD,kBAAC8W,EAAD,MACA,kBAACC,EAAD,CAAmB9e,cAAA,+BAAqC6H,EAAOzO,KAC5DyO,EAAOuE,MAAM3E,gBArCG,WACrB,IAAMgY,EAAiBnT,EAAS3D,IAAId,EAAOzO,IAC3C,IAAKqmB,EAEH,OADAH,EAAiBnpB,SAAW,EACrB,KAET,IAAM5G,EAAYyjB,YAAG,WAAY,WAAY,CAC3C0M,MAAOD,EAAiB,GAAKH,EAAiBnpB,QAAU,EACxDwpB,OACsB,IAAnBF,GAAqD,IAA7BH,EAAiBnpB,UACZ,IAA9BmpB,EAAiBnpB,UAGrB,OADAmpB,EAAiBnpB,QAAUspB,EAEzB,yBACEje,IAAKie,EACLlwB,UAAWA,GAFb,UAGKkwB,EAHL,MAyBCG,GACD,wBAAIhV,MAAO/C,EAAOE,WAChB,kBAACqW,EAAA,EAAD,CAAUC,MAAO,EAAGre,cAAA,8BAAoC6H,EAAOzO,KAC5DyO,EAAOE,YAGZ,2BACE,kBAACqW,EAAA,EAAD,CACEC,MAAO,EACPre,cAAA,qCAA2C6H,EAAOzO,KAEjDyO,EAAO4U,wB,6hBC5JlB,IAAMoD,EAAiBzoB,IAAOsI,IAAV,qEAAGtI,CAAH,8DAEhB0a,YAFgB,KAGhBjF,YAHgB,KAUdiF,YAVc,KAcdjF,YAdc,MAgFL/X,MAAM8a,KA3Dc,SAAC,GAAwC,IAAtCja,EAAqC,EAArCA,QAASulB,EAA4B,EAA5BA,WAAYW,EAAgB,EAAhBA,UAAgB,EAC7B5rB,cAA7BC,EAD0D,EACjEmE,MAAmByrB,EAD8C,EAC9CA,OAAQ5mB,EADsC,EACtCA,KAE7BoT,ECtCD,SAA6B3W,GAAmB,IAC7Cf,EAASmrB,YACf,CACEpqB,QAASA,GAEX,CACEpB,MAAOoB,EACPmC,YAAa,eANTlD,KAD4C,EAWjCE,IAAMoM,SAAS,kBAAM8e,aAAW7qB,QAA5CmX,EAX6C,oBAyBpD,OAZI1X,GACFqrB,sBAAY,WACV3T,EAASuG,QACTje,EAAKP,MAAMiY,SAAS4T,QAAQ,YAAyB,IAAZ9mB,EAAW,EAArByO,OAAUzO,GAClCkT,EAAStS,IAAIZ,IAChBkT,EAASsJ,IAAIxc,EAAI,GAEnBkT,EAASsJ,IAAIxc,EAAIkT,EAAS3D,IAAIvP,GAAO,OAKpCkT,EDaU6T,CAAoBxqB,GAE/BknB,EAAmB9R,cACnBiU,EAAclqB,IAAMC,YACxB,SAACsW,EAAc+U,GACTlwB,EAAW+B,qBAGXqa,EAAStV,MAAQ8oB,EAAOO,cAC1BnnB,EAAKonB,iBACIF,EACTlwB,EAAWkb,UAAUC,IAErBnb,EAAWqwB,gBAAgBlV,GAC3BwR,EAAiBxR,MAGrB,CAACyU,EAAOO,cAAexD,EAAkB3sB,EAAYoc,EAAUpT,IAgCjE,OACE,kBAAC2mB,EAAD,CAAgB7f,cAAY,YAC1B,6BA9BE6b,EACK,kBAACW,EAAA,EAAD,CAAQlhB,UAAU,IAED,IAAtB4f,EAAW5lB,OAEX,4BACE,kBAAC,QAAD,2CAKJ,oCACG4lB,EAAW/lB,IAAI,SAAAghB,GAAQ,OACtB,kBAACqI,EAAD,CAAchd,IAAK2U,EAAS/c,GAAI+c,SAAUA,GACvCA,EAASqK,QAAQrrB,IAAI,SAAA0S,GAAM,OAC1B,kBAAC,EAAD,CACErG,IAAKqG,EAAOzO,GACZyO,OAAQA,EACRyE,SAAUA,EACV0S,YAAaA,c,2BE5EhByB,EAA4B,WAAO,IACtCvnB,EAASjJ,cAATiJ,KACR,OAAO8T,YAAY,kBACjB,kBAAC0T,EAAA,EAAD,CACE3tB,QAASmG,EAAKynB,sBACd1c,QAAS/K,EAAK0nB,eACdzc,WAAY1B,EAAA,EAAK,EAAD,2BAEfA,EAAA,EAAK,EAAD,iE,iNCHX,IAAMoe,EAAoBzpB,YAAOya,IAAPza,CAAH,KAUV0pB,EAAgC,WAC3C,IAAM5wB,EAAaC,cACnB,OAAO6c,YAAY,WACjB,OAAK9c,EAAW+B,mBAKd,kBAAC4uB,EAAD,CAAmBva,MAAM,WACvB,kBAAC,QAAD,6CACA,kBAAC,IAAD,CAAMF,GAAG,KACP,kBAAC,IAAD,KACE,kBAAC,QAAD,4BARC,Q,iCCbb,IAAM2a,EAAqB3pB,IAAOsI,IAAV,yEAAGtI,CAAH,sCAMX4pB,GAAenwB,YAAS,WAAO,IAAD,EACLZ,cAArBC,EAD0B,EACjCmE,MAAmB6E,EADc,EACdA,KADc,EAGFqC,YAAiBrL,EAAWsE,UAA3DE,EAHiC,EAGjCA,SAAU2T,EAHuB,EAGvBA,QAAS1M,EAHc,EAGdA,QAE3BD,YAAY,kBAAMxC,EAAKO,UAAU,kBAAMkC,MAEvC,IAAMuf,EAAaxmB,EAAS,SAAAE,GAAI,OAC9BA,EAAKqsB,eAAevgB,OAAO,SAAAwgB,GAAG,OAAIA,EAAIV,QAAQlrB,OAAS,MAGzD,OACE,oCACE,kBAAC,EAAD,MACA,kBAACyrB,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAmB7F,WAAYA,GAAcprB,OAG/C,kBAAC,EAAD,CACE6F,QAASzF,EAAWyF,QACpBulB,WAAYA,GAAcprB,IAC1B+rB,UAAWxT,Q,kFCnCN8Y,EAA4B,kBACvC,kBAACC,EAAA,EAAD,KACE,kBAACxwB,EAAA,EAAD,CACEE,KAAK,QACLa,KAAK,QACLqf,aAAa,QACbxf,YAAaiR,EAAA,EAAK,EAAD,c,UCNV4e,EAA2B,kBACtC,kBAACD,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAAC1wB,EAAA,EAAD,CACEE,KAAK,YACLkgB,aAAa,aACbxf,YAAaiR,EAAA,EAAK,EAAD,gBAEnB,kBAAC7R,EAAA,EAAD,CACEE,KAAK,WACLkgB,aAAa,cACbxf,YAAaiR,EAAA,EAAK,EAAD,kB,UCXZ8e,EAA2B,WACtC,IAAMC,EAAyB/e,EAAA,EAAK,EAAD,sCACnC,OACE,kBAAC2e,EAAA,EAAD,KACE,kBAACxwB,EAAA,EAAD,CACEE,KAAK,OACLa,KAAK,WACLH,YAAaiR,EAAA,EAAK,EAAD,QACjBmI,MAAO4W,EACPxwB,mBAAmB,IAErB,kBAACywB,EAAA,EAAD,KAAWD,K,oCCPJE,EAA4B,WACvC,IACMC,EAA6C,kBADrC,IAAIC,WAAS3nB,OAAO6Z,UAAU+N,WACfC,aAAahxB,KAEpCZ,EAAaC,cACb4xB,EAAcC,YAAuB,eAgB3C,OAdAzI,YAAW,WACT,IAAM0I,EAAS/xB,EAAWgyB,mBAExBD,GACA/xB,EAAWF,KAAKkJ,KAAKipB,eACQ,IAA7BJ,EAAY7kB,MAAM5H,SAElBysB,EAAYK,SAASH,GACjBA,GACFF,EAAYM,gBAMhB,kBAACjB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAAC1wB,EAAA,EAAD,CACEE,KAAK,cACLkgB,aAAc2Q,EAAiB,MAAQ,mBACvCnwB,YAAY,WAEd,kBAACZ,EAAA,EAAD,CACEE,KAAK,QACLa,KAAK,MACLqf,aAAa,eACbxf,YAAaiR,EAAA,EAAK,EAAD,SACjB8D,MAAO,CAAExG,MAAO,YC5C1B,gCAOO,IAAMuiB,EAAkB,kBAC7B,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,wLCASC,G,OAAqBnrB,IAAOsI,IAAV,wEAAGtI,CAAH,se,QCFzBorB,EAA0BprB,IAAOsI,IAAV,0EAAGtI,CAAH,oLAiBhBqrB,EAAoB5xB,YAC/B,YAQO,IAPL6xB,EAOI,EAPJA,UACA7qB,EAMI,EANJA,QACA8qB,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,gBACAlS,EAEI,EAFJA,WACA/Q,EACI,EADJA,YAEM1P,EAAaC,cACbiJ,EAAE,oBAAgBspB,EAAUtpB,IAElC,OACE,kBAACopB,EAAD,KACE,kBAACD,EAAD,KACE,kBAACxP,EAAA,EAAD,iBACMpC,EADN,CAEEvX,GAAIA,EACJzH,KAAK,WACLK,SAAU9B,EAAW+B,mBACrBH,SAAU+F,EACVirB,UAAW,SAAA3T,GACJtX,GACDsX,EAAGG,OAA4ByT,kBAC/BtgB,EAAA,EAAK,EAAD,mDAIV5H,QAAS,SAAAsU,GACLA,EAAGG,OAA4ByT,kBAAkB,KAErD/iB,cAAA,wBACE0iB,EAAUM,YAAc,YAAc,OAG1C,2BAAOC,QAAS7pB,GACbwpB,EACAF,EAAUM,aAAe,OAE5B,kBAACrR,EAAA,EAAD,iBAAY/R,EAAZ,CAAyB0G,MAAM,SAC5Bqc,EACGlgB,EAAA,EAAK,EAAD,WAAYygB,oBAChBzgB,EAAA,EAAK,EAAD,QAASygB,sBAGrB,kBAACC,EAAA,EAAD,CAAUpwB,QAAS4vB,EAAapzB,UAAU,eACvCszB,M,gCCzDJ,IAAMO,EAAwC,WACnD,IAAMlzB,EAAaC,cAEbkzB,EAAYC,cAHuC,EAIvBxuB,IAAMoM,WAJiB,mBAIlDvD,EAJkD,KAIvC4lB,EAJuC,KAQzDzuB,IAAMuI,UAAU,WACd,IAAMmmB,EAAuB5Q,mBAAS2Q,EAAc,KAcpD,IAAME,EAAUC,kBAAQ,WACtBF,EAbF,WAA6B,IAAD,EAC0BH,EAAU7lB,OAAtDjB,EADkB,EAClBA,UAAWG,EADO,EACPA,SAAUC,EADH,EACGA,YAAaC,EADhB,EACgBA,MAC1C,MAAO,CACL+mB,MAAO,CACLhuB,QAASzF,EAAWyF,QACpB4G,YACAG,WACAE,MAAM,GAAD,OAAKD,EAAYwW,QAAjB,OAA0BvW,EAAMuW,UAMpByQ,MAGvB,OAAO,WACLH,IACAD,EAAqB3Q,UAEtB,CAACwQ,EAAWnzB,IA/B0C,MAiC9B2zB,YAAwBlmB,EAAW,CAC5DpJ,MAAOoJ,IADD/I,EAjCiD,EAiCjDA,KAAMkvB,EAjC2C,EAiC3CA,SAKRplB,EAAa5J,IAAMsN,OAAwBtS,KAE7C8E,IACF8J,EAAWvI,QAAUvB,EAAK8J,YAG5B5J,IAAMuI,UAAU,WACVqB,EAAWvI,QAAQb,OAAS,IAAMpF,EAAWmhB,kBAC/CnhB,EAAW6zB,YA9C0C,MAkDlBC,YAAiBtlB,EAAWvI,SAA3D2I,EAlDiD,EAkDjDA,MAAOmlB,EAlD0C,EAkD1CA,oBAETC,EAAWpvB,IAAMC,YAAY,WAMjC,OALe2J,EAAWvI,QAAQ4Q,KAAK,SAAA2b,GACrC,OACEA,EAAUM,cAAgBlkB,EAAMqlB,oBAAoBnqB,IAAI0oB,EAAUtpB,MAGtD,iBAAcub,GAC7B,CAAC7V,IAEE3N,EAAQizB,YAAU,aAAc,CAAEF,aAQxC,OANA3K,YAAW,WAET,IAAM8K,EAAYC,MAAMC,KAAKzlB,EAAMqlB,qBACnChzB,EAAMixB,SAASiC,KAGbP,EAEA,kBAAC,QAAD,oFAOGG,EAAoB,CAAEO,aAAc/B,M,iHClFhCgC,EAAsC,SAAC,GAI7C,IAHLC,EAGI,EAHJA,YACAlhB,EAEI,EAFJA,SACAlU,EACI,EADJA,SAEMY,EAAaC,cACnB,OAAO6c,YAAY,kBACjB,kBAAC,IAAD,CACEyE,SAAUvhB,EAAWw0B,cAAgBA,EACrC7pB,QAAS,WACP3K,EAAW4Y,eAAe4b,GAC1BlhB,EAAStT,IAEX8P,cAAA,sBAA4B0kB,GAC5BC,oBAAmBz0B,EAAWw0B,cAAgBA,GAE7Cp1B,M,gCChBP,IAAMs1B,EAAoBxtB,IAAOsI,IAAV,oEAAGtI,CAAH,2NAmBVytB,EAAgC,SAAC,GAAgC,IAAD,IAA7BrhB,gBAA6B,MAAlBvO,IAAG6vB,SAAe,EAC3E,OACE,kBAACF,EAAD,KACE,kBAAC,EAAD,CACEF,YAAa3b,IAAiBgc,UAC9BvhB,SAAUA,GAEV,0BAAMjU,UAAU,uBAChB,kBAAC,QAAD,2BAEF,kBAAC,EAAD,CACEm1B,YAAa3b,IAAiBC,OAC9BxF,SAAUA,GAEV,0BAAMjU,UAAU,wBAChB,kBAAC,QAAD,yB,uGCpCKy1B,EAAqBn0B,YAChC,YAAkC,IAA/BvB,EAA8B,EAA9BA,SAAU0O,EAAoB,EAApBA,cACI9N,EAAeD,cAAtBoE,MACF2N,EAAa9R,EAAW8N,gBAAkBA,EAChD,OACE,kBAAC,IAAD,CACEhM,SAAU9B,EAAW+B,mBACrBwf,SAAUzP,EACVnH,QAAS,WACP3K,EAAW+0B,iBAAiBjnB,IAE9BgC,cAAA,6BAAmChC,IAEnC,kBAACknB,EAAD,CAAWC,KAAMnjB,IAChB1S,KAMT,SAAS41B,EAAT,GACE,OAD8C,EAA3BC,KAEjB,0BAAM51B,UAAU,0DAEhB,yBAAKA,UAAU,8C,gCC5BnB,IAAM61B,EAA2BhuB,IAAOsI,IAAV,+EAAGtI,CAAH,0SAuBjBiuB,EAAqBvwB,IAAM8a,KAAK,kBAC3C,kBAACwV,EAAD,KACE,kBAACJ,EAAD,CAAoBhnB,cAAeC,IAAgBG,OACjD,0BAAM7O,UAAU,wBACd,kBAAC,QAAD,sBAGJ,kBAACy1B,EAAD,CAAoBhnB,cAAeC,IAAgBC,MACjD,0BAAM3O,UAAU,kBACd,kBAAC,QAAD,0B,+/BCdR,IAAM+1B,EAAmBluB,IAAOsI,IAAV,uEAAGtI,CAAH,8BAMTomB,EAA+B,SAAC,GAItC,IAHL7nB,EAGI,EAHJA,QACA4nB,EAEI,EAFJA,WAEI,IADJgI,uBACI,SACEjuB,EAAQkuB,cACRC,EAAS3wB,IAAMsH,QAAQspB,EAAe,IACtCx1B,EAAaC,cAHf,ECpBC,WAA2B,IAAD,EACgBF,cAAhCC,EADgB,EACvBmE,MAAyB2W,EADF,EACJ1W,KACrB2W,EAASC,4BACP9a,EAAYC,cAAZD,QACFu1B,EAAa7wB,IAAMC,YACvB,SAACsS,GACCnX,EAAWktB,eAAe/V,IAE5B,CAACnX,IAR4B,EAWV01B,cAAdC,EAXwB,oBAazBC,EAAehxB,IAAMC,YACzB,SAACsS,GACC,IAAM1J,EAAsC,CAC1Cof,OAAQ1V,EACRzR,UAAWoV,EAAUpV,UACrB0V,aAAcN,EAAUM,cAE1Bua,EAAWloB,EAAD,GACR4N,mBAAoBwa,EAAqBpoB,IACtC5F,qBAGP,CAACiT,EAAW+a,EAAsBF,IAG9BG,EAAelxB,IAAMC,YAAY,WACrC3E,EAAQM,KAAK,aACZ,CAACN,IAEE61B,EAAgBnxB,IAAMC,YAAY,WACtC3E,EAAQM,KAAK,WACZ,CAACN,IAEJ,MAAO,CAAE4a,YAAW2a,aAAYG,eAAcE,eAAcC,iBAG5D,SAASF,EACPpoB,GAEA,IAAMxH,EAAU8U,EAAOQ,UACrB,CACEC,MAAOC,IACPhO,UAAW,CACThI,QAASzF,EAAWyF,QACpBC,UAAWoV,EAAUpV,UACrB0V,aAAcN,EAAUM,gBAG5B,GAEF,GAAKnV,EAAL,CAGA,IAAM+vB,EAAajxB,IAAGkxB,OAAOC,YAASzoB,EAAUof,SAChD,MAAO,CACLnR,WAAY,WACZ0Q,OAAO,EAAD,GACDnmB,EAAQ9B,MADP,CAEJyX,WAAY3V,EAAQ9B,MAAMyX,WAAa,EACvCvE,SAAS,EAAD,GACHpR,EAAQ9B,MAAMkT,SADX,CAENrK,OAAQ,IAEVkK,MAAOzJ,EAAU/H,UACbswB,EAAW/vB,EAAQ9B,MAAM+S,OACzBjR,EAAQ9B,MAAM+S,MAClBkF,SAAU3O,EAAU2N,aAChB4a,EAAW/vB,EAAQ9B,MAAMiY,UACzBnW,EAAQ9B,MAAMiY,cDxCpB+Z,GALFrb,EANE,EAMFA,UACA2a,EAPE,EAOFA,WACAG,EARE,EAQFA,aACAE,EATE,EASFA,aACAC,EAVE,EAUFA,cAGIK,EAAqBxxB,IAAMC,YAAY,WAC3C,GAAIwwB,GAAmBr1B,EAAW+B,mBAChC,OAAO,KAET,IAAMs0B,GAAoBhJ,GAAcrtB,EAAW+B,mBACnD,OACE,kBAAC6a,EAAA,EAAD,KACE,kBAAC,IAAD,CACEjS,QAAS0rB,EAAmBP,EAAeC,GAE1CM,EACC,kBAAC,QAAD,oBAEA,kBAAC,QAAD,wBAKP,CAAChB,EAAiBhI,EAAY0I,EAAeD,EAAc91B,IAExDs2B,EAAqB1xB,IAAMC,YAC/B,kBAAM,kBAAC,QAAD,8BACN,IAGIT,EAAOmyB,YAAc,CACzBC,OAAQ,CACNhgB,QAASpP,EAAMoP,QACfigB,SAAUrvB,EAAMoP,QAChBkgB,WAAY,QACZC,uBAAwBvvB,EAAM+f,WAEhCoO,SACAlI,aACAuJ,qBACAC,gBAAiBzvB,EAAM0vB,eACvBrB,aACAG,eACAQ,qBACAE,uBAGF1xB,IAAMuI,UACJ,kBACEqmB,kBAAQ,WACN1Y,EAAUic,cAAc3yB,EAAK4yB,MAAMjvB,SAAU3D,EAAK4yB,MAAMC,cAE5D,CAAC7yB,EAAK4yB,MAAOlc,IAGf,IAAMhb,EAAOC,cAEb,OAAO+c,YAAY,WAA4B,IAavC3Y,GAAQK,EAZO0yB,YACnB,CACEzxB,QAASA,EACTC,UAAWoV,EAAUpV,UACrB0V,aAAcN,EAAUM,c,qVAJC,EAOzB/W,MAAOvE,EAAKO,cAAgBoF,GACzBoC,oBARCrD,UAYe,SAAAE,GAAI,OAAIA,EAAKP,QAWpC,OATAS,IAAMuI,UAAU,WACVhJ,IACFC,EAAK+yB,cAAchzB,GACf2W,EAAUpV,WACZtB,EAAKgzB,YAAYjzB,MAKhB,kBAACixB,EAAD,KAAmBhxB,EAAKizB,iBAInC,SAAS7B,IACP,MAAO,CACL8B,WAAY,kBAAC,QAAD,yBACZC,OAAQ,kBAAC,QAAD,iBACRC,cAAe,SAAAC,GAAU,OACvB,kBAAC,QAAD,0DAAuCA,iBAEzCC,UAAW,kBAAC,QAAD,sBACXC,cAAe,kBAAC,QAAD,uBACfC,WAAY,kBAAC,QAAD,eACZC,aAAc,kBAAC,QAAD,iBACdxgB,SAAU,kBAAC,QAAD,cACVygB,IAAK,kBAAC,QAAD,YACLC,kBAAmB,SAAA7b,GAAK,OACtB,kBAAC,QAAD,gDAAkCA,e","file":"static/js/1.b32ff185.chunk.js","sourcesContent":["import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","export const ARRAY_EMPTY: RoA<any> = []\n","import { useRouterContext, useWhen } from '@speedlo/hooks'\n\nimport { useRoot } from '../app/useRoot'\nimport { useOrderModel } from './useOrderModel'\n\nexport function useEmptyOrderRedirect() {\n  const root = useRoot()\n  const orderModel = useOrderModel()\n  const { history } = useRouterContext()\n\n  useWhen(\n    () => root.initialized,\n    () => {\n      if (!orderModel.hasOrder) {\n        orderModel.log('redirect for empty order')\n        history.push('/')\n      }\n    },\n  )\n}\n","import { useXFieldForInput } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { FormFeedback, Input, Label } from 'reactstrap'\n\nimport { useOrderModel } from '../hooks/useOrderModel'\n\ninterface IProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  name: string\n  label?: string\n  errorForceDisplay?: boolean\n}\n\nexport const hiddenError = '<hidden>'\n\nexport const FormTextInput = observer<IProps>(\n  ({ name, label, errorForceDisplay = false, ...element }) => {\n    const orderModel = useOrderModel()\n    const [field, getFieldProps] = useXFieldForInput(name)\n\n    const labelNode = (\n      <Label for={name} hidden={!label}>\n        {element.placeholder || label}\n      </Label>\n    )\n\n    const showError = errorForceDisplay || field.touched\n\n    return (\n      <>\n        {labelNode}\n        <Input\n          {...getFieldProps()}\n          {...element}\n          type=\"text\"\n          valid={field.touched && !field.error}\n          invalid={showError && Boolean(field.error)}\n          disabled={orderModel.disableInteraction}\n        />\n        {showError && field.error !== hiddenError ? (\n          <FormFeedback valid={false} tooltip={false}>\n            {field.error}\n          </FormFeedback>\n        ) : null}\n      </>\n    )\n  },\n)\n","import { SECOND, useNow, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\n\nimport { FCompanyBranchStatusFragment } from '../graph/generated'\n\nexport type TStatus = FCompanyBranchStatusFragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\ninterface IProps {\n  status: TStatus\n  updateInterval?: number\n  openSoonThresholdInMinutes?: number\n  closeSoonThresholdInMinutes?: number\n  onRefresh?(): void\n}\n\nexport interface IShopStatus {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n  closedNote: Maybe<string>\n}\n\nexport function useShopStatus({\n  status,\n  updateInterval = 30 * SECOND,\n  openSoonThresholdInMinutes = 15,\n  closeSoonThresholdInMinutes = 30,\n}: IProps) {\n  const getNow = useNow()\n\n  useTimer({\n    interval: updateInterval,\n    enabled: updateInterval > 0,\n  })\n\n  const now = getNow()\n  const { isOpen, willCloseAt, willOpenAt } = status\n\n  let decision: TStatusDecision\n\n  const openingIn = willOpenAt ? differenceInMinutes(willOpenAt, now) : 0\n  const closingIn = willCloseAt ? differenceInMinutes(willCloseAt, now) : 0\n\n  if (isOpen) {\n    if (willCloseAt && closingIn <= 0) {\n      decision = 'Closed'\n    } else {\n      decision = isSoon(willCloseAt, closeSoonThresholdInMinutes, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    }\n  } else {\n    if (willOpenAt && openingIn <= 0) {\n      decision = 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openSoonThresholdInMinutes, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n  }\n\n  const closedNote = status.currentInterval\n    ? status.currentInterval.closedNote\n    : null\n\n  const shopStatus: IShopStatus = {\n    decision,\n    openingIn,\n    closingIn,\n    closedNote,\n  }\n  return shopStatus\n}\n\nfunction isSoon(dateTime: Maybe<Date>, threshold: number, now: Date) {\n  return dateTime\n    ? Math.abs(differenceInMinutes(dateTime, now)) <= threshold\n    : false\n}\n","import React from 'react'\n\nimport { FAddressFragment } from '../graph/generated'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address: Maybe<FAddressFragment>\n}\n\nexport const ShopAddress: React.FC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import {\n  addMinutes,\n  endOfMinute,\n  getMinutes,\n  startOfMinute,\n  subMinutes,\n} from 'date-fns'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport {\n  QDelayedOrderIntervals,\n  useMOrderDeliveryTime,\n  useQDelayedOrder,\n} from '../graph/generated'\nimport { RM } from '../tools/ramda'\n\nconst STEP_SIZE_MINUTES = 15\n\nexport function useDelayedOrder() {\n  const { order, cart } = useRoot()\n\n  const skip = !order.branchId\n\n  const { getStash } = useQDelayedOrder({ branchId: order.branchId! }, { skip })\n\n  const delayedOrder = getStash(data => data.delayedOrder)\n\n  const getSteps = React.useCallback(() => {\n    if (delayedOrder === null) {\n      return null\n    }\n    return createSteps(delayedOrder.intervals)\n  }, [delayedOrder])\n\n  const canBeDelayed = React.useCallback(() => {\n    return delayedOrder !== null && delayedOrder.intervals.length > 0\n  }, [delayedOrder])\n\n  const [updateOrder] = useMOrderDeliveryTime()\n\n  const changeDeliveryTime = React.useCallback(\n    (deliverAt: Maybe<Date>) => {\n      updateOrder({\n        orderId: order.orderId!,\n        withGoods: cart.withGoods,\n        deliverAt,\n      })\n      order.setDeliverAt(deliverAt)\n    },\n    [cart, order, updateOrder],\n  )\n\n  return {\n    getSteps,\n    canBeDelayed,\n    isEnabled: Boolean(delayedOrder) && delayedOrder!.enabled,\n    changeDeliveryTime,\n  }\n}\n\nfunction createSteps(intervals: RoA<QDelayedOrderIntervals>) {\n  return RM.flatten(intervals.map(createTimeSteps))\n}\n\nfunction createTimeSteps({ start, end }: QDelayedOrderIntervals) {\n  let current = startOfMinute(timeClampUp(start, STEP_SIZE_MINUTES))\n  const steps: Date[] = []\n  const endMinute = endOfMinute(subMinutes(end, 1))\n  do {\n    steps.push(current)\n    current = addMinutes(current, STEP_SIZE_MINUTES)\n  } while (current <= endMinute)\n  return steps\n}\n\nfunction timeClampUp(time: Date, minuteStep: number) {\n  return addMinutes(timeClampDown(time, minuteStep), minuteStep)\n}\n\nfunction timeClampDown(time: Date, minuteStep: number) {\n  return subMinutes(time, getMinutes(time) % minuteStep)\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ninterface IProps {\n  imageName: string\n  className?: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.FC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import { disableBatching } from '@speedlo/graphql'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useQPickupMap } from '../../../graph/generated'\n\nexport function usePickupMapQuery(branchId?: ID) {\n  const { business } = useRoot()\n  return useQPickupMap(\n    {\n      branchSpecific: !business.isBrand || !!branchId,\n      brandId: business.brandId,\n      branchId: branchId || business.branchId!,\n    },\n    {\n      skip: !business.isValid,\n      fetchPolicy: 'cache-first',\n      ...disableBatching,\n    },\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api'\nimport { Sentry } from '@speedlo/sentry'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { appConfig } from '../config'\nimport { TMapModel } from '../models/MapModel'\nimport Pacman from './Pacman'\n\ninterface IBaseMapProps {\n  model: TMapModel\n  children?: ReactNode | ReactNode[] | (() => ReactNode | ReactNode[])\n  isMobile?: boolean\n}\n\n/* global google */\n\nconst getMapOptions = (isMobile: boolean): google.maps.MapOptions => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    clickableIcons: false,\n    draggableCursor: 'default',\n    minZoom: 10,\n    zoomControlOptions: {\n      position: isMobile\n        ? google.maps.ControlPosition.RIGHT_CENTER\n        : google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nconst libraries = ['places']\n\nexport const BaseMap = observer<IBaseMapProps>(\n  ({ model, isMobile = false, children }) => {\n    const { user } = useRoot()\n\n    const { isLoaded, loadError, url: googleMapUrl } = useLoadScript({\n      id: 'script-loader',\n      version: 'weekly',\n      googleMapsApiKey: appConfig.googleMapsApi!,\n      libraries,\n      language: user.language,\n    })\n\n    const renderMap = () => {\n      return (\n        <GoogleMap\n          zoom={model.zoom}\n          center={model.center}\n          onCenterChanged={model.updatePosition}\n          onZoomChanged={model.updateZoom}\n          onClick={model.onClick}\n          onLoad={model.setMapRef}\n          onUnmount={() => model.setMapRef(null)}\n          options={getMapOptions(isMobile)}\n          mapContainerStyle={{\n            borderRadius: '0 0 0.5rem 0.5rem',\n            overflow: 'hidden',\n            height: isMobile ? '100%' : 'calc(100% - 3.75rem)',\n          }}\n        >\n          {typeof children === 'function' ? children() : children}\n        </GoogleMap>\n      )\n    }\n\n    const googleAvailable = Reflect.has(window, 'google')\n\n    if (loadError || (isLoaded && !googleAvailable)) {\n      if (loadError) {\n        Sentry.withScope(scope => {\n          scope.setExtras({ googleMapUrl })\n          Sentry.captureException(loadError)\n        })\n      }\n      return (\n        <h2>\n          <Trans>Cannot load map right now. Please try again later.</Trans>\n        </h2>\n      )\n    }\n\n    return isLoaded ? renderMap() : <Pacman noMargin={true} />\n  },\n)\n","import { useReaction } from '@speedlo/hooks'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useQFoodMenu } from '../../../graph/generated'\n\nexport function useFoodMenuQuery(branchId: MaybeID) {\n  const { user } = useRoot()\n  const result = useQFoodMenu(\n    { branchId: branchId! },\n    { skip: !branchId, fetchPolicy: 'cache-first' },\n  )\n\n  useReaction(\n    () => user.language,\n    () => {\n      result.refetch()\n    },\n  )\n\n  return result\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { Sentry } from '@speedlo/sentry'\nimport { createObjectValidation, useXForm, XFormProvider } from '@speedlo/xform'\nimport React from 'react'\nimport { Form } from 'reactstrap'\n\nimport { hiddenError } from '../../forms/FormTextInput'\nimport {\n  MSubmitOrderVariables,\n  PaymentGateEnum,\n  QOrderFormAgreementsAgreements,\n  useMSubmitOrder,\n} from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { useOrderFormCheck } from './hooks/useOrderFormCheck'\nimport { useOrderPayment } from './hooks/useOrderPayment'\n\nexport type TAgreement = QOrderFormAgreementsAgreements\n\nexport type OrderFormValues = ReturnType<typeof getInitialValues>\n\nexport const NOTE_MAX_LENGTH = 50\n\nexport const OrderFormSetup: React.FC = ({ children }) => {\n  const orderModel = useOrderModel()\n  const { history } = useRouterContext()\n\n  const { executeGoPayPayment, paymentErrorModal } = useOrderPayment()\n\n  const [submitOrder] = useMSubmitOrder()\n\n  const validationSchema = React.useMemo(\n    () =>\n      createObjectValidation(Yup => ({\n        firstname: Yup.string().required(hiddenError),\n        lastname: Yup.string().required(hiddenError),\n        phonePrefix: Yup.string().required(hiddenError),\n        phone: Yup.string()\n          .required(hiddenError)\n          .matches(/\\d+/, i18n.t`Only numbers allowed for phone`),\n        email: Yup.string()\n          .required(hiddenError)\n          .email(i18n.t`Invalid email format`),\n        note: Yup.string()\n          .notRequired()\n          .max(\n            NOTE_MAX_LENGTH,\n            ({ value }) =>\n              i18n.t`Maximum length is ${i18n.plural({\n                value: NOTE_MAX_LENGTH,\n                other: '# characters',\n              })}. Typed ${i18n.plural({\n                value: value.length,\n                one: '# character',\n                other: '# characters',\n              })}`,\n          ),\n      })),\n    [],\n  )\n\n  const { isOrderInCart } = useOrderFormCheck()\n\n  React.useEffect(() => {\n    if (orderModel.hasOrder && !isOrderInCart) {\n      history.replace('/')\n    }\n  })\n\n  const onSubmit = React.useCallback(\n    async (values: OrderFormValues) => {\n      orderModel.submitStarted()\n\n      const variables = getSubmitVariables(values, orderModel)\n      const result = await submitOrder(variables)\n\n      if (!result) {\n        orderModel.submitFailed()\n        return\n      }\n\n      const { userErrors, gopayUrl } = result.submitOrder\n      if (userErrors.length) {\n        orderModel.submitFailed(userErrors)\n        return\n      }\n\n      if (orderModel.paymentMethod === PaymentGateEnum.Cash) {\n        orderModel.submitFinished()\n        history.replace(`/finish`)\n        return\n      }\n\n      if (orderModel.paymentMethod === PaymentGateEnum.Gopay) {\n        if (gopayUrl) {\n          executeGoPayPayment(gopayUrl).finally(() => {\n            orderModel.submitFinished()\n          })\n        } else {\n          Sentry.withScope(scope => {\n            scope.setExtras({ variables })\n            Sentry.captureMessage('No gopayUrl received for GoPay payment')\n          })\n          orderModel.submitFailed()\n        }\n      } else {\n        Sentry.withScope(scope => {\n          scope.setExtras({ variables })\n          Sentry.captureMessage(\n            `Unknown payment mode ${orderModel.paymentMethod}`,\n          )\n        })\n        orderModel.submitFailed()\n      }\n    },\n    [executeGoPayPayment, history, orderModel, submitOrder],\n  )\n\n  const xform = useXForm({\n    initialValues: getInitialValues(),\n    validationSchema,\n    onSubmit,\n    onFormChanges: console.log,\n  })\n\n  React.useEffect(() => {\n    orderModel.root.cart.setOrderSubmitting(xform.state.isSubmitting)\n  }, [xform.state, orderModel.root.cart])\n\n  return (\n    <>\n      {paymentErrorModal}\n      <XFormProvider value={xform}>\n        <Form onSubmit={xform.handlers.handleSubmit}>{children}</Form>\n      </XFormProvider>\n    </>\n  )\n}\n\nfunction getInitialValues() {\n  return {\n    firstname: '',\n    lastname: '',\n    email: '',\n    phone: '',\n    phonePrefix: '',\n    note: '',\n    agreements: [] as RoA<ID>,\n  }\n}\n\nfunction getSubmitVariables(\n  values: OrderFormValues,\n  orderModel: TOrderModel,\n): MSubmitOrderVariables {\n  return {\n    orderId: orderModel.orderId!,\n    customer: {\n      firstName: values.firstname,\n      lastName: values.lastname,\n      emails: [{ email: values.email }],\n      phones: [{ phone: `${values.phonePrefix}${values.phone}` }],\n    },\n    note: values.note,\n    tips: orderModel.tips,\n    paymentGate: orderModel.paymentMethod as PaymentGateEnum,\n    deliverAt: orderModel.deliverAt,\n    agreements: values.agreements,\n  }\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { formatTime } from '../../helpers/formats'\n\ninterface IProps extends ButtonProps {\n  time: Date\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Time = styled.div`\n  font-size: 1.2rem;\n`\n\nexport const TimePickerButton: React.FC<IProps> = ({\n  time,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"10rem\"\n    data-testid={`timePickerButton__${time.getTime()}`}\n    {...buttonProps}\n  >\n    <Time>{formatTime(time)}</Time>\n  </PickerButton>\n)\n","import { DateFormat } from '@lingui/macro'\nimport { useNow } from '@speedlo/hooks'\nimport { isAfter, startOfDay } from 'date-fns/fp'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { DF } from '../../tools/datefns'\nimport { RM } from '../../tools/ramda'\nimport { TimePickerButton } from './TimePickerButton'\n\ninterface IProps {\n  steps: RoA<Date>\n  initialTime?: Maybe<Date>\n  onStepChange(step: Date): void\n}\n\nconst TimePickerContainer = styled.div`\n  margin-top: 1rem;\n`\n\nconst TimePickerDay = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: left;\n  margin: 0 0 0.2rem 0.2rem;\n`\n\nexport const TimePicker: React.FC<IProps> = ({\n  steps: rawSteps,\n  initialTime,\n  onStepChange,\n}) => {\n  const getNow = useNow()\n\n  const steps = React.useMemo(() => {\n    const filtered = rawSteps.filter(isAfter(getNow()))\n    return RM.sort(RM.ascend(RM.invoker(0, 'getTime')), filtered)\n  }, [getNow, rawSteps])\n\n  const days = React.useMemo(() => {\n    return RM.uniq(RM.map(startOfDay, steps)) as Date[]\n  }, [steps])\n\n  const [stepIdx, setStepIdx] = React.useState(0)\n\n  React.useEffect(() => {\n    if (initialTime) {\n      setStepIdx(DF.closestIndexTo(initialTime, steps))\n    }\n  }, [initialTime, steps])\n\n  return (\n    <TimePickerContainer>\n      {days.map(day => (\n        <Fragment key={day.getDate()}>\n          <TimePickerDay>\n            <DateFormat\n              value={day}\n              format={{ month: 'long', day: 'numeric', weekday: 'long' }}\n            />\n          </TimePickerDay>\n          {steps.map((step, idx) =>\n            DF.isEqual(day, DF.startOfDay(step)) ? (\n              <TimePickerButton\n                key={step.getTime()}\n                time={step}\n                isSelected={idx === stepIdx}\n                canBeSelected={true}\n                onClick={() => {\n                  setStepIdx(idx)\n                  onStepChange(step)\n                }}\n              />\n            ) : null,\n          )}\n        </Fragment>\n      ))}\n    </TimePickerContainer>\n  )\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\nimport { useDelayedOrder } from '../../hooks/useDelayedOrder'\nimport { i18n } from '../../i18n'\nimport { TimePicker } from '../timePicker/TimePicker'\n\nexport const OrderTimePicker = observer(() => {\n  const { order } = useRoot()\n\n  const { getSteps, canBeDelayed, changeDeliveryTime } = useDelayedOrder()\n\n  const selectedTime = React.useRef<Maybe<Date>>(order.deliverAt)\n  const onStepChange = React.useCallback((step: Date) => {\n    selectedTime.current = step\n  }, [])\n\n  const onConfirmAndClose = () => {\n    const time = selectedTime.current\n    changeDeliveryTime(time)\n    order.closeTimePicker()\n  }\n\n  const renderModalContent = () => {\n    if (!canBeDelayed()) {\n      return (\n        <Trans>\n          It's not possible to pick a specific order time at this moment.\n        </Trans>\n      )\n    }\n\n    return (\n      <TimePicker\n        steps={getSteps()!}\n        initialTime={order.deliverAt}\n        onStepChange={onStepChange}\n      />\n    )\n  }\n\n  const renderBottomLine = () => {\n    if (!canBeDelayed()) {\n      return null\n    }\n    return (\n      <>\n        <div className=\"modal__body__button__strip\" />\n        <PrimaryButton\n          size=\"md\"\n          onClick={onConfirmAndClose}\n          className=\"modal__body__button\"\n        >\n          <Trans>Confirm time</Trans>\n        </PrimaryButton>\n      </>\n    )\n  }\n\n  const header = order.usingDeliveryOrderMethod\n    ? i18n.t`Deliver at what time?`\n    : i18n.t`When you will pickup the order?`\n\n  return (\n    <Modal\n      isOpen={order.timePickerOpen}\n      toggle={order.closeTimePicker}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader\n        toggle={order.closeTimePicker}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>{header}</span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderModalContent()}</div>\n        <div className=\"modal__body__button__line\">{renderBottomLine()}</div>\n      </ModalBody>\n    </Modal>\n  )\n})\n","import { LanguagePicker as LangPick } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\n\ninterface IProps {\n  className?: string\n}\n\nexport const LanguagePicker = observer<IProps>(({ className }) => {\n  const { business, user } = useRoot()\n  if (!business.isValid) {\n    return null\n  }\n  return (\n    <LangPick\n      availableLanguages={business.branch!.supportedLanguages}\n      selectedLanguage={user.language}\n      onChange={language => {\n        if (language !== user.language) {\n          user.selectLanguage(language)\n          // TODO: Figure out way to flush model persistence\n          setTimeout(() => {\n            window.location.reload()\n          }, 300)\n        }\n      }}\n      className={className}\n      backgroundColor=\"white\"\n      arrowColor=\"#5A5A5A\"\n    />\n  )\n})\n","import { Plural, Trans } from '@lingui/react'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport { PrimaryButton } from '../../common/Buttons'\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useDelayedOrder } from '../../hooks/useDelayedOrder'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n}\n\nexport const ShopClosingTimeModal = observer<IProps>(({ status }) => {\n  const { user, order } = useRoot()\n  const { decision, openingIn, closedNote } = useShopStatus({\n    status,\n    // Do not want update here as it would be showing modal every time :)\n    updateInterval: 0,\n  })\n\n  const { canBeDelayed, isEnabled } = useDelayedOrder()\n\n  if (order.isDelayed) {\n    // don't show modal if user has previous chosen time of delivery\n    return null\n  }\n\n  return (\n    <AlertModal\n      isOpen={\n        (decision === 'Closed' || decision === 'OpeningSoon') &&\n        !user.closingTimeAlertHidden\n      }\n      onClose={user.hideClosingTime}\n      headerText={i18n.t`We are closed right now`}\n    >\n      <p>\n        {closedNote ||\n          i18n.t`We're sorry, but we do not accept new orders at this time.`}\n      </p>\n      {decision === 'OpeningSoon' && (\n        <p>\n          <Trans>\n            You can prepare your order because we are{' '}\n            <Plural\n              value={openingIn}\n              one=\"opening in 1 minute\"\n              other=\"opening in # minutes\"\n            />\n            !\n          </Trans>\n        </p>\n      )}\n      {isEnabled && canBeDelayed() && (\n        <PrimaryButton\n          onClick={() => {\n            user.hideClosingTime()\n            order.openTimePicker()\n          }}\n        >\n          <Trans>Select preorder time</Trans>\n        </PrimaryButton>\n      )}\n    </AlertModal>\n  )\n})\n","import './ShopHeaderIcons.css'\n\nimport { getLogo } from '@speedlo/assets'\nimport React from 'react'\n\nexport const ShopHeaderIcons = () => (\n  <>\n    <img\n      src={getLogo('doveze')}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={getLogo('mastercard')}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={getLogo('visa')}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={getLogo('gopay')}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </>\n)\n","import { DateFormat, Plural, Trans } from '@lingui/react'\nimport { isSameDay } from 'date-fns'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n  deliveryTime: number\n  pickupTime: number\n}\n\nexport const StyledStatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nexport const StyledStatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.FC<IProps> = ({\n  status,\n  deliveryTime,\n  pickupTime,\n}) => {\n  const { order } = useRoot()\n  const { decision, openingIn, closingIn } = useShopStatus({\n    status,\n  })\n\n  if (!status) {\n    return null\n  }\n\n  if (status.isOpen === false) {\n    if (!status.willOpenAt) {\n      return (\n        <StyledStatusDisplayClosed>\n          <Trans>We are closed until further notice</Trans>\n        </StyledStatusDisplayClosed>\n      )\n    }\n    const closestBH = status.businessHours[0]\n    if (closestBH && closestBH.closedNote) {\n      return (\n        <StyledStatusDisplayClosed>\n          {closestBH.closedNote}\n        </StyledStatusDisplayClosed>\n      )\n    }\n  }\n\n  switch (decision) {\n    case 'Open':\n      let timingDisplay\n      if (order.usingDeliveryOrderMethod && status.defaultDeliveryTimeEnabled) {\n        timingDisplay = (\n          <Trans>We are delivering in {deliveryTime} minutes</Trans>\n        )\n      }\n      if (order.usingPickupOrderMethod && status.defaultPickupTimeEnabled) {\n        timingDisplay = (\n          <Trans>We can prepare your order in {pickupTime} minutes</Trans>\n        )\n      }\n      return (\n        <Route\n          path=\"/order\"\n          render={() => (\n            <StyledStatusDisplayOpen data-testid=\"statusDisplayOpen\">\n              {timingDisplay}\n            </StyledStatusDisplayOpen>\n          )}\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <StyledStatusDisplayClosed>\n          <Plural\n            value={openingIn}\n            one=\"Opening in 1 minute\"\n            other=\"Opening in # minutes\"\n          />\n        </StyledStatusDisplayClosed>\n      )\n    case 'ClosingSoon':\n      return (\n        <StyledStatusDisplayOpen>\n          <Plural\n            value={closingIn}\n            one=\"Closing in 1 minute\"\n            other=\"Closing in # minutes\"\n          />\n        </StyledStatusDisplayOpen>\n      )\n    case 'Closed':\n      return (\n        <StyledStatusDisplayClosed>\n          {status.willOpenAt ? (\n            <Trans>We will open at {formatOpenTime(status.willOpenAt)}</Trans>\n          ) : (\n            <Trans>Closed</Trans>\n          )}\n        </StyledStatusDisplayClosed>\n      )\n  }\n}\n\nexport function formatOpenTime(opetAt: Date) {\n  const nowDate = new Date()\n  let format: Intl.DateTimeFormatOptions = {\n    hour: 'numeric',\n    minute: 'numeric',\n  }\n  if (!isSameDay(opetAt, nowDate)) {\n    format = {\n      ...format,\n      weekday: 'long',\n    }\n  }\n  return <DateFormat value={opetAt} format={format} />\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { QOrderFinishQuery } from '../../graph/generated'\n\ninterface IProps {\n  finish: QOrderFinishQuery\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.FC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => {\n  const renderHomeButton = () => (\n    <Link to=\"/\">\n      <PrimaryButton className=\"finish__view__submit__line__button\">\n        <Trans>Back to home page</Trans>\n      </PrimaryButton>\n    </Link>\n  )\n  return (\n    <>\n      <Desktop>\n        {(androidApp || iosApp) && (\n          <div className=\"finish__view__apps__propagation\">\n            <div className=\"finish__view__apps__propagation__header\">\n              <Trans>What about mobile app?</Trans>\n            </div>\n            <div className=\"finish__view__apps__propagation__description\">\n              <Trans>\n                We have prepared mobile app, so you could order from anywhere!\n              </Trans>\n            </div>\n\n            {androidApp && (\n              <a href={androidApp.url}>\n                <Button\n                  className=\"finish__view__apps__propagation__button\"\n                  color=\"secondary\"\n                >\n                  Google Play\n                </Button>\n              </a>\n            )}\n\n            {iosApp && (\n              <a href={iosApp.url}>\n                <Button\n                  className=\"finish__view__apps__propagation__button\"\n                  color=\"secondary\"\n                >\n                  App Store\n                </Button>\n              </a>\n            )}\n          </div>\n        )}\n        <CenteredButtonContainer>{renderHomeButton()}</CenteredButtonContainer>\n      </Desktop>\n\n      <Mobile>\n        <div\n          className=\"finish__view__submit__line\"\n          style={{ textAlign: 'center' }}\n        >\n          <div className=\"finish__view__submit__line__strip\" />\n          {renderHomeButton()}\n        </div>\n      </Mobile>\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport {\n  FOrderFinishedFragment,\n  FOrderFinishedItems,\n  FOrderFinishedOrderPayments,\n  PaymentTypeEnum,\n} from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { RM } from '../../tools/ramda'\n\ninterface IProps {\n  order: FOrderFinishedFragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.FC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = (paymentType: PaymentTypeEnum) => (\n  payment: FOrderFinishedOrderPayments,\n) => payment.paymentMethod.paymentType.enum === paymentType\n\nfunction getPaymentInfo({ orderPayments }: FOrderFinishedFragment) {\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Credit))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({ orderPayments, totalSum }: FOrderFinishedFragment) {\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Credit))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: FOrderFinishedItems) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { QOrderFinishCompanyBranch } from '../../graph/generated'\n\ninterface IProps {\n  branch: QOrderFinishCompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.FC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import { useRoot } from '../../../app/useRoot'\nimport { useQOrderFinish } from '../../../graph/generated'\n\nexport function useFinishViewLoader() {\n  const { order } = useRoot()\n\n  const { data, loading } = useQOrderFinish(\n    {\n      branchId: order.branchId!,\n      orderId: order.orderId!,\n    },\n    {\n      skip: !(order.branchId && order.orderId),\n    },\n  )\n\n  return loading || !data ? null : data\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { Base64 } from 'js-base64'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { DeliveryTypeEnum } from '../graph/generated'\n\n/**\n * Side effects for handling url params coming from official portal.\n *\n * Two modes:\n *   ?pickup ... Show pickup map by default\n *   ?address=value ... Use given address as search value\n */\nexport function usePortalNavigation(isMobile = false) {\n  const { history } = useRouterContext()\n  const { order, location } = useRoot()\n\n  const info = React.useMemo(() => {\n    const url = new window.URL(window.location.href)\n    const isPickup = url.searchParams.has('pickup')\n    const address = url.searchParams.get('address')\n    return {\n      isPickup,\n      searchAddress: address && decodeAddress(address),\n    }\n  }, [])\n\n  React.useEffect(\n    function handlePickup() {\n      if (info.isPickup) {\n        order.useOrderMethod(DeliveryTypeEnum.Pickup)\n        if (isMobile) {\n          history.push('/pickup')\n        }\n      }\n    },\n    [order, isMobile, history, info.isPickup],\n  )\n\n  React.useEffect(\n    function handleDelivery() {\n      if (info.searchAddress) {\n        location.resetResolution()\n        location.setInitialSearchAddress(info.searchAddress)\n        if (isMobile) {\n          history.push('/delivery')\n        }\n      }\n    },\n    [history, info.searchAddress, isMobile, location],\n  )\n}\n\nfunction decodeAddress(encodedAddress: string) {\n  try {\n    return Base64.decode(encodedAddress)\n  } catch {\n    return null\n  }\n}\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.FC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { useGoogleMap } from '@react-google-maps/api'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { GeoPoint, gpsToLatLngLit } from '../../../helpers/gps'\n\nexport function useMapPanning() {\n  const { map } = useRoot()\n  const mapRef = useGoogleMap()\n\n  const prevGps = React.useRef<Maybe<GeoPoint>>(null)\n\n  const panToGps = (gps: GeoPoint) => {\n    if (!mapRef) {\n      map.log('cannot pan map as ref is not available')\n      return\n    }\n    const latLng = gpsToLatLngLit(gps)\n    map.log('panning to %j', latLng)\n    mapRef.panTo(latLng)\n    prevGps.current = gps\n  }\n\n  return (gps: GeoPoint) => {\n    const prev = prevGps.current\n    if (\n      !prev ||\n      (prev.latitude !== gps.latitude && prev.longitude !== gps.longitude)\n    ) {\n      panToGps(gps)\n    }\n  }\n}\n","import { OverlayView } from '@react-google-maps/api'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { FPickupBranchFragment } from '../graph/generated'\nimport { gpsToLatLng } from '../helpers/gps'\n\ninterface IProps {\n  branch: FPickupBranchFragment\n  onClick?: () => void\n}\n\nconst StyledPickupMapMarker = styled.div`\n  cursor: pointer;\n  color: white;\n  opacity: 0.5;\n\n  &::before {\n    font-size: 1.3rem;\n    margin: 0;\n    padding: 0.5rem;\n    background-color: #ff0000;\n    border-radius: 1rem;\n  }\n`\n\nexport const MapBranchMarker: React.FC<IProps> = ({ branch, onClick }) => {\n  return (\n    <OverlayView\n      position={gpsToLatLng(branch.gps)}\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n      getPixelPositionOffset={(width, height) => ({\n        x: width === 0 ? -12 : -(width / 2),\n        y: height === 0 ? -12 : -(height / 2),\n      })}\n    >\n      <StyledPickupMapMarker\n        className=\"flaticon-restaurant\"\n        data-testid=\"PickupMapMarker\"\n        title={branch.name}\n        onClick={onClick}\n      />\n    </OverlayView>\n  )\n}\n","import { disableBatching, useApolloClient } from '@speedlo/graphql'\n\nimport { useRoot } from '../app/useRoot'\nimport {\n  FCartGoodsItems,\n  FCartPresencePresence,\n  FRecipeFragment,\n  FRecipeFragmentDoc,\n  MAddToCartMutation,\n  MAddToCartVariables,\n  QCartDocument,\n  QCartQuery,\n  QCartVariables,\n  useMAddToCart,\n} from '../graph/generated'\n\nlet counter = 1\n\nconst NO_SIDEDISHES = []\n\nexport function useAddToCart() {\n  const { order, cart: cartModel } = useRoot()\n  const client = useApolloClient()\n\n  const [addToCart] = useMAddToCart(disableBatching)\n\n  const executeAddToCart = (\n    recipeId: ID,\n    sideDishes: RoA<ID> = NO_SIDEDISHES,\n  ) => {\n    const variables: MAddToCartVariables = {\n      orderId: order.orderId!,\n      recipeId,\n      sideDishes,\n      withGoods: cartModel.withGoods,\n      withPresence: cartModel.withPresence,\n    }\n    return addToCart(variables, {\n      optimisticResponse: makeOptimisticResponse(variables),\n    })\n  }\n\n  return executeAddToCart\n\n  function makeOptimisticResponse(\n    variables: MAddToCartVariables,\n  ): MAddToCartMutation | undefined {\n    const current = client.readQuery<QCartQuery, QCartVariables>(\n      {\n        query: QCartDocument,\n        variables: {\n          orderId: variables.orderId,\n          withGoods: cartModel.withGoods,\n          withPresence: cartModel.withPresence,\n        },\n      },\n      true,\n    )\n    if (!current) {\n      return undefined\n    }\n    const id = `-${counter++}`\n    const addPresence = (): RoA<FCartPresencePresence> => {\n      if (!cartModel.withPresence) {\n        return current.order.presence\n      }\n      return [\n        ...current.order.presence,\n        {\n          __typename: 'OrderRecipe',\n          id,\n          recipe: {\n            __typename: 'Recipe',\n            id: variables.recipeId,\n          },\n        },\n      ]\n    }\n    const addItem = (): RoA<FCartGoodsItems> => {\n      if (!cartModel.withGoods) {\n        return current.order.items\n      }\n      const recipe = client.readFragment<FRecipeFragment>(\n        {\n          id: `Recipe-${variables.recipeId}`,\n          fragment: FRecipeFragmentDoc,\n          fragmentName: 'FRecipe',\n        },\n        true,\n      )\n      if (!recipe) {\n        return current.order.items\n      }\n      return [\n        ...current.order.items,\n        {\n          __typename: 'OrderRecipe',\n          automatic: false,\n          id,\n          price: {\n            __typename: 'PriceConverted',\n            formattedValue: '???',\n            value: -1,\n          },\n          recipe,\n          sideDishes: [],\n        },\n      ]\n    }\n    return {\n      __typename: 'Mutation',\n      add: {\n        ...current.order,\n        countWares: current.order.countWares + 1,\n        totalSum: {\n          ...current.order.totalSum,\n          value: -1,\n        },\n        items: addItem(),\n        presence: addPresence(),\n      },\n    }\n  }\n}\n","import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\ninterface IProps extends ButtonProps {\n  isSelected: boolean\n  width: string\n}\n\nconst PickerButtonStyled = styled(({ isSelected, width, ...props }) => (\n  <Button {...props} />\n))`\n  border-radius: 0.6rem;\n  margin: 0.5rem;\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n  width: ${props => props.width};\n  @media (max-width: 370px) {\n    width: 100%;\n  }\n  &.btn-outline-secondary {\n    color: #2e2e2e;\n    border-color: #d4d4d4;\n  }\n  &.btn-outline-secondary.active {\n    color: white;\n  }\n`\n\nexport const PickerButton: React.FC<IProps> = ({\n  isSelected,\n  onSelect,\n  children,\n  ...buttonProps\n}) => {\n  return (\n    <PickerButtonStyled isSelected={isSelected} {...buttonProps}>\n      {children}\n    </PickerButtonStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from './Responsive'\n\ninterface IProps {}\n\nconst StyledButtonStrip = styled.div`\n  margin: 0;\n  margin-bottom: 1rem;\n  text-align: center;\n  position: sticky;\n  bottom: 1rem;\n\n  ${mediaMobile`\n      position: fixed;\n      bottom: 0;\n      width: 100%;\n  `}\n\n  div.strip {\n    background-color: #d4d4d4;\n    position: relative;\n    top: 3.2rem;\n    z-index: 0;\n    height: 1.6rem;\n    width: 100%;\n  }\n  button {\n    margin: 1rem;\n    padding: 0.8rem 1.6rem;\n    z-index: 1;\n    position: relative;\n  }\n`\n\nexport const ButtonStrip: React.FC<IProps> = ({ children }) => {\n  return (\n    <StyledButtonStrip>\n      <div className=\"strip\" />\n      {children}\n    </StyledButtonStrip>\n  )\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../app/useRoot'\n\nexport const OrderErrorModal: React.FC = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <Modal\n      isOpen={order.hasErrors}\n      toggle={order.clearErrors}\n      className=\"modal__container\"\n    >\n      <ModalHeader\n        toggle={order.clearErrors}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Order can not be completed</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {order.hasErrors &&\n            order.submitErrors!.map((error, idx) => (\n              <div key={idx}>{error}</div>\n            ))}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <Button\n            className=\"modal__body__button\"\n            color=\"primary\"\n            onClick={order.clearErrors}\n          >\n            <Trans>I understand</Trans>\n          </Button>\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  ))\n}\n","import { fakerCZ } from '@speedlo/testing/dist/faker'\nimport { useXFormCtx } from '@speedlo/xform'\nimport React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { NOTE_MAX_LENGTH, OrderFormValues } from './OrderFormSetup'\n\nexport const OrderFormAutoFill: React.FC = () => {\n  const orderModel = useOrderModel()\n  const xform = useXFormCtx<OrderFormValues>()\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n  return (\n    <SecondaryButton\n      style={{ marginBottom: '0.5rem' }}\n      onClick={() => {\n        const values = {\n          firstname: fakerCZ.name.firstName(),\n          lastname: fakerCZ.name.lastName(),\n          email: fakerCZ.internet.email(),\n          phone: fakerCZ.phone.phoneNumberFormat(0).replace(/\\s/g, ''),\n          phonePrefix: '+420',\n          note: fakerCZ.lorem.sentence().slice(0, NOTE_MAX_LENGTH - 1),\n          agreements: [],\n        }\n        Object.keys(values).forEach(key => {\n          xform.state.touched.add(key)\n        })\n        xform.api.mergeValues(values)\n        xform.api.validateForm()\n\n        if (orderModel.usingPaymentMethodWithTips) {\n          orderModel.setTips(15)\n        }\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  )\n}\n","import { OrderStateCategoryEnum, useQOrderForm } from '../../../graph/generated'\nimport { useOrderModel } from '../../../hooks/useOrderModel'\n\nexport function useOrderFormCheck() {\n  const orderModel = useOrderModel()\n\n  const { getStash } = useQOrderForm(\n    { orderId: orderModel.orderId! },\n    { skip: !orderModel.orderId },\n  )\n\n  return (\n    getStash(data => ({\n      isOrderInCart:\n        data.order.orderStateCategory === OrderStateCategoryEnum.InCart,\n      hasItemsInCart: data.order.countWares > 0,\n    })) || {\n      isOrderInCart: true,\n      hasItemsInCart: true,\n    }\n  )\n}\n","import { disableBatching } from '@speedlo/graphql'\nimport { useRouterContext } from '@speedlo/hooks'\nimport { useGoPay } from '@speedlo/payments'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useLazyQOrderPaymentStatus } from '../../../graph/generated'\nimport { useAlertModal } from '../../../hooks/useAlertModal'\nimport { i18n } from '../../../i18n'\n\nexport function useOrderPayment() {\n  const { order: orderModel, business } = useRoot()\n  const { history } = useRouterContext()\n\n  const [paymentErrorModal, alertPaymentError] = useAlertModal()\n\n  const [executePaymentStatusCheck] = useLazyQOrderPaymentStatus({\n    fetchPolicy: 'no-cache',\n  })\n\n  const onFinish = React.useCallback(() => {\n    history.replace('/finish')\n  }, [history])\n\n  const onError = React.useCallback(\n    errors => {\n      const phone = business.branch!.phone\n      alertPaymentError(\n        i18n.t`Payment status check has failed`,\n        errors.length\n          ? errors.join('<br />')\n          : i18n.t`We were unable to verify status of your payment. Please contact operator using number ${phone}`,\n      )\n    },\n    [alertPaymentError, business],\n  )\n\n  const queryPaymentStatus = React.useCallback(\n    (orderId = orderModel.orderId!, userToken) => {\n      if (!orderId) {\n        return Promise.resolve(null)\n      }\n      orderModel.goPayStatusCheck(true)\n      return executePaymentStatusCheck(\n        { orderId },\n        {\n          fetchPolicy: 'no-cache',\n          context: {\n            invalidateWithToken: userToken,\n            ...disableBatching.context,\n          },\n        },\n      )\n        .then(result => {\n          return result ? result.status : null\n        })\n        .finally(() => {\n          orderModel.goPayStatusCheck(false)\n          return null\n        })\n    },\n    [executePaymentStatusCheck, orderModel],\n  )\n\n  const { executeGoPayPayment, paymentLoading: paymentProcessing } = useGoPay(\n    queryPaymentStatus,\n    {\n      onError,\n      onFinish,\n    },\n  )\n\n  return { paymentErrorModal, executeGoPayPayment, paymentProcessing }\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport FormGroup from 'reactstrap/lib/FormGroup'\nimport Input from 'reactstrap/lib/Input'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useMOrderTipUpdate } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\nconst StyledOrderFormTipInput = styled.div`\n  margin: 0.8rem 0 1.4rem 0;\n`\n\nexport const OrderFormTipInput = observer(() => {\n  const { order, cart } = useRoot()\n  const [updateTip] = useMOrderTipUpdate()\n\n  // TODO: Vyresit aby se nespoustelo po navratu z GoPay\n  useReaction(\n    () => (order.usingPaymentMethodWithTips ? Number(order.tips) : 0),\n    tips => {\n      updateTip({\n        tips,\n        orderId: order.orderId!,\n        withGoods: cart.withGoods,\n      })\n    },\n  )\n\n  if (!order.usingPaymentMethodWithTips) {\n    return null\n  }\n\n  return (\n    <StyledOrderFormTipInput>\n      <FormGroup>\n        <Input\n          type=\"select\"\n          value={order.tips}\n          onChange={ev => {\n            order.setTips(Number.parseInt(ev.target.value, 10))\n          }}\n          disabled={order.disableInteraction}\n          data-testid=\"orderTipsSelect\"\n        >\n          <option value={0}>{i18n.t`Without tips`}</option>\n          <option value={5}>{i18n.t`Tips 5%`}</option>\n          <option value={10}>{i18n.t`Tips 10%`}</option>\n          <option value={15}>{i18n.t`Tips 15%`}</option>\n          <option value={20}>{i18n.t`Tips 20%`}</option>\n          <option value={25}>{i18n.t`Tips 25%`}</option>\n        </Input>\n      </FormGroup>\n    </StyledOrderFormTipInput>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <AlertModal isOpen={orderModel.isGoPayChecking} headerText=\"GoPay platba\">\n      <TextPadding>\n        <Trans>Checking your GoPay payment, please wait...</Trans>\n      </TextPadding>\n      <Pacman noMargin={true} />\n    </AlertModal>\n  ))\n}\n","import { useOrderPromoCodes } from '@speedlo/ui'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { SecondaryButton } from '../../common/Buttons'\nimport {\n  useMOrderPromoAdd,\n  useMOrderPromoRemove,\n  useQOrderPromoCodes,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/constants'\nimport { useAlertModal } from '../../hooks/useAlertModal'\nimport { i18n } from '../../i18n'\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport const OrderPromoInput = React.memo(() => {\n  const { order: orderModel, cart } = useRoot()\n  const [errorModal, showError] = useAlertModal()\n\n  const { getStash } = useQOrderPromoCodes(\n    { orderId: orderModel.orderId! },\n    { skip: !orderModel.orderId },\n  )\n  const [addCodeMutation] = useMOrderPromoAdd()\n  const [removeCodeMutation] = useMOrderPromoRemove()\n\n  const onCodeAdd = React.useCallback(\n    async (code: string) => {\n      if (!orderModel.orderId) {\n        return\n      }\n      return addCodeMutation({\n        code,\n        orderId: orderModel.orderId,\n        withGoods: cart.withGoods,\n      })\n    },\n    [addCodeMutation, cart, orderModel],\n  )\n\n  const onCodeRemove = async (codeId: ID) => {\n    if (orderModel.orderId) {\n      removeCodeMutation({\n        codeId,\n        orderId: orderModel.orderId,\n        withGoods: cart.withGoods,\n      })\n    }\n  }\n\n  const onCodeErrors = (code, errors) => {\n    showError(\n      i18n.t`Promo code \"${code}\" is invalid`,\n      <div>\n        {errors.map(msg => (\n          <div key={msg}>{msg}</div>\n        ))}\n      </div>,\n    )\n  }\n\n  const { inputProps, inputRef } = useOrderPromoCodes({\n    onCodeAdd,\n    onCodeErrors,\n    getValidatingMessage: code => i18n.t`Validating promo code ${code}...`,\n  })\n\n  const codes = getStash(data => data.order.promoCodes) || ARRAY_EMPTY\n\n  return useObserver(() => (\n    <FormGroup>\n      {errorModal}\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          placeholder={i18n.t`Promo codes`}\n          {...inputProps}\n          disabled={inputProps.disabled || orderModel.disableInteraction}\n        />\n      </InputGroup>\n      <CodesPanel data-testid=\"promoCodesPanel\">\n        {codes.map(({ id, code }) => (\n          <SecondaryButton\n            key={id}\n            role=\"button\"\n            disabled={orderModel.disableInteraction}\n            onClick={() => onCodeRemove(id)}\n          >\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  ))\n})\n","import { useXFormCtx } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\nimport { useOrderFormCheck } from './hooks/useOrderFormCheck'\n\ninterface IProps {\n  children: ReactNode\n}\n\nexport const OrderSubmitButton = observer<IProps>(({ children }) => {\n  const xform = useXFormCtx()\n  const orderModel = useOrderModel()\n\n  const { hasItemsInCart } = useOrderFormCheck()\n\n  let submitBlocked = true\n  let submitBlockReason = ''\n\n  if (!hasItemsInCart) {\n    submitBlockReason = i18n.t`Cart is empty`\n  } else if (!orderModel.isVamInitialized) {\n    submitBlockReason = i18n.t`Agreements are not initialized yet`\n  } else if (!xform.state.isValid) {\n    submitBlockReason = i18n.t`Form validation failed`\n  } else {\n    submitBlocked = false\n  }\n\n  return (\n    <>\n      <PrimaryButton\n        id=\"OrderSubmitButton\"\n        title={submitBlockReason}\n        type=\"submit\"\n        color=\"primary\"\n        size=\"md\"\n        disabled={submitBlocked || xform.state.isSubmitting}\n      >\n        {xform.state.isSubmitting ? (\n          <Spinner name=\"circle\" fadeIn=\"none\" color=\"#ccc\" />\n        ) : (\n          children\n        )}\n      </PrimaryButton>\n    </>\n  )\n})\n","import { DateFormat, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { useDelayedOrder } from '../../hooks/useDelayedOrder'\nimport { useOrderModel } from '../../hooks/useOrderModel'\n\nconst StyledOrderTimeButtons = styled.div`\n  margin: 0 0 1.4rem 0;\n  button {\n    position: relative;\n    padding-top: 0.3rem;\n    margin-bottom: 0.2rem;\n    height: 2.8rem;\n  }\n  button:first-of-type {\n    margin-right: 0.8rem;\n  }\n`\n\nexport const OrderTimeButtons = () => {\n  const orderModel = useOrderModel()\n\n  const { isEnabled, changeDeliveryTime } = useDelayedOrder()\n\n  return useObserver(() => {\n    if (!isEnabled) {\n      return null\n    }\n    return (\n      <StyledOrderTimeButtons>\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonNow\"\n          selected={!orderModel.isDelayed}\n          disabled={orderModel.disableInteraction}\n          onClick={() => changeDeliveryTime(null)}\n        >\n          <Trans>When possible</Trans>\n        </SelectButtonThemed>\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonLater\"\n          selected={orderModel.isDelayed}\n          disabled={orderModel.disableInteraction}\n          onClick={orderModel.openTimePicker}\n        >\n          {orderModel.isDelayed ? (\n            <DateFormat\n              value={orderModel.deliverAt}\n              format={{ weekday: 'long', hour: 'numeric', minute: 'numeric' }}\n            />\n          ) : (\n            <Trans>Choose time</Trans>\n          )}\n        </SelectButtonThemed>\n      </StyledOrderTimeButtons>\n    )\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.FC<IProps> = () => {\n  const { user } = useRoot()\n\n  return useObserver(() => {\n    if (user.rememberForm !== null) {\n      return null\n    }\n    return (\n      <StorageNotice\n        data-testid=\"OrderFormStorageNotice\"\n        className=\"animated slideInUp\"\n      >\n        <p>\n          <Trans>\n            This app is using secure storage for keeping filled form data. It's\n            not cookies, these are stored in your browser only.\n          </Trans>\n        </p>\n\n        <NoticeButton\n          color=\"success\"\n          size=\"sm\"\n          onClick={user.setFormRememberYes}\n          data-testid=\"orderFormStorageNotice__Yes\"\n        >\n          <Trans>Always remember</Trans>\n        </NoticeButton>\n        <NoticeButton\n          color=\"secondary\"\n          size=\"sm\"\n          onClick={user.setFormRememberNo}\n          data-testid=\"orderFormStorageNotice__No\"\n        >\n          <Trans>Do not store</Trans>\n        </NoticeButton>\n      </StorageNotice>\n    )\n  })\n}\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n}\n\nexport const AddressSubmit: React.FC<IProps> = ({ enabled, onClick }) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      data-testid=\"AddressSubmit\"\n    >\n      {i18n.t`Confirm address`}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import { cn } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Input, InputProps } from 'reactstrap'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useDebounce } from '../../../hooks/useDebounce'\n\ninterface IProps {\n  onSearch: () => void\n  isVisible: boolean\n  inputProps: InputProps\n}\n\nexport const AddressSearchInput = observer<IProps>(\n  ({ onSearch, inputProps, isVisible }) => {\n    const { location } = useRoot()\n    const inputRef = React.useRef<Maybe<HTMLInputElement>>(null)\n\n    React.useEffect(\n      function autoFocus() {\n        if (isVisible && inputRef.current !== null) {\n          inputRef.current.focus()\n        }\n      },\n      [isVisible],\n    )\n\n    const onSearchDebounced = useDebounce(onSearch, 2000)\n\n    React.useEffect(() => {\n      return () => onSearchDebounced.clear()\n    }, [onSearchDebounced])\n\n    const onChange = function searchOnChangeDebounced(\n      ev: React.ChangeEvent<HTMLInputElement>,\n    ) {\n      const search = ev.target.value || ''\n      location.setSearchValue(search)\n      if (search.trim().length === 0) {\n        location.clearAddress()\n      }\n      onSearchDebounced()\n    }\n\n    const onKeyPress = function searchOnEnterKey(\n      ev: React.KeyboardEvent<HTMLInputElement>,\n    ) {\n      if (ev.key === 'Enter') {\n        onSearchDebounced.clear()\n        onSearch()\n      }\n    }\n\n    const onFocus = function autoSelectOnFocus() {\n      inputRef.current!.select()\n    }\n\n    return (\n      <Input\n        className={cn({ hidden: !isVisible })}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        onFocus={onFocus}\n        value={location.searchValue}\n        innerRef={inputRef}\n        data-testid=\"SearchInput\"\n        {...inputProps}\n      />\n    )\n  },\n)\n","import debounce from 'debounce'\nimport React from 'react'\n\nexport function useDebounce(\n  cb: AnyFunction,\n  time: number = 300,\n  deps: React.DependencyList = [],\n) {\n  const debounced = React.useCallback(debounce(cb, time), [...deps, cb, time])\n\n  React.useEffect(() => {\n    return () => {\n      debounced.clear()\n    }\n  }, [debounced])\n\n  return debounced\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useAlertModal } from '../../../hooks/useAlertModal'\nimport { i18n } from '../../../i18n'\n\nexport const GeolocationButton = observer(() => {\n  const { location } = useRoot()\n\n  const [alert, makeAlert] = useAlertModal()\n\n  if (!location.isGeolocationAvailable || location.isResolving) {\n    return null\n  }\n\n  const attemptGeolocation = () => {\n    location.log('geolocating...')\n    navigator.geolocation.getCurrentPosition(\n      ({ coords }) => {\n        const { latitude, longitude } = coords\n        location.log(\n          'geolocated at coords %s, %s (acc: %s)',\n          coords.latitude,\n          coords.longitude,\n          coords.accuracy,\n        )\n        location.setGeolocationPoint({ latitude, longitude })\n      },\n      err => {\n        location.log('failed geolocation', err)\n        location.disableGeolocation()\n        makeAlert(\n          i18n.t`Geolocation failed`,\n          i18n.t`Your browser does not support geolocation.`,\n        )\n      },\n      {\n        enableHighAccuracy: true,\n        maximumAge: 60 * 1000,\n      },\n    )\n  }\n\n  return (\n    <>\n      {alert}\n      <div className=\"gps\" onClick={attemptGeolocation}>\n        <span className=\"flaticon-gps\" />\n      </div>\n    </>\n  )\n})\n\nexport default GeolocationButton\n","import { cn } from '@speedlo/ui'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.FC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  return (\n    <div\n      data-testid=\"ResolvedAddress\"\n      className={cn('resolved__address', {\n        wait: isResolving,\n        hidden: !isVisible,\n      })}\n      onClick={isResolving ? undefined : onValidClick}\n    >\n      {isResolving ? <Spinner name=\"ball-beat\" fadeIn=\"none\" /> : address}\n    </div>\n  )\n}\n","import { useReaction, useReactionNow } from '@speedlo/hooks'\nimport { debounce } from 'debounce'\nimport { reaction } from 'mobx'\nimport { useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\n\ninterface IAddressSearchOptions {\n  count?: number\n  watchLocation?: boolean\n}\n\nexport type AddressSearchResult = ReturnType<typeof mapResult>\n\nconst urlCache = new Map()\n\nexport function useAddressSearch({\n  count = 1,\n  watchLocation = false,\n}: IAddressSearchOptions = {}) {\n  const { map, location } = useRoot()\n\n  const state = useLocalStore(() => ({\n    results: null as RoA<AddressSearchResult> | null,\n    phrase: location.searchValue,\n    searching: false,\n    get url() {\n      const params = [\n        `count=${count}`,\n        `lon=${map.longitude}`,\n        `lat=${map.latitude}`,\n        `zoom=${map.zoom}`,\n        `lang=cs,sk,en`,\n        `enableCategories=1`,\n      ]\n      return `https://api.mapy.cz/suggest/?${params.join('&')}`\n    },\n  }))\n\n  const doFetch = React.useCallback(() => {\n    if (state.phrase.length === 0) {\n      state.results = null\n      return\n    }\n\n    location.log(`searching phrase: ${state.phrase}`)\n    const url = `${state.url}&phrase=${state.phrase}`\n\n    if (urlCache.has(url)) {\n      state.results = urlCache.get(url)\n      return\n    }\n\n    state.searching = true\n\n    fetch(url)\n      .then(resp => resp.json())\n      .then(json => {\n        const results = json.result.filter(validateResult).map(mapResult)\n        urlCache.set(url, results)\n        state.results = results\n      })\n      .finally(() => {\n        state.searching = false\n      })\n  }, [location, state])\n\n  const debouncedFetch = React.useRef(debounce(doFetch, 500))\n\n  const onSearch = React.useCallback(\n    (nextPhrase: string = location.searchValue) => {\n      location.log(`onSearch ${nextPhrase}`)\n      state.phrase = nextPhrase.trim()\n      debouncedFetch.current.clear()\n      doFetch()\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [doFetch, location],\n  )\n\n  useReaction(\n    () => location.searchValue,\n    value => {\n      if (value.length === 0) {\n        state.phrase = ''\n        state.results = null\n        debouncedFetch.current.clear()\n      }\n    },\n  )\n\n  useReactionNow(\n    () => location.initialSearchAddress,\n    value => {\n      if (value) {\n        onSearch(value)\n      }\n    },\n  )\n\n  React.useEffect(\n    () =>\n      reaction(\n        () => state.url,\n        () => {\n          if (watchLocation) {\n            debouncedFetch.current()\n          }\n        },\n      ),\n    [state.url, watchLocation],\n  )\n\n  return { ...state, onSearch }\n}\n\nfunction validateResult({ userData }) {\n  const { latitude, longitude } = userData\n  return latitude && longitude\n}\n\nfunction mapResult({ category, userData }) {\n  const {\n    id,\n    latitude,\n    longitude,\n    suggestFirstRow,\n    suggestSecondRow,\n    municipality,\n    district,\n    country,\n  } = userData\n\n  const suffix =\n    [municipality, district, country, suggestSecondRow].find(Boolean) || ''\n\n  return {\n    id,\n    category,\n    gps: {\n      latitude,\n      longitude,\n    },\n    address: `${suggestFirstRow}${suffix ? `, ${suffix}` : ''}`,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { useReaction } from '@speedlo/hooks'\nimport { cn } from '@speedlo/ui'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useAddressSearch } from './hooks/useAddressSearch'\n\ninterface IProps {}\n\nconst Styled = styled.div`\n  position: absolute;\n  margin-top: 0.1rem;\n\n  > div,\n  button.hint:hover {\n    background-color: #ffffffaa;\n  }\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    border: 1px solid transparent;\n    border-radius: 0.4rem;\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    max-width: 25rem;\n    text-align: left;\n\n    & > p {\n      font-size: 0.8rem;\n      color: gray;\n    }\n\n    button {\n      &:hover,\n      &:hover:focus {\n        text-decoration: none;\n      }\n    }\n\n    button.done {\n      color: darkgray;\n    }\n  }\n\n  button.hint {\n    color: coral;\n    text-shadow: 0.5px 0.5px darkgray;\n    &:hover {\n      text-decoration: none;\n      transition: background-color 0.5s ease;\n    }\n  }\n`\n\nexport const ExtraAddressResult = observer<IProps>(props => {\n  const { location } = useRoot()\n  const state = useLocalStore(() => ({\n    open: false,\n  }))\n\n  const { results, searching, onSearch } = useAddressSearch({\n    count: 5,\n    watchLocation: state.open,\n  })\n\n  useReaction(\n    () => state.open,\n    open => {\n      if (open) {\n        onSearch()\n      }\n    },\n  )\n\n  useReaction(\n    () => location.searchValue,\n    () => {\n      state.open = false\n    },\n  )\n\n  if (!location.hasSearchValue) {\n    return null\n  }\n\n  const usefulResults =\n    results && results.filter(({ address }) => address !== location.address)\n\n  const renderHint = () => (\n    <Button\n      className=\"hint\"\n      color=\"link\"\n      onClick={() => {\n        state.open = true\n      }}\n    >\n      <Trans>Looking for a different address?</Trans>\n    </Button>\n  )\n\n  const renderResults = () => (\n    <div>\n      <p>\n        <Trans>\n          Hint: Try moving map around and zooming closer to your location to\n          improve these results.\n        </Trans>\n      </p>\n      {searching && <div>...</div>}\n      {usefulResults &&\n        usefulResults.map(result => (\n          <Button\n            size=\"sm\"\n            color=\"link\"\n            key={result.id}\n            onClick={() => {\n              location.setSearchResult(result)\n              state.open = false\n            }}\n          >\n            {result.address}\n          </Button>\n        ))}\n      <Button\n        size=\"sm\"\n        color=\"link\"\n        onClick={() => {\n          state.open = false\n        }}\n        className=\"done\"\n      >\n        {usefulResults && usefulResults.length === 0 ? (\n          <Trans>No match for map location</Trans>\n        ) : (\n          <Trans>I don't see anything useful here.</Trans>\n        )}\n      </Button>\n    </div>\n  )\n\n  return (\n    <Styled\n      className={cn('animated', {\n        bounceInLeft: state.open,\n        bounceIn: !state.open,\n      })}\n      key={state.open.toString()}\n    >\n      {state.open ? renderResults() : renderHint()}\n    </Styled>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { mediaDesktop } from '../../common/Responsive'\nimport { gpsToLatLngLit } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { AddressSearchInput } from './destination/AddressSearchInput'\nimport GeolocationButton from './destination/GeolocationButton'\nimport { ResolvedAddress } from './destination/ResolvedAddress'\nimport { ExtraAddressResult } from './ExtraAddressResult'\nimport { useAddressSearch } from './hooks/useAddressSearch'\n\nconst StyledDeliveryAddressSearch = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n\n  div.container {\n    display: flex;\n    border-radius: 1rem;\n    border: 1px solid #d4d4d4;\n    background-color: white;\n    ${mediaDesktop`\n    height: 2.3rem;\n    `}\n  }\n  input {\n    height: auto;\n    background: transparent;\n    border: none;\n    &:focus {\n      box-shadow: initial;\n    }\n    &.hidden {\n      display: none;\n    }\n  }\n\n  div.gps {\n    color: ${({ theme }) => theme.secondary};\n    cursor: pointer;\n    position: relative;\n    top: 0.2rem;\n  }\n\n  div.resolved__address {\n    margin: 0.4rem 0.7rem 0.4rem 0.7rem;\n    font-size: 1rem;\n    color: green;\n    width: 100%;\n    cursor: pointer;\n    &.hidden {\n      display: none;\n    }\n    &.wait {\n      display: flex;\n      justify-content: center;\n      font-size: 0.5rem;\n      cursor: wait;\n    }\n  }\n\n  .alert {\n    pointer-events: none;\n    margin-bottom: 0;\n  }\n`\n\nexport const DeliveryAddressSearch = observer(() => {\n  const { map, location } = useRoot()\n\n  const { results, searching, onSearch } = useAddressSearch()\n\n  React.useEffect(() => {\n    if (searching) {\n      location.setIsResolving(searching)\n    }\n  }, [location, searching])\n\n  React.useEffect(() => {\n    if (results === null) {\n      return\n    }\n\n    if (results.length === 0) {\n      location.log('no result from direct geocoder api')\n      location.setAsNotResolved()\n      return\n    }\n\n    const [singleResult] = results\n    const {\n      category,\n      gps: { latitude, longitude },\n    } = singleResult\n\n    if (map.mapRef) {\n      map.log(`panning to result gps ${latitude} / ${longitude}`)\n      map.mapRef.panTo(gpsToLatLngLit(singleResult.gps))\n    }\n\n    if (!(category && category.startsWith('address'))) {\n      location.log('result with category %s', category)\n      location.setAsNotAddress()\n      return\n    }\n\n    location.log(`found address ${singleResult.address}`)\n    if (location.latitude !== latitude && location.longitude !== longitude) {\n      location.resetResolution()\n    }\n    location.setSearchResult(singleResult)\n  }, [location, map, results])\n\n  return (\n    <StyledDeliveryAddressSearch>\n      <div className=\"container\">\n        <ResolvedAddress\n          address={location.address || ''}\n          isVisible={location.hasAddress}\n          isResolving={location.isResolving}\n          onValidClick={location.clearAddress}\n        />\n        <AddressSearchInput\n          inputProps={{\n            placeholder: i18n.t`Type address or choose it from map`,\n            autoComplete: 'shipping street-address',\n          }}\n          onSearch={onSearch}\n          isVisible={!(location.hasAddress || location.isResolving)}\n        />\n        <GeolocationButton />\n      </div>\n      <ErrorMessage />\n      <ExtraAddressResult />\n    </StyledDeliveryAddressSearch>\n  )\n})\n\nfunction ErrorMessage() {\n  const { location } = useRoot()\n  if (!location.hasResolutionResult) {\n    return null\n  }\n  if (location.isResolved === false) {\n    return (\n      <Alert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </Alert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <Alert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </Alert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <Alert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </Alert>\n    )\n  }\n  return null\n}\n","import { Marker } from '@react-google-maps/api'\nimport { useReaction, useWhen } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { GeoPoint, latLngToGps } from '../../helpers/gps'\nimport { useLocationResolver } from '../../hooks/useLocationResolver'\nimport { useFoodMenuQuery } from '../foodMenu/hooks/useFoodMenuQuery'\nimport { AddressSubmit } from './AddressSubmit'\nimport { DeliveryAddressSearch } from './DeliveryAddressSearch'\nimport { useDeliveryMapPanning } from './hooks/useDeliveryMapPanning'\nimport { useOrderCreate } from './hooks/useOrderCreate'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst StyledDeliveryMap = styled.div`\n  .delivery__map__address {\n    position: absolute;\n    top: 0;\n    left: 2.3rem;\n    right: 2.3rem;\n  }\n  .delivery__map__submit {\n    position: absolute;\n    bottom: 3rem;\n    width: 100%;\n  }\n`\n\nexport const DeliveryMap = observer<IProps>(({ onConfirm }) => {\n  const { map, location, business } = useRoot()\n\n  const resolver = useLocationResolver()\n\n  const resolveUserLocation = (gps: GeoPoint) => {\n    location.resetResolution()\n    location.setSearchValue('')\n    location.setLocation(gps)\n  }\n\n  useWhen(\n    () => business.isValid,\n    () => {\n      if (location.hasLocation && !location.hasResolutionResult) {\n        location.log('resolving initial gps')\n        resolver(location.geoPoint!)\n      }\n    },\n  )\n\n  useReaction(\n    () => location.geoPoint,\n    gps => {\n      if (gps) {\n        location.log('resolving on gps change')\n        resolver(gps)\n      }\n    },\n  )\n\n  useReaction(\n    () => map.clickPoint,\n    clickPoint => {\n      if (clickPoint) {\n        location.log(`resolve with clickpoint`)\n        resolveUserLocation(clickPoint)\n        map.clearClickPoint()\n      }\n    },\n  )\n\n  // prefetch food menu when correct address is resolved\n  useFoodMenuQuery(location.isDeliveryAddress ? location.branchId : null)\n  useDeliveryMapPanning()\n\n  const { createDeliveryOrder } = useOrderCreate(onConfirm)\n\n  return (\n    <StyledDeliveryMap data-testid=\"DeliverMap\">\n      {location.latLng ? (\n        <Marker\n          position={location.latLng}\n          draggable={true}\n          onDragEnd={({ latLng }) => {\n            location.log(`resolve with drag`)\n            resolveUserLocation(latLngToGps(latLng))\n          }}\n        />\n      ) : null}\n      <div className=\"delivery__map__address\">\n        <DeliveryAddressSearch />\n      </div>\n      <div className=\"delivery__map__submit\">\n        <AddressSubmit\n          enabled={location.isDeliveryAddress && !location.isResolving}\n          onClick={createDeliveryOrder}\n        />\n      </div>\n    </StyledDeliveryMap>\n  )\n})\n","import React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { useLazyQResolveLocation } from '../graph/generated'\nimport { GeoPoint } from '../helpers/gps'\n\nexport function useLocationResolver() {\n  const { location, business } = useRoot()\n\n  const [resolveLocation] = useLazyQResolveLocation({\n    fetchPolicy: 'cache-first',\n  })\n\n  const resolver = React.useCallback(\n    async (gps: GeoPoint) => {\n      location.setIsResolving(true)\n\n      const data = await resolveLocation({\n        ...getResolutionTarget(),\n        ...gps,\n      })\n\n      if (data !== null) {\n        location.setResolutionResult(data.resolveLocation)\n      }\n      location.setIsResolving(false)\n\n      function getResolutionTarget() {\n        if (business.isBrand) {\n          return {\n            brandId: business.brandId!,\n          }\n        }\n        return {\n          branchId: business.branchId!,\n        }\n      }\n    },\n    [business, location, resolveLocation],\n  )\n\n  return resolver\n}\n","import { useAutorun, useReaction } from '@speedlo/hooks'\nimport { useAsObservableSource } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useQInitialDeliveryLocation } from '../../../graph/generated'\nimport { RM } from '../../../tools/ramda'\nimport { useMapPanning } from './useMapPanning'\n\nexport const useDeliveryMapPanning = () => {\n  const { location } = useRoot()\n  const { getStash } = useQInitialDeliveryLocation(\n    {},\n    {\n      fetchPolicy: 'cache-first',\n      skip: location.hasAddress,\n    },\n  )\n\n  const source = useAsObservableSource({\n    initial: getStash(RM.prop('location')),\n  })\n\n  const panToGps = useMapPanning()\n\n  useAutorun(() => {\n    if (location.geoPoint) {\n      location.log('pan to user location', location.geoPoint)\n      panToGps(location.geoPoint)\n    } else if (location.geolocationPoint) {\n      location.log('pan to geolocation', location.geolocationPoint)\n      panToGps(location.geolocationPoint)\n    } else if (source.initial && source.initial.gpsCoordinates) {\n      location.log('pan to initial location', source.initial.gpsCoordinates)\n      panToGps(source.initial.gpsCoordinates)\n    }\n  })\n\n  useReaction(\n    () => location.geolocationPoint,\n    gps => {\n      if (gps) {\n        panToGps(gps)\n      }\n    },\n  )\n}\n","import { t } from '@lingui/macro'\nimport React, { CSSProperties } from 'react'\n\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n  isValid: boolean\n}\n\nexport const CategoryValidationMessage: React.FC<IProps> = ({\n  minCount,\n  maxCount,\n  isValid,\n}) => {\n  let message = ''\n  if (minCount === 0) {\n    if (maxCount > 0) {\n      message = i18n._(t`maximum ${maxCount}`)\n    } else {\n      return null\n    }\n  } else if (maxCount === 0) {\n    message = i18n._(t`minimum ${minCount}`)\n  } else if (minCount === maxCount) {\n    const count = minCount\n    message = i18n._(t`only ${count}`)\n  } else {\n    message = i18n._(t`minimum ${minCount} and maximum ${maxCount}`)\n  }\n  const style: CSSProperties = {}\n  if (!isValid) {\n    style.color = 'red'\n  }\n  return (\n    <span style={style}>\n      {'('}\n      {message}\n      {')'}\n    </span>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  onClick(): void\n}\n\nconst StyledSidedishRemoveButton = styled.div`\n  position: absolute;\n  left: -0.6rem;\n  top: -0.4rem;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 1rem;\n  background: ${({ theme }) => theme.primary};\n\n  &:hover {\n    background: ${({ theme }) => theme.primaryHover} !important;\n  }\n  &:active {\n    background: ${({ theme }) => theme.primary} !important;\n  }\n  & .rectangle {\n    width: 45%;\n    position: absolute;\n    top: 45%;\n    left: 30%;\n    height: 4px;\n    background: white;\n  }\n`\nexport const SidedishRemoveButton: React.FC<IProps> = ({\n  onClick,\n  ...props\n}) => {\n  return (\n    <StyledSidedishRemoveButton\n      onClick={onClick}\n      className=\"animated bounceIn\"\n      data-testid=\"SidedishRemoveButton\"\n      {...props}\n    >\n      <div className=\"rectangle\" />\n    </StyledSidedishRemoveButton>\n  )\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { FRecipeDetailSideDishes } from '../../graph/generated'\nimport { SidedishRemoveButton } from './SidedishRemoveButton'\n\ninterface IProps extends ButtonProps {\n  sidedish: FRecipeDetailSideDishes\n  count: number\n  isSelected: boolean\n  canBeSelected: boolean\n  canBeRemoved: boolean\n  onAdd(): void\n  onRemove(): void\n}\n\nconst StyledSidedishCheckbox = styled.div`\n  display: inline-block;\n  position: relative;\n\n  & .name {\n    float: left;\n    text-align: left;\n    white-space: normal;\n    max-width: 13rem;\n  }\n\n  & .price {\n    font-weight: bold;\n    float: right;\n  }\n\n  & .count {\n    display: inline-block;\n    margin-left: 0.5rem;\n  }\n`\n\nexport const SidedishCheckbox = React.memo<IProps>(\n  ({\n    sidedish,\n    count,\n    canBeSelected,\n    canBeRemoved,\n    className,\n    onAdd,\n    onRemove,\n    ...buttonProps\n  }) => {\n    const onClick = React.useCallback(() => {\n      if (canBeSelected) {\n        onAdd()\n      }\n    }, [canBeSelected, onAdd])\n    return (\n      <StyledSidedishCheckbox className={className}>\n        <PickerButton\n          onClick={onClick}\n          disabled={!canBeSelected}\n          size=\"xs\"\n          outline={true}\n          width=\"17.5rem\"\n          data-testid={`sidedishCheckbox__${sidedish.id}`}\n          {...buttonProps}\n        >\n          <div className=\"name\">\n            {sidedish.nameLabel}\n            <span key={count} className=\"animated heartBeat count\">\n              {count > 1 && `${count}x`}\n            </span>\n          </div>\n          <div className=\"price\">{sidedish.price.formattedValue}</div>\n        </PickerButton>\n        {canBeRemoved && <SidedishRemoveButton onClick={onRemove} />}\n      </StyledSidedishCheckbox>\n    )\n  },\n)\n","import { useSideDishValidator } from '@speedlo/cart'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components'\n\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { CategoryValidationMessage } from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: FRecipeDetailFragment\n  selection: ReadonlyArray<ID>\n  onAdd(item: ID): void\n  onRemove(item: ID): void\n}\n\nconst StyledSidedishPicker = styled.div`\n  margin-top: 1rem;\n\n  & .sidedish__picker__checkbox {\n    @media (max-width: 370px) {\n      width: 100%;\n    }\n  }\n\n  & .sidedish__picker__category {\n    font-size: 1rem;\n    font-weight: bold;\n    text-align: left;\n    margin: 0 0 0.2rem 0.2rem;\n  }\n`\n\nexport const SidedishPicker: React.FC<IProps> = ({\n  recipe,\n  selection,\n  onAdd,\n  onRemove,\n}) => {\n  const { canBeSelected, isCategoryValid } = useSideDishValidator(\n    recipe.categories,\n    selection,\n  )\n\n  return (\n    <StyledSidedishPicker className=\"food__sidedish__picker\">\n      {recipe.categories.map(category => (\n        <Fragment key={category.id}>\n          <div className=\"sidedish__picker__category\">\n            {category.nameLabel}{' '}\n            <CategoryValidationMessage\n              minCount={category.minCount}\n              maxCount={category.maxCount}\n              isValid={isCategoryValid(category)}\n            />\n          </div>\n          {category.sideDishes.map(sidedish => (\n            <SidedishCheckbox\n              key={`${sidedish.id}-${category.id}`}\n              sidedish={sidedish}\n              count={selection.filter(i => i === sidedish.id).length}\n              isSelected={selection.includes(sidedish.id)}\n              canBeRemoved={selection.includes(sidedish.id)}\n              canBeSelected={canBeSelected(category, sidedish)}\n              onAdd={() => onAdd(sidedish.id)}\n              onRemove={() => onRemove(sidedish.id)}\n              className=\"sidedish__picker__checkbox\"\n            />\n          ))}\n        </Fragment>\n      ))}\n    </StyledSidedishPicker>\n  )\n}\n","import { useSideDishValidator } from '@speedlo/cart'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ReadonlyArray<ID>\n  recipe: Maybe<FRecipeDetailFragment>\n  onConfirm(): Promise<boolean>\n}\n\nexport const CartOrderButton = React.memo<IProps>(\n  ({ selection, recipe, onConfirm }) => {\n    const [isConfirming, setConfirming] = React.useState(false)\n    const { isCategoryValid } = useSideDishValidator(\n      recipe ? recipe.categories : [],\n      selection,\n    )\n\n    return (\n      <PrimaryButton\n        className={cn('modal__body__button', 'animated', {\n          heartBeat: isConfirming,\n        })}\n        disabled={\n          isConfirming || !recipe || !recipe.categories.every(isCategoryValid)\n        }\n        data-testid=\"CartOrderButton\"\n        onClick={() => {\n          setConfirming(true)\n          onConfirm().catch(() => {\n            setConfirming(false)\n          })\n        }}\n      >\n        {i18n.plural({\n          value: selection.length,\n          0: 'Order without sidedish',\n          one: 'Order with this sidedish',\n          other: 'Order with # sidedishes',\n        })}\n      </PrimaryButton>\n    )\n  },\n)\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport Pacman from '../../common/Pacman'\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/constants'\nimport { RM } from '../../tools/ramda'\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ntype TProps = NoChildren & {\n  recipe: Maybe<FRecipeDetailFragment>\n  isLoading: boolean\n  initialSideDishes: RoA<ID>\n  onConfirm(selection: ID[]): Promise<boolean>\n  onClose(): void\n}\n\nexport const CartModal: React.FC<TProps> = ({\n  recipe,\n  isLoading,\n  initialSideDishes,\n  onConfirm,\n  onClose,\n}) => {\n  const [selection, updateSelection] = React.useState(\n    [...initialSideDishes] || ARRAY_EMPTY,\n  )\n\n  const onCloseModal = React.useCallback(() => {\n    updateSelection([])\n    onClose()\n  }, [onClose])\n\n  const onConfirmAndClose = async () => {\n    if (await onConfirm(selection)) {\n      onCloseModal()\n      return true\n    }\n    return false\n  }\n\n  const onAddSidedish = (sidedishId: ID) => {\n    updateSelection(sel => {\n      return RM.append(sidedishId, sel)\n    })\n  }\n\n  const onRemoveSidedish = (sidedishId: ID) => {\n    updateSelection(sel => {\n      return RM.remove(RM.indexOf(sidedishId, sel), 1, sel)\n    })\n  }\n\n  const renderBody = () => {\n    if (isLoading) {\n      return <Pacman />\n    }\n    if (!recipe) {\n      return (\n        <Trans>We sorry, but the item is unavailable at this moment.</Trans>\n      )\n    }\n    return (\n      <>\n        <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n        <span className=\"modal__body__food_description\">\n          {recipe.descriptionLabel}\n        </span>\n        <SidedishPicker\n          recipe={recipe}\n          selection={selection}\n          onAdd={onAddSidedish}\n          onRemove={onRemoveSidedish}\n        />\n      </>\n    )\n  }\n\n  return (\n    <Modal\n      isOpen={recipe !== null}\n      toggle={onCloseModal}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n      data-testid=\"CartModal\"\n    >\n      <ModalHeader\n        toggle={onCloseModal}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderBody()}</div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            recipe={recipe}\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useQCartRecipe } from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/constants'\nimport { useAddToCart } from '../../hooks/useAddToCart'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const AddToCartModal = observer<IProps>(({ orderId }) => {\n  const orderModel = useOrderModel()\n\n  const recipeId = orderModel.addToCartRecipeId\n\n  const { getStash, loading } = useQCartRecipe(\n    { recipeId: recipeId! },\n    { skip: orderId === null || recipeId === null, fetchPolicy: 'cache-first' },\n  )\n\n  const executeAddToCart = useAddToCart()\n\n  const onConfirm = React.useCallback(\n    async sideDishes => {\n      if (orderId === null || recipeId === null) {\n        return false\n      }\n      const result = await executeAddToCart(recipeId, sideDishes)\n      return Boolean(result)\n    },\n    [executeAddToCart, orderId, recipeId],\n  )\n\n  const onClose = React.useCallback(() => {\n    orderModel.addToCart(null)\n  }, [orderModel])\n\n  const recipe = getStash(data => data.recipe)\n\n  return (\n    <CartModal\n      recipe={recipe}\n      initialSideDishes={ARRAY_EMPTY}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      isLoading={loading}\n    />\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useMChangeCartItem, useQCartItem } from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/constants'\nimport { RM } from '../../tools/ramda'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const ChangeCartModal = observer<IProps>(({ orderId }) => {\n  const { order: orderModel, cart: cartModel } = useRoot()\n\n  const itemId = orderModel.changeCartItemId\n\n  const { getStash, loading } = useQCartItem(\n    {\n      itemId: itemId!,\n    },\n    { skip: orderId === null || itemId === null },\n  )\n\n  const [changeItem] = useMChangeCartItem()\n\n  const onConfirm = React.useCallback(\n    async sideDishes => {\n      if (orderId === null || itemId === null) {\n        return false\n      }\n      const result = await changeItem({\n        itemId,\n        sideDishes,\n        orderId,\n        withGoods: cartModel.withGoods,\n      })\n      return Boolean(result)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [orderId, itemId, changeItem],\n  )\n\n  const onClose = React.useCallback(() => {\n    orderModel.changeCartItem(null)\n  }, [orderModel])\n\n  const item = getStash(RM.prop('item'))\n\n  const sideDishesSelection: RoA<ID> = item\n    ? item.sideDishes.map(RM.path(['recipe', 'id']))\n    : ARRAY_EMPTY\n\n  return (\n    <CartModal\n      recipe={item ? item.recipe : null}\n      initialSideDishes={sideDishesSelection}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      isLoading={loading}\n    />\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartSystem } from './CartSystem'\nimport { ChangeCartModal } from './ChangeCartModal'\n\ninterface IProps {\n  isReadonly?: boolean\n}\n\nexport const CartView = observer<IProps>(({ isReadonly = false }) => {\n  const orderModel = useOrderModel()\n  const orderId = orderModel.orderId\n  return (\n    <>\n      <AddToCartModal orderId={orderId} />\n      <ChangeCartModal orderId={orderId} />\n      <CartSystem\n        orderId={orderId}\n        isReadonly={isReadonly || orderModel.disableInteraction}\n      />\n    </>\n  )\n})\n","import { cn } from '@speedlo/ui'\nimport React, { useState } from 'react'\nimport Scroll from 'react-scroll'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { FFoodMenuCategoryFragment } from '../../graph/generated'\n\ninterface IProps {\n  categories: ReadonlyArray<FFoodMenuCategoryFragment>\n}\n\nconst StyledCategoryNavigator = styled.div`\n  background-color: #d4d4d4;\n  border-top-left-radius: 0.6rem;\n  padding: 0.7rem 0.5rem 0 0.2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  user-select: none;\n  display: flex;\n  ${mediaDesktop`\n    flex-wrap: wrap;\n  `}\n  ${mediaMobile`\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    box-shadow: inset -15px -5px 15px -14px rgba(0, 0, 0, 0.6);\n    margin: 0;\n    border-top-left-radius: 0;\n    background-color: #f3f3f3;\n    opacity: 0.94;\n  `}\n\n  a.link {\n    text-align: center;\n    color: #595959 !important;\n    display: inline-block;\n    min-width: 4rem;\n    cursor: pointer;\n    margin: 0 0.2rem;\n    &:hover,\n    &.active {\n      color: #5ca651 !important;\n      border-color: #5ca651;\n    }\n  }\n  div.circle {\n    background-color: white;\n    border: 1px solid #595959;\n    border-radius: 2rem;\n    width: 2.6rem;\n    height: 2.6rem;\n    margin: 0 auto;\n    padding: 0;\n    &:hover,\n    a.link.active > & {\n      border-color: #5ca651;\n    }\n    & span::before,\n    & span::after {\n      margin: 0;\n      padding: 0;\n      font-size: 1.7rem;\n    }\n  }\n\n  div.description {\n    font-size: 0.9rem;\n    margin-top: 0.2rem;\n    max-width: 5rem;\n  }\n`\nconst CategoryNavigator: React.FC<IProps> = ({ categories }) => {\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0)\n  return (\n    <StyledCategoryNavigator data-testid=\"CategoryNavigator\">\n      {categories.length === 0\n        ? null\n        : categories.map((category, idx) => (\n            <Scroll.Link\n              to={category.nameLabel}\n              key={category.id}\n              className={cn('link', {\n                active: activeCategoryIndex === idx,\n              })}\n              onSetActive={() => setActiveCategoryIndex(idx)}\n              offset={-168}\n              smooth={true}\n              spy={true}\n              title={category.nameLabel}\n            >\n              <div className=\"circle\">\n                <span className={`flaticon-${category.pictogram}`} />\n              </div>\n              <div className=\"description\">\n                <Truncate lines={2}>{category.nameLabel}</Truncate>\n              </div>\n            </Scroll.Link>\n          ))}\n    </StyledCategoryNavigator>\n  )\n}\n\nexport default CategoryNavigator\n","import React, { ReactNodeArray } from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { FFoodMenuCategoryFragment } from '../../graph/generated'\n\ninterface IProps {\n  category: FFoodMenuCategoryFragment\n  children: ReactNodeArray\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nexport const FoodCategory = React.memo<IProps>(({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n))\n","import './FoodMenuItem.css'\n\nimport { cn } from '@speedlo/ui'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport {\n  FFoodMenuRecipeFragment,\n  useLazyQCartRecipe,\n} from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { TFoodMenuPresence } from './hooks/useFoodMenuPresence'\n\ninterface IProps {\n  recipe: FFoodMenuRecipeFragment\n  presence: TFoodMenuPresence\n  onAddToCart(recipeId: ID, hasSideDish: boolean): void\n}\n\nconst StyledFoodMenuItem = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  position: relative;\n  min-height: 6rem;\n  user-select: none;\n  &:hover:not(.disabled) {\n    cursor: pointer;\n    background-color: #c9e8d7;\n  }\n  &.active {\n    background-color: #b3ebcc;\n  }\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n\n  & div.presence {\n    background-color: ${({ theme }) => theme.secondary};\n    float: left;\n    position: absolute;\n    left: -1.2rem;\n    padding: 0.4rem 0.6rem;\n    color: white;\n    border-radius: 1.8rem;\n    font-size: 0.9rem;\n    ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItem = React.memo<IProps>(({ recipe, presence, onAddToCart }) => {\n  const orderModel = useOrderModel()\n\n  const hasSideDishes = recipe.sideDishCount > 0\n\n  const onClick = React.useCallback(() => {\n    onAddToCart(recipe.id, hasSideDishes)\n  }, [hasSideDishes, onAddToCart, recipe.id])\n\n  const [prefetchFoodItem] = useLazyQCartRecipe({ fetchPolicy: 'cache-first' })\n\n  const onMouseEnter = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'development' && hasSideDishes) {\n      prefetchFoodItem({ recipeId: recipe.id })\n    }\n  }, [hasSideDishes, prefetchFoodItem, recipe.id])\n\n  const previousPresence = React.useRef(-1)\n\n  const renderPresence = () => {\n    const recipePresence = presence.get(recipe.id)\n    if (!recipePresence) {\n      previousPresence.current = -1\n      return null\n    }\n    const className = cn('presence', 'animated', {\n      pulse: recipePresence > 1 || previousPresence.current > 0,\n      zoomIn:\n        (recipePresence === 1 && previousPresence.current === 0) ||\n        previousPresence.current === -1,\n    })\n    previousPresence.current = recipePresence\n    return (\n      <div\n        key={recipePresence}\n        className={className}\n      >{`${recipePresence}x`}</div>\n    )\n  }\n\n  return useObserver(() => (\n    <StyledFoodMenuItem\n      onClick={onClick}\n      onMouseEnter={onMouseEnter}\n      className={cn({\n        active: orderModel.lastActiveRecipeId === recipe.id,\n        disabled: orderModel.disableInteraction,\n      })}\n      data-testid={`foodMenuItem__${recipe.id}`}\n    >\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {renderPresence()}\n      <h4 title={recipe.nameLabel}>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </StyledFoodMenuItem>\n  ))\n})\n\nexport default FoodMenuItem\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport Pacman from '../../common/Pacman'\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { QFoodMenuWareCategories } from '../../graph/generated'\nimport { useAddToCart } from '../../hooks/useAddToCart'\nimport { FoodCategory } from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\nimport { useFoodMenuPresence } from './hooks/useFoodMenuPresence'\n\ninterface IProps {\n  orderId: MaybeID\n  categories: ReadonlyArray<QFoodMenuWareCategories>\n  isLoading: boolean\n}\n\nconst StyledFoodMenu = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n\n  & > div {\n    ${mediaDesktop`\n      margin: 0 1.4rem 1rem 1.6rem;\n      padding: 2rem 0 2rem 0;\n    `};\n    ${mediaMobile`\n      margin: 0 0.7rem 1rem 0.7rem;\n      padding: 0 0 4rem 0;\n    `};\n  }\n`\n\nconst FoodMenu: React.FC<IProps> = ({ orderId, categories, isLoading }) => {\n  const { order: orderModel, config, user } = useRoot()\n\n  const presence = useFoodMenuPresence(orderId)\n\n  const executeAddToCart = useAddToCart()\n  const onAddToCart = React.useCallback(\n    (recipeId: ID, hasSideDish: boolean) => {\n      if (orderModel.disableInteraction) {\n        return\n      }\n      if (presence.size >= config.orderItemsMax) {\n        user.showOrderLimit()\n      } else if (hasSideDish) {\n        orderModel.addToCart(recipeId)\n      } else {\n        orderModel.setUsedRecipeId(recipeId)\n        executeAddToCart(recipeId)\n      }\n    },\n    [config.orderItemsMax, executeAddToCart, orderModel, presence, user],\n  )\n\n  const render = () => {\n    if (isLoading) {\n      return <Pacman noMargin={true} />\n    }\n    if (categories.length === 0) {\n      return (\n        <h3>\n          <Trans>Food menu is empty. We are sorry.</Trans>\n        </h3>\n      )\n    }\n    return (\n      <>\n        {categories.map(category => (\n          <FoodCategory key={category.id} category={category}>\n            {category.recipes.map(recipe => (\n              <FoodMenuItem\n                key={recipe.id}\n                recipe={recipe}\n                presence={presence}\n                onAddToCart={onAddToCart}\n              />\n            ))}\n          </FoodCategory>\n        ))}\n      </>\n    )\n  }\n\n  return (\n    <StyledFoodMenu data-testid=\"FoodMenu\">\n      <div>{render()}</div>\n    </StyledFoodMenu>\n  )\n}\n\nexport default React.memo(FoodMenu)\n","import { observable, ObservableMap, runInAction } from 'mobx'\nimport React from 'react'\n\nimport { useQFoodMenuCartPresence } from '../../../graph/generated'\n\nexport function useFoodMenuPresence(orderId: MaybeID) {\n  const { data } = useQFoodMenuCartPresence(\n    {\n      orderId: orderId!,\n    },\n    {\n      skip: !orderId,\n      fetchPolicy: 'cache-only',\n    },\n  )\n\n  const [presence] = React.useState(() => observable.map<ID, number>())\n\n  if (data) {\n    runInAction(() => {\n      presence.clear()\n      data.order.presence.forEach(({ recipe: { id } }) => {\n        if (!presence.has(id)) {\n          presence.set(id, 0)\n        }\n        presence.set(id, presence.get(id)! + 1)\n      })\n    })\n  }\n\n  return presence\n}\n\nexport type TFoodMenuPresence = ObservableMap<ID, number>\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\n\ninterface IProps {}\n\nconst StyledOrderLocked = styled(Alert)`\n  font-weight: bold;\n  margin-bottom: 0;\n  padding: 0.5rem 1rem;\n\n  & button {\n    margin: 0.5rem;\n  }\n`\n\nexport const OrderLocked: React.FC<IProps> = () => {\n  const orderModel = useOrderModel()\n  return useObserver(() => {\n    if (!orderModel.disableInteraction) {\n      return null\n    }\n\n    return (\n      <StyledOrderLocked color=\"warning\">\n        <Trans>Order is locked for further changes.</Trans>\n        <Link to=\"/\">\n          <SecondaryButton>\n            <Trans>Create new order</Trans>\n          </SecondaryButton>\n        </Link>\n      </StyledOrderLocked>\n    )\n  })\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { ARRAY_EMPTY } from '../../helpers/constants'\nimport CategoryNavigator from './CategoryNavigator'\nimport FoodMenu from './FoodMenu'\nimport { useFoodMenuQuery } from './hooks/useFoodMenuQuery'\nimport { OrderLimitModal } from './OrderLimitModal'\nimport { OrderLocked } from './OrderLocked'\n\nconst StyledMobileHeader = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: 4;\n`\n\nexport const FoodMenuView = observer(() => {\n  const { order: orderModel, user } = useRoot()\n\n  const { getStash, loading, refetch } = useFoodMenuQuery(orderModel.branchId)\n\n  useReaction(() => user.language, () => refetch())\n\n  const categories = getStash(data =>\n    data.wareCategories.filter(cat => cat.recipes.length > 0),\n  )\n\n  return (\n    <>\n      <OrderLimitModal />\n      <StyledMobileHeader>\n        <OrderLocked />\n        <CategoryNavigator categories={categories || ARRAY_EMPTY} />\n      </StyledMobileHeader>\n\n      <FoodMenu\n        orderId={orderModel.orderId}\n        categories={categories || ARRAY_EMPTY}\n        isLoading={loading}\n      />\n    </>\n  )\n})\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderEmailInput: React.FC = () => (\n  <FormGroup>\n    <FormTextInput\n      name=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder={i18n.t`E-mail`}\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.FC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        name=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n      />\n      <FormTextInput\n        name=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, FormText } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNoteInput: React.FC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <FormGroup>\n      <FormTextInput\n        name=\"note\"\n        type=\"textarea\"\n        placeholder={i18n.t`Note`}\n        title={ingredientsDescription}\n        errorForceDisplay={true}\n      />\n      <FormText>{ingredientsDescription}</FormText>\n    </FormGroup>\n  )\n}\n","import { useAutorun } from '@speedlo/hooks'\nimport { useXFieldState } from '@speedlo/xform'\nimport React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\nimport { UAParser } from 'ua-parser-js'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInput: React.FC = () => {\n  const agent = new UAParser(window.navigator.userAgent)\n  const isMobileSafari = agent.getBrowser().name === 'Mobile Safari'\n\n  const orderModel = useOrderModel()\n  const prefixField = useXFieldState<string>('phonePrefix')\n\n  useAutorun(() => {\n    const prefix = orderModel.defaultPhonePrefix\n    if (\n      prefix &&\n      orderModel.root.user.memoryApplied &&\n      prefixField.value.length === 0\n    ) {\n      prefixField.setValue(prefix)\n      if (prefix) {\n        prefixField.setTouched()\n      }\n    }\n  })\n\n  return (\n    <FormGroup>\n      <InputGroup>\n        <FormTextInput\n          name=\"phonePrefix\"\n          autoComplete={isMobileSafari ? 'off' : 'tel-country-code'}\n          placeholder=\"Prefix\"\n        />\n        <FormTextInput\n          name=\"phone\"\n          type=\"tel\"\n          autoComplete=\"tel-national\"\n          placeholder={i18n.t`Phone`}\n          style={{ width: '55%' }}\n        />\n      </InputGroup>\n    </FormGroup>\n  )\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n  </>\n)\n","import { cn } from '@speedlo/ui'\nimport { useXField } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\ninterface IProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  name: string\n  children: ReactNode\n}\n\nexport const StyledFormCheckbox = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n\n  input {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: white;\n    border: 1px solid;\n    border-color: #c5c5c5;\n    width: 2rem;\n    height: 2rem;\n    min-width: 2rem;\n    border-radius: 0.25rem;\n    position: relative;\n    margin: 0;\n    outline: none;\n    &:checked {\n      background-color: white;\n    }\n    &:checked:after {\n      content: '\\\\2714';\n      font-size: 2rem;\n      position: absolute;\n      top: -0.5rem;\n      left: 0.1rem;\n      color: #1d1d1d;\n      overflow: hidden;\n    }\n    &.is-invalid {\n      border-color: red;\n    }\n  }\n  label {\n    margin: 0 0 0 0.8rem;\n    vertical-align: top;\n  }\n`\n\nexport const FormCheckbox: React.FC<IProps> = ({\n  name,\n  children,\n  ...element\n}) => {\n  const field = useXField(name)\n  return useObserver(() => (\n    <StyledFormCheckbox\n      className={cn({ 'is-invalid': field.touched && Boolean(field.error) })}\n    >\n      <Input\n        {...element}\n        id={field.name}\n        name={field.name}\n        checked={field.value === true}\n        onChange={() => field.setValue(!field.value)}\n        type=\"checkbox\"\n      />\n      <label htmlFor={name}>{children}</label>\n    </StyledFormCheckbox>\n  ))\n}\n","import { IAgreementBoxProps } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Collapse, Input } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { StyledFormCheckbox } from '../../forms/FormCheckbox'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\n\nconst StyledOrderAgreementBox = styled.div`\n  button {\n    padding: 0 0.5rem;\n    font-size: 0.8rem;\n    min-width: 5rem;\n    color: darkgray;\n  }\n  div.description {\n    font-size: 0.8rem !important;\n    color: darkgray;\n    margin: 0.5rem 0 0.5rem 0;\n    & .row {\n      margin: 0;\n    }\n  }\n`\n\nexport const OrderAgreementBox = observer<IAgreementBoxProps>(\n  ({\n    agreement,\n    isValid,\n    isCollapsed,\n    titleNode,\n    descriptionNode,\n    inputProps,\n    buttonProps,\n  }) => {\n    const orderModel = useOrderModel()\n    const id = `agreement-${agreement.id}`\n\n    return (\n      <StyledOrderAgreementBox>\n        <StyledFormCheckbox>\n          <Input\n            {...inputProps}\n            id={id}\n            type=\"checkbox\"\n            disabled={orderModel.disableInteraction}\n            invalid={!isValid}\n            onInvalid={ev => {\n              if (!isValid) {\n                ;(ev.target as HTMLInputElement).setCustomValidity(\n                  i18n.t`Please check this box if you want to proceed.`,\n                )\n              }\n            }}\n            onClick={ev => {\n              ;(ev.target as HTMLInputElement).setCustomValidity('')\n            }}\n            data-testid={`OrderAgreement${\n              agreement.isMandatory ? 'Mandatory' : ''\n            }`}\n          />\n          <label htmlFor={id}>\n            {titleNode}\n            {agreement.isMandatory && ' * '}\n          </label>\n          <Button {...buttonProps} color=\"link\">\n            {isCollapsed\n              ? i18n.t`More...`.toLocaleLowerCase()\n              : i18n.t`Less`.toLocaleLowerCase()}\n          </Button>\n        </StyledFormCheckbox>\n        <Collapse isOpen={!isCollapsed} className=\"description\">\n          {descriptionNode}\n        </Collapse>\n      </StyledOrderAgreementBox>\n    )\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport { useAutorun } from '@speedlo/hooks'\nimport { useVamAgreements } from '@speedlo/ui'\nimport { useXField, useXFormState } from '@speedlo/xform'\nimport { debounce } from 'debounce'\nimport { autorun } from 'mobx'\nimport React from 'react'\n\nimport {\n  QOrderFormAgreementsVariables,\n  useQOrderFormAgreements,\n} from '../../graph/generated'\nimport { ARRAY_EMPTY } from '../../helpers/constants'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { OrderAgreementBox } from './OrderAgreementBox'\nimport { OrderFormValues, TAgreement } from './OrderFormSetup'\n\nexport const OrderAgreements: React.FC<NoChildren> = () => {\n  const orderModel = useOrderModel()\n\n  const formState = useXFormState<OrderFormValues>()\n  const [variables, setVariables] = React.useState<\n    QOrderFormAgreementsVariables\n  >()\n\n  React.useEffect(() => {\n    const updateVariablesLater = debounce(setVariables, 2000)\n\n    function extractVariables() {\n      const { firstname, lastname, phonePrefix, phone } = formState.values\n      return {\n        input: {\n          orderId: orderModel.orderId!,\n          firstname,\n          lastname,\n          phone: `${phonePrefix.trim()}${phone.trim()}`,\n        },\n      }\n    }\n\n    const dispose = autorun(() => {\n      updateVariablesLater(extractVariables())\n    })\n\n    return () => {\n      dispose()\n      updateVariablesLater.clear()\n    }\n  }, [formState, orderModel])\n\n  const { data, hasError } = useQOrderFormAgreements(variables, {\n    skip: !variables,\n  })\n\n  // remember latest agreements to prevent rendering to blank on update of form values\n  const agreements = React.useRef<RoA<TAgreement>>(ARRAY_EMPTY)\n\n  if (data) {\n    agreements.current = data.agreements\n  }\n\n  React.useEffect(() => {\n    if (agreements.current.length > 0 && !orderModel.isVamInitialized) {\n      orderModel.initVam()\n    }\n  })\n\n  const { state, renderVamAgreements } = useVamAgreements(agreements.current)\n\n  const validate = React.useCallback(() => {\n    const result = agreements.current.some(agreement => {\n      return (\n        agreement.isMandatory && !state.confirmedAgreements.has(agreement.id)\n      )\n    })\n    return result ? 'mandatory' : undefined\n  }, [state])\n\n  const field = useXField('agreements', { validate })\n\n  useAutorun(() => {\n    // confirmed agreements are stored in field to be collected for a submission later\n    const confirmed = Array.from(state.confirmedAgreements)\n    field.setValue(confirmed)\n  })\n\n  if (hasError) {\n    return (\n      <Trans>\n        Failed retrieving company agreements. Please try again later or contact\n        us.\n      </Trans>\n    )\n  }\n\n  return renderVamAgreements({ AgreementBox: OrderAgreementBox })\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../../common/Buttons'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { useOrderModel } from '../../../hooks/useOrderModel'\nimport { TOrderModel } from '../../../models/OrderModel'\n\ninterface IProps {\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n}\n\nexport const OrderMethodButton: React.FC<IProps> = ({\n  orderMethod,\n  onChange,\n  children,\n}) => {\n  const orderModel = useOrderModel()\n  return useObserver(() => (\n    <SelectButtonThemed\n      selected={orderModel.orderMethod === orderMethod}\n      onClick={() => {\n        orderModel.useOrderMethod(orderMethod)\n        onChange(orderModel)\n      }}\n      data-testid={`orderMethod-${orderMethod}`}\n      data-testselected={orderModel.orderMethod === orderMethod}\n    >\n      {children}\n    </SelectButtonThemed>\n  ))\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { TOrderModel } from '../../../models/OrderModel'\nimport { RM } from '../../../tools/ramda'\nimport { OrderMethodButton } from './OrderMethodButton'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\nconst StyledOrderMethod = styled.div`\n  padding: 0.2rem;\n\n  & button {\n    font-size: 1.3rem;\n    margin: 0.3rem 1rem 0.3rem 1rem;\n    padding: 0.3rem 1.2rem;\n    height: 2.7rem;\n    line-height: 1rem;\n    white-space: nowrap;\n\n    span:before {\n      margin: 0 0.8rem 0 0;\n      font-size: 2rem;\n      font-weight: initial;\n    }\n  }\n`\n\nexport const OrderMethod: React.FC<IProps> = ({ onChange = RM.identity }) => {\n  return (\n    <StyledOrderMethod>\n      <OrderMethodButton\n        orderMethod={DeliveryTypeEnum.Messenger}\n        onChange={onChange}\n      >\n        <span className=\"flaticon-transport\" />\n        <Trans>I want to deliver</Trans>\n      </OrderMethodButton>\n      <OrderMethodButton\n        orderMethod={DeliveryTypeEnum.Pickup}\n        onChange={onChange}\n      >\n        <span className=\"flaticon-restaurant\" />\n        <Trans>I'll pick up</Trans>\n      </OrderMethodButton>\n    </StyledOrderMethod>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\n\nexport interface IPaymentButtonProps {\n  paymentMethod: PaymentGateEnum\n}\n\nexport const OrderPaymentButton = observer<IPaymentButtonProps>(\n  ({ children, paymentMethod }) => {\n    const { order: orderModel } = useRoot()\n    const isSelected = orderModel.paymentMethod === paymentMethod\n    return (\n      <SelectButtonThemed\n        disabled={orderModel.disableInteraction}\n        selected={isSelected}\n        onClick={() => {\n          orderModel.setPaymentMethod(paymentMethod)\n        }}\n        data-testid={`orderPaymentMethod-${paymentMethod}`}\n      >\n        <Checkmark show={isSelected} />\n        {children}\n      </SelectButtonThemed>\n    )\n  },\n)\n\nfunction Checkmark({ show }: { show: boolean }) {\n  return show ? (\n    <span className=\"flaticon-mark order__payment__method__button__checked\" />\n  ) : (\n    <div className=\"order__payment__method__button__unchecked\" />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { OrderPaymentButton } from './OrderPaymentButton'\n\nconst StyledOrderPaymentMethod = styled.div`\n  margin: 0 0 1.4rem 0;\n  span::before {\n    margin-left: 0;\n    margin-right: 0.5rem;\n  }\n  button {\n    position: relative;\n    padding-top: 0.3rem;\n    margin-bottom: 0.2rem;\n    height: 2.8rem;\n  }\n  button:first-of-type {\n    margin-right: 0.8rem;\n  }\n  .order__payment__method__button__unchecked {\n    width: 1.75rem;\n    height: 1.4rem;\n    margin: 0;\n    display: inline-block;\n  }\n`\n\nexport const OrderPaymentMethod = React.memo(() => (\n  <StyledOrderPaymentMethod>\n    <OrderPaymentButton paymentMethod={PaymentGateEnum.Gopay}>\n      <span className=\"flaticon-credit-card\">\n        <Trans>Pay by card</Trans>\n      </span>\n    </OrderPaymentButton>\n    <OrderPaymentButton paymentMethod={PaymentGateEnum.Cash}>\n      <span className=\"flaticon-money\">\n        <Trans>Pay by cash</Trans>\n      </span>\n    </OrderPaymentButton>\n  </StyledOrderPaymentMethod>\n))\n","import './CartView.css'\n\nimport { Trans } from '@lingui/macro'\nimport { CartLabels, useCartSystem } from '@speedlo/cart'\nimport { disableBatching } from '@speedlo/graphql'\nimport { autorun } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useTheme } from '../../app/ThemeSwitchProvider'\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ButtonStrip } from '../../common/ButtonStrip'\nimport { mobileBreakpoint } from '../../common/Responsive'\nimport { useQCart } from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { useCartControl } from './hooks/useCartControl'\n\ninterface IProps {\n  orderId: MaybeID\n  isReadonly: boolean\n  isMobileConfirm?: boolean\n}\n\nconst StyledCartSystem = styled.div`\n  & .animated {\n    z-index: 10;\n  }\n`\n\nexport const CartSystem: React.FC<IProps> = ({\n  orderId,\n  isReadonly,\n  isMobileConfirm = false,\n}) => {\n  const theme = useTheme()\n  const labels = React.useMemo(getCartLabels, [])\n  const orderModel = useOrderModel()\n\n  const {\n    cartModel,\n    onItemEdit,\n    onItemRemove,\n    onPlaceOrder,\n    onChangeOrder,\n  } = useCartControl()\n\n  const renderMobileSubmit = React.useCallback(() => {\n    if (isMobileConfirm && orderModel.disableInteraction) {\n      return null\n    }\n    const shouldPlaceOrder = !isReadonly || orderModel.disableInteraction\n    return (\n      <ButtonStrip>\n        <PrimaryButton\n          onClick={shouldPlaceOrder ? onPlaceOrder : onChangeOrder}\n        >\n          {shouldPlaceOrder ? (\n            <Trans>Place order</Trans>\n          ) : (\n            <Trans>Change order</Trans>\n          )}\n        </PrimaryButton>\n      </ButtonStrip>\n    )\n  }, [isMobileConfirm, isReadonly, onChangeOrder, onPlaceOrder, orderModel])\n\n  const renderGoodsLoading = React.useCallback(\n    () => <Trans>Accessing your order</Trans>,\n    [],\n  )\n\n  const cart = useCartSystem({\n    colors: {\n      primary: theme.primary,\n      sumRowBg: theme.primary,\n      sumRowText: 'white',\n      mobileSummaryItemCount: theme.secondary,\n    },\n    labels,\n    isReadonly,\n    mobileBreakpoint,\n    backgroundImage: theme.backgroundCart,\n    onItemEdit,\n    onItemRemove,\n    renderMobileSubmit,\n    renderGoodsLoading,\n  })\n\n  React.useEffect(\n    () =>\n      autorun(() => {\n        cartModel.updateDisplay(cart.store.isMobile, cart.store.showGoods)\n      }),\n    [cart.store, cartModel],\n  )\n\n  const root = useRoot()\n\n  return useObserver(function useObserverBody() {\n    const { getStash } = useQCart(\n      {\n        orderId: orderId!,\n        withGoods: cartModel.withGoods,\n        withPresence: cartModel.withPresence,\n      },\n      {\n        skip: !root.initialized || !orderId,\n        ...disableBatching,\n      },\n    )\n\n    const order = getStash(data => data.order)\n\n    React.useEffect(() => {\n      if (order) {\n        cart.updateSummary(order)\n        if (cartModel.withGoods) {\n          cart.updateGoods(order)\n        }\n      }\n    })\n\n    return <StyledCartSystem>{cart.renderCart()}</StyledCartSystem>\n  })\n}\n\nfunction getCartLabels(): CartLabels {\n  return {\n    noSideDish: <Trans>Without sidedish</Trans>,\n    noCost: <Trans>For free</Trans>,\n    cartSumHeader: totalPrice => (\n      <Trans>In the cart you have goods for {totalPrice}</Trans>\n    ),\n    emptyCart: <Trans>Cart is empty</Trans>,\n    totalDiscount: <Trans>Total discount</Trans>,\n    coverPrice: <Trans>Covers</Trans>,\n    transportFee: <Trans>Delivery</Trans>,\n    totalSum: <Trans>Total</Trans>,\n    tip: <Trans>Tip</Trans>,\n    minimalOrderPrice: price => (\n      <Trans>Minimal price of order is {price}</Trans>\n    ),\n  }\n}\n","import { disableBatching, useApolloClient } from '@speedlo/graphql'\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport {\n  MRemoveCartItemMutation,\n  MRemoveCartItemVariables,\n  QCartDocument,\n  QCartQuery,\n  QCartVariables,\n  useMRemoveCartItem,\n} from '../../../graph/generated'\nimport { idPropEq, RM } from '../../../tools/ramda'\n\nexport function useCartControl() {\n  const { order: orderModel, cart: cartModel } = useRoot()\n  const client = useApolloClient()\n  const { history } = useRouterContext()\n  const onItemEdit = React.useCallback(\n    (item: ID) => {\n      orderModel.changeCartItem(item)\n    },\n    [orderModel],\n  )\n\n  const [removeItem] = useMRemoveCartItem()\n\n  const onItemRemove = React.useCallback(\n    (item: ID) => {\n      const variables: MRemoveCartItemVariables = {\n        itemId: item,\n        withGoods: cartModel.withGoods,\n        withPresence: cartModel.withPresence,\n      }\n      removeItem(variables, {\n        optimisticResponse: makeOptimisticRemove(variables),\n        ...disableBatching,\n      })\n    },\n    [cartModel, makeOptimisticRemove, removeItem],\n  )\n\n  const onPlaceOrder = React.useCallback(() => {\n    history.push('/confirm')\n  }, [history])\n\n  const onChangeOrder = React.useCallback(() => {\n    history.push('/order')\n  }, [history])\n\n  return { cartModel, onItemEdit, onItemRemove, onPlaceOrder, onChangeOrder }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function makeOptimisticRemove(\n    variables: MRemoveCartItemVariables,\n  ): MRemoveCartItemMutation | undefined {\n    const current = client.readQuery<QCartQuery, QCartVariables>(\n      {\n        query: QCartDocument,\n        variables: {\n          orderId: orderModel.orderId!,\n          withGoods: cartModel.withGoods,\n          withPresence: cartModel.withPresence,\n        },\n      },\n      true,\n    )\n    if (!current) {\n      return undefined\n    }\n    const rejectItem = RM.reject(idPropEq(variables.itemId))\n    return {\n      __typename: 'Mutation',\n      remove: {\n        ...current.order,\n        countWares: current.order.countWares - 1,\n        totalSum: {\n          ...current.order.totalSum,\n          value: -1,\n        },\n        items: variables.withGoods\n          ? rejectItem(current.order.items)\n          : current.order.items,\n        presence: variables.withPresence\n          ? rejectItem(current.order.presence)\n          : current.order.presence,\n      },\n    }\n  }\n}\n"],"sourceRoot":""}