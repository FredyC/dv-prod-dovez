{"version":3,"sources":["segments/mobile/MobileConfirmView.tsx","common/ScrollToTop.tsx","segments/mobile/MobilePaymentMethod.tsx","segments/mobile/MobilePaymentButton.tsx","segments/mobile/MobileDeliveryView.tsx","segments/mobile/MobileFinishView.tsx","segments/mobile/MobileIntroView.tsx","segments/mobile/MobileShopIntro.tsx","segments/mobile/MobileShopIntro.graphql.ts","segments/mobile/MobileOrderView.tsx","segments/mobile/MobileCart.tsx","segments/mobile/MobileCartSummary.tsx","segments/mobile/MobileClosingTimeModal.tsx","segments/mobile/MobileClosingTimeModal.graphql.ts","segments/mobile/MobilePickupView.tsx","segments/mobile/MobilePickupList.tsx","segments/mobile/MobilePickupMap.tsx","segments/mobile/MobileSmartBanner.tsx","segments/mobile/MobileSmartBanner.graphql.ts","app/MobileApp.tsx","segments/mobile/MobileHeader.tsx"],"names":["__webpack_require__","_react","_react2","_interopRequireDefault","_ScrollToTop","_WithOrder","_i18n","_OrderAgreements","_OrderErrorModal","_OrderFormInputs","_OrderFormSetup","_OrderFormStorageNotice","_OrderGoPayModal","_OrderTimePicker","_MobileHeader","_MobilePaymentMethod","history","default","createElement","className","text","i18n","_","buttonText","onButtonClick","goBack","WithOrder","render","order","OrderFormSetup","form","Fragment","ScrollToTop","OrderFormStorageNotice","OrderGoPayModal","OrderErrorModal","OrderTimePicker","Trans","id","OrderFormInputs","OrderAgreements","MobilePaymentMethod","orderModel","onConfirm","submitForm","PureComponent","[object Object]","window","scrollTo","_types","_MobilePaymentButton","MobilePaymentButton","method","PaymentGateEnum","Gopay","onClick","data-testid","toLocaleUpperCase","Cash","_reactForm","_Buttons","_SubmitSpinner","_a","disabled","children","props","__rest","observe","Field","field","fieldApi","SelectButtonThemed","_extends","selected","value","isSubmitting","setValue","_BaseMap","_WithRoot","_DeliveryMap","map","useRoot","BaseMap","model","DeliveryMap","push","_reactstrap","_ColStyle","_FinishViewFooter","_FinishViewLoader","_FinishViewOrder","_FinishViewSupport","Row","ColStyle","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","branch","companyBranch","FinishViewFooter","finish","_reactRouterDom","_BackgroundThemed","_OrderMethod","_ShopHeaderIcons","_MobileShopIntro","imageName","size","fixed","ShopHeaderIcons","MobileShopIntro","Route","OrderMethod","onChange","usingDeliveryOrderMethod","usingPickupOrderMethod","_mobxReactLite","business","useObserver","QueryMobileShopIntro","variables","branchId","renderLoading","headerText","_graphqlTag","_buildQuery","MobileShopIntroQuery","buildQuery","_AddToCartModal","_FoodMenuView","_MobileCart","_MobileClosingTimeModal","redirect","FoodMenuView","MobileCart","orderId","AddToCartModal","MobileClosingTimeModal","_classnames","_interopRequireWildcard","_reactRouter","_CartView","_OrderSubmitLine","_MobileCart2","_MobileCartSummary","MobileCartController","Component","this","state","isOpen","goConfirm","setOpen","setState","onToggle","isEmpty","prev","onSubmit","count","price","isLoading","Redirect","to","mobile__sliding__cart__open","MobileCartSummary","CartView","OrderSubmitLine","canSubmit","QueryMobileCart","loading","countWares","totalSum","formattedValue","_styledComponents","MobileCartSummaryCountThemed","div","withConfig","displayName","theme","secondary","MobileCartSummaryPriceThemed","span","primary","showContent","values","components","_ShopClosingTimeModal","QueryMobileShopStatus","ShopClosingTimeModal","status","_graph","_fragments","MobileShopStatusQuery","CompanyBranchStatusFragment","_ramda","_PickupMap","_MobilePickupList","_MobilePickupMap","renderQuery","root","match","params","isBrand","QueryPickupMapBrand","brandId","branches","find","RM","propEq","renderHeader","renderMap","renderList","QueryPickupMapBranch","createPickupOrder","name","onSelect","onSelectBranch","onShowMap","onPrefetch","prefetchFoodMenu","WithRoot","_ShopAddress","_ShopStatusDisplay","StatusDisplayPosition","key","ShopAddress","address","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","SecondaryButton","pickupEnabled","PrimaryButton","onMouseEnter","toLocaleLowerCase","_reactGoogleMaps","_ButtonStripe","_gps","ButtonStripeContainerStyled","panToBranch","panToLocation","gps","latlng","gpsToLatLng","latitude","Number","longitude","undefined","Marker","position","_uaParserJs","_MobileSmartBanner2","SmartBannerContainer","getPlatformType","os","navigator","userAgent","getOS","MobilePlatformEnum","Ios","Android","platform","isValid","banner","ensureBannerForCurrentBranch","shouldBeVisible","QueryBanner","app","setClosedNow","style","backgroundImage","icon","title","href","url","setInstalledNow","BannerQuery","_MobileConfirmView","_MobileDeliveryView","_MobileFinishView","_MobileIntroView","_MobileOrderView","_MobilePickupView","_MobileSmartBanner","path","component","MobileSmartBanner","Container","fluid","exact","MobileIntroView","MobilePickupView","MobileDeliveryView","MobileOrderView","MobileConfirmView","MobileFinishView","buttonRight","leftButton","MobileHeaderButton","rightButton","isConfirm"],"mappings":"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","file":"static/js/4.eb629da1.chunk.js","sourcesContent":["import './MobileConfirmView.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { ScrollToTop } from '../../common/ScrollToTop'\nimport { WithOrder } from '../../common/WithOrder'\nimport { i18n } from '../../i18n'\nimport { OrderAgreements } from '../orderForm/OrderAgreements'\nimport { OrderErrorModal } from '../orderForm/OrderErrorModal'\nimport { OrderFormInputs } from '../orderForm/OrderFormInputs'\nimport { OrderFormSetup } from '../orderForm/OrderFormSetup'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderGoPayModal } from '../orderForm/OrderGoPayModal'\nimport { OrderTimePicker } from '../orderForm/OrderTimePicker'\nimport MobileHeader from './MobileHeader'\nimport { MobilePaymentMethod } from './MobilePaymentMethod'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MobileConfirmView: React.SFC<IProps> = ({ history }) => (\n  <div className=\"mobile__confirm__view\">\n    <MobileHeader\n      text={i18n.t`Order confirmation`}\n      buttonText={i18n.t`Cancel`}\n      onButtonClick={() => history.goBack()}\n    />\n    <WithOrder\n      render={order => (\n        <OrderFormSetup\n          order={order}\n          render={form => (\n            <>\n              <ScrollToTop />\n              <OrderFormStorageNotice />\n              <OrderGoPayModal order={order} />\n              <OrderErrorModal />\n              <OrderTimePicker />\n              <div className=\"mobile__confirm__view__form\">\n                <h3>\n                  <Trans>Where and to whom we deliver?</Trans>\n                </h3>\n                <OrderFormInputs />\n                <OrderAgreements />\n              </div>\n              <div className=\"mobile__confirm__view__submit\">\n                <h4>\n                  <Trans>Place order</Trans>\n                </h4>\n                <MobilePaymentMethod\n                  orderModel={order}\n                  onConfirm={form.submitForm}\n                />\n              </div>\n            </>\n          )}\n        />\n      )}\n    />\n  </div>\n)\n","import { PureComponent } from 'react'\n\ninterface IProps {}\n\nexport class ScrollToTop extends PureComponent<IProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return null\n  }\n}\n","import './MobilePaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { MobilePaymentButton } from './MobilePaymentButton'\n\ninterface IProps {\n  orderModel: TOrderModel\n  onConfirm(): void\n}\n\nexport const MobilePaymentMethod: React.SFC<IProps> = ({\n  orderModel,\n  onConfirm,\n}) => (\n  <div className=\"mobile__confirm__payment__method\">\n    <MobilePaymentButton\n      method={PaymentGateEnum.Gopay}\n      onClick={onConfirm}\n      data-testid=\"mobilePaymentMethodGoPay\"\n    >\n      <span className=\"flaticon-credit-card\">\n        {i18n.t`Pay by card`.toLocaleUpperCase()}\n      </span>\n    </MobilePaymentButton>\n    <MobilePaymentButton\n      method={PaymentGateEnum.Cash}\n      onClick={onConfirm}\n      data-testid=\"mobilePaymentMethodCash\"\n    >\n      <span className=\"flaticon-money\">\n        {i18n.t`Pay by cash`.toLocaleUpperCase()}\n      </span>\n    </MobilePaymentButton>\n  </div>\n)\n","import React from 'react'\nimport { Field } from 'react-form'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { PaymentGateEnum } from '../../graph/types'\n\ninterface IProps {\n  method: PaymentGateEnum\n  disabled?: boolean\n  onClick(): void\n}\n\nexport const MobilePaymentButton: React.SFC<IProps> = ({\n  method,\n  disabled,\n  onClick,\n  children,\n  ...props\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <Field\n        field=\"payment\"\n        render={fieldApi => (\n          <SelectButtonThemed\n            selected={fieldApi.value === method}\n            disabled={disabled || order.isSubmitting}\n            onClick={() => {\n              fieldApi.setValue(method)\n              onClick()\n            }}\n            {...props}\n          >\n            {order.isSubmitting && fieldApi.value === method ? (\n              <SubmitSpinner />\n            ) : (\n              children\n            )}\n          </SelectButtonThemed>\n        )}\n      />\n    )}\n  />\n)\n","import './MobileMap.css'\n\nimport { History } from 'history'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { DeliveryMap } from '../map/DeliveryMap'\nimport MobileHeader from './MobileHeader'\n\ninterface IProps extends RouteComponentProps<{}> {\n  history: History\n}\n\nexport const MobileDeliveryView: React.FC<IProps> = ({ history }) => {\n  const { map } = useRoot()\n  return (\n    <div>\n      <MobileHeader\n        text={i18n.t`Enter the address`}\n        buttonText={i18n.t`Back`}\n        onButtonClick={() => history.goBack()}\n      />\n      <div className=\"mobile__map__view\">\n        <BaseMap model={map}>\n          <DeliveryMap onConfirm={() => history.push('/order')} />\n        </BaseMap>\n      </div>\n    </div>\n  )\n}\n","import '../finish/FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport { FinishViewFooter } from '../finish/FinishViewFooter'\nimport { FinishViewLoader } from '../finish/FinishViewLoader'\nimport { FinishViewOrder } from '../finish/FinishViewOrder'\nimport { FinishViewSupport } from '../finish/FinishViewSupport'\n\ninterface IProps {}\n\nexport const MobileFinishView: React.SFC<IProps> = ({}) => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyle>\n      <div className=\"finish__view__mobile\">\n        <FinishViewLoader\n          render={result => (\n            <>\n              <FinishViewOrder order={result.order} />\n              <FinishViewSupport branch={result.companyBranch} />\n              <FinishViewFooter finish={result} />\n            </>\n          )}\n        />\n      </div>\n    </ColStyle>\n  </Row>\n)\n","import './MobileIntroView.css'\n\nimport React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { OrderMethod } from '../destination/OrderMethod'\nimport { ShopHeaderIcons } from '../shop/ShopHeaderIcons'\nimport { MobileShopIntro } from './MobileShopIntro'\n\nexport const MobileIntroView: React.SFC = () => (\n  <div className=\"mobile__intro\">\n    <BackgroundThemed\n      className=\"mobile__intro__logo\"\n      data-testid=\"MobileIntroView__BackgroundThemed\"\n      imageName=\"storeLogoMobile\"\n      size=\"cover\"\n      fixed={false}\n    >\n      <ShopHeaderIcons />\n    </BackgroundThemed>\n    <div className=\"mobile__intro__info\">\n      <MobileShopIntro />\n      <Route>\n        {({ history }) => (\n          <OrderMethod\n            onChange={order => {\n              if (order.usingDeliveryOrderMethod) {\n                history.push('/delivery')\n              } else if (order.usingPickupOrderMethod) {\n                history.push('/pickup')\n              }\n            }}\n          />\n        )}\n      </Route>\n    </div>\n  </div>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { QueryMobileShopIntro } from './MobileShopIntro.graphql'\n\nexport const MobileShopIntro: React.FC = () => {\n  const { business } = useRoot()\n  return useObserver(() => (\n    <QueryMobileShopIntro\n      variables={{ branchId: business.branchId! }}\n      renderLoading={() => null}\n      render={({ companyBranch: { headerText } }) => (\n        <div data-testid=\"MobileShopIntro\">{headerText}</div>\n      )}\n    />\n  ))\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph/buildQuery'\nimport { GMobileShopIntro } from '../../graph/types'\n\nexport const MobileShopIntroQuery = gql`\n  query GMobileShopIntro($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      headerText\n    }\n  }\n`\n\nexport const QueryMobileShopIntro = buildQuery<\n  GMobileShopIntro.Query,\n  GMobileShopIntro.Variables\n>(MobileShopIntroQuery)\n","import './MobileOrderView.css'\n\nimport React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { AddToCartModal } from '../cart/AddToCartModal'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { MobileCart } from './MobileCart'\nimport { MobileClosingTimeModal } from './MobileClosingTimeModal'\n\nexport const MobileOrderView = props => (\n  <WithOrder\n    redirect={true}\n    render={order => (\n      <div className=\"mobile__order__view\">\n        <FoodMenuView />\n        <MobileCart orderId={order.orderId!} />\n        <AddToCartModal order={order} />\n        <MobileClosingTimeModal branchId={order.branchId!} />\n      </div>\n    )}\n  />\n)\n","import './MobileCart.css'\nimport './MobileSlidingCart.css'\n\nimport classNames from 'classnames'\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router'\n\nimport { CartView } from '../cart/CartView'\nimport { OrderSubmitLine } from '../orderForm/OrderSubmitLine'\nimport { QueryMobileCart } from './MobileCart.graphql'\nimport { MobileCartSummary } from './MobileCartSummary'\n\ninterface IProps {\n  count: number\n  price: string\n  isLoading: boolean\n}\n\ninterface IState {\n  isOpen: boolean\n  goConfirm: boolean\n}\n\nclass MobileCartController extends Component<IProps, IState> {\n  state = { isOpen: false, goConfirm: false }\n\n  setOpen = (isOpen: boolean) => {\n    this.setState({ isOpen })\n  }\n\n  static getDerivedStateFromProps({ count }: IProps, { isOpen }: IState) {\n    if (count === 0 && isOpen === true) {\n      return {\n        isOpen: false,\n      }\n    }\n    return null\n  }\n\n  // shouldComponentUpdate({ isLoading }: IProps) {\n  //   return !isLoading\n  // }\n\n  get isEmpty() {\n    return this.props.count === 0\n  }\n\n  onToggle = () => {\n    if (this.isEmpty) {\n      this.setOpen(false)\n    } else {\n      this.setState(prev => ({ isOpen: !prev.isOpen }))\n    }\n  }\n\n  onSubmit = () => {\n    this.setState({ goConfirm: true })\n  }\n\n  render() {\n    const { count, price, isLoading } = this.props\n    const { isOpen, goConfirm } = this.state\n\n    if (goConfirm) {\n      return <Redirect to=\"/confirm\" push={true} />\n    }\n\n    return (\n      <div\n        className={classNames('mobile__sliding__cart', {\n          mobile__sliding__cart__open: isOpen,\n        })}\n      >\n        <div className=\"mobile__cart__view\">\n          <MobileCartSummary\n            count={count}\n            price={price}\n            isLoading={isLoading}\n            onClick={this.onToggle}\n          />\n          {isOpen ? (\n            <>\n              <CartView />\n              <OrderSubmitLine\n                canSubmit={!this.isEmpty}\n                onClick={this.onSubmit}\n              />\n            </>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const MobileCart: React.SFC<{ orderId: ID }> = ({ orderId }) => (\n  <QueryMobileCart\n    variables={{ orderId }}\n    renderLoading={false}\n    render={({ order }, { loading }) => (\n      <MobileCartController\n        count={order ? order.countWares : 0}\n        price={order ? order.totalSum.formattedValue : '???'}\n        isLoading={loading || !order}\n      />\n    )}\n  />\n)\n","import './MobileCartSummary.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  count: number\n  price: string\n  isLoading: boolean\n  onClick(): void\n}\n\nconst MobileCartSummaryCountThemed = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n`\n\nconst MobileCartSummaryPriceThemed = styled.span`\n  color: ${({ theme }) => theme.primary};\n`\n\nexport const MobileCartSummary: React.SFC<IProps> = ({\n  count,\n  price,\n  isLoading,\n  onClick,\n}) => {\n  const showContent = count > 0 || isLoading === true\n  return (\n    <div\n      className=\"mobile__cart__summary\"\n      data-testid=\"mobileCartSummary\"\n      onClick={onClick}\n    >\n      {showContent ? (\n        <div className=\"mobile__cart__summary__toggle\">\n          <span className=\"flaticon-chevron-up\" />\n        </div>\n      ) : null}\n\n      <div className=\"mobile__cart__summary__info\">\n        <span className=\"flaticon-cart\" />\n        {showContent ? (\n          <MobileCartSummaryCountThemed\n            className=\"mobile__cart__summary__count\"\n            data-testid=\"mobileCartSummary__Count\"\n          >\n            {count || '?'}\n          </MobileCartSummaryCountThemed>\n        ) : null}\n        {!showContent ? (\n          <span data-testid=\"cartIsEmpty\">{i18n.t`Cart is empty`}</span>\n        ) : (\n          <div\n            className=\"mobile__cart__summary__cart__with__price\"\n            data-testid=\"mobileCartSummary__Price\"\n          >\n            <Trans>\n              In the cart you have goods for\n              <MobileCartSummaryPriceThemed className=\"mobile__cart__summary__price\">\n                {price}\n              </MobileCartSummaryPriceThemed>\n            </Trans>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { ShopClosingTimeModal } from '../shop/ShopClosingTimeModal'\nimport { QueryMobileShopStatus } from './MobileClosingTimeModal.graphql'\n\ninterface IProps {\n  branchId: ID\n}\n\nexport const MobileClosingTimeModal: React.SFC<IProps> = ({ branchId }) => (\n  <QueryMobileShopStatus\n    variables={{ branchId }}\n    render={({ branch }) => <ShopClosingTimeModal status={branch} />}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { CompanyBranchStatusFragment } from '../../graph/fragments.graphql'\nimport { GMobileShopStatus } from '../../graph/types'\n\nexport const MobileShopStatusQuery = gql`\n  query GMobileShopStatus($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      ...GCompanyBranchStatus\n    }\n  }\n  ${CompanyBranchStatusFragment}\n`\n\nexport const QueryMobileShopStatus = buildQuery<\n  GMobileShopStatus.Query,\n  GMobileShopStatus.Variables\n>(MobileShopStatusQuery)\n","import React, { Component } from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport { TRootModel } from '../../models/RootModel'\nimport {\n  QueryPickupMapBranch,\n  QueryPickupMapBrand,\n} from '../map/PickupMap.graphql'\nimport MobileHeader from './MobileHeader'\nimport MobilePickupList from './MobilePickupList'\nimport MobilePickupMap from './MobilePickupMap'\n\ninterface IRouteParams {\n  branchId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport class MobilePickupView extends Component<IProps> {\n  async onSelectBranch(branchId: ID, root: TRootModel) {\n    await root.order.createPickupOrder(branchId)\n    this.props.history.push('/order')\n  }\n  renderHeader(branch: Maybe<GPickupBranch.Fragment>) {\n    return (\n      <MobileHeader\n        text={branch ? branch.name : i18n.t`Choose branch`}\n        buttonText={i18n.t`Back`}\n        onButtonClick={() => this.props.history.goBack()}\n      />\n    )\n  }\n  renderMap(branch: Maybe<GPickupBranch.Fragment>, root: TRootModel) {\n    return (\n      <MobilePickupMap\n        model={root.map}\n        branch={branch}\n        onSelect={() => branch && this.onSelectBranch(branch.id, root)}\n      />\n    )\n  }\n  renderList(\n    branches: ReadonlyArray<GPickupBranch.Fragment>,\n    root: TRootModel,\n  ) {\n    return (\n      <MobilePickupList\n        branches={branches}\n        onShowMap={({ id }) => this.props.history.push(`/pickup/${id}`)}\n        onSelect={({ id }) => this.onSelectBranch(id, root)}\n        onPrefetch={id => root.order.prefetchFoodMenu(id)}\n      />\n    )\n  }\n  renderQuery = (root: TRootModel) => {\n    const { branchId } = this.props.match.params\n    if (root.business.isBrand) {\n      return (\n        <QueryPickupMapBrand\n          variables={{ brandId: root.business.brandId! }}\n          renderLoading={!branchId}\n          render={({ branches }) => {\n            const branch =\n              (branches && branches.find(RM.propEq('id', branchId))) || null\n            return (\n              <>\n                {this.renderHeader(branch)}\n                {branch\n                  ? this.renderMap(branch, root)\n                  : this.renderList(branches, root)}\n              </>\n            )\n          }}\n        />\n      )\n    }\n    return (\n      <QueryPickupMapBranch\n        variables={{ branchId: root.business.branchId! }}\n        renderLoading={false}\n        render={({ branch }, { loading }) => (\n          <>\n            {this.renderHeader(branch)}\n            {this.renderMap(branch, root)}\n          </>\n        )}\n      />\n    )\n  }\n  render() {\n    return <WithRoot render={this.renderQuery} />\n  }\n}\n","import './MobilePickupList.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { PrimaryButton, SecondaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { GPickupBranch } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { ShopStatusDisplay } from '../shop/ShopStatusDisplay'\n\ninterface IProps {\n  branches: ReadonlyArray<GPickupBranch.Fragment>\n  onSelect(site: GPickupBranch.Fragment): void\n  onShowMap(site: GPickupBranch.Fragment): void\n  onPrefetch(branchId: ID): void\n}\n\nconst StatusDisplayPosition = styled.div``\n\nconst MobilePickupList: React.SFC<IProps> = ({\n  branches,\n  onSelect,\n  onShowMap,\n  onPrefetch,\n}) => {\n  const renderBranch = (branch: GPickupBranch.Fragment) => {\n    return (\n      <div\n        className=\"mobile__pickup__list__item\"\n        data-testid=\"MobilePickupList\"\n        key={branch.id}\n      >\n        <div className=\"mobile__pickup__list__header\">{branch.name}</div>\n        <ShopAddress address={branch.address} />\n        <StatusDisplayPosition>\n          <ShopStatusDisplay\n            status={branch}\n            deliveryTime={branch.defaultDeliveryTime}\n            pickupTime={branch.defaultPickupTime}\n          />\n        </StatusDisplayPosition>\n\n        <div className=\"mobile__pickup__list__buttons\">\n          <SecondaryButton onClick={() => onShowMap(branch)}>\n            <span className=\"flaticon-signs\">\n              {i18n.t`Show on map`.toLocaleUpperCase()}\n            </span>\n          </SecondaryButton>\n          {branch.pickupEnabled ? (\n            <PrimaryButton\n              onClick={() => onSelect(branch)}\n              onMouseEnter={() => onPrefetch(branch.id)}\n            >\n              <span className=\"flaticon-mark\">\n                {i18n.t`Choose`.toLocaleUpperCase()}\n              </span>\n            </PrimaryButton>\n          ) : (\n            <PrimaryButton disabled={true}>\n              <span className=\"flaticon-mark\">\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </span>\n            </PrimaryButton>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"mobile__pickup__list\">\n      {branches && branches.map(renderBranch)}\n    </div>\n  )\n}\n\nexport default MobilePickupList\n","import React, { PureComponent } from 'react'\nimport { Marker } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { TMapModel } from '../../models/MapModel'\n\ninterface IProps {\n  model: TMapModel\n  branch: Maybe<GPickupBranch.Fragment>\n  onSelect(): void\n}\n\nconst ButtonStripeContainerStyled = styled.div`\n  margin-top: 2rem;\n  z-index: 10;\n`\n\nclass MobilePickupMap extends PureComponent<IProps> {\n  componentDidMount() {\n    this.panToBranch()\n  }\n  componentDidUpdate() {\n    this.panToBranch()\n  }\n  panToBranch() {\n    const { model, branch } = this.props\n    if (branch) {\n      model.panToLocation(branch.gps)\n    }\n  }\n  render() {\n    const { model, branch, onSelect } = this.props\n    const latlng = branch\n      ? gpsToLatLng({\n          latitude: Number(branch.gps.latitude),\n          longitude: Number(branch.gps.longitude),\n        })\n      : undefined\n    return (\n      <div>\n        <div className=\"mobile__map__view\">\n          <BaseMap model={model}>\n            <Marker position={latlng} />\n          </BaseMap>\n        </div>\n        {branch && branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                onClick={onSelect}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Choose branch`.toLocaleUpperCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n        {branch && !branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                disabled={true}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default MobilePickupMap\n","import './MobileSmartBanner.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\nimport UAParser from 'ua-parser-js'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { MobilePlatformEnum } from '../../graph/types'\nimport { QueryBanner } from './MobileSmartBanner.graphql'\n\ninterface IProps {}\n\nconst SmartBannerContainer = styled.div`\n  border-bottom: 1px solid #8f8f8f;\n  height: 81px;\n  position: absolute;\n  z-index: 1;\n  top: 3rem;\n  width: 100%;\n`\n\nexport const MobileSmartBanner: React.SFC<IProps> = props => (\n  <WithRoot\n    observe={true}\n    render={({ business }) => {\n      const platform = getPlatformType()\n      if (!business.isValid || platform === null) {\n        return null\n      }\n      const banner = business.ensureBannerForCurrentBranch()\n      if (!banner.shouldBeVisible) {\n        return null\n      }\n      const wrapperClassName = `smartbanner smartbanner-ios smartbanner-top`\n      return (\n        <QueryBanner\n          variables={{\n            branchId: banner.branchId,\n            platform,\n          }}\n          render={({ app }) => {\n            return app ? (\n              <SmartBannerContainer>\n                <div className={wrapperClassName}>\n                  <div className=\"smartbanner-container\">\n                    <a\n                      className=\"smartbanner-close\"\n                      onClick={banner.setClosedNow}\n                    >\n                      &times;\n                    </a>\n                    <span\n                      className=\"smartbanner-icon\"\n                      style={{ backgroundImage: `url(${app.icon})` }}\n                    />\n                    <div className=\"smartbanner-info\">\n                      <div className=\"smartbanner-title\">{app.title}</div>\n                      <div className=\"smartbanner-description\">\n                        <Trans>Free</Trans>\n                      </div>\n                    </div>\n                    <div className=\"smartbanner-wrapper\">\n                      <a\n                        href={app.url}\n                        onClick={banner.setInstalledNow}\n                        className=\"smartbanner-button\"\n                      >\n                        <span className=\"smartbanner-button-text\">\n                          <Trans>Show app</Trans>\n                        </span>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </SmartBannerContainer>\n            ) : null\n          }}\n        />\n      )\n    }}\n  />\n)\n\nexport function getPlatformType(): Maybe<MobilePlatformEnum> {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  if (os.name === 'iOS') {\n    return MobilePlatformEnum.Ios\n  } else if (os.name === 'Android') {\n    return MobilePlatformEnum.Android\n  }\n  return null\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GSmartBanner } from '../../graph/types'\n\nconst BannerQuery = gql`\n  query GSmartBanner($branchId: ID!, $platform: MobilePlatformEnum!) {\n    app: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: $platform\n    ) {\n      title\n      url\n      icon\n    }\n  }\n`\n\nexport const QueryBanner = buildQuery<\n  GSmartBanner.Query,\n  GSmartBanner.Variables\n>(BannerQuery)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { MobileConfirmView } from '../segments/mobile/MobileConfirmView'\nimport { MobileDeliveryView } from '../segments/mobile/MobileDeliveryView'\nimport { MobileFinishView } from '../segments/mobile/MobileFinishView'\nimport { MobileIntroView } from '../segments/mobile/MobileIntroView'\nimport { MobileOrderView } from '../segments/mobile/MobileOrderView'\nimport { MobilePickupView } from '../segments/mobile/MobilePickupView'\nimport { MobileSmartBanner } from '../segments/mobile/MobileSmartBanner'\n\nconst MobileApp = () => (\n  <>\n    <Route path=\"/\" component={MobileSmartBanner} />\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MobileIntroView} />\n      <Route path=\"/pickup/:branchId?\" component={MobilePickupView} />\n      <Route path=\"/delivery\" component={MobileDeliveryView} />\n      <Route path=\"/order\" component={MobileOrderView} />\n      <Route path=\"/confirm\" component={MobileConfirmView} />\n      <Route path=\"/finish\" component={MobileFinishView} />\n    </Container>\n  </>\n)\n\nexport default MobileApp\n","import './MobileHeader.css'\n\nimport React from 'react'\n\nimport { MobileHeaderButton } from '../../common/Buttons'\n\ninterface IProps {\n  text: string\n  buttonText: string\n  buttonRight?: boolean\n  onButtonClick(): void\n}\n\nconst MobileHeader: React.SFC<IProps> = ({\n  text,\n  buttonText,\n  buttonRight = false,\n  onButtonClick,\n}) => {\n  const leftButton =\n    buttonRight === false ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Left\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  const rightButton =\n    buttonRight === true ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Right\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n        isConfirm={true}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  return (\n    <div className=\"mobile__header\">\n      {leftButton}\n      <div className=\"mobile__header__text\">{text}</div>\n      {rightButton}\n    </div>\n  )\n}\n\nexport default MobileHeader\n"],"sourceRoot":""}