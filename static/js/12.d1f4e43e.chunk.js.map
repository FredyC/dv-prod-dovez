{"version":3,"sources":["segments/shop/OrderAddress.tsx","segments/shop/ShopCloseAlert.tsx","segments/shop/ShopIntro.tsx","segments/shop/ShopLogo.tsx","segments/shop/ShopOpeningHours.tsx","segments/shop/Sticker.tsx","segments/shop/ShopHeader.tsx","segments/shop/ShopHeaderView.tsx","segments/finish/FinishView.tsx","segments/map/PickupMapBranch.tsx","segments/map/PickupMap.tsx","segments/map/OrderMap.tsx","segments/map/MapView.tsx","segments/orderForm/OrderForm.tsx","segments/shop/ShopOverview.tsx","app/DesktopApp.tsx"],"names":["OrderAddress","_ref","address","_useRoot","useRoot","order","location","useObserver","orderMethod","DeliveryTypeEnum","Messenger","react_default","a","createElement","i18n","_","Pickup","ShopAddress","StyledShopCloseAlert","styled","Alert","_templateObject","theme","primary","ShopCloseAlert","_ref2","status","_useShopStatus","useShopStatus","decision","closingIn","closingInPlural","ShopIntroStyled","div","withConfig","displayName","componentId","ShopIntro","intro","data-testid","headerText","LogoLink","url","children","href","react_router_dom","to","LogoContainerStyled","ShopLogo","props","ShopLogo_LogoLink","BackgroundThemed","className","imageName","size","StyledShopOpeningHours","Container","ShopOpeningHours","branch","openingHours","businessHours","filter","RM","propEq","fluid","length","map","businessHour","idx","key","concat","formatTime","openAt","closeAt","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","StickerThemed","IconStyled","span","Sticker","_ref2$success","success","cn","order-method-unselected","order-method-selected","StyledShopHeader","StyledLanguagePicker","LanguagePicker","ShopHeader","Row","ColStyle","ShopHeaderIcons","ShopCloseAlert_ShopCloseAlert","Fragment","ShopLogo_ShopLogo","homepageUrl","react_router","exact","path","render","Sticker_Sticker","_lingui_react","id","ShopIntro_ShopIntro","ShopClosingTimeModal","OrderAddress_OrderAddress","ShopOpeningHours_ShopOpeningHours","ShopHeaderView","observer","business","_useQShopHeaderIntro","useQShopHeaderIntro","brandId","isBrand","hasOrder","undefined","branchId","skip","isValid","fetchPolicy","dataIntro","data","loadingIntro","loading","_useQShopHeaderBranch","useQShopHeaderBranch","dataBranch","loadingBranch","ShopHeader_ShopHeader","FinishView","Object","objectDestructuringEmpty","shop_ShopHeaderView","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","companyBranch","FinishViewFooter","finish","StyledPickupMapBranch","tertiaryText","_ref3","Color","lighten","toString","PickupMapBranch","_ref4","onConfirm","onClose","shopStatus","onClick","name","Buttons","color","disabled","pickupEnabled","_ref5","openingIn","values","getButtonText","PickupMap","store","useLocalStore","activeBranchId","useFoodMenuQuery","_usePickupMapQuery","usePickupMapQuery","useWhen","createPickupOrder","useOrderCreate","renderBranchMarker","MapBranchMarker","renderBranchInfo","api_dist","position","gpsToLatLng","gps","getPixelPositionOffset","width","x","y","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","PickupMapBranch_PickupMapBranch","panToGps","useMapPanning","brand","branches","activeBranch","find","idPropEq","mapByOrderMethod","_mapByOrderMethod","defineProperty","createFactory","DeliveryMap","OrderMap","BaseMap","model","StyledMapView","MapView","history","useRouterContext","OrderMethod","OrderMap_OrderMap","push","StyledOrderForm","OrderForm","OrderFormSetup","OrderFormAutoFill","OrderFormInputs","OrderTimeButtons","OrderPromoInput","OrderPaymentMethod","OrderFormTipInput","OrderAgreements","ButtonStrip","OrderSubmitButton","ShopOverview","useEmptyOrderRedirect","FoodMenuView","CartView","OrderForm_OrderForm","OrderFormStorageNotice","DesktopApp","useReleaseCabinet","alert","component"],"mappings":"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","file":"static/js/12.d1f4e43e.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { DeliveryTypeEnum, FAddressFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  address: Maybe<FAddressFragment>\n}\n\nexport const OrderAddress: React.FC<IProps> = ({ address }) => {\n  const { order, location } = useRoot()\n\n  return useObserver(() => {\n    switch (order.orderMethod) {\n      case DeliveryTypeEnum.Messenger:\n        return (\n          <span>\n            {i18n.t`Order to address`}: <b>{location.address}</b>\n          </span>\n        )\n      case DeliveryTypeEnum.Pickup:\n        return (\n          <span>\n            {i18n.t`Pickup at address`}:{' '}\n            <b>\n              <ShopAddress address={address} />\n            </b>\n          </span>\n        )\n      default:\n        return null\n    }\n  })\n}\n","import React from 'react'\nimport { Alert } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n}\n\nconst StyledShopCloseAlert = styled(Alert)`\n  background: ${({ theme }) => theme.primary};\n  color: white;\n  text-align: center;\n  border-radius: 0.7rem;\n  position: fixed;\n  top: 0.1rem;\n  z-index: 3;\n  padding: 0.4rem 1rem;\n`\n\nexport const ShopCloseAlert: React.FC<IProps> = ({ status }) => {\n  const { decision, closingIn } = useShopStatus({\n    status,\n  })\n  if (decision === 'ClosingSoon') {\n    const closingInPlural = i18n.plural({\n      value: closingIn,\n      one: 'closing in 1 minute',\n      few: 'closing in # minutes',\n      other: 'closing in # minutes',\n    })\n    return (\n      <StyledShopCloseAlert>\n        {i18n.t`Beware! We are ${closingInPlural}. Finish your order quickly.`}\n      </StyledShopCloseAlert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { QShopHeaderIntroIntro } from '../../graph/generated'\n\ninterface IProps {\n  intro?: Maybe<QShopHeaderIntroIntro>\n}\n\nconst ShopIntroStyled = styled.div`\n  margin: 0.8rem 1rem 1rem 1.3rem;\n`\n\nexport const ShopIntro: React.FC<IProps> = ({ intro }) => (\n  <ShopIntroStyled data-testid=\"headerText\">\n    {intro ? intro.headerText : ''}\n  </ShopIntroStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { BackgroundThemed } from '../../common/BackgroundThemed'\n\ninterface IProps {\n  url: Maybe<string>\n}\n\nconst LogoLink: React.FC<IProps> = ({ url, children }) =>\n  url ? <a href={url}>{children}</a> : <Link to=\"/\">{children}</Link>\n\nconst LogoContainerStyled = styled.div`\n  height: 200px;\n  width: 400px;\n  flex: 0 0 400px;\n  & .shop__header__logo {\n    height: 100%;\n  }\n`\n\nexport const ShopLogo: React.FC<IProps> = props => (\n  <LogoContainerStyled>\n    <LogoLink {...props}>\n      <BackgroundThemed\n        className=\"shop__header__logo\"\n        imageName=\"storeLogo\"\n        size=\"cover\"\n      />\n    </LogoLink>\n  </LogoContainerStyled>\n)\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\nimport { Container } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { FShopOpeningHoursFragment } from '../../graph/generated'\nimport { formatTime } from '../../helpers/formats'\nimport { ShopStatusDisplay } from './ShopStatusDisplay'\n\ninterface IProps {\n  branch: Maybe<FShopOpeningHoursFragment>\n}\n\nconst StyledShopOpeningHours = styled(Container)`\n  margin: 0.4rem 0 0 0.1rem;\n  display: flex;\n\n  & div.times,\n  & div.status {\n    padding-left: 2rem;\n  }\n\n  & div.icon {\n    margin: -0.2rem 0 0 -1rem;\n    position: absolute;\n  }\n`\n\nexport const ShopOpeningHours: React.FC<IProps> = ({ branch }) => {\n  if (!branch) {\n    return null\n  }\n  const openingHours = branch.businessHours.filter(RM.propEq('closed', false))\n  return (\n    <StyledShopOpeningHours fluid={true}>\n      <div className=\"icon flaticon-clock\" />\n      {openingHours.length > 0 && (\n        <div className=\"times\">\n          {openingHours.map((businessHour, idx) => (\n            <div data-testid=\"openingHours\" key={idx}>\n              {`${formatTime(businessHour.openAt)} - ${formatTime(\n                businessHour.closeAt,\n              )}`}\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"status\">\n        {branch && (\n          <ShopStatusDisplay\n            status={branch}\n            deliveryTime={branch.defaultDeliveryTime}\n            pickupTime={branch.defaultPickupTime}\n          />\n        )}\n      </div>\n    </StyledShopOpeningHours>\n  )\n}\n","import { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nconst StickerThemed = styled.div`\n  background: ${({ theme }) => theme.primary};\n  color: white;\n  margin-top: 1rem;\n  padding: 0;\n  border-radius: 0 0.7rem 0.7rem 0;\n  white-space: nowrap;\n  flex: none;\n\n  & p {\n    display: inline-block;\n    margin: 0.6rem 1rem 0 0;\n    vertical-align: top;\n    white-space: nowrap;\n  }\n`\n\nconst IconStyled = styled.span`\n  margin: 0.5rem 1rem 0 0.1rem;\n  &:before,\n  :after {\n    font-size: 1.8rem;\n    margin: 0 0 0 1rem;\n  }\n`\n\ninterface IProps {\n  success?: boolean\n}\n\nexport const Sticker: React.FC<IProps> = ({ success = false, children }) => (\n  <StickerThemed\n    className={cn('right__sticker', {\n      'order-method-unselected': !success,\n      'order-method-selected': success,\n    })}\n  >\n    <IconStyled className=\"flaticon-transport\" />\n    <p>{children}</p>\n  </StickerThemed>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Row } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport { LanguagePicker } from '../../common/LanguagePicker'\nimport {\n  QShopHeaderBranchBranch,\n  QShopHeaderIntroIntro,\n} from '../../graph/generated'\nimport { OrderAddress } from './OrderAddress'\nimport { ShopCloseAlert } from './ShopCloseAlert'\nimport { ShopClosingTimeModal } from './ShopClosingTimeModal'\nimport { ShopHeaderIcons } from './ShopHeaderIcons'\nimport { ShopIntro } from './ShopIntro'\nimport { ShopLogo } from './ShopLogo'\nimport { ShopOpeningHours } from './ShopOpeningHours'\nimport { Sticker } from './Sticker'\n\ninterface IProps {\n  branch: QShopHeaderBranchBranch | null\n  intro: QShopHeaderIntroIntro | null\n}\n\nconst StyledShopHeader = styled.div`\n  display: flex;\n  min-height: 200px;\n  & div.info {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`\n\nconst StyledLanguagePicker = styled(LanguagePicker)`\n  position: absolute;\n  z-index: 1;\n  right: 1rem;\n  top: 2.5rem;\n`\n\nexport const ShopHeader: React.FC<IProps> = ({ branch, intro }) => (\n  <div>\n    <Row className=\"justify-content-md-center\">\n      <ColStyle>\n        <ShopHeaderIcons />\n        <StyledLanguagePicker />\n      </ColStyle>\n      {branch && <ShopCloseAlert status={branch} />}\n    </Row>\n\n    <Row className=\"row-white justify-content-md-center\">\n      <ColStyle>\n        <StyledShopHeader data-testid=\"shopHeader\">\n          <>\n            <ShopLogo url={intro ? intro.homepageUrl : null} />\n\n            <div className=\"info\">\n              <Route\n                exact={true}\n                path=\"/\"\n                render={() => (\n                  <>\n                    <Sticker>\n                      <Trans>Choose your delivery option below</Trans>\n                    </Sticker>\n                    <ShopIntro intro={intro} />\n                  </>\n                )}\n              />\n              <Route\n                path=\"/order\"\n                render={() => (\n                  <>\n                    {branch && <ShopClosingTimeModal status={branch} />}\n                    <Sticker success={true}>\n                      <OrderAddress address={branch ? branch.address : null} />\n                    </Sticker>\n                    <ShopOpeningHours branch={branch} />\n\n                    <ShopIntro intro={intro} />\n                  </>\n                )}\n              />\n              <Route\n                path=\"/finish\"\n                render={() => (\n                  <>\n                    <Sticker success={true}>\n                      <Trans>Order was send</Trans>\n                    </Sticker>\n                    <ShopOpeningHours branch={branch} />\n                    <ShopIntro intro={intro} />\n                  </>\n                )}\n              />\n            </div>\n          </>\n        </StyledShopHeader>\n      </ColStyle>\n    </Row>\n  </div>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport {\n  useQShopHeaderBranch,\n  useQShopHeaderIntro,\n} from '../../graph/generated'\nimport { ShopHeader } from './ShopHeader'\n\nexport const ShopHeaderView = observer(() => {\n  const { order, business } = useRoot()\n\n  const { data: dataIntro, loading: loadingIntro } = useQShopHeaderIntro(\n    {\n      brandId:\n        business.isBrand && !order.hasOrder ? business.brandId : undefined,\n      // need to use branchId from order first as it reflects branch for which\n      // order is being made and it might have different eg. business hours\n      // then the one obtained through business code\n      branchId:\n        business.isBrand && !order.hasOrder\n          ? undefined\n          : order.branchId || business.branchId!,\n    },\n    {\n      skip: !business.isValid,\n      fetchPolicy: 'cache-first',\n    },\n  )\n\n  const { data: dataBranch, loading: loadingBranch } = useQShopHeaderBranch(\n    {\n      branchId: order.branchId!,\n    },\n    {\n      skip: !order.branchId,\n      fetchPolicy: 'cache-first',\n    },\n  )\n\n  return (\n    <ShopHeader\n      branch={loadingBranch ? null : dataBranch.branch}\n      intro={loadingIntro ? null : dataIntro.intro}\n    />\n  )\n})\n\nexport default ShopHeaderView\n","import './FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport ShopHeaderView from '../shop/ShopHeaderView'\nimport { FinishViewFooter } from './FinishViewFooter'\nimport { FinishViewLoader } from './FinishViewLoader'\nimport { FinishViewOrder } from './FinishViewOrder'\nimport { FinishViewSupport } from './FinishViewSupport'\n\ninterface IProps {}\n\nexport const FinishView: React.FC<IProps> = ({}) => (\n  <>\n    <ShopHeaderView />\n    <Row className=\"justify-content-md-center\">\n      <ColStyle>\n        <div className=\"finish__view\">\n          <FinishViewLoader\n            render={result => (\n              <>\n                <FinishViewOrder order={result.order} />\n                <FinishViewSupport branch={result.companyBranch} />\n                <FinishViewFooter finish={result} />\n              </>\n            )}\n          />\n        </div>\n      </ColStyle>\n    </Row>\n  </>\n)\n","import { Plural, Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { IShopStatus, useShopStatus } from '../../hooks/useShopStatus'\n\ninterface IProps {\n  branch: FPickupBranchFragment\n  onConfirm(): void\n  onClose(): void\n}\n\nconst StyledPickupMapBranch = styled.div`\n  font-size: 1rem;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  max-width: 18rem;\n  min-width: 13rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 7px 1px rgba(0, 0, 0, 0.3);\n\n  > header {\n    flex: 0 0 auto;\n    background-color: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.tertiaryText};\n    padding: 0.4rem;\n    padding-right: 1.3rem;\n    border-radius: 8px 8px 0 0;\n  }\n\n  > p {\n    flex: 1 1 0;\n    margin: 0.5rem;\n  }\n\n  > button {\n    flex: 1 0 auto;\n    margin: 0 0.3rem 0.3rem 0.3rem;\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n  }\n\n  > .close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 0.5rem;\n    font-size: 0.9rem;\n    cursor: pointer;\n\n    &:hover {\n      border-radius: 0 8px 0 0;\n      background-color: ${({ theme }) =>\n        Color(theme.primary)\n          .lighten(0.5)\n          .toString()};\n    }\n  }\n`\n\nexport const PickupMapBranch: React.FC<IProps> = ({\n  branch,\n  onConfirm,\n  onClose,\n}) => {\n  const shopStatus = useShopStatus({\n    status: branch,\n  })\n  return (\n    <StyledPickupMapBranch data-testid=\"PickupMapBranch\">\n      <div className=\"close\" onClick={onClose}>\n        🗙\n      </div>\n      <header>{branch.name}</header>\n      <p>\n        <ShopAddress address={branch.address} />\n      </p>\n      <PrimaryButton\n        color=\"primary\"\n        data-testid=\"submitPickupBranch\"\n        disabled={!branch.pickupEnabled}\n        onClick={onConfirm}\n      >\n        {branch.pickupEnabled ? (\n          getButtonText(shopStatus)\n        ) : (\n          <Trans>Delivery only</Trans>\n        )}\n      </PrimaryButton>\n    </StyledPickupMapBranch>\n  )\n}\n\nfunction getButtonText({ decision, openingIn, closingIn }: IShopStatus) {\n  switch (decision) {\n    case 'Closed':\n      return <Trans>Closed</Trans>\n    case 'ClosingSoon':\n      return (\n        <Plural\n          value={closingIn}\n          one=\"Closing in 1 minute\"\n          other=\"Closing in # minutes\"\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <Plural\n          value={openingIn}\n          one=\"Opening in 1 minute\"\n          other=\"Opening in # minutes\"\n        />\n      )\n    default:\n      return <Trans>Pickup here</Trans>\n  }\n}\n","import './PickupMap.css'\n\nimport { OverlayView } from '@react-google-maps/api'\nimport { useWhen } from '@speedlo/hooks'\nimport { idPropEq } from '@speedlo/tools'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { MapBranchMarker } from '../../common/MapBranchMarker'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { useFoodMenuQuery } from '../foodMenu/hooks/useFoodMenuQuery'\nimport { useMapPanning } from './hooks/useMapPanning'\nimport { useOrderCreate } from './hooks/useOrderCreate'\nimport { usePickupMapQuery } from './hooks/usePickupMapQuery'\nimport { PickupMapBranch } from './PickupMapBranch'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const PickupMap = observer<IProps>(({ onConfirm }) => {\n  const { business } = useRoot()\n\n  const store = useLocalStore(() => ({\n    activeBranchId: null as Maybe<ID>,\n  }))\n\n  // prefetch food menu for active branch\n  useFoodMenuQuery(store.activeBranchId)\n\n  const { data, loading } = usePickupMapQuery()\n\n  // select business branchId by default\n  useWhen(\n    () => business.branchId !== null && store.activeBranchId === null,\n    () => {\n      store.activeBranchId = business.branchId\n    },\n  )\n\n  const { createPickupOrder } = useOrderCreate(onConfirm)\n\n  const renderBranchMarker = (branch: FPickupBranchFragment) => (\n    <MapBranchMarker\n      key={`${branch.id}-marker`}\n      branch={branch}\n      onClick={() => {\n        store.activeBranchId = branch.id\n      }}\n    />\n  )\n\n  const renderBranchInfo = (branch: FPickupBranchFragment) => (\n    <OverlayView\n      key={branch.id}\n      position={gpsToLatLng(branch.gps)}\n      getPixelPositionOffset={width => ({\n        // some measurement hickup, width is 0 initially, use average center\n        x: width === 0 ? -131 : -(width / 2),\n        y: 25,\n      })}\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n    >\n      <PickupMapBranch\n        branch={branch}\n        onClose={() => {\n          store.activeBranchId = null\n        }}\n        onConfirm={() => {\n          createPickupOrder(branch.id)\n        }}\n      />\n    </OverlayView>\n  )\n\n  const panToGps = useMapPanning()\n\n  if (loading) {\n    return null\n  }\n\n  if (business.isBrand && data.brand) {\n    const branches = data.brand\n\n    const activeBranch =\n      store.activeBranchId !== null &&\n      branches.find(idPropEq(store.activeBranchId))\n\n    // const businessBranch = branches.find(idPropEq(business.branchId))\n\n    if (activeBranch) {\n      panToGps(activeBranch.gps)\n    }\n\n    return (\n      <div data-testid=\"PickupMap\">\n        {branches && branches.map(renderBranchMarker)}\n        {activeBranch && renderBranchInfo(activeBranch)}\n      </div>\n    )\n  } else if (data.branch) {\n    const branch = data.branch\n    panToGps(branch.gps)\n    return (\n      <div data-testid=\"PickupMap\">\n        {renderBranchMarker(branch)}\n        {renderBranchInfo(branch)}\n      </div>\n    )\n  }\n\n  return null\n})\n","import { useObserver } from 'mobx-react-lite'\nimport React, { createFactory } from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { DeliveryTypeEnum } from '../../graph/generated'\nimport { DeliveryMap } from './DeliveryMap'\nimport { PickupMap } from './PickupMap'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst mapByOrderMethod = {\n  [DeliveryTypeEnum.Messenger]: createFactory<IProps>(DeliveryMap),\n  [DeliveryTypeEnum.Pickup]: createFactory<IProps>(PickupMap),\n}\n\nexport const OrderMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, map } = useRoot()\n  return useObserver(() => (\n    <BaseMap model={map}>\n      {mapByOrderMethod[order.orderMethod]({ onConfirm })}\n    </BaseMap>\n  ))\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Row } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport ShopHeaderView from '../shop/ShopHeaderView'\nimport { OrderMethod } from './destination/OrderMethod'\nimport { usePickupMapQuery } from './hooks/usePickupMapQuery'\nimport { OrderMap } from './OrderMap'\n\nconst StyledMapView = styled.div`\n  background-color: #e8e0d5;\n  border-radius: 0.6rem;\n  border: 1px solid #5a5a5a;\n  min-height: 29rem;\n  height: calc(100vh - 25rem);\n  margin: 1.6rem 0 0 0;\n  text-align: center;\n  position: relative;\n\n  .header {\n    background-color: #5a5a5a;\n    border-radius: 0.5rem 0.5rem 0 0;\n    height: 3.75rem;\n  }\n`\n\nexport const MapView = observer(() => {\n  const { history } = useRouterContext()\n\n  // prefetch pickup branches\n  usePickupMapQuery()\n\n  return (\n    <>\n      <ShopHeaderView />\n      <Row className=\"justify-content-md-center\">\n        <ColStyle>\n          <StyledMapView>\n            <div className=\"header\">\n              <OrderMethod />\n            </div>\n            <OrderMap onConfirm={() => history.push(`/order`)} />\n          </StyledMapView>\n        </ColStyle>\n      </Row>\n    </>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ButtonStrip } from '../../common/ButtonStrip'\nimport { OrderAgreements } from './OrderAgreements'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\nimport { OrderFormInputs } from './OrderFormInputs'\nimport { OrderFormSetup } from './OrderFormSetup'\nimport { OrderFormTipInput } from './OrderFormTipInput'\nimport { OrderPaymentMethod } from './OrderPaymentMethod'\nimport { OrderPromoInput } from './OrderPromoInput'\nimport { OrderSubmitButton } from './OrderSubmitButton'\nimport { OrderTimeButtons } from './OrderTimeButtons'\n\nconst StyledOrderForm = styled.div`\n  .inner {\n    padding: 1rem;\n  }\n`\n\nexport const OrderForm: React.FC = () => {\n  return (\n    <StyledOrderForm>\n      <OrderFormSetup>\n        <div className=\"inner\">\n          <OrderFormAutoFill />\n          <OrderFormInputs />\n          <OrderTimeButtons />\n          <OrderPromoInput />\n          <OrderPaymentMethod />\n          <OrderFormTipInput />\n          <OrderAgreements />\n        </div>\n        <ButtonStrip>\n          <OrderSubmitButton>\n            <Trans>Place order</Trans>\n          </OrderSubmitButton>\n        </ButtonStrip>\n      </OrderFormSetup>\n    </StyledOrderForm>\n  )\n}\n","import './ShopOverview.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { ColStyleLeft, ColStyleRight } from '../../common/ColStyle'\nimport { useEmptyOrderRedirect } from '../../hooks/useEmptyOrderRedirect'\nimport { i18n } from '../../i18n'\nimport { CartView } from '../cart/CartView'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { OrderForm } from '../orderForm/OrderForm'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport ShopHeaderView from './ShopHeaderView'\n\nexport const ShopOverview: React.FC = () => {\n  useEmptyOrderRedirect()\n  return (\n    <>\n      <ShopHeaderView />\n      <Row className=\"justify-content-md-center\">\n        <ColStyleLeft>\n          <div className=\"shop__overview__column\">\n            <FoodMenuView />\n          </div>\n        </ColStyleLeft>\n\n        <ColStyleRight>\n          <div\n            className=\"shop__overview__column cart__column\"\n            data-testid=\"CartColumn\"\n          >\n            <div className=\"cart__column__header\">\n              <span className=\"flaticon-cart cart__column__header__icon\" />\n              <h4>{i18n.t`Your order`}</h4>\n            </div>\n\n            <BackgroundThemed\n              className=\"cart__column__cart\"\n              imageName=\"backgroundCart\"\n            >\n              <CartView />\n            </BackgroundThemed>\n\n            <OrderForm />\n          </div>\n        </ColStyleRight>\n        <OrderFormStorageNotice />\n      </Row>\n    </>\n  )\n}\n","import { useReleaseCabinet } from '@speedlo/tools'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { FinishView } from '../segments/finish/FinishView'\nimport { MapView } from '../segments/map/MapView'\nimport { ShopOverview } from '../segments/shop/ShopOverview'\n\nconst DesktopApp = () => {\n  useReleaseCabinet(alert)\n  return (\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MapView} />\n      <Route path={['/order', '/confirm']} component={ShopOverview} />\n      <Route path=\"/finish\" component={FinishView} />\n    </Container>\n  )\n}\n\nexport default DesktopApp\n"],"sourceRoot":""}