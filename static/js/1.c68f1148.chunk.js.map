{"version":3,"sources":["common/ColStyle.tsx","forms/FormTextInput.tsx","hooks/useShopStatus.ts","hooks/useEmptyOrderRedirect.ts","common/ShopAddress.tsx","common/BackgroundThemed.tsx","segments/map/hooks/usePickupMapQuery.ts","common/BaseMap.tsx","segments/foodMenu/hooks/useFoodMenuQuery.ts","segments/orderForm/OrderFormSetup.tsx","common/LanguagePicker.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewLoader.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","common/ButtonStripe.tsx","segments/map/hooks/useMapPanning.ts","common/MapBranchMarker.tsx","hooks/useAddToCart.ts","common/PickerButton.tsx","common/ButtonStrip.tsx","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderFormAutoFill.tsx","segments/orderForm/hooks/useOrderFormCheck.ts","segments/orderForm/hooks/useOrderPayment.ts","segments/orderForm/OrderFormTipInput.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/orderForm/OrderPromoInput.tsx","segments/orderForm/OrderSubmitButton.tsx","segments/orderForm/OrderTimeButtons.tsx","segments/orderForm/OrderFormStorageNotice.tsx","segments/map/AddressSubmit.tsx","segments/map/destination/AddressSearchInput.tsx","hooks/useDebounce.ts","segments/map/destination/GeolocationButton.tsx","segments/map/destination/ResolvedAddress.tsx","segments/map/hooks/useAddressSearch.ts","segments/map/ExtraAddressResult.tsx","segments/map/DeliveryAddressSearch.tsx","segments/map/DeliveryMap.tsx","hooks/useLocationResolver.ts","segments/map/hooks/useDeliveryMapPanning.ts","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishRemoveButton.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/sidedishPicker/SidedishPicker.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartModal.tsx","segments/cart/AddToCartModal.tsx","segments/cart/ChangeCartModal.tsx","segments/cart/CartView.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/hooks/useFoodMenuPresence.ts","segments/foodMenu/OrderLimitModal.tsx","segments/foodMenu/OrderLocked.tsx","segments/foodMenu/FoodMenuView.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderFormInputs.tsx","segments/timePicker/createTimeSteps.ts","segments/timePicker/TimePickerButton.tsx","segments/timePicker/TimePicker.tsx","segments/orderForm/OrderTimePicker.tsx","forms/FormCheckbox.tsx","segments/orderForm/OrderAgreementBox.tsx","segments/orderForm/OrderAgreements.tsx","segments/orderForm/OrderPaymentButton.tsx","segments/orderForm/OrderPaymentMethod.tsx","segments/cart/CartSystem.tsx","segments/cart/hooks/useCartControl.ts","segments/map/destination/OrderMethodButton.tsx","segments/map/destination/OrderMethod.tsx"],"names":["ColStyle","children","className","sm","md","lg","xl","ColStyleLeft","ColStyleRight","hiddenError","FormTextInput","observer","name","label","errorForceDisplay","element","orderModel","useOrderModel","useXFieldForInput","field","getFieldProps","labelNode","for","hidden","placeholder","showError","touched","type","valid","error","invalid","Boolean","disabled","disableInteraction","tooltip","useShopStatus","status","updateInterval","SECOND","openSoonThresholdInMinutes","closeSoonThresholdInMinutes","getNow","useNow","useTimer","interval","enabled","now","isOpen","willCloseAt","willOpenAt","openingIn","differenceInMinutes","closingIn","decision","isSoon","closedNote","businessHours","length","RM","head","time","threshold","Math","abs","useEmptyOrderRedirect","root","useRoot","history","useRouterContext","useWhen","initialized","hasOrder","push","ShopAddress","address","location","street","houseNumber","city","BackgroundThemed","imageName","fallbackColor","fixed","size","component","otherProps","React","createElement","styled","props","theme","usePickupMapQuery","branchId","business","useQPickupMap","branchSpecific","isBrand","brandId","skip","isValid","fetchPolicy","context","noBatch","getMapOptions","isMobile","streetViewControl","mapTypeControl","fullscreenControl","clickableIcons","draggableCursor","minZoom","zoomControlOptions","position","google","maps","ControlPosition","RIGHT_CENTER","RIGHT_TOP","libraries","BaseMap","model","user","useLoadScript","id","version","googleMapsApiKey","appConfig","googleMapsApi","language","isLoaded","loadError","googleMapUrl","url","googleAvailable","Reflect","has","window","Sentry","withScope","scope","setExtras","captureException","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","onClick","onLoad","setMapRef","onUnmount","options","mapContainerStyle","borderRadius","overflow","height","noMargin","useFoodMenuQuery","result","useQFoodMenu","useReaction","refetch","NOTE_MAX_LENGTH","OrderFormSetup","useOrderPayment","executeGoPayPayment","paymentErrorModal","useMSubmitOrder","submitOrder","validationSchema","useMemo","createObjectValidation","Yup","firstname","string","required","lastname","phonePrefix","phone","matches","email","note","notRequired","max","value","isOrderInCart","useOrderFormCheck","useEffect","replace","onSubmit","useCallback","values","a","submitStarted","variables","getSubmitVariables","submitFailed","userErrors","gopayUrl","paymentMethod","PaymentGateEnum","Cash","submitFinished","Gopay","finally","captureMessage","xform","useXForm","initialValues","agreements","deliverAt","onFormChanges","console","log","cart","setOrderSubmitting","state","isSubmitting","handlers","handleSubmit","orderId","customer","firstName","lastName","emails","phones","tips","paymentGate","isoDate","LanguagePicker","availableLanguages","branch","supportedLanguages","selectedLanguage","onChange","selectLanguage","setTimeout","reload","backgroundColor","arrowColor","ShopClosingTimeModal","useObserver","closingTimeAlertHidden","onClose","hideClosingTime","headerText","ShopHeaderIcons","src","getLogo","data-testid","alt","StyledStatusDisplayOpen","span","StyledStatusDisplayClosed","ShopStatusDisplay","deliveryTime","pickupTime","order","closestBH","timingDisplay","usingDeliveryOrderMethod","defaultDeliveryTimeEnabled","usingPickupOrderMethod","defaultPickupTimeEnabled","path","render","formatOpenTime","openAt","openAtDate","Date","nowDate","format","hour","minute","isSameDay","weekday","CenteredButtonContainer","div","FinishViewFooter","finish","androidApp","iosApp","renderHomeButton","to","href","color","style","textAlign","FinishViewLoader","useQOrderFinish","data","loading","HeaderThemed","primary","PriceThemed","PriceCornerThemed","FinishViewOrder","orderPayments","some","hasMethod","PaymentTypeEnum","Credit","getPaymentInfo","items","map","item","OrderItem","key","totalSum","getPaymentPrice","formattedValue","paymentType","payment","enum","recipe","sideDishes","nameLabel","join","PhoneNumberLinkStyled","FinishViewSupport","ButtonStripe","useMapPanning","mapRef","useGoogleMap","prevGps","useRef","gps","prev","current","latitude","longitude","latLng","gpsToLatLngLit","panTo","panToGps","StyledPickupMapMarker","MapBranchMarker","gpsToLatLng","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","getPixelPositionOffset","width","x","y","title","counter","NO_SIDEDISHES","useAddToCart","cartModel","client","useApolloClient","useMAddToCart","addToCart","recipeId","withGoods","withPresence","optimisticResponse","makeOptimisticResponse","readQuery","query","QCartDocument","__typename","add","countWares","readFragment","fragment","FRecipeFragmentDoc","fragmentName","automatic","price","addItem","presence","PickerButtonStyled","isSelected","tertiary","tertiaryText","tertiaryHover","PickerButton","onSelect","buttonProps","StyledButtonStrip","mediaMobile","ButtonStrip","OrderErrorModal","hasErrors","toggle","clearErrors","tag","Container","submitErrors","idx","OrderFormAutoFill","useXFormCtx","useQOrderForm","orderStateCategory","OrderStateCategoryEnum","InCart","hasItemsInCart","useAlertModal","alertPaymentError","useExecutableQOrderPaymentStatus","executePaymentStatusCheck","onFinish","onError","errors","queryPaymentStatus","userToken","goPayStatusCheck","invalidateWithToken","then","Promise","resolve","useGoPay","paymentProcessing","paymentLoading","StyledOrderFormTipInput","OrderFormTipInput","useMOrderTipUpdate","updateTip","usingPaymentMethodWithTips","Number","ev","setTips","parseInt","target","TextPadding","OrderGoPayModal","isGoPayChecking","CodesPanel","OrderPromoInput","memo","errorModal","useQOrderPromoCodes","useMOrderPromoAdd","addCodeMutation","useMOrderPromoRemove","removeCodeMutation","onCodeAdd","code","onCodeRemove","codeId","useOrderPromoCodes","onCodeErrors","msg","getValidatingMessage","inputProps","inputRef","codes","promoCodes","innerRef","autoComplete","role","OrderSubmitButton","submitBlocked","submitBlockReason","isVamInitialized","fadeIn","StyledOrderTimeButtons","OrderTimeButtons","useXFieldState","delayedOrderEnabled","isDelayed","selected","setValue","openTimePicker","NoticeButton","Button","StorageNotice","Alert","mediaDesktop","OrderFormStorageNotice","rememberForm","setFormRememberYes","setFormRememberNo","AddressSubmit","i18n","AddressSearchInput","onSearch","isVisible","focus","onSearchDebounced","cb","deps","debounced","debounce","clear","useDebounce","Input","cn","search","setSearchValue","trim","clearAddress","onKeyPress","onFocus","select","searchValue","GeolocationButton","alert","makeAlert","isGeolocationAvailable","isResolving","navigator","geolocation","getCurrentPosition","coords","accuracy","setGeolocationPoint","err","disableGeolocation","enableHighAccuracy","maximumAge","ResolvedAddress","onValidClick","wait","undefined","urlCache","Map","useAddressSearch","count","watchLocation","useLocalStore","results","phrase","searching","params","doFetch","get","fetch","resp","json","filter","validateResult","mapResult","set","debouncedFetch","nextPhrase","reaction","userData","category","suggestFirstRow","suggestSecondRow","suffix","municipality","district","country","find","Styled","ExtraAddressResult","open","hasSearchValue","usefulResults","bounceInLeft","bounceIn","toString","setSearchResult","secondary","DeliveryAddressSearch","setIsResolving","setAsNotResolved","singleResult","startsWith","setAsNotAddress","resetResolution","hasAddress","ErrorMessage","hasResolutionResult","isResolved","isStreetAddress","inDeliveryLocation","StyledDeliveryMap","DeliveryMap","onConfirm","resolver","useExecutableQResolveLocation","resolveLocation","resolutionTarget","setResolutionResult","useLocationResolver","resolveUserLocation","setLocation","hasLocation","geoPoint","clickPoint","clearClickPoint","isDeliveryAddress","useQInitialDeliveryLocation","source","useAsObservableSource","initial","useAutorun","geolocationPoint","gpsCoordinates","useDeliveryMapPanning","createDeliveryOrder","useOrderCreate","draggable","onDragEnd","latLngToGps","CategoryValidationMessage","minCount","maxCount","message","_","StyledSidedishRemoveButton","primaryHover","SidedishRemoveButton","StyledSidedishCheckbox","SidedishCheckbox","sidedish","canBeSelected","canBeRemoved","onAdd","onRemove","outline","StyledSidedishPicker","SidedishPicker","selection","useSideDishValidator","categories","isCategoryValid","i","includes","CartOrderButton","useState","isConfirming","setConfirming","heartBeat","every","catch","EMPTY_SELECTION","CartModal","isLoading","initialSideDishes","updateSelection","onCloseModal","onConfirmAndClose","onAddSidedish","sidedishId","sel","append","onRemoveSidedish","remove","indexOf","autoFocus","backdrop","fade","ModalHeader","ModalBody","Pacman","descriptionLabel","AddToCartModal","addToCartRecipeId","useQCartRecipe","executeAddToCart","ChangeCartModal","itemId","changeCartItemId","useQCartItem","useMChangeCartItem","changeItem","changeCartItem","sideDishesSelection","CartView","isReadonly","CartSystem","StyledCategoryNavigator","CategoryNavigator","activeCategoryIndex","setActiveCategoryIndex","Link","active","onSetActive","offset","smooth","spy","pictogram","Truncate","lines","FoodCategoryStyled","FoodCategoryTitleStyled","Element","StyledFoodMenuItem","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItem","onAddToCart","hasSideDishes","sideDishCount","useExecutableQCartRecipe","prefetchFoodItem","onMouseEnter","previousPresence","lastActiveRecipeId","image","recipePresence","pulse","zoomIn","renderPresence","StyledFoodMenu","config","useQFoodMenuCartPresence","observable","runInAction","forEach","useFoodMenuPresence","hasSideDish","orderItemsMax","showOrderLimit","setUsedRecipeId","recipes","OrderLimitModal","AlertModal","orderLimitAlertHidden","hideOrderLimit","StyledOrderLocked","OrderLocked","StyledMobileHeader","FoodMenuView","wareCategories","cat","OrderEmailInput","FormGroup","OrderNameInput","InputGroup","OrderNoteInput","ingredientsDescription","FormText","OrderPhoneInput","isMobileSafari","UAParser","userAgent","getBrowser","prefixField","prefix","defaultPhonePrefix","memoryApplied","setTouched","OrderFormInputs","createTimeSteps","start","end","minuteStep","startOfMinute","addMinutes","subMinutes","getMinutes","timeClampDown","timeClampUp","steps","endMinute","endOfMinute","Time","TimePickerButton","getTime","formatTime","TimePickerContainer","TimePickerDay","TimePicker","minDate","maxDate","onStepChange","initialTime","filterIntervals","allSteps","reject","step","DF","isWithinInterval","days","eachDayOfInterval","stepIdx","setStepIdx","closestIndexTo","day","getDate","month","isEqual","startOfDay","OrderTimePicker","useQOrderTimePicker","useMOrderDeliveryTime","updateOrder","useXField","selectedTime","closeTimePicker","getInterval","companyBranch","getStartTime","defaultDeliveryTime","defaultPickupTime","getMinuteOffset","nextBusinessHour","propEq","closeAt","getEndTime","canBeDelayed","isAfter","delayedDeliveryEnabled","enableDelayedOrder","header","timePickerOpen","bhour","renderModalContent","StyledFormCheckbox","StyledOrderAgreementBox","OrderAgreementBox","agreement","isCollapsed","titleNode","descriptionNode","onInvalid","setCustomValidity","isMandatory","htmlFor","toLocaleLowerCase","Collapse","EMPTY_ARRAY","OrderAgreements","formState","useXFormState","setVariables","updateVariablesLater","dispose","autorun","input","extractVariables","useQOrderFormAgreements","hasFailed","initVam","useVamAgreements","renderVamAgreements","validate","confirmedAgreements","confirmed","Array","from","AgreementBox","OrderPaymentButton","setPaymentMethod","Checkmark","show","StyledOrderPaymentMethod","OrderPaymentMethod","StyledCartSystem","isMobileConfirm","useTheme","labels","getCartLabels","onItemEdit","useMRemoveCartItem","removeItem","onItemRemove","makeOptimisticRemove","onPlaceOrder","onChangeOrder","rejectItem","idPropEq","useCartControl","renderMobileSubmit","shouldPlaceOrder","renderGoodsLoading","useCartSystem","colors","sumRowBg","sumRowText","mobileSummaryItemCount","mobileBreakpoint","backgroundImage","backgroundCart","updateDisplay","store","showGoods","useQCart","updateSummary","updateGoods","renderCart","noSideDish","noCost","cartSumHeader","totalPrice","emptyCart","totalDiscount","coverPrice","transportFee","tip","minimalOrderPrice","OrderMethodButton","orderMethod","useOrderMethod","data-testselected","StyledOrderMethod","OrderMethod","identity","DeliveryTypeEnum","Messenger","Pickup"],"mappings":"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","file":"static/js/1.c68f1148.chunk.js","sourcesContent":["import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import { useXFieldForInput } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { FormFeedback, Input, Label } from 'reactstrap'\n\nimport { useOrderModel } from '../hooks/useOrderModel'\n\ninterface IProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  name: string\n  label?: string\n  errorForceDisplay?: boolean\n}\n\nexport const hiddenError = '<hidden>'\n\nexport const FormTextInput = observer<IProps>(\n  ({ name, label, errorForceDisplay = false, ...element }) => {\n    const orderModel = useOrderModel()\n    const [field, getFieldProps] = useXFieldForInput(name)\n\n    const labelNode = (\n      <Label for={name} hidden={!label}>\n        {element.placeholder || label}\n      </Label>\n    )\n\n    const showError = errorForceDisplay || field.touched\n\n    return (\n      <>\n        {labelNode}\n        <Input\n          {...getFieldProps()}\n          {...element}\n          type=\"text\"\n          valid={field.touched && !field.error}\n          invalid={showError && Boolean(field.error)}\n          disabled={orderModel.disableInteraction}\n        />\n        {showError && field.error !== hiddenError ? (\n          <FormFeedback valid={false} tooltip={false}>\n            {field.error}\n          </FormFeedback>\n        ) : null}\n      </>\n    )\n  },\n)\n","import { SECOND, useNow, useTimer } from '@speedlo/hooks'\nimport { RM } from '@speedlo/tools'\nimport { differenceInMinutes } from 'date-fns'\n\nimport { FCompanyBranchStatusFragment } from '../graph/generated'\n\nexport type TStatus = FCompanyBranchStatusFragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\ninterface IProps {\n  status: TStatus\n  updateInterval?: number\n  openSoonThresholdInMinutes?: number\n  closeSoonThresholdInMinutes?: number\n  onRefresh?(): void\n}\n\nexport interface IShopStatus {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n  closedNote: Maybe<string>\n}\n\nexport function useShopStatus({\n  status,\n  updateInterval = 30 * SECOND,\n  openSoonThresholdInMinutes = 30,\n  closeSoonThresholdInMinutes = 30,\n}: IProps) {\n  const getNow = useNow()\n\n  useTimer({\n    interval: updateInterval,\n    enabled: updateInterval > 0,\n  })\n\n  const now = getNow()\n  const { isOpen, willCloseAt, willOpenAt } = status\n\n  let decision: TStatusDecision\n\n  const openingIn = willOpenAt ? differenceInMinutes(willOpenAt, now) : 0\n  const closingIn = willCloseAt ? differenceInMinutes(willCloseAt, now) : 0\n\n  if (isOpen) {\n    if (willCloseAt && closingIn <= 0) {\n      decision = 'Closed'\n    } else {\n      decision = isSoon(willCloseAt, closeSoonThresholdInMinutes, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    }\n  } else {\n    if (willOpenAt && openingIn <= 0) {\n      decision = 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openSoonThresholdInMinutes, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n  }\n\n  const closedNote =\n    status.businessHours.length > 0\n      ? RM.head(status.businessHours).closedNote\n      : null\n\n  const shopStatus: IShopStatus = {\n    decision,\n    openingIn,\n    closingIn,\n    closedNote,\n  }\n  return shopStatus\n}\n\nfunction isSoon(time: Maybe<string>, threshold: number, now: Date) {\n  return time ? Math.abs(differenceInMinutes(time, now)) <= threshold : false\n}\n","import { useRouterContext, useWhen } from '@speedlo/hooks'\n\nimport { useRoot } from '../app/useRoot'\nimport { useOrderModel } from './useOrderModel'\n\nexport function useEmptyOrderRedirect() {\n  const root = useRoot()\n  const orderModel = useOrderModel()\n  const { history } = useRouterContext()\n\n  useWhen(\n    () => root.initialized,\n    () => {\n      if (!orderModel.hasOrder) {\n        history.push('/')\n      }\n    },\n  )\n}\n","import React from 'react'\n\nimport { FAddressFragment } from '../graph/generated'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address: Maybe<FAddressFragment>\n}\n\nexport const ShopAddress: React.FC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ninterface IProps {\n  imageName: string\n  className?: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.FC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import { useRoot } from '../../../app/useRoot'\nimport { useQPickupMap } from '../../../graph/generated'\n\nexport function usePickupMapQuery(branchId?: ID) {\n  const { business } = useRoot()\n  return useQPickupMap(\n    {\n      branchSpecific: !business.isBrand || !!branchId,\n      brandId: business.brandId,\n      branchId: branchId || business.branchId!,\n    },\n    {\n      skip: !business.isValid,\n      fetchPolicy: 'cache-first',\n      context: { noBatch: true },\n    },\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api'\nimport { Sentry } from '@speedlo/sentry'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { appConfig } from '../config'\nimport { TMapModel } from '../models/MapModel'\nimport Pacman from './Pacman'\n\ninterface IBaseMapProps {\n  model: TMapModel\n  children?: ReactNode | ReactNode[] | (() => ReactNode | ReactNode[])\n  isMobile?: boolean\n}\n\n/* global google */\n\nconst getMapOptions = (isMobile: boolean): google.maps.MapOptions => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    clickableIcons: false,\n    draggableCursor: 'default',\n    minZoom: 10,\n    zoomControlOptions: {\n      position: isMobile\n        ? google.maps.ControlPosition.RIGHT_CENTER\n        : google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nconst libraries = ['places']\n\nexport const BaseMap = observer<IBaseMapProps>(\n  ({ model, isMobile = false, children }) => {\n    const { user } = useRoot()\n\n    const { isLoaded, loadError, url: googleMapUrl } = useLoadScript({\n      id: 'script-loader',\n      version: 'weekly',\n      googleMapsApiKey: appConfig.googleMapsApi!,\n      libraries,\n      language: user.language,\n    })\n\n    const renderMap = () => {\n      return (\n        <GoogleMap\n          zoom={model.zoom}\n          center={model.center}\n          onCenterChanged={model.updatePosition}\n          onZoomChanged={model.updateZoom}\n          onClick={model.onClick}\n          onLoad={model.setMapRef}\n          onUnmount={() => model.setMapRef(null)}\n          options={getMapOptions(isMobile)}\n          mapContainerStyle={{\n            borderRadius: '0 0 0.5rem 0.5rem',\n            overflow: 'hidden',\n            height: isMobile ? '100%' : 'calc(100% - 3.75rem)',\n          }}\n        >\n          {typeof children === 'function' ? children() : children}\n        </GoogleMap>\n      )\n    }\n\n    const googleAvailable = Reflect.has(window, 'google')\n\n    if (loadError || (isLoaded && !googleAvailable)) {\n      if (loadError) {\n        Sentry.withScope(scope => {\n          scope.setExtras({ googleMapUrl })\n          Sentry.captureException(loadError)\n        })\n      }\n      return (\n        <h2>\n          <Trans>Cannot load map right now. Please try again later.</Trans>\n        </h2>\n      )\n    }\n\n    return isLoaded ? renderMap() : <Pacman noMargin={true} />\n  },\n)\n","import { useReaction } from '@speedlo/hooks'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useQFoodMenu } from '../../../graph/generated'\n\nexport function useFoodMenuQuery(branchId: MaybeID) {\n  const { user } = useRoot()\n  const result = useQFoodMenu(\n    { branchId: branchId! },\n    { skip: !branchId, fetchPolicy: 'cache-first' },\n  )\n\n  useReaction(\n    () => user.language,\n    () => {\n      result.refetch()\n    },\n  )\n\n  return result\n}\n","import { isoDate } from '@speedlo/graphql'\nimport { useRouterContext } from '@speedlo/hooks'\nimport { Sentry } from '@speedlo/sentry'\nimport { createObjectValidation, useXForm, XFormProvider } from '@speedlo/xform'\nimport React from 'react'\nimport { Form } from 'reactstrap'\n\nimport { hiddenError } from '../../forms/FormTextInput'\nimport {\n  MSubmitOrderVariables,\n  PaymentGateEnum,\n  QOrderFormAgreementsAgreements,\n  useMSubmitOrder,\n} from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { useOrderFormCheck } from './hooks/useOrderFormCheck'\nimport { useOrderPayment } from './hooks/useOrderPayment'\n\nexport type TAgreement = QOrderFormAgreementsAgreements\n\nexport type OrderFormValues = ReturnType<typeof getInitialValues>\n\nexport const NOTE_MAX_LENGTH = 50\n\nexport const OrderFormSetup: React.FC = ({ children }) => {\n  const orderModel = useOrderModel()\n  const { history } = useRouterContext()\n\n  const { executeGoPayPayment, paymentErrorModal } = useOrderPayment()\n\n  const [submitOrder] = useMSubmitOrder()\n\n  const validationSchema = React.useMemo(\n    () =>\n      createObjectValidation(Yup => ({\n        firstname: Yup.string().required(hiddenError),\n        lastname: Yup.string().required(hiddenError),\n        phonePrefix: Yup.string().required(hiddenError),\n        phone: Yup.string()\n          .required(hiddenError)\n          .matches(/\\d+/, i18n.t`Only numbers allowed for phone`),\n        email: Yup.string()\n          .required(hiddenError)\n          .email(i18n.t`Invalid email format`),\n        note: Yup.string()\n          .notRequired()\n          .max(\n            NOTE_MAX_LENGTH,\n            ({ value }) =>\n              i18n.t`Maximum length is ${i18n.plural({\n                value: NOTE_MAX_LENGTH,\n                other: '# characters',\n              })}. Typed ${i18n.plural({\n                value: value.length,\n                one: '# character',\n                other: '# characters',\n              })}`,\n          ),\n      })),\n    [],\n  )\n\n  const { isOrderInCart } = useOrderFormCheck()\n\n  React.useEffect(() => {\n    if (orderModel.hasOrder && !isOrderInCart) {\n      history.replace('/')\n    }\n  })\n\n  const onSubmit = React.useCallback(\n    async (values: OrderFormValues) => {\n      orderModel.submitStarted()\n\n      const variables = getSubmitVariables(values, orderModel)\n      const result = await submitOrder(variables)\n\n      if (!result) {\n        orderModel.submitFailed()\n        return\n      }\n\n      const { userErrors, gopayUrl } = result.submitOrder\n      if (userErrors.length) {\n        orderModel.submitFailed(userErrors)\n        return\n      }\n\n      if (orderModel.paymentMethod === PaymentGateEnum.Cash) {\n        orderModel.submitFinished()\n        history.replace(`/finish`)\n        return\n      }\n\n      if (orderModel.paymentMethod === PaymentGateEnum.Gopay) {\n        if (gopayUrl) {\n          executeGoPayPayment(gopayUrl).finally(() => {\n            orderModel.submitFinished()\n          })\n        } else {\n          Sentry.withScope(scope => {\n            scope.setExtras({ variables })\n            Sentry.captureMessage('No gopayUrl received for GoPay payment')\n          })\n          orderModel.submitFailed()\n        }\n      } else {\n        Sentry.withScope(scope => {\n          scope.setExtras({ variables })\n          Sentry.captureMessage(\n            `Unknown payment mode ${orderModel.paymentMethod}`,\n          )\n        })\n        orderModel.submitFailed()\n      }\n    },\n    [executeGoPayPayment, history, orderModel, submitOrder],\n  )\n\n  const xform = useXForm({\n    initialValues: getInitialValues(),\n    validationSchema,\n    onSubmit,\n    onFormChanges: console.log,\n  })\n\n  React.useEffect(() => {\n    orderModel.root.cart.setOrderSubmitting(xform.state.isSubmitting)\n  }, [xform.state, orderModel.root.cart])\n\n  return (\n    <>\n      {paymentErrorModal}\n      <XFormProvider value={xform}>\n        <Form onSubmit={xform.handlers.handleSubmit}>{children}</Form>\n      </XFormProvider>\n    </>\n  )\n}\n\nfunction getInitialValues() {\n  return {\n    firstname: '',\n    lastname: '',\n    email: '',\n    phone: '',\n    phonePrefix: '',\n    note: '',\n    agreements: [] as RoA<ID>,\n    deliverAt: null as Maybe<Date>,\n  }\n}\n\nfunction getSubmitVariables(\n  values: OrderFormValues,\n  orderModel: TOrderModel,\n): MSubmitOrderVariables {\n  return {\n    orderId: orderModel.orderId!,\n    customer: {\n      firstName: values.firstname,\n      lastName: values.lastname,\n      emails: [{ email: values.email }],\n      phones: [{ phone: `${values.phonePrefix}${values.phone}` }],\n    },\n    note: values.note,\n    tips: orderModel.tips,\n    paymentGate: orderModel.paymentMethod as PaymentGateEnum,\n    deliverAt: values.deliverAt && isoDate(values.deliverAt),\n    agreements: values.agreements,\n  }\n}\n","import { LanguagePicker as LangPick } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\n\ninterface IProps {\n  className?: string\n}\n\nexport const LanguagePicker = observer<IProps>(({ className }) => {\n  const { business, user } = useRoot()\n  if (!business.isValid) {\n    return null\n  }\n  return (\n    <LangPick\n      availableLanguages={business.branch!.supportedLanguages}\n      selectedLanguage={user.language}\n      onChange={language => {\n        if (language !== user.language) {\n          user.selectLanguage(language)\n          // TODO: Figure out way to flush model persistence\n          setTimeout(() => {\n            window.location.reload()\n          }, 300)\n        }\n      }}\n      className={className}\n      backgroundColor=\"white\"\n      arrowColor=\"#5A5A5A\"\n    />\n  )\n})\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n}\n\nexport const ShopClosingTimeModal: React.FC<IProps> = ({ status }) => {\n  const { user } = useRoot()\n  const { decision, openingIn, closedNote } = useShopStatus({\n    status,\n    // Do not want update here as it would be showing modal every time :)\n    updateInterval: 0,\n  })\n  return useObserver(() => (\n    <AlertModal\n      isOpen={\n        (decision === 'Closed' || decision === 'OpeningSoon') &&\n        !user.closingTimeAlertHidden\n      }\n      onClose={user.hideClosingTime}\n      headerText={i18n.t`We are closed right now`}\n    >\n      {closedNote ||\n        i18n.t`We're sorry, but we do not accept new orders at this time.`}\n      {decision === 'OpeningSoon' && (\n        <Trans>\n          You can prepare your order because we are{' '}\n          <Plural\n            value={openingIn}\n            one=\"opening in 1 minute\"\n            other=\"opening in # minutes\"\n          />\n          !\n        </Trans>\n      )}\n    </AlertModal>\n  ))\n}\n","import './ShopHeaderIcons.css'\n\nimport { getLogo } from '@speedlo/assets'\nimport React from 'react'\n\nexport const ShopHeaderIcons = () => (\n  <>\n    <img\n      src={getLogo('doveze')}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={getLogo('mastercard')}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={getLogo('visa')}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={getLogo('gopay')}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </>\n)\n","import { DateFormat, Plural, Trans } from '@lingui/react'\nimport { isSameDay } from 'date-fns'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n  deliveryTime: number\n  pickupTime: number\n}\n\nexport const StyledStatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nexport const StyledStatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.FC<IProps> = ({\n  status,\n  deliveryTime,\n  pickupTime,\n}) => {\n  const { order } = useRoot()\n  const { decision, openingIn, closingIn } = useShopStatus({\n    status,\n  })\n\n  if (!status) {\n    return null\n  }\n\n  if (status.isOpen === false) {\n    if (!status.willOpenAt) {\n      return (\n        <StyledStatusDisplayClosed>\n          <Trans>We are closed until further notice</Trans>\n        </StyledStatusDisplayClosed>\n      )\n    }\n    const closestBH = status.businessHours[0]\n    if (closestBH && closestBH.closedNote) {\n      return (\n        <StyledStatusDisplayClosed>\n          {closestBH.closedNote}\n        </StyledStatusDisplayClosed>\n      )\n    }\n  }\n\n  switch (decision) {\n    case 'Open':\n      let timingDisplay\n      if (order.usingDeliveryOrderMethod && status.defaultDeliveryTimeEnabled) {\n        timingDisplay = (\n          <Trans>We are delivering in {deliveryTime} minutes</Trans>\n        )\n      }\n      if (order.usingPickupOrderMethod && status.defaultPickupTimeEnabled) {\n        timingDisplay = (\n          <Trans>We can prepare your order in {pickupTime} minutes</Trans>\n        )\n      }\n      return (\n        <Route\n          path=\"/order\"\n          render={() => (\n            <StyledStatusDisplayOpen data-testid=\"statusDisplayOpen\">\n              {timingDisplay}\n            </StyledStatusDisplayOpen>\n          )}\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <StyledStatusDisplayClosed>\n          <Plural\n            value={openingIn}\n            one=\"Opening in 1 minute\"\n            other=\"Opening in # minutes\"\n          />\n        </StyledStatusDisplayClosed>\n      )\n    case 'ClosingSoon':\n      return (\n        <StyledStatusDisplayOpen>\n          <Plural\n            value={closingIn}\n            one=\"Closing in 1 minute\"\n            other=\"Closing in # minutes\"\n          />\n        </StyledStatusDisplayOpen>\n      )\n    case 'Closed':\n      return (\n        <StyledStatusDisplayClosed>\n          {status.willOpenAt ? (\n            <Trans>We will open at {formatOpenTime(status.willOpenAt)}</Trans>\n          ) : (\n            <Trans>Closed</Trans>\n          )}\n        </StyledStatusDisplayClosed>\n      )\n  }\n}\n\nexport function formatOpenTime(openAt: string) {\n  const openAtDate = new Date(openAt)\n  const nowDate = new Date()\n  let format: Intl.DateTimeFormatOptions = {\n    hour: 'numeric',\n    minute: 'numeric',\n  }\n  if (!isSameDay(openAtDate, nowDate)) {\n    format = {\n      ...format,\n      weekday: 'long',\n    }\n  }\n  return <DateFormat value={openAtDate} format={format} />\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { QOrderFinishQuery } from '../../graph/generated'\n\ninterface IProps {\n  finish: QOrderFinishQuery\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.FC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => {\n  const renderHomeButton = () => (\n    <Link to=\"/\">\n      <PrimaryButton className=\"finish__view__submit__line__button\">\n        <Trans>Back to home page</Trans>\n      </PrimaryButton>\n    </Link>\n  )\n  return (\n    <>\n      <Desktop>\n        {(androidApp || iosApp) && (\n          <div className=\"finish__view__apps__propagation\">\n            <div className=\"finish__view__apps__propagation__header\">\n              <Trans>What about mobile app?</Trans>\n            </div>\n            <div className=\"finish__view__apps__propagation__description\">\n              <Trans>\n                We have prepared mobile app, so you could order from anywhere!\n              </Trans>\n            </div>\n\n            {androidApp && (\n              <a href={androidApp.url}>\n                <Button\n                  className=\"finish__view__apps__propagation__button\"\n                  color=\"secondary\"\n                >\n                  Google Play\n                </Button>\n              </a>\n            )}\n\n            {iosApp && (\n              <a href={iosApp.url}>\n                <Button\n                  className=\"finish__view__apps__propagation__button\"\n                  color=\"secondary\"\n                >\n                  App Store\n                </Button>\n              </a>\n            )}\n          </div>\n        )}\n        <CenteredButtonContainer>{renderHomeButton()}</CenteredButtonContainer>\n      </Desktop>\n\n      <Mobile>\n        <div\n          className=\"finish__view__submit__line\"\n          style={{ textAlign: 'center' }}\n        >\n          <div className=\"finish__view__submit__line__strip\" />\n          {renderHomeButton()}\n        </div>\n      </Mobile>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport Pacman from '../../common/Pacman'\nimport { QOrderFinishQuery, useQOrderFinish } from '../../graph/generated'\nimport { useEmptyOrderRedirect } from '../../hooks/useEmptyOrderRedirect'\n\ninterface IProps {\n  render(result: QOrderFinishQuery): ReactNode\n}\n\nexport const FinishViewLoader: React.FC<IProps> = ({ render }) => {\n  const { order } = useRoot()\n  useEmptyOrderRedirect()\n\n  const { data, loading } = useQOrderFinish({\n    branchId: order.branchId!,\n    orderId: order.orderId!,\n  })\n\n  if (loading) {\n    return <Pacman />\n  }\n\n  return render(data)\n}\n","import { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport {\n  FOrderFinishedFragment,\n  FOrderFinishedItems,\n  FOrderFinishedOrderPayments,\n  PaymentTypeEnum,\n} from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: FOrderFinishedFragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.FC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = (paymentType: PaymentTypeEnum) => (\n  payment: FOrderFinishedOrderPayments,\n) => payment.paymentMethod.paymentType.enum === paymentType\n\nfunction getPaymentInfo({ orderPayments }: FOrderFinishedFragment) {\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Credit))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({ orderPayments, totalSum }: FOrderFinishedFragment) {\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Credit))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: FOrderFinishedItems) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { QOrderFinishCompanyBranch } from '../../graph/generated'\n\ninterface IProps {\n  branch: QOrderFinishCompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.FC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.FC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { useGoogleMap } from '@react-google-maps/api'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { GeoPoint, gpsToLatLngLit } from '../../../helpers/gps'\n\nexport function useMapPanning() {\n  const { map } = useRoot()\n  const mapRef = useGoogleMap()\n\n  const prevGps = React.useRef<Maybe<GeoPoint>>(null)\n\n  const panToGps = (gps: GeoPoint) => {\n    if (!mapRef) {\n      map.log('cannot pan map as ref is not available')\n      return\n    }\n    const latLng = gpsToLatLngLit(gps)\n    map.log('panning to %j', latLng)\n    mapRef.panTo(latLng)\n    prevGps.current = gps\n  }\n\n  return (gps: GeoPoint) => {\n    const prev = prevGps.current\n    if (\n      !prev ||\n      (prev.latitude !== gps.latitude && prev.longitude !== gps.longitude)\n    ) {\n      panToGps(gps)\n    }\n  }\n}\n","import { OverlayView } from '@react-google-maps/api'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { FPickupBranchFragment } from '../graph/generated'\nimport { gpsToLatLng } from '../helpers/gps'\n\ninterface IProps {\n  branch: FPickupBranchFragment\n  onClick?: () => void\n}\n\nconst StyledPickupMapMarker = styled.div`\n  cursor: pointer;\n  color: white;\n  opacity: 0.5;\n\n  &::before {\n    font-size: 1.3rem;\n    margin: 0;\n    padding: 0.5rem;\n    background-color: #ff0000;\n    border-radius: 1rem;\n  }\n`\n\nexport const MapBranchMarker: React.FC<IProps> = ({ branch, onClick }) => {\n  return (\n    <OverlayView\n      position={gpsToLatLng(branch.gps)}\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n      getPixelPositionOffset={(width, height) => ({\n        x: width === 0 ? -12 : -(width / 2),\n        y: height === 0 ? -12 : -(height / 2),\n      })}\n    >\n      <StyledPickupMapMarker\n        className=\"flaticon-restaurant\"\n        data-testid=\"PickupMapMarker\"\n        title={branch.name}\n        onClick={onClick}\n      />\n    </OverlayView>\n  )\n}\n","import { useApolloClient } from '@speedlo/graphql'\n\nimport { useRoot } from '../app/useRoot'\nimport {\n  FCartGoodsItems,\n  FCartPresencePresence,\n  FRecipeFragment,\n  FRecipeFragmentDoc,\n  MAddToCartMutation,\n  MAddToCartVariables,\n  QCartDocument,\n  QCartQuery,\n  QCartVariables,\n  useMAddToCart,\n} from '../graph/generated'\n\nlet counter = 1\n\nconst NO_SIDEDISHES = []\n\nexport function useAddToCart() {\n  const { order, cart: cartModel } = useRoot()\n  const client = useApolloClient()\n\n  const [addToCart] = useMAddToCart({\n    context: { noBatch: true },\n  })\n\n  const executeAddToCart = (\n    recipeId: ID,\n    sideDishes: RoA<ID> = NO_SIDEDISHES,\n  ) => {\n    const variables: MAddToCartVariables = {\n      orderId: order.orderId!,\n      recipeId,\n      sideDishes,\n      withGoods: cartModel.withGoods,\n      withPresence: cartModel.withPresence,\n    }\n    return addToCart(variables, {\n      optimisticResponse: makeOptimisticResponse(variables),\n    })\n  }\n\n  return executeAddToCart\n\n  function makeOptimisticResponse(\n    variables: MAddToCartVariables,\n  ): MAddToCartMutation | undefined {\n    const current = client.readQuery<QCartQuery, QCartVariables>(\n      {\n        query: QCartDocument,\n        variables: {\n          orderId: variables.orderId,\n          withGoods: cartModel.withGoods,\n          withPresence: cartModel.withPresence,\n        },\n      },\n      true,\n    )\n    if (!current) {\n      return undefined\n    }\n    const id = `-${counter++}`\n    const addPresence = (): RoA<FCartPresencePresence> => {\n      if (!cartModel.withPresence) {\n        return current.order.presence\n      }\n      return [\n        ...current.order.presence,\n        {\n          __typename: 'OrderRecipe',\n          id,\n          recipe: {\n            __typename: 'Recipe',\n            id: variables.recipeId,\n          },\n        },\n      ]\n    }\n    const addItem = (): RoA<FCartGoodsItems> => {\n      if (!cartModel.withGoods) {\n        return current.order.items\n      }\n      const recipe = client.readFragment<FRecipeFragment>(\n        {\n          id: `Recipe-${variables.recipeId}`,\n          fragment: FRecipeFragmentDoc,\n          fragmentName: 'FRecipe',\n        },\n        true,\n      )\n      if (!recipe) {\n        return current.order.items\n      }\n      return [\n        ...current.order.items,\n        {\n          __typename: 'OrderRecipe',\n          automatic: false,\n          id,\n          price: {\n            __typename: 'PriceConverted',\n            formattedValue: '???',\n            value: -1,\n          },\n          recipe,\n          sideDishes: [],\n        },\n      ]\n    }\n    return {\n      __typename: 'Mutation',\n      add: {\n        ...current.order,\n        countWares: current.order.countWares + 1,\n        totalSum: {\n          ...current.order.totalSum,\n          value: -1,\n        },\n        items: addItem(),\n        presence: addPresence(),\n      },\n    }\n  }\n}\n","import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\ninterface IProps extends ButtonProps {\n  isSelected: boolean\n  width: string\n}\n\nconst PickerButtonStyled = styled(({ isSelected, width, ...props }) => (\n  <Button {...props} />\n))`\n  border-radius: 0.6rem;\n  margin: 0.5rem;\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n  width: ${props => props.width};\n  @media (max-width: 370px) {\n    width: 100%;\n  }\n  &.btn-outline-secondary {\n    color: #2e2e2e;\n    border-color: #d4d4d4;\n  }\n  &.btn-outline-secondary.active {\n    color: white;\n  }\n`\n\nexport const PickerButton: React.FC<IProps> = ({\n  isSelected,\n  onSelect,\n  children,\n  ...buttonProps\n}) => {\n  return (\n    <PickerButtonStyled isSelected={isSelected} {...buttonProps}>\n      {children}\n    </PickerButtonStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from './Responsive'\n\ninterface IProps {}\n\nconst StyledButtonStrip = styled.div`\n  margin: 0;\n  margin-bottom: 1rem;\n  text-align: center;\n  position: sticky;\n  bottom: 1rem;\n\n  ${mediaMobile`\n      position: fixed;\n      bottom: 0;\n      width: 100%;\n  `}\n\n  div.strip {\n    background-color: #d4d4d4;\n    position: relative;\n    top: 3.2rem;\n    z-index: 0;\n    height: 1.6rem;\n    width: 100%;\n  }\n  button {\n    margin: 1rem;\n    padding: 0.8rem 1.6rem;\n    z-index: 1;\n    position: relative;\n  }\n`\n\nexport const ButtonStrip: React.FC<IProps> = ({ children }) => {\n  return (\n    <StyledButtonStrip>\n      <div className=\"strip\" />\n      {children}\n    </StyledButtonStrip>\n  )\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../app/useRoot'\n\nexport const OrderErrorModal: React.FC = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <Modal\n      isOpen={order.hasErrors}\n      toggle={order.clearErrors}\n      className=\"modal__container\"\n    >\n      <ModalHeader\n        toggle={order.clearErrors}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Order can not be completed</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {order.hasErrors &&\n            order.submitErrors!.map((error, idx) => (\n              <div key={idx}>{error}</div>\n            ))}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <Button\n            className=\"modal__body__button\"\n            color=\"primary\"\n            onClick={order.clearErrors}\n          >\n            <Trans>I understand</Trans>\n          </Button>\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  ))\n}\n","import { fakerCZ } from '@speedlo/testing/dist/faker'\nimport { useXFormCtx } from '@speedlo/xform'\nimport React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { NOTE_MAX_LENGTH, OrderFormValues } from './OrderFormSetup'\n\nexport const OrderFormAutoFill: React.FC = () => {\n  const orderModel = useOrderModel()\n  const xform = useXFormCtx<OrderFormValues>()\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n  return (\n    <SecondaryButton\n      style={{ marginBottom: '0.5rem' }}\n      onClick={() => {\n        const values = {\n          firstname: fakerCZ.name.firstName(),\n          lastname: fakerCZ.name.lastName(),\n          email: fakerCZ.internet.email(),\n          phone: fakerCZ.phone.phoneNumberFormat(0).replace(/\\s/g, ''),\n          phonePrefix: '+420',\n          note: fakerCZ.lorem.sentence().slice(0, NOTE_MAX_LENGTH - 1),\n          agreements: [],\n        }\n        Object.keys(values).forEach(key => {\n          xform.state.touched.add(key)\n        })\n        xform.api.mergeValues(values)\n        xform.api.validateForm()\n\n        if (orderModel.usingPaymentMethodWithTips) {\n          orderModel.setTips(15)\n        }\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  )\n}\n","import { OrderStateCategoryEnum, useQOrderForm } from '../../../graph/generated'\nimport { useOrderModel } from '../../../hooks/useOrderModel'\n\nexport function useOrderFormCheck() {\n  const orderModel = useOrderModel()\n\n  const { data, loading } = useQOrderForm(\n    { orderId: orderModel.orderId! },\n    { skip: !orderModel.orderId },\n  )\n\n  const isOrderInCart =\n    loading || data.order.orderStateCategory === OrderStateCategoryEnum.InCart\n  const hasItemsInCart = !loading && data.order.countWares > 0\n\n  return { isOrderInCart, hasItemsInCart }\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useGoPay } from '@speedlo/payments'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useExecutableQOrderPaymentStatus } from '../../../graph/generated'\nimport { useAlertModal } from '../../../hooks/useAlertModal'\nimport { i18n } from '../../../i18n'\n\nexport function useOrderPayment() {\n  const { order: orderModel, business } = useRoot()\n  const { history } = useRouterContext()\n\n  const [paymentErrorModal, alertPaymentError] = useAlertModal()\n\n  const [executePaymentStatusCheck] = useExecutableQOrderPaymentStatus({\n    fetchPolicy: 'no-cache',\n  })\n\n  const onFinish = React.useCallback(() => {\n    history.replace('/finish')\n  }, [history])\n\n  const onError = React.useCallback(\n    errors => {\n      const phone = business.branch!.phone\n      alertPaymentError(\n        i18n.t`Payment status check has failed`,\n        errors.length\n          ? errors.join('<br />')\n          : i18n.t`We were unable to verify status of your payment. Please contact operator using number ${phone}`,\n      )\n    },\n    [alertPaymentError, business],\n  )\n\n  const queryPaymentStatus = React.useCallback(\n    (orderId = orderModel.orderId!, userToken) => {\n      if (!orderId) {\n        return Promise.resolve(null)\n      }\n      orderModel.goPayStatusCheck(true)\n      return executePaymentStatusCheck(\n        { orderId },\n        {\n          fetchPolicy: 'no-cache',\n          context: {\n            invalidateWithToken: userToken,\n            noBatch: true,\n          },\n        },\n      )\n        .then(result => {\n          return result ? result.status : null\n        })\n        .finally(() => {\n          orderModel.goPayStatusCheck(false)\n          return null\n        })\n    },\n    [executePaymentStatusCheck, orderModel],\n  )\n\n  const { executeGoPayPayment, paymentLoading: paymentProcessing } = useGoPay(\n    queryPaymentStatus,\n    {\n      onError,\n      onFinish,\n    },\n  )\n\n  return { paymentErrorModal, executeGoPayPayment, paymentProcessing }\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport FormGroup from 'reactstrap/lib/FormGroup'\nimport Input from 'reactstrap/lib/Input'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useMOrderTipUpdate } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\nconst StyledOrderFormTipInput = styled.div`\n  margin: 0.8rem 0 1.4rem 0;\n`\n\nexport const OrderFormTipInput = observer(() => {\n  const { order, cart } = useRoot()\n  const [updateTip] = useMOrderTipUpdate()\n\n  // TODO: Vyresit aby se nespoustelo po navratu z GoPay\n  useReaction(\n    () => (order.usingPaymentMethodWithTips ? Number(order.tips) : 0),\n    tips => {\n      updateTip({\n        tips,\n        orderId: order.orderId!,\n        withGoods: cart.withGoods,\n      })\n    },\n  )\n\n  if (!order.usingPaymentMethodWithTips) {\n    return null\n  }\n\n  return (\n    <StyledOrderFormTipInput>\n      <FormGroup>\n        <Input\n          type=\"select\"\n          value={order.tips}\n          onChange={ev => {\n            order.setTips(Number.parseInt(ev.target.value, 10))\n          }}\n          disabled={order.disableInteraction}\n          data-testid=\"orderTipsSelect\"\n        >\n          <option value={0}>{i18n.t`Without tips`}</option>\n          <option value={5}>{i18n.t`Tips 5%`}</option>\n          <option value={10}>{i18n.t`Tips 10%`}</option>\n          <option value={15}>{i18n.t`Tips 15%`}</option>\n          <option value={20}>{i18n.t`Tips 20%`}</option>\n          <option value={25}>{i18n.t`Tips 25%`}</option>\n        </Input>\n      </FormGroup>\n    </StyledOrderFormTipInput>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <AlertModal isOpen={orderModel.isGoPayChecking} headerText=\"GoPay platba\">\n      <TextPadding>\n        <Trans>Checking your GoPay payment, please wait...</Trans>\n      </TextPadding>\n      <Pacman noMargin={true} />\n    </AlertModal>\n  ))\n}\n","import { useOrderPromoCodes } from '@speedlo/ui'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { SecondaryButton } from '../../common/Buttons'\nimport {\n  useMOrderPromoAdd,\n  useMOrderPromoRemove,\n  useQOrderPromoCodes,\n} from '../../graph/generated'\nimport { useAlertModal } from '../../hooks/useAlertModal'\nimport { i18n } from '../../i18n'\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport const OrderPromoInput = React.memo(() => {\n  const { order: orderModel, cart } = useRoot()\n  const [errorModal, showError] = useAlertModal()\n\n  const { data, loading } = useQOrderPromoCodes(\n    { orderId: orderModel.orderId! },\n    { skip: !orderModel.orderId },\n  )\n  const [addCodeMutation] = useMOrderPromoAdd()\n  const [removeCodeMutation] = useMOrderPromoRemove()\n\n  const onCodeAdd = React.useCallback(\n    async (code: string) => {\n      if (!orderModel.orderId) {\n        return\n      }\n      return addCodeMutation({\n        code,\n        orderId: orderModel.orderId,\n        withGoods: cart.withGoods,\n      })\n    },\n    [addCodeMutation, cart, orderModel],\n  )\n\n  const onCodeRemove = async (codeId: ID) => {\n    if (orderModel.orderId) {\n      removeCodeMutation({\n        codeId,\n        orderId: orderModel.orderId,\n        withGoods: cart.withGoods,\n      })\n    }\n  }\n\n  const onCodeErrors = (code, errors) => {\n    showError(\n      i18n.t`Promo code \"${code}\" is invalid`,\n      <div>\n        {errors.map(msg => (\n          <div key={msg}>{msg}</div>\n        ))}\n      </div>,\n    )\n  }\n\n  const { inputProps, inputRef } = useOrderPromoCodes({\n    onCodeAdd,\n    onCodeErrors,\n    getValidatingMessage: code => i18n.t`Validating promo code ${code}...`,\n  })\n\n  const codes = loading ? [] : data.order.promoCodes\n\n  return useObserver(() => (\n    <FormGroup>\n      {errorModal}\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          placeholder={i18n.t`Promo codes`}\n          {...inputProps}\n          disabled={inputProps.disabled || orderModel.disableInteraction}\n        />\n      </InputGroup>\n      <CodesPanel data-testid=\"promoCodesPanel\">\n        {codes.map(({ id, code }) => (\n          <SecondaryButton\n            key={id}\n            role=\"button\"\n            disabled={orderModel.disableInteraction}\n            onClick={() => onCodeRemove(id)}\n          >\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  ))\n})\n","import { useXFormCtx } from '@speedlo/xform'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\nimport { useOrderFormCheck } from './hooks/useOrderFormCheck'\n\ninterface IProps {\n  children: ReactNode\n}\n\nexport const OrderSubmitButton = observer<IProps>(({ children }) => {\n  const xform = useXFormCtx()\n  const orderModel = useOrderModel()\n\n  const { hasItemsInCart } = useOrderFormCheck()\n\n  let submitBlocked = true\n  let submitBlockReason = ''\n\n  if (!hasItemsInCart) {\n    submitBlockReason = i18n.t`Cart is empty`\n  } else if (!orderModel.isVamInitialized) {\n    submitBlockReason = i18n.t`Agreements are not initialized yet`\n  } else if (!xform.state.isValid) {\n    submitBlockReason = i18n.t`Form validation failed`\n  } else {\n    submitBlocked = false\n  }\n\n  return (\n    <>\n      <PrimaryButton\n        id=\"OrderSubmitButton\"\n        title={submitBlockReason}\n        type=\"submit\"\n        color=\"primary\"\n        size=\"md\"\n        disabled={submitBlocked || xform.state.isSubmitting}\n      >\n        {xform.state.isSubmitting ? (\n          <Spinner name=\"circle\" fadeIn=\"none\" color=\"#ccc\" />\n        ) : (\n          children\n        )}\n      </PrimaryButton>\n    </>\n  )\n})\n","import { DateFormat, Trans } from '@lingui/react'\nimport { useXFieldState } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { OrderFormValues } from './OrderFormSetup'\n\nconst StyledOrderTimeButtons = styled.div`\n  margin: 0 0 1.4rem 0;\n  button {\n    position: relative;\n    padding-top: 0.3rem;\n    margin-bottom: 0.2rem;\n    height: 2.8rem;\n  }\n  button:first-of-type {\n    margin-right: 0.8rem;\n  }\n`\n\nexport const OrderTimeButtons: React.FC = () => {\n  const orderModel = useOrderModel()\n\n  const field = useXFieldState<OrderFormValues['deliverAt']>('deliverAt')\n\n  return useObserver(() => {\n    if (!orderModel.delayedOrderEnabled) {\n      return null\n    }\n    const isDelayed = field.value !== null\n    return (\n      <StyledOrderTimeButtons>\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonNow\"\n          selected={!isDelayed}\n          disabled={orderModel.disableInteraction}\n          onClick={() => field.setValue(null)}\n        >\n          <Trans>When possible</Trans>\n        </SelectButtonThemed>\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonLater\"\n          selected={isDelayed}\n          disabled={orderModel.disableInteraction}\n          onClick={orderModel.openTimePicker}\n        >\n          {isDelayed ? (\n            <DateFormat\n              value={field.value}\n              format={{ weekday: 'long', hour: 'numeric', minute: 'numeric' }}\n            />\n          ) : (\n            <Trans>Choose time</Trans>\n          )}\n        </SelectButtonThemed>\n      </StyledOrderTimeButtons>\n    )\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.FC<IProps> = () => {\n  const { user } = useRoot()\n\n  return useObserver(() => {\n    if (user.rememberForm !== null) {\n      return null\n    }\n    return (\n      <StorageNotice\n        data-testid=\"OrderFormStorageNotice\"\n        className=\"animated slideInUp\"\n      >\n        <p>\n          <Trans>\n            This app is using secure storage for keeping filled form data. It's\n            not cookies, these are stored in your browser only.\n          </Trans>\n        </p>\n\n        <NoticeButton\n          color=\"success\"\n          size=\"sm\"\n          onClick={user.setFormRememberYes}\n          data-testid=\"orderFormStorageNotice__Yes\"\n        >\n          <Trans>Always remember</Trans>\n        </NoticeButton>\n        <NoticeButton\n          color=\"secondary\"\n          size=\"sm\"\n          onClick={user.setFormRememberNo}\n          data-testid=\"orderFormStorageNotice__No\"\n        >\n          <Trans>Do not store</Trans>\n        </NoticeButton>\n      </StorageNotice>\n    )\n  })\n}\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n}\n\nexport const AddressSubmit: React.FC<IProps> = ({ enabled, onClick }) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      data-testid=\"AddressSubmit\"\n    >\n      {i18n.t`Confirm address`}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import { cn } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Input, InputProps } from 'reactstrap'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useDebounce } from '../../../hooks/useDebounce'\n\ninterface IProps {\n  onSearch: () => void\n  isVisible: boolean\n  inputProps: InputProps\n}\n\nexport const AddressSearchInput = observer<IProps>(\n  ({ onSearch, inputProps, isVisible }) => {\n    const { location } = useRoot()\n    const inputRef = React.useRef<Maybe<HTMLInputElement>>(null)\n\n    React.useEffect(\n      function autoFocus() {\n        if (isVisible && inputRef.current !== null) {\n          inputRef.current.focus()\n        }\n      },\n      [isVisible],\n    )\n\n    const onSearchDebounced = useDebounce(onSearch, 2000)\n\n    React.useEffect(() => {\n      return () => onSearchDebounced.clear()\n    }, [onSearchDebounced])\n\n    const onChange = function searchOnChangeDebounced(\n      ev: React.ChangeEvent<HTMLInputElement>,\n    ) {\n      const search = ev.target.value || ''\n      location.setSearchValue(search)\n      if (search.trim().length === 0) {\n        location.clearAddress()\n      }\n      onSearchDebounced()\n    }\n\n    const onKeyPress = function searchOnEnterKey(\n      ev: React.KeyboardEvent<HTMLInputElement>,\n    ) {\n      if (ev.key === 'Enter') {\n        onSearchDebounced.clear()\n        onSearch()\n      }\n    }\n\n    const onFocus = function autoSelectOnFocus() {\n      inputRef.current!.select()\n    }\n\n    return (\n      <Input\n        className={cn({ hidden: !isVisible })}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        onFocus={onFocus}\n        value={location.searchValue}\n        innerRef={inputRef}\n        data-testid=\"SearchInput\"\n        {...inputProps}\n      />\n    )\n  },\n)\n","import debounce from 'debounce'\nimport React from 'react'\n\nexport function useDebounce(\n  cb: AnyFunction,\n  time: number = 300,\n  deps: React.DependencyList = [],\n) {\n  const debounced = React.useCallback(debounce(cb, time), [...deps, cb, time])\n\n  React.useEffect(() => {\n    return () => {\n      debounced.clear()\n    }\n  }, [debounced])\n\n  return debounced\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useAlertModal } from '../../../hooks/useAlertModal'\nimport { i18n } from '../../../i18n'\n\nexport const GeolocationButton = observer(() => {\n  const { location } = useRoot()\n\n  const [alert, makeAlert] = useAlertModal()\n\n  if (!location.isGeolocationAvailable || location.isResolving) {\n    return null\n  }\n\n  const attemptGeolocation = () => {\n    location.log('geolocating...')\n    navigator.geolocation.getCurrentPosition(\n      ({ coords }) => {\n        const { latitude, longitude } = coords\n        location.log(\n          'geolocated at coords %s, %s (acc: %s)',\n          coords.latitude,\n          coords.longitude,\n          coords.accuracy,\n        )\n        location.setGeolocationPoint({ latitude, longitude })\n      },\n      err => {\n        location.log('failed geolocation', err)\n        location.disableGeolocation()\n        makeAlert(\n          i18n.t`Geolocation failed`,\n          i18n.t`Your browser does not support geolocation.`,\n        )\n      },\n      {\n        enableHighAccuracy: true,\n        maximumAge: 60 * 1000,\n      },\n    )\n  }\n\n  return (\n    <>\n      {alert}\n      <div className=\"gps\" onClick={attemptGeolocation}>\n        <span className=\"flaticon-gps\" />\n      </div>\n    </>\n  )\n})\n\nexport default GeolocationButton\n","import { cn } from '@speedlo/ui'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.FC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  return (\n    <div\n      data-testid=\"ResolvedAddress\"\n      className={cn('resolved__address', {\n        wait: isResolving,\n        hidden: !isVisible,\n      })}\n      onClick={isResolving ? undefined : onValidClick}\n    >\n      {isResolving ? <Spinner name=\"ball-beat\" fadeIn=\"none\" /> : address}\n    </div>\n  )\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { debounce } from 'debounce'\nimport { reaction } from 'mobx'\nimport { useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\n\ninterface IAddressSearchOptions {\n  count?: number\n  watchLocation?: boolean\n}\n\nexport type AddressSearchResult = ReturnType<typeof mapResult>\n\nconst urlCache = new Map()\n\nexport function useAddressSearch({\n  count = 1,\n  watchLocation = false,\n}: IAddressSearchOptions = {}) {\n  const { map, location } = useRoot()\n\n  const state = useLocalStore(() => ({\n    results: null as RoA<AddressSearchResult> | null,\n    phrase: location.searchValue,\n    searching: false,\n    get url() {\n      const params = [\n        `count=${count}`,\n        `lon=${map.longitude}`,\n        `lat=${map.latitude}`,\n        `zoom=${map.zoom}`,\n        `lang=cs,sk,en`,\n        `enableCategories=1`,\n      ]\n      return `https://api.mapy.cz/suggest/?${params.join('&')}`\n    },\n  }))\n\n  const doFetch = React.useCallback(() => {\n    if (state.phrase.length === 0) {\n      state.results = null\n      return\n    }\n\n    location.log(`searching phrase: ${state.phrase}`)\n    const url = `${state.url}&phrase=${state.phrase}`\n\n    if (urlCache.has(url)) {\n      state.results = urlCache.get(url)\n      return\n    }\n\n    state.searching = true\n\n    fetch(url)\n      .then(resp => resp.json())\n      .then(json => {\n        const results = json.result.filter(validateResult).map(mapResult)\n        urlCache.set(url, results)\n        state.results = results\n      })\n      .finally(() => {\n        state.searching = false\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location])\n\n  const debouncedFetch = React.useRef(debounce(doFetch, 500))\n\n  const onSearch = React.useCallback(\n    (nextPhrase: string = location.searchValue) => {\n      location.log(`onSearch ${nextPhrase}`)\n      state.phrase = nextPhrase.trim()\n      debouncedFetch.current.clear()\n      doFetch()\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [doFetch, location],\n  )\n\n  useReaction(\n    () => location.searchValue,\n    value => {\n      if (value.length === 0) {\n        state.phrase = ''\n        state.results = null\n        debouncedFetch.current.clear()\n      }\n    },\n  )\n\n  React.useEffect(\n    () =>\n      reaction(\n        () => state.url,\n        () => {\n          if (watchLocation) {\n            debouncedFetch.current()\n          }\n        },\n      ),\n    [state.url, watchLocation],\n  )\n\n  return { ...state, onSearch }\n}\n\nfunction validateResult({ userData }) {\n  const { latitude, longitude } = userData\n  return latitude && longitude\n}\n\nfunction mapResult({ category, userData }) {\n  const {\n    id,\n    latitude,\n    longitude,\n    suggestFirstRow,\n    suggestSecondRow,\n    municipality,\n    district,\n    country,\n  } = userData\n\n  const suffix =\n    [municipality, district, country, suggestSecondRow].find(Boolean) || ''\n\n  return {\n    id,\n    category,\n    gps: {\n      latitude,\n      longitude,\n    },\n    address: `${suggestFirstRow}${suffix ? `, ${suffix}` : ''}`,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { useReaction } from '@speedlo/hooks'\nimport { cn } from '@speedlo/ui'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useAddressSearch } from './hooks/useAddressSearch'\n\ninterface IProps {}\n\nconst Styled = styled.div`\n  position: absolute;\n  margin-top: 0.1rem;\n\n  > div,\n  button.hint:hover {\n    background-color: #ffffffaa;\n  }\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    border: 1px solid transparent;\n    border-radius: 0.4rem;\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    max-width: 25rem;\n    text-align: left;\n\n    & > p {\n      font-size: 0.8rem;\n      color: gray;\n    }\n\n    button {\n      &:hover,\n      &:hover:focus {\n        text-decoration: none;\n      }\n    }\n\n    button.done {\n      color: darkgray;\n    }\n  }\n\n  button.hint {\n    color: coral;\n    text-shadow: 0.5px 0.5px darkgray;\n    &:hover {\n      text-decoration: none;\n      transition: background-color 0.5s ease;\n    }\n  }\n`\n\nexport const ExtraAddressResult = observer<IProps>(props => {\n  const { location } = useRoot()\n  const state = useLocalStore(() => ({\n    open: false,\n  }))\n\n  const { results, searching, onSearch } = useAddressSearch({\n    count: 5,\n    watchLocation: state.open,\n  })\n\n  useReaction(\n    () => state.open,\n    open => {\n      if (open) {\n        onSearch()\n      }\n    },\n  )\n\n  useReaction(\n    () => location.searchValue,\n    () => {\n      state.open = false\n    },\n  )\n\n  if (!location.hasSearchValue) {\n    return null\n  }\n\n  const usefulResults =\n    results && results.filter(({ address }) => address !== location.address)\n\n  const renderHint = () => (\n    <Button\n      className=\"hint\"\n      color=\"link\"\n      onClick={() => {\n        state.open = true\n      }}\n    >\n      <Trans>Looking for a different address?</Trans>\n    </Button>\n  )\n\n  const renderResults = () => (\n    <div>\n      <p>\n        <Trans>\n          Hint: Try moving map around and zooming closer to your location to\n          improve these results.\n        </Trans>\n      </p>\n      {searching && <div>...</div>}\n      {usefulResults &&\n        usefulResults.map(result => (\n          <Button\n            size=\"sm\"\n            color=\"link\"\n            key={result.id}\n            onClick={() => {\n              location.setSearchResult(result)\n              state.open = false\n            }}\n          >\n            {result.address}\n          </Button>\n        ))}\n      <Button\n        size=\"sm\"\n        color=\"link\"\n        onClick={() => {\n          state.open = false\n        }}\n        className=\"done\"\n      >\n        {usefulResults && usefulResults.length === 0 ? (\n          <Trans>No match for map location</Trans>\n        ) : (\n          <Trans>I don't see anything useful here.</Trans>\n        )}\n      </Button>\n    </div>\n  )\n\n  return (\n    <Styled\n      className={cn('animated', {\n        bounceInLeft: state.open,\n        bounceIn: !state.open,\n      })}\n      key={state.open.toString()}\n    >\n      {state.open ? renderResults() : renderHint()}\n    </Styled>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { mediaDesktop } from '../../common/Responsive'\nimport { gpsToLatLngLit } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { AddressSearchInput } from './destination/AddressSearchInput'\nimport GeolocationButton from './destination/GeolocationButton'\nimport { ResolvedAddress } from './destination/ResolvedAddress'\nimport { ExtraAddressResult } from './ExtraAddressResult'\nimport { useAddressSearch } from './hooks/useAddressSearch'\n\nconst Styled = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n\n  div.container {\n    display: flex;\n    border-radius: 1rem;\n    border: 1px solid #d4d4d4;\n    background-color: white;\n    ${mediaDesktop`\n    height: 2.3rem;\n    `}\n  input {\n    height: auto;\n    background: transparent;\n    border: none;\n    &:focus {\n      box-shadow: initial;\n    }\n    &.hidden {\n      display: none;\n    }\n  }\n\n  div.gps {\n    color: ${({ theme }) => theme.secondary};\n    cursor: pointer;\n    position: relative;\n    top: 0.2rem;\n  }\n\n  div.resolved__address {\n    margin: 0.4rem 0.7rem 0.4rem 0.7rem;\n    font-size: 1rem;\n    color: green;\n    width: 100%;\n    cursor: pointer;\n    &.hidden {\n      display: none;\n    }\n    &.wait {\n      display: flex;\n      justify-content: center;\n      font-size: 0.5rem;\n      cursor: wait;\n    }\n  }\n\n  .alert {\n    pointer-events: none;\n    margin-bottom: 0;\n  }\n`\n\nexport const DeliveryAddressSearch = observer(() => {\n  const { map, location } = useRoot()\n\n  const { results, searching, onSearch } = useAddressSearch()\n\n  React.useEffect(() => {\n    if (searching) {\n      location.setIsResolving(searching)\n    }\n  }, [location, searching])\n\n  React.useEffect(() => {\n    if (results === null) {\n      return\n    }\n\n    if (results.length === 0) {\n      location.log('no result from direct geocoder api')\n      location.setAsNotResolved()\n      return\n    }\n\n    const [singleResult] = results\n    const {\n      category,\n      gps: { latitude, longitude },\n    } = singleResult\n\n    if (map.mapRef) {\n      map.log(`panning to result gps ${latitude} / ${longitude}`)\n      map.mapRef.panTo(gpsToLatLngLit(singleResult.gps))\n    }\n\n    if (!(category && category.startsWith('address'))) {\n      location.log('result with category %s', category)\n      location.setAsNotAddress()\n      return\n    }\n\n    location.log(`found address ${singleResult.address}`)\n    if (location.latitude !== latitude && location.longitude !== longitude) {\n      location.resetResolution()\n    }\n    location.setSearchResult(singleResult)\n  }, [location, map, results])\n\n  return (\n    <Styled>\n      <div className=\"container\">\n        <ResolvedAddress\n          address={location.address || ''}\n          isVisible={location.hasAddress}\n          isResolving={location.isResolving}\n          onValidClick={location.clearAddress}\n        />\n        <AddressSearchInput\n          inputProps={{\n            placeholder: i18n.t`Type address or choose it from map`,\n            autoComplete: 'shipping street-address',\n          }}\n          onSearch={onSearch}\n          isVisible={!(location.hasAddress || location.isResolving)}\n        />\n        <GeolocationButton />\n      </div>\n      <ErrorMessage />\n      <ExtraAddressResult />\n    </Styled>\n  )\n})\n\nfunction ErrorMessage() {\n  const { location } = useRoot()\n  if (!location.hasResolutionResult) {\n    return null\n  }\n  if (location.isResolved === false) {\n    return (\n      <Alert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </Alert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <Alert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </Alert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <Alert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </Alert>\n    )\n  }\n  return null\n}\n","import { Marker } from '@react-google-maps/api'\nimport { useReaction, useWhen } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { GeoPoint, latLngToGps } from '../../helpers/gps'\nimport { useLocationResolver } from '../../hooks/useLocationResolver'\nimport { useFoodMenuQuery } from '../foodMenu/hooks/useFoodMenuQuery'\nimport { AddressSubmit } from './AddressSubmit'\nimport { DeliveryAddressSearch } from './DeliveryAddressSearch'\nimport { useDeliveryMapPanning } from './hooks/useDeliveryMapPanning'\nimport { useOrderCreate } from './hooks/useOrderCreate'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst StyledDeliveryMap = styled.div`\n  .delivery__map__address {\n    position: absolute;\n    top: 0;\n    left: 2.3rem;\n    right: 2.3rem;\n  }\n  .delivery__map__submit {\n    position: absolute;\n    bottom: 3rem;\n    width: 100%;\n  }\n`\n\nexport const DeliveryMap = observer<IProps>(({ onConfirm }) => {\n  const { map, location, business } = useRoot()\n\n  const resolver = useLocationResolver()\n\n  const resolveUserLocation = (gps: GeoPoint) => {\n    location.resetResolution()\n    location.setSearchValue('')\n    location.setLocation(gps)\n  }\n\n  useWhen(\n    () => business.isValid,\n    () => {\n      if (location.hasLocation && !location.hasResolutionResult) {\n        location.log('resolving initial gps')\n        resolver(location.geoPoint!)\n      }\n    },\n  )\n\n  useReaction(\n    () => location.geoPoint,\n    gps => {\n      if (gps) {\n        location.log('resolving on gps change')\n        resolver(gps)\n      }\n    },\n  )\n\n  useReaction(\n    () => map.clickPoint,\n    clickPoint => {\n      if (clickPoint) {\n        location.log(`resolve with clickpoint`)\n        resolveUserLocation(clickPoint)\n        map.clearClickPoint()\n      }\n    },\n  )\n\n  // prefetch food menu when correct address is resolved\n  useFoodMenuQuery(location.isDeliveryAddress ? location.branchId : null)\n  useDeliveryMapPanning()\n\n  const { createDeliveryOrder } = useOrderCreate(onConfirm)\n\n  return (\n    <StyledDeliveryMap data-testid=\"DeliverMap\">\n      {location.latLng ? (\n        <Marker\n          position={location.latLng}\n          draggable={true}\n          onDragEnd={({ latLng }) => {\n            location.log(`resolve with drag`)\n            resolveUserLocation(latLngToGps(latLng))\n          }}\n        />\n      ) : null}\n      <div className=\"delivery__map__address\">\n        <DeliveryAddressSearch />\n      </div>\n      <div className=\"delivery__map__submit\">\n        <AddressSubmit\n          enabled={location.isDeliveryAddress && !location.isResolving}\n          onClick={createDeliveryOrder}\n        />\n      </div>\n    </StyledDeliveryMap>\n  )\n})\n","import React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { useExecutableQResolveLocation } from '../graph/generated'\nimport { GeoPoint } from '../helpers/gps'\n\nexport function useLocationResolver() {\n  const { location } = useRoot()\n\n  const [resolveLocation] = useExecutableQResolveLocation({\n    fetchPolicy: 'cache-first',\n  })\n\n  const resolver = React.useCallback(\n    async (gps: GeoPoint) => {\n      location.setIsResolving(true)\n\n      const data = await resolveLocation({\n        ...location.resolutionTarget,\n        ...gps,\n      })\n\n      if (data !== null) {\n        location.setResolutionResult(data.resolveLocation)\n      }\n      location.setIsResolving(false)\n    },\n    [location, resolveLocation],\n  )\n\n  return resolver\n}\n","import { useAutorun, useReaction } from '@speedlo/hooks'\nimport { useAsObservableSource } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useQInitialDeliveryLocation } from '../../../graph/generated'\nimport { useMapPanning } from './useMapPanning'\n\nexport const useDeliveryMapPanning = () => {\n  const { location } = useRoot()\n  const { data, loading } = useQInitialDeliveryLocation(\n    {},\n    {\n      fetchPolicy: 'cache-first',\n      skip: location.hasAddress,\n    },\n  )\n\n  const source = useAsObservableSource({\n    initial: loading ? null : data.location,\n  })\n\n  const panToGps = useMapPanning()\n\n  useAutorun(() => {\n    if (location.geoPoint) {\n      location.log('pan to user location', location.geoPoint)\n      panToGps(location.geoPoint)\n    } else if (location.geolocationPoint) {\n      location.log('pan to geolocation', location.geolocationPoint)\n      panToGps(location.geolocationPoint)\n    } else if (source.initial && source.initial.gpsCoordinates) {\n      location.log('pan to initial location', source.initial.gpsCoordinates)\n      panToGps(source.initial.gpsCoordinates)\n    }\n  })\n\n  useReaction(\n    () => location.geolocationPoint,\n    gps => {\n      if (gps) {\n        panToGps(gps)\n      }\n    },\n  )\n}\n","import { t } from '@lingui/macro'\nimport React, { CSSProperties } from 'react'\n\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n  isValid: boolean\n}\n\nexport const CategoryValidationMessage: React.FC<IProps> = ({\n  minCount,\n  maxCount,\n  isValid,\n}) => {\n  let message = ''\n  if (minCount === 0) {\n    if (maxCount > 0) {\n      message = i18n._(t`maximum ${maxCount}`)\n    } else {\n      return null\n    }\n  } else if (maxCount === 0) {\n    message = i18n._(t`minimum ${minCount}`)\n  } else if (minCount === maxCount) {\n    const count = minCount\n    message = i18n._(t`only ${count}`)\n  } else {\n    message = i18n._(t`minimum ${minCount} and maximum ${maxCount}`)\n  }\n  const style: CSSProperties = {}\n  if (!isValid) {\n    style.color = 'red'\n  }\n  return (\n    <span style={style}>\n      {'('}\n      {message}\n      {')'}\n    </span>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  onClick(): void\n}\n\nconst StyledSidedishRemoveButton = styled.div`\n  position: absolute;\n  left: -0.6rem;\n  top: -0.4rem;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 1rem;\n  background: ${({ theme }) => theme.primary};\n\n  &:hover {\n    background: ${({ theme }) => theme.primaryHover} !important;\n  }\n  &:active {\n    background: ${({ theme }) => theme.primary} !important;\n  }\n  & .rectangle {\n    width: 45%;\n    position: absolute;\n    top: 45%;\n    left: 30%;\n    height: 4px;\n    background: white;\n  }\n`\nexport const SidedishRemoveButton: React.FC<IProps> = ({\n  onClick,\n  ...props\n}) => {\n  return (\n    <StyledSidedishRemoveButton\n      onClick={onClick}\n      className=\"animated bounceIn\"\n      data-testid=\"SidedishRemoveButton\"\n      {...props}\n    >\n      <div className=\"rectangle\" />\n    </StyledSidedishRemoveButton>\n  )\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { FRecipeDetailSideDishes } from '../../graph/generated'\nimport { SidedishRemoveButton } from './SidedishRemoveButton'\n\ninterface IProps extends ButtonProps {\n  sidedish: FRecipeDetailSideDishes\n  count: number\n  isSelected: boolean\n  canBeSelected: boolean\n  canBeRemoved: boolean\n  onAdd(): void\n  onRemove(): void\n}\n\nconst StyledSidedishCheckbox = styled.div`\n  display: inline-block;\n  position: relative;\n\n  & .name {\n    float: left;\n    text-align: left;\n    white-space: normal;\n    max-width: 13rem;\n  }\n\n  & .price {\n    font-weight: bold;\n    float: right;\n  }\n\n  & .count {\n    display: inline-block;\n    margin-left: 0.5rem;\n  }\n`\n\nexport const SidedishCheckbox = React.memo<IProps>(\n  ({\n    sidedish,\n    count,\n    canBeSelected,\n    canBeRemoved,\n    className,\n    onAdd,\n    onRemove,\n    ...buttonProps\n  }) => {\n    const onClick = React.useCallback(() => {\n      if (canBeSelected) {\n        onAdd()\n      }\n    }, [canBeSelected, onAdd])\n    return (\n      <StyledSidedishCheckbox className={className}>\n        <PickerButton\n          onClick={onClick}\n          disabled={!canBeSelected}\n          size=\"xs\"\n          outline={true}\n          width=\"17.5rem\"\n          data-testid={`sidedishCheckbox__${sidedish.id}`}\n          {...buttonProps}\n        >\n          <div className=\"name\">\n            {sidedish.nameLabel}\n            <span key={count} className=\"animated heartBeat count\">\n              {count > 1 && `${count}x`}\n            </span>\n          </div>\n          <div className=\"price\">{sidedish.price.formattedValue}</div>\n        </PickerButton>\n        {canBeRemoved && <SidedishRemoveButton onClick={onRemove} />}\n      </StyledSidedishCheckbox>\n    )\n  },\n)\n","import { useSideDishValidator } from '@speedlo/cart'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components'\n\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { CategoryValidationMessage } from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: FRecipeDetailFragment\n  selection: ReadonlyArray<ID>\n  onAdd(item: ID): void\n  onRemove(item: ID): void\n}\n\nconst StyledSidedishPicker = styled.div`\n  margin-top: 1rem;\n\n  & .sidedish__picker__checkbox {\n    @media (max-width: 370px) {\n      width: 100%;\n    }\n  }\n\n  & .sidedish__picker__category {\n    font-size: 1rem;\n    font-weight: bold;\n    text-align: left;\n    margin: 0 0 0.2rem 0.2rem;\n  }\n`\n\nexport const SidedishPicker: React.FC<IProps> = ({\n  recipe,\n  selection,\n  onAdd,\n  onRemove,\n}) => {\n  const { canBeSelected, isCategoryValid } = useSideDishValidator(\n    recipe.categories,\n    selection,\n  )\n\n  return (\n    <StyledSidedishPicker className=\"food__sidedish__picker\">\n      {recipe.categories.map(category => (\n        <Fragment key={category.id}>\n          <div className=\"sidedish__picker__category\">\n            {category.nameLabel}{' '}\n            <CategoryValidationMessage\n              minCount={category.minCount}\n              maxCount={category.maxCount}\n              isValid={isCategoryValid(category)}\n            />\n          </div>\n          {category.sideDishes.map(sidedish => (\n            <SidedishCheckbox\n              key={`${sidedish.id}-${category.id}`}\n              sidedish={sidedish}\n              count={selection.filter(i => i === sidedish.id).length}\n              isSelected={selection.includes(sidedish.id)}\n              canBeRemoved={selection.includes(sidedish.id)}\n              canBeSelected={canBeSelected(category, sidedish)}\n              onAdd={() => onAdd(sidedish.id)}\n              onRemove={() => onRemove(sidedish.id)}\n              className=\"sidedish__picker__checkbox\"\n            />\n          ))}\n        </Fragment>\n      ))}\n    </StyledSidedishPicker>\n  )\n}\n","import { useSideDishValidator } from '@speedlo/cart'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ReadonlyArray<ID>\n  recipe: Maybe<FRecipeDetailFragment>\n  onConfirm(): Promise<boolean>\n}\n\nexport const CartOrderButton = React.memo<IProps>(\n  ({ selection, recipe, onConfirm }) => {\n    const [isConfirming, setConfirming] = React.useState(false)\n    const { isCategoryValid } = useSideDishValidator(\n      recipe ? recipe.categories : [],\n      selection,\n    )\n\n    return (\n      <PrimaryButton\n        className={cn('modal__body__button', 'animated', {\n          heartBeat: isConfirming,\n        })}\n        disabled={\n          isConfirming || !recipe || !recipe.categories.every(isCategoryValid)\n        }\n        data-testid=\"CartOrderButton\"\n        onClick={() => {\n          setConfirming(true)\n          onConfirm().catch(() => {\n            setConfirming(false)\n          })\n        }}\n      >\n        {i18n.plural({\n          value: selection.length,\n          0: 'Order without sidedish',\n          one: 'Order with this sidedish',\n          other: 'Order with # sidedishes',\n        })}\n      </PrimaryButton>\n    )\n  },\n)\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport Pacman from '../../common/Pacman'\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: Maybe<FRecipeDetailFragment>\n  isLoading: boolean\n  initialSideDishes?: ID[]\n  onConfirm(selection: ID[]): Promise<boolean>\n  onClose(): void\n}\n\nconst EMPTY_SELECTION = []\n\nexport const CartModal: React.FC<IProps> = ({\n  recipe,\n  isLoading,\n  initialSideDishes = EMPTY_SELECTION,\n  onConfirm,\n  onClose,\n}) => {\n  const [selection, updateSelection] = React.useState([] as string[])\n\n  React.useEffect(() => {\n    updateSelection(initialSideDishes)\n  }, [initialSideDishes])\n\n  const onCloseModal = React.useCallback(() => {\n    updateSelection([])\n    onClose()\n  }, [onClose])\n\n  const onConfirmAndClose = async () => {\n    if (await onConfirm(selection)) {\n      onCloseModal()\n      return true\n    }\n    return false\n  }\n\n  const onAddSidedish = (sidedishId: ID) => {\n    updateSelection(sel => {\n      return RM.append(sidedishId, sel)\n    })\n  }\n\n  const onRemoveSidedish = (sidedishId: ID) => {\n    updateSelection(sel => {\n      return RM.remove(RM.indexOf(sidedishId, sel), 1, sel)\n    })\n  }\n\n  const renderBody = () => {\n    if (isLoading) {\n      return <Pacman />\n    }\n    if (!recipe) {\n      return (\n        <Trans>We sorry, but the item is unavailable at this moment.</Trans>\n      )\n    }\n    return (\n      <>\n        <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n        <span className=\"modal__body__food_description\">\n          {recipe.descriptionLabel}\n        </span>\n        <SidedishPicker\n          recipe={recipe}\n          selection={selection}\n          onAdd={onAddSidedish}\n          onRemove={onRemoveSidedish}\n        />\n      </>\n    )\n  }\n\n  return (\n    <Modal\n      isOpen={recipe !== null}\n      toggle={onCloseModal}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n      data-testid=\"CartModal\"\n    >\n      <ModalHeader\n        toggle={onCloseModal}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderBody()}</div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            recipe={recipe}\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useQCartRecipe } from '../../graph/generated'\nimport { useAddToCart } from '../../hooks/useAddToCart'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const AddToCartModal = observer<IProps>(({ orderId }) => {\n  const orderModel = useOrderModel()\n\n  const recipeId = orderModel.addToCartRecipeId\n\n  const { data, loading } = useQCartRecipe(\n    {\n      recipeId: recipeId!,\n    },\n    { skip: orderId === null || recipeId === null, fetchPolicy: 'cache-first' },\n  )\n\n  const executeAddToCart = useAddToCart()\n\n  const onConfirm = React.useCallback(\n    async sideDishes => {\n      if (orderId === null || recipeId === null) {\n        return false\n      }\n      const result = await executeAddToCart(recipeId, sideDishes)\n      return Boolean(result)\n    },\n    [executeAddToCart, orderId, recipeId],\n  )\n\n  const onClose = React.useCallback(() => {\n    orderModel.addToCart(null)\n  }, [orderModel])\n\n  return (\n    <CartModal\n      recipe={loading ? null : data.recipe}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      isLoading={loading}\n    />\n  )\n})\n","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useMChangeCartItem, useQCartItem } from '../../graph/generated'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const ChangeCartModal = observer<IProps>(({ orderId }) => {\n  const { order: orderModel, cart: cartModel } = useRoot()\n\n  const itemId = orderModel.changeCartItemId\n\n  const { data, loading } = useQCartItem(\n    {\n      itemId: itemId!,\n    },\n    { skip: orderId === null || itemId === null },\n  )\n\n  const [changeItem] = useMChangeCartItem()\n\n  const onConfirm = React.useCallback(\n    async sideDishes => {\n      if (orderId === null || itemId === null) {\n        return false\n      }\n      const result = await changeItem({\n        itemId,\n        sideDishes,\n        orderId,\n        withGoods: cartModel.withGoods,\n      })\n      return Boolean(result)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [orderId, itemId, changeItem],\n  )\n\n  const onClose = React.useCallback(() => {\n    orderModel.changeCartItem(null)\n  }, [orderModel])\n\n  const sideDishesSelection = React.useMemo(\n    () =>\n      loading\n        ? undefined\n        : (data.item.sideDishes.map(RM.path(['recipe', 'id'])) as string[]),\n    [loading, data],\n  )\n\n  return (\n    <CartModal\n      recipe={loading ? null : data.item.recipe}\n      initialSideDishes={sideDishesSelection}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      isLoading={loading}\n    />\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartSystem } from './CartSystem'\nimport { ChangeCartModal } from './ChangeCartModal'\n\ninterface IProps {\n  isReadonly?: boolean\n}\n\nexport const CartView = observer<IProps>(({ isReadonly = false }) => {\n  const orderModel = useOrderModel()\n  const orderId = orderModel.orderId\n  return (\n    <>\n      <AddToCartModal orderId={orderId} />\n      <ChangeCartModal orderId={orderId} />\n      <CartSystem\n        orderId={orderId}\n        isReadonly={isReadonly || orderModel.disableInteraction}\n      />\n    </>\n  )\n})\n","import { cn } from '@speedlo/ui'\nimport React, { useState } from 'react'\nimport Scroll from 'react-scroll'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { FFoodMenuCategoryFragment } from '../../graph/generated'\n\ninterface IProps {\n  categories: ReadonlyArray<FFoodMenuCategoryFragment>\n}\n\nconst StyledCategoryNavigator = styled.div`\n  background-color: #d4d4d4;\n  border-top-left-radius: 0.6rem;\n  padding: 0.7rem 0.5rem 0 0.2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  user-select: none;\n  display: flex;\n  ${mediaDesktop`\n    flex-wrap: wrap;\n  `}\n  ${mediaMobile`\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    box-shadow: inset -15px -5px 15px -14px rgba(0, 0, 0, 0.6);\n    margin: 0;\n    border-top-left-radius: 0;\n    background-color: #f3f3f3;\n    opacity: 0.94;\n  `}\n\n  a.link {\n    text-align: center;\n    color: #595959 !important;\n    display: inline-block;\n    min-width: 4rem;\n    cursor: pointer;\n    margin: 0 0.2rem;\n    &:hover,\n    &.active {\n      color: #5ca651 !important;\n      border-color: #5ca651;\n    }\n  }\n  div.circle {\n    background-color: white;\n    border: 1px solid #595959;\n    border-radius: 2rem;\n    width: 2.6rem;\n    height: 2.6rem;\n    margin: 0 auto;\n    padding: 0;\n    &:hover,\n    a.link.active > & {\n      border-color: #5ca651;\n    }\n    & span::before,\n    & span::after {\n      margin: 0;\n      padding: 0;\n      font-size: 1.7rem;\n    }\n  }\n\n  div.description {\n    font-size: 0.9rem;\n    margin-top: 0.2rem;\n    max-width: 5rem;\n  }\n`\nconst CategoryNavigator: React.FC<IProps> = ({ categories }) => {\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0)\n  return (\n    <StyledCategoryNavigator data-testid=\"CategoryNavigator\">\n      {categories.length === 0\n        ? null\n        : categories.map((category, idx) => (\n            <Scroll.Link\n              to={category.nameLabel}\n              key={category.id}\n              className={cn('link', {\n                active: activeCategoryIndex === idx,\n              })}\n              onSetActive={() => setActiveCategoryIndex(idx)}\n              offset={-168}\n              smooth={true}\n              spy={true}\n              title={category.nameLabel}\n            >\n              <div className=\"circle\">\n                <span className={`flaticon-${category.pictogram}`} />\n              </div>\n              <div className=\"description\">\n                <Truncate lines={2}>{category.nameLabel}</Truncate>\n              </div>\n            </Scroll.Link>\n          ))}\n    </StyledCategoryNavigator>\n  )\n}\n\nexport default CategoryNavigator\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { FFoodMenuCategoryFragment } from '../../graph/generated'\n\ninterface IProps {\n  category: FFoodMenuCategoryFragment\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.FC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default React.memo(FoodCategory)\n","import './FoodMenuItem.css'\n\nimport { cn } from '@speedlo/ui'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport {\n  FFoodMenuRecipeFragment,\n  useExecutableQCartRecipe,\n} from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { TFoodMenuPresence } from './hooks/useFoodMenuPresence'\n\ninterface IProps {\n  recipe: FFoodMenuRecipeFragment\n  presence: TFoodMenuPresence\n  onAddToCart(recipeId: ID, hasSideDish: boolean): void\n}\n\nconst StyledFoodMenuItem = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  position: relative;\n  min-height: 6rem;\n  user-select: none;\n  &:hover:not(.disabled) {\n    cursor: pointer;\n    background-color: #c9e8d7;\n  }\n  &.active {\n    background-color: #b3ebcc;\n  }\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n\n  & div.presence {\n    background-color: ${({ theme }) => theme.secondary};\n    float: left;\n    position: absolute;\n    left: -1.2rem;\n    padding: 0.4rem 0.6rem;\n    color: white;\n    border-radius: 1.8rem;\n    font-size: 0.9rem;\n    ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItem = React.memo<IProps>(({ recipe, presence, onAddToCart }) => {\n  const orderModel = useOrderModel()\n\n  const hasSideDishes = recipe.sideDishCount > 0\n\n  const onClick = React.useCallback(() => {\n    onAddToCart(recipe.id, hasSideDishes)\n  }, [hasSideDishes, onAddToCart, recipe.id])\n\n  const [prefetchFoodItem] = useExecutableQCartRecipe({\n    fetchPolicy: 'cache-first',\n  })\n\n  const onMouseEnter = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'development' && hasSideDishes) {\n      prefetchFoodItem({ recipeId: recipe.id })\n    }\n  }, [hasSideDishes, prefetchFoodItem, recipe.id])\n\n  const previousPresence = React.useRef(-1)\n\n  const renderPresence = () => {\n    const recipePresence = presence.get(recipe.id)\n    if (!recipePresence) {\n      previousPresence.current = -1\n      return null\n    }\n    const className = cn('presence', 'animated', {\n      pulse: recipePresence > 1 || previousPresence.current > 0,\n      zoomIn:\n        (recipePresence === 1 && previousPresence.current === 0) ||\n        previousPresence.current === -1,\n    })\n    previousPresence.current = recipePresence\n    return (\n      <div\n        key={recipePresence}\n        className={className}\n      >{`${recipePresence}x`}</div>\n    )\n  }\n\n  return useObserver(() => (\n    <StyledFoodMenuItem\n      onClick={onClick}\n      onMouseEnter={onMouseEnter}\n      className={cn({\n        active: orderModel.lastActiveRecipeId === recipe.id,\n        disabled: orderModel.disableInteraction,\n      })}\n      data-testid={`foodMenuItem__${recipe.id}`}\n    >\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {renderPresence()}\n      <h4 title={recipe.nameLabel}>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </StyledFoodMenuItem>\n  ))\n})\n\nexport default FoodMenuItem\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport Pacman from '../../common/Pacman'\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { QFoodMenuWareCategories } from '../../graph/generated'\nimport { useAddToCart } from '../../hooks/useAddToCart'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\nimport { useFoodMenuPresence } from './hooks/useFoodMenuPresence'\n\ninterface IProps {\n  orderId: MaybeID\n  categories: ReadonlyArray<QFoodMenuWareCategories>\n  isLoading: boolean\n}\n\nconst StyledFoodMenu = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n\n  & > div {\n    ${mediaDesktop`\n      margin: 0 1.4rem 1rem 1.6rem;\n      padding: 2rem 0 2rem 0;\n    `};\n    ${mediaMobile`\n      margin: 0 0.7rem 1rem 0.7rem;\n      padding: 0 0 4rem 0;\n    `};\n  }\n`\n\nconst FoodMenu: React.FC<IProps> = ({ orderId, categories, isLoading }) => {\n  const { order: orderModel, config, user } = useRoot()\n\n  const presence = useFoodMenuPresence(orderId)\n\n  const executeAddToCart = useAddToCart()\n  const onAddToCart = React.useCallback(\n    (recipeId: ID, hasSideDish: boolean) => {\n      if (orderModel.disableInteraction) {\n        return\n      }\n      if (presence.size >= config.orderItemsMax) {\n        user.showOrderLimit()\n      } else if (hasSideDish) {\n        orderModel.addToCart(recipeId)\n      } else {\n        orderModel.setUsedRecipeId(recipeId)\n        executeAddToCart(recipeId)\n      }\n    },\n    [config.orderItemsMax, executeAddToCart, orderModel, presence, user],\n  )\n\n  const render = () => {\n    if (isLoading) {\n      return <Pacman noMargin={true} />\n    }\n    if (categories.length === 0) {\n      return (\n        <h3>\n          <Trans>Food menu is empty. We are sorry.</Trans>\n        </h3>\n      )\n    }\n    return (\n      <>\n        {categories.map(category => (\n          <FoodCategory key={category.id} category={category}>\n            {category.recipes.map(recipe => (\n              <FoodMenuItem\n                key={recipe.id}\n                recipe={recipe}\n                presence={presence}\n                onAddToCart={onAddToCart}\n              />\n            ))}\n          </FoodCategory>\n        ))}\n      </>\n    )\n  }\n\n  return (\n    <StyledFoodMenu data-testid=\"FoodMenu\">\n      <div>{render()}</div>\n    </StyledFoodMenu>\n  )\n}\n\nexport default React.memo(FoodMenu)\n","import { observable, ObservableMap, runInAction } from 'mobx'\nimport React from 'react'\n\nimport { useQFoodMenuCartPresence } from '../../../graph/generated'\n\nexport function useFoodMenuPresence(orderId: MaybeID) {\n  const { data, loading } = useQFoodMenuCartPresence(\n    {\n      orderId: orderId!,\n    },\n    {\n      skip: !orderId,\n      fetchPolicy: 'cache-only',\n    },\n  )\n\n  const [presence] = React.useState(() => observable.map<ID, number>())\n\n  if (!loading) {\n    runInAction(() => {\n      presence.clear()\n      data.order.presence.forEach(({ recipe: { id } }) => {\n        if (!presence.has(id)) {\n          presence.set(id, 0)\n        }\n        presence.set(id, presence.get(id)! + 1)\n      })\n    })\n  }\n\n  return presence\n}\n\nexport type TFoodMenuPresence = ObservableMap<ID, number>\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\n\ninterface IProps {}\n\nconst StyledOrderLocked = styled(Alert)`\n  font-weight: bold;\n  margin-bottom: 0;\n  padding: 0.5rem 1rem;\n\n  & button {\n    margin: 0.5rem;\n  }\n`\n\nexport const OrderLocked: React.FC<IProps> = () => {\n  const orderModel = useOrderModel()\n  return useObserver(() => {\n    if (!orderModel.disableInteraction) {\n      return null\n    }\n\n    return (\n      <StyledOrderLocked color=\"warning\">\n        <Trans>Order is locked for further changes.</Trans>\n        <Link to=\"/\">\n          <SecondaryButton>\n            <Trans>Create new order</Trans>\n          </SecondaryButton>\n        </Link>\n      </StyledOrderLocked>\n    )\n  })\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport CategoryNavigator from './CategoryNavigator'\nimport FoodMenu from './FoodMenu'\nimport { useFoodMenuQuery } from './hooks/useFoodMenuQuery'\nimport { OrderLimitModal } from './OrderLimitModal'\nimport { OrderLocked } from './OrderLocked'\n\nconst StyledMobileHeader = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: 4;\n`\n\nexport const FoodMenuView = observer(() => {\n  const { order: orderModel, user } = useRoot()\n\n  const { data, loading, refetch } = useFoodMenuQuery(orderModel.branchId)\n\n  useReaction(() => user.language, () => refetch())\n\n  const categories = React.useMemo(\n    () =>\n      loading ? [] : data.wareCategories.filter(cat => cat.recipes.length > 0),\n    [loading, data],\n  )\n\n  return (\n    <>\n      <OrderLimitModal />\n      <StyledMobileHeader>\n        <OrderLocked />\n        <CategoryNavigator categories={categories} />\n      </StyledMobileHeader>\n\n      <FoodMenu\n        orderId={orderModel.orderId}\n        categories={categories}\n        isLoading={loading}\n      />\n    </>\n  )\n})\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderEmailInput: React.FC = () => (\n  <FormGroup>\n    <FormTextInput\n      name=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder={i18n.t`E-mail`}\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.FC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        name=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n      />\n      <FormTextInput\n        name=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, FormText } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNoteInput: React.FC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <FormGroup>\n      <FormTextInput\n        name=\"note\"\n        type=\"textarea\"\n        placeholder={i18n.t`Note`}\n        title={ingredientsDescription}\n        errorForceDisplay={true}\n      />\n      <FormText>{ingredientsDescription}</FormText>\n    </FormGroup>\n  )\n}\n","import { useAutorun } from '@speedlo/hooks'\nimport { useXFieldState } from '@speedlo/xform'\nimport React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\nimport { UAParser } from 'ua-parser-js'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInput: React.FC = () => {\n  const agent = new UAParser(window.navigator.userAgent)\n  const isMobileSafari = agent.getBrowser().name === 'Mobile Safari'\n\n  const orderModel = useOrderModel()\n  const prefixField = useXFieldState<string>('phonePrefix')\n\n  useAutorun(() => {\n    const prefix = orderModel.defaultPhonePrefix\n    if (\n      prefix &&\n      orderModel.root.user.memoryApplied &&\n      prefixField.value.length === 0\n    ) {\n      prefixField.setValue(prefix)\n      if (prefix) {\n        prefixField.setTouched()\n      }\n    }\n  })\n\n  return (\n    <FormGroup>\n      <InputGroup>\n        <FormTextInput\n          name=\"phonePrefix\"\n          autoComplete={isMobileSafari ? 'off' : 'tel-country-code'}\n          placeholder=\"Prefix\"\n        />\n        <FormTextInput\n          name=\"phone\"\n          type=\"tel\"\n          autoComplete=\"tel-national\"\n          placeholder={i18n.t`Phone`}\n          style={{ width: '55%' }}\n        />\n      </InputGroup>\n    </FormGroup>\n  )\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n  </>\n)\n","import {\n  addMinutes,\n  endOfMinute,\n  getMinutes,\n  startOfMinute,\n  subMinutes,\n} from 'date-fns'\n\nexport function createTimeSteps(start: Date, end: Date, minuteStep: number) {\n  let current = startOfMinute(timeClampUp(start, minuteStep))\n  const steps: Date[] = []\n  const endMinute = endOfMinute(subMinutes(end, 1))\n  do {\n    steps.push(current)\n    current = addMinutes(current, minuteStep)\n  } while (current <= endMinute)\n  return steps\n}\n\nexport function timeClampUp(time: Date, minuteStep: number) {\n  return addMinutes(timeClampDown(time, minuteStep), minuteStep)\n}\n\nexport function timeClampDown(time: Date, minuteStep: number) {\n  return subMinutes(time, getMinutes(time) % minuteStep)\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { formatTime } from '../../helpers/formats'\n\ninterface IProps extends ButtonProps {\n  time: Date\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Time = styled.div`\n  font-size: 1.2rem;\n`\n\nexport const TimePickerButton: React.FC<IProps> = ({\n  time,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"10rem\"\n    data-testid={`timePickerButton__${time.getTime()}`}\n    {...buttonProps}\n  >\n    <Time>{formatTime(time)}</Time>\n  </PickerButton>\n)\n","import { DateFormat } from '@lingui/macro'\nimport { DF, RM } from '@speedlo/tools'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { createTimeSteps } from './createTimeSteps'\nimport { TimePickerButton } from './TimePickerButton'\n\ninterface IProps {\n  minDate: Date\n  maxDate: Date\n  minuteStep: number\n  onStepChange(step: Date): void\n  initialTime?: Maybe<Date>\n  filterIntervals?: Interval[]\n}\n\nconst TimePickerContainer = styled.div`\n  margin-top: 1rem;\n`\n\nconst TimePickerDay = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: left;\n  margin: 0 0 0.2rem 0.2rem;\n`\n\nexport const TimePicker: React.FC<IProps> = ({\n  minDate,\n  maxDate,\n  minuteStep,\n  onStepChange,\n  initialTime,\n  filterIntervals = [],\n}) => {\n  const steps = React.useMemo(() => {\n    const allSteps = createTimeSteps(minDate, maxDate, minuteStep)\n    if (filterIntervals.length) {\n      return RM.reject(\n        step =>\n          filterIntervals.some(interval => DF.isWithinInterval(step, interval)),\n        allSteps,\n      )\n    }\n    return allSteps\n  }, [minDate, maxDate, minuteStep, filterIntervals])\n\n  const days = React.useMemo(() => {\n    return DF.eachDayOfInterval({ start: minDate, end: maxDate })\n  }, [minDate, maxDate])\n\n  const [stepIdx, setStepIdx] = React.useState(0)\n\n  React.useEffect(() => {\n    if (initialTime) {\n      setStepIdx(DF.closestIndexTo(initialTime, steps))\n    }\n  }, [initialTime, steps])\n\n  React.useEffect(() => {\n    onStepChange(steps[stepIdx])\n  }, [onStepChange, stepIdx, steps])\n\n  return (\n    <TimePickerContainer>\n      {days.map(day => (\n        <Fragment key={day.getDate()}>\n          <TimePickerDay>\n            <DateFormat\n              value={day}\n              format={{ month: 'long', day: 'numeric', weekday: 'long' }}\n            />\n          </TimePickerDay>\n          {steps.map((step, idx) =>\n            DF.isEqual(day, DF.startOfDay(step)) ? (\n              <TimePickerButton\n                key={step.getTime()}\n                time={step}\n                isSelected={idx === stepIdx}\n                canBeSelected={true}\n                onClick={() => {\n                  setStepIdx(idx)\n                  onStepChange(step)\n                }}\n              />\n            ) : null,\n          )}\n        </Fragment>\n      ))}\n    </TimePickerContainer>\n  )\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { isoDate } from '@speedlo/graphql'\nimport { RM } from '@speedlo/tools'\nimport { useXField } from '@speedlo/xform'\nimport { addMinutes, isAfter } from 'date-fns'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\nimport {\n  useMOrderDeliveryTime,\n  useQOrderTimePicker,\n} from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TimePicker } from '../timePicker/TimePicker'\n\nexport const OrderTimePicker = observer(() => {\n  const root = useRoot()\n  const { order, cart } = useRoot()\n\n  const { data, loading } = useQOrderTimePicker(\n    { branchId: order.branchId! },\n    { skip: !root.initialized || !order.branchId },\n  )\n\n  const [updateOrder] = useMOrderDeliveryTime()\n\n  const field = useXField<Maybe<Date>>('deliverAt')\n\n  const selectedTime = React.useRef<Maybe<Date>>(field.value)\n  const onStepChange = React.useCallback((step: Date) => {\n    selectedTime.current = step\n  }, [])\n\n  const onConfirmAndClose = () => {\n    const time = selectedTime.current\n    updateOrder({\n      orderId: order.orderId!,\n      deliverAt: time && isoDate(time),\n      withGoods: cart.withGoods,\n    })\n    field.setValue(time)\n    order.closeTimePicker()\n  }\n\n  const getStartTime = () => {\n    const { companyBranch } = data\n    const openAt =\n      companyBranch.isOpen || !companyBranch.willOpenAt\n        ? new Date()\n        : new Date(companyBranch.willOpenAt)\n    return openAt\n  }\n\n  const getEndTime = () => {\n    const { companyBranch } = data\n    if (companyBranch.isOpen && companyBranch.willCloseAt) {\n      return new Date(companyBranch.willCloseAt)\n    }\n    const nextBusinessHour = companyBranch.businessHours.find(\n      RM.propEq('closed', false),\n    )\n    return nextBusinessHour ? new Date(nextBusinessHour.closeAt) : null\n  }\n\n  const getFilterIntervals = (): Interval[] => {\n    const { companyBranch } = data\n    return companyBranch.businessHours\n      .filter(RM.propEq('closed', true))\n      .map(bhour => ({\n        start: new Date(bhour.openAt),\n        end: new Date(bhour.closeAt),\n      }))\n  }\n\n  const getMinuteOffset = () => {\n    const { defaultDeliveryTime, defaultPickupTime } = data.companyBranch\n\n    if (order.usingDeliveryOrderMethod) {\n      return defaultDeliveryTime\n    }\n    if (order.usingPickupOrderMethod) {\n      return defaultPickupTime\n    }\n\n    return 0\n  }\n\n  const getInterval = () => {\n    if (loading) {\n      return null\n    }\n\n    const minDate = addMinutes(getStartTime(), getMinuteOffset())\n    const maxDate = getEndTime()\n    return { minDate, maxDate }\n  }\n\n  const canBeDelayed = (interval: ReturnType<typeof getInterval>) => {\n    return !(\n      interval === null ||\n      interval.maxDate === null ||\n      isAfter(interval.minDate, interval.maxDate)\n    )\n  }\n\n  const renderModalContent = () => {\n    const interval = getInterval()\n    if (interval === null) {\n      return null\n    }\n\n    if (!canBeDelayed(interval)) {\n      return (\n        <Trans>\n          It's not possible to pick a specific order time at this moment.\n        </Trans>\n      )\n    }\n\n    return (\n      <TimePicker\n        minuteStep={15}\n        minDate={interval.minDate}\n        maxDate={interval.maxDate!}\n        initialTime={selectedTime.current}\n        filterIntervals={getFilterIntervals()}\n        onStepChange={onStepChange}\n      />\n    )\n  }\n\n  const renderBottomLine = () => {\n    if (!canBeDelayed(getInterval())) {\n      return null\n    }\n    return (\n      <>\n        <div className=\"modal__body__button__strip\" />\n        <PrimaryButton\n          size=\"md\"\n          onClick={onConfirmAndClose}\n          className=\"modal__body__button\"\n        >\n          <Trans>Confirm time</Trans>\n        </PrimaryButton>\n      </>\n    )\n  }\n\n  React.useEffect(() => {\n    if (\n      data &&\n      data.companyBranch &&\n      data.companyBranch.delayedDeliveryEnabled\n    ) {\n      order.enableDelayedOrder()\n    }\n  }, [data, order])\n\n  const header = order.usingDeliveryOrderMethod\n    ? i18n.t`Deliver at what time?`\n    : i18n.t`When you will pickup the order?`\n\n  return (\n    <Modal\n      isOpen={order.timePickerOpen}\n      toggle={order.closeTimePicker}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader\n        toggle={order.closeTimePicker}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>{header}</span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderModalContent()}</div>\n        <div className=\"modal__body__button__line\">{renderBottomLine()}</div>\n      </ModalBody>\n    </Modal>\n  )\n})\n","import { cn } from '@speedlo/ui'\nimport { useXField } from '@speedlo/xform'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\ninterface IProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  name: string\n  children: ReactNode\n}\n\nexport const StyledFormCheckbox = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n\n  input {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: white;\n    border: 1px solid;\n    border-color: #c5c5c5;\n    width: 2rem;\n    height: 2rem;\n    min-width: 2rem;\n    border-radius: 0.25rem;\n    position: relative;\n    margin: 0;\n    outline: none;\n    &:checked {\n      background-color: white;\n    }\n    &:checked:after {\n      content: '\\\\2714';\n      font-size: 2rem;\n      position: absolute;\n      top: -0.5rem;\n      left: 0.1rem;\n      color: #1d1d1d;\n      overflow: hidden;\n    }\n    &.is-invalid {\n      border-color: red;\n    }\n  }\n  label {\n    margin: 0 0 0 0.8rem;\n    vertical-align: top;\n  }\n`\n\nexport const FormCheckbox: React.FC<IProps> = ({\n  name,\n  children,\n  ...element\n}) => {\n  const field = useXField(name)\n  return useObserver(() => (\n    <StyledFormCheckbox\n      className={cn({ 'is-invalid': field.touched && Boolean(field.error) })}\n    >\n      <Input\n        {...element}\n        id={field.name}\n        name={field.name}\n        checked={field.value === true}\n        onChange={() => field.setValue(!field.value)}\n        type=\"checkbox\"\n      />\n      <label htmlFor={name}>{children}</label>\n    </StyledFormCheckbox>\n  ))\n}\n","import { IAgreementBoxProps } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Collapse, Input } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { StyledFormCheckbox } from '../../forms/FormCheckbox'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\n\nconst StyledOrderAgreementBox = styled.div`\n  button {\n    padding: 0 0.5rem;\n    font-size: 0.8rem;\n    min-width: 5rem;\n    color: darkgray;\n  }\n  div.description {\n    font-size: 0.8rem !important;\n    color: darkgray;\n    margin: 0.5rem 0 0.5rem 0;\n    & .row {\n      margin: 0;\n    }\n  }\n`\n\nexport const OrderAgreementBox = observer<IAgreementBoxProps>(\n  ({\n    agreement,\n    isValid,\n    isCollapsed,\n    titleNode,\n    descriptionNode,\n    inputProps,\n    buttonProps,\n  }) => {\n    const orderModel = useOrderModel()\n    const id = `agreement-${agreement.id}`\n\n    return (\n      <StyledOrderAgreementBox>\n        <StyledFormCheckbox>\n          <Input\n            {...inputProps}\n            id={id}\n            type=\"checkbox\"\n            disabled={orderModel.disableInteraction}\n            invalid={!isValid}\n            onInvalid={ev => {\n              if (!isValid) {\n                ;(ev.target as HTMLInputElement).setCustomValidity(\n                  i18n.t`Please check this box if you want to proceed.`,\n                )\n              }\n            }}\n            onClick={ev => {\n              ;(ev.target as HTMLInputElement).setCustomValidity('')\n            }}\n            data-testid={`OrderAgreement${\n              agreement.isMandatory ? 'Mandatory' : ''\n            }`}\n          />\n          <label htmlFor={id}>\n            {titleNode}\n            {agreement.isMandatory && ' * '}\n          </label>\n          <Button {...buttonProps} color=\"link\">\n            {isCollapsed\n              ? i18n.t`More...`.toLocaleLowerCase()\n              : i18n.t`Less`.toLocaleLowerCase()}\n          </Button>\n        </StyledFormCheckbox>\n        <Collapse isOpen={!isCollapsed} className=\"description\">\n          {descriptionNode}\n        </Collapse>\n      </StyledOrderAgreementBox>\n    )\n  },\n)\n","import { Trans } from '@lingui/macro'\nimport { useAutorun } from '@speedlo/hooks'\nimport { useVamAgreements } from '@speedlo/ui'\nimport { useXField, useXFormState } from '@speedlo/xform'\nimport { debounce } from 'debounce'\nimport { autorun } from 'mobx'\nimport React from 'react'\n\nimport {\n  QOrderFormAgreementsVariables,\n  useQOrderFormAgreements,\n} from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { OrderAgreementBox } from './OrderAgreementBox'\nimport { OrderFormValues, TAgreement } from './OrderFormSetup'\n\nconst EMPTY_ARRAY = []\n\nexport const OrderAgreements: React.FC = () => {\n  const orderModel = useOrderModel()\n\n  const formState = useXFormState<OrderFormValues>()\n  const [variables, setVariables] = React.useState<\n    QOrderFormAgreementsVariables\n  >()\n\n  React.useEffect(() => {\n    const updateVariablesLater = debounce(setVariables, 2000)\n\n    function extractVariables() {\n      const { firstname, lastname, phonePrefix, phone } = formState.values\n      return {\n        input: {\n          orderId: orderModel.orderId!,\n          firstname,\n          lastname,\n          phone: `${phonePrefix.trim()}${phone.trim()}`,\n        },\n      }\n    }\n\n    const dispose = autorun(() => {\n      updateVariablesLater(extractVariables())\n    })\n\n    return () => {\n      dispose()\n      updateVariablesLater.clear()\n    }\n  }, [formState, orderModel])\n\n  const { data, errors, loading } = useQOrderFormAgreements(variables, {\n    skip: !variables,\n  })\n\n  // remember latest agreements to prevent rendering to blank on update of form values\n  const agreements = React.useRef<RoA<TAgreement>>(EMPTY_ARRAY)\n  const hasFailed = errors && errors.length > 0\n\n  if (!(loading || hasFailed)) {\n    agreements.current = data.agreements\n  }\n\n  React.useEffect(() => {\n    if (agreements.current.length > 0 && !orderModel.isVamInitialized) {\n      orderModel.initVam()\n    }\n  })\n\n  const { state, renderVamAgreements } = useVamAgreements(agreements.current)\n\n  const validate = React.useCallback(() => {\n    const result = agreements.current.some(agreement => {\n      return (\n        agreement.isMandatory && !state.confirmedAgreements.has(agreement.id)\n      )\n    })\n    return result ? 'mandatory' : undefined\n  }, [state])\n\n  const field = useXField('agreements', { validate })\n\n  useAutorun(() => {\n    // confirmed agreements are stored in field to be collected for a submission later\n    const confirmed = Array.from(state.confirmedAgreements)\n    field.setValue(confirmed)\n  })\n\n  if (hasFailed) {\n    return (\n      <Trans>\n        Failed retrieving company agreements. Please try again later or contact\n        us.\n      </Trans>\n    )\n  }\n\n  return renderVamAgreements({ AgreementBox: OrderAgreementBox })\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\n\nexport interface IPaymentButtonProps {\n  paymentMethod: PaymentGateEnum\n}\n\nexport const OrderPaymentButton = observer<IPaymentButtonProps>(\n  ({ children, paymentMethod }) => {\n    const { order: orderModel } = useRoot()\n    const isSelected = orderModel.paymentMethod === paymentMethod\n    return (\n      <SelectButtonThemed\n        disabled={orderModel.disableInteraction}\n        selected={isSelected}\n        onClick={() => {\n          orderModel.setPaymentMethod(paymentMethod)\n        }}\n        data-testid={`orderPaymentMethod-${paymentMethod}`}\n      >\n        <Checkmark show={isSelected} />\n        {children}\n      </SelectButtonThemed>\n    )\n  },\n)\n\nfunction Checkmark({ show }: { show: boolean }) {\n  return show ? (\n    <span className=\"flaticon-mark order__payment__method__button__checked\" />\n  ) : (\n    <div className=\"order__payment__method__button__unchecked\" />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { OrderPaymentButton } from './OrderPaymentButton'\n\nconst StyledOrderPaymentMethod = styled.div`\n  margin: 0 0 1.4rem 0;\n  span::before {\n    margin-left: 0;\n    margin-right: 0.5rem;\n  }\n  button {\n    position: relative;\n    padding-top: 0.3rem;\n    margin-bottom: 0.2rem;\n    height: 2.8rem;\n  }\n  button:first-of-type {\n    margin-right: 0.8rem;\n  }\n  .order__payment__method__button__unchecked {\n    width: 1.75rem;\n    height: 1.4rem;\n    margin: 0;\n    display: inline-block;\n  }\n`\n\nexport const OrderPaymentMethod = React.memo(() => (\n  <StyledOrderPaymentMethod>\n    <OrderPaymentButton paymentMethod={PaymentGateEnum.Gopay}>\n      <span className=\"flaticon-credit-card\">\n        <Trans>Pay by card</Trans>\n      </span>\n    </OrderPaymentButton>\n    <OrderPaymentButton paymentMethod={PaymentGateEnum.Cash}>\n      <span className=\"flaticon-money\">\n        <Trans>Pay by cash</Trans>\n      </span>\n    </OrderPaymentButton>\n  </StyledOrderPaymentMethod>\n))\n","import './CartView.css'\n\nimport { Trans } from '@lingui/macro'\nimport { CartLabels, useCartSystem } from '@speedlo/cart'\nimport { autorun } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useTheme } from '../../app/ThemeSwitchProvider'\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ButtonStrip } from '../../common/ButtonStrip'\nimport { mobileBreakpoint } from '../../common/Responsive'\nimport { useQCart } from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { useCartControl } from './hooks/useCartControl'\n\ninterface IProps {\n  orderId: MaybeID\n  isReadonly: boolean\n  isMobileConfirm?: boolean\n}\n\nconst StyledCartSystem = styled.div`\n  & .animated {\n    z-index: 10;\n  }\n`\n\nexport const CartSystem: React.FC<IProps> = ({\n  orderId,\n  isReadonly,\n  isMobileConfirm = false,\n}) => {\n  const theme = useTheme()\n  const labels = React.useMemo(getCartLabels, [])\n  const orderModel = useOrderModel()\n\n  const {\n    cartModel,\n    onItemEdit,\n    onItemRemove,\n    onPlaceOrder,\n    onChangeOrder,\n  } = useCartControl()\n\n  const renderMobileSubmit = React.useCallback(() => {\n    if (isMobileConfirm && orderModel.disableInteraction) {\n      return null\n    }\n    const shouldPlaceOrder = !isReadonly || orderModel.disableInteraction\n    return (\n      <ButtonStrip>\n        <PrimaryButton\n          onClick={shouldPlaceOrder ? onPlaceOrder : onChangeOrder}\n        >\n          {shouldPlaceOrder ? (\n            <Trans>Place order</Trans>\n          ) : (\n            <Trans>Change order</Trans>\n          )}\n        </PrimaryButton>\n      </ButtonStrip>\n    )\n  }, [isMobileConfirm, isReadonly, onChangeOrder, onPlaceOrder, orderModel])\n\n  const renderGoodsLoading = React.useCallback(\n    () => <Trans>Accessing your order</Trans>,\n    [],\n  )\n\n  const cart = useCartSystem({\n    colors: {\n      primary: theme.primary,\n      sumRowBg: theme.primary,\n      sumRowText: 'white',\n      mobileSummaryItemCount: theme.secondary,\n    },\n    labels,\n    isReadonly,\n    mobileBreakpoint,\n    backgroundImage: theme.backgroundCart,\n    onItemEdit,\n    onItemRemove,\n    renderMobileSubmit,\n    renderGoodsLoading,\n  })\n\n  React.useEffect(\n    () =>\n      autorun(() => {\n        cartModel.updateDisplay(cart.store.isMobile, cart.store.showGoods)\n      }),\n    [cart.store, cartModel],\n  )\n\n  const root = useRoot()\n\n  return useObserver(function useObserverBody() {\n    const { data, loading } = useQCart(\n      {\n        orderId: orderId!,\n        withGoods: cartModel.withGoods,\n        withPresence: cartModel.withPresence,\n      },\n      {\n        skip: !root.initialized || !orderId,\n        context: {\n          noBatch: true,\n        },\n      },\n    )\n\n    React.useEffect(() => {\n      if (!loading) {\n        cart.updateSummary(data.order)\n        if (cartModel.withGoods) {\n          cart.updateGoods(data.order)\n        }\n      }\n    })\n\n    return <StyledCartSystem>{cart.renderCart()}</StyledCartSystem>\n  })\n}\n\nfunction getCartLabels(): CartLabels {\n  return {\n    noSideDish: <Trans>Without sidedish</Trans>,\n    noCost: <Trans>For free</Trans>,\n    cartSumHeader: totalPrice => (\n      <Trans>In the cart you have goods for {totalPrice}</Trans>\n    ),\n    emptyCart: <Trans>Cart is empty</Trans>,\n    totalDiscount: <Trans>Total discount</Trans>,\n    coverPrice: <Trans>Covers</Trans>,\n    transportFee: <Trans>Delivery</Trans>,\n    totalSum: <Trans>Total</Trans>,\n    tip: <Trans>Tip</Trans>,\n    minimalOrderPrice: price => (\n      <Trans>Minimal price of order is {price}</Trans>\n    ),\n  }\n}\n","import { useApolloClient } from '@speedlo/graphql'\nimport { useRouterContext } from '@speedlo/hooks'\nimport { idPropEq, RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport {\n  MRemoveCartItemMutation,\n  MRemoveCartItemVariables,\n  QCartDocument,\n  QCartQuery,\n  QCartVariables,\n  useMRemoveCartItem,\n} from '../../../graph/generated'\n\nexport function useCartControl() {\n  const { order: orderModel, cart: cartModel } = useRoot()\n  const client = useApolloClient()\n  const { history } = useRouterContext()\n  const onItemEdit = React.useCallback(\n    (item: ID) => {\n      orderModel.changeCartItem(item)\n    },\n    [orderModel],\n  )\n\n  const [removeItem] = useMRemoveCartItem()\n\n  const onItemRemove = React.useCallback(\n    (item: ID) => {\n      const variables: MRemoveCartItemVariables = {\n        itemId: item,\n        withGoods: cartModel.withGoods,\n        withPresence: cartModel.withPresence,\n      }\n      removeItem(variables, {\n        optimisticResponse: makeOptimisticRemove(variables),\n        context: {\n          noBatch: true,\n        },\n      })\n    },\n    [cartModel, makeOptimisticRemove, removeItem],\n  )\n\n  const onPlaceOrder = React.useCallback(() => {\n    history.push('/confirm')\n  }, [history])\n\n  const onChangeOrder = React.useCallback(() => {\n    history.push('/order')\n  }, [history])\n\n  return { cartModel, onItemEdit, onItemRemove, onPlaceOrder, onChangeOrder }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function makeOptimisticRemove(\n    variables: MRemoveCartItemVariables,\n  ): MRemoveCartItemMutation | undefined {\n    const current = client.readQuery<QCartQuery, QCartVariables>(\n      {\n        query: QCartDocument,\n        variables: {\n          orderId: orderModel.orderId!,\n          withGoods: cartModel.withGoods,\n          withPresence: cartModel.withPresence,\n        },\n      },\n      true,\n    )\n    if (!current) {\n      return undefined\n    }\n    const rejectItem = RM.reject(idPropEq(variables.itemId))\n    return {\n      __typename: 'Mutation',\n      remove: {\n        ...current.order,\n        countWares: current.order.countWares - 1,\n        totalSum: {\n          ...current.order.totalSum,\n          value: -1,\n        },\n        items: variables.withGoods\n          ? rejectItem(current.order.items)\n          : current.order.items,\n        presence: variables.withPresence\n          ? rejectItem(current.order.presence)\n          : current.order.presence,\n      },\n    }\n  }\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../../common/Buttons'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { useOrderModel } from '../../../hooks/useOrderModel'\nimport { TOrderModel } from '../../../models/OrderModel'\n\ninterface IProps {\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n}\n\nexport const OrderMethodButton: React.FC<IProps> = ({\n  orderMethod,\n  onChange,\n  children,\n}) => {\n  const orderModel = useOrderModel()\n  return useObserver(() => (\n    <SelectButtonThemed\n      selected={orderModel.orderMethod === orderMethod}\n      onClick={() => {\n        orderModel.useOrderMethod(orderMethod)\n        onChange(orderModel)\n      }}\n      data-testid={`orderMethod-${orderMethod}`}\n      data-testselected={orderModel.orderMethod === orderMethod}\n    >\n      {children}\n    </SelectButtonThemed>\n  ))\n}\n","import { Trans } from '@lingui/react'\nimport { RM } from '@speedlo/tools'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { TOrderModel } from '../../../models/OrderModel'\nimport { OrderMethodButton } from './OrderMethodButton'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\nconst StyledOrderMethod = styled.div`\n  padding: 0.2rem;\n\n  & button {\n    font-size: 1.3rem;\n    margin: 0.3rem 1rem 0.3rem 1rem;\n    padding: 0.3rem 1.2rem;\n    height: 2.7rem;\n    line-height: 1rem;\n    white-space: nowrap;\n\n    span:before {\n      margin: 0 0.8rem 0 0;\n      font-size: 2rem;\n      font-weight: initial;\n    }\n  }\n`\n\nexport const OrderMethod: React.FC<IProps> = ({ onChange = RM.identity }) => {\n  return (\n    <StyledOrderMethod>\n      <OrderMethodButton\n        orderMethod={DeliveryTypeEnum.Messenger}\n        onChange={onChange}\n      >\n        <span className=\"flaticon-transport\" />\n        <Trans>I want to deliver</Trans>\n      </OrderMethodButton>\n      <OrderMethodButton\n        orderMethod={DeliveryTypeEnum.Pickup}\n        onChange={onChange}\n      >\n        <span className=\"flaticon-restaurant\" />\n        <Trans>I'll pick up</Trans>\n      </OrderMethodButton>\n    </StyledOrderMethod>\n  )\n}\n"],"sourceRoot":""}