{"version":3,"sources":["common/ScrollToTop.tsx","segments/mobile/MobileHeader.tsx","segments/mobile/MobilePaymentButton.tsx","segments/mobile/MobilePaymentMethod.tsx","segments/mobile/MobileConfirmView.tsx","segments/mobile/MobileDeliveryView.tsx","segments/mobile/MobileFinishView.tsx","segments/mobile/MobileShopIntro.graphql.ts","segments/mobile/MobileShopIntro.tsx","segments/mobile/MobileIntroView.tsx","segments/mobile/MobileCartSummary.tsx","segments/mobile/MobileCart.tsx","segments/mobile/MobileClosingTimeModal.graphql.ts","segments/mobile/MobileClosingTimeModal.tsx","segments/mobile/MobileOrderView.tsx","segments/mobile/MobilePickupList.tsx","segments/mobile/MobilePickupMap.tsx","segments/mobile/MobilePickupView.tsx","segments/mobile/MobileSmartBanner.graphql.ts","segments/mobile/MobileSmartBanner.tsx","app/MobileApp.tsx"],"names":["ScrollToTop","_PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","window","scrollTo","PureComponent","MobileHeader","_ref","text","buttonText","_ref$buttonRight","buttonRight","onButtonClick","leftButton","react_default","a","createElement","Buttons","className","data-testid","onClick","rightButton","isConfirm","MobilePaymentButton","method","disabled","children","props","objectWithoutProperties","WithOrder","observe","render","order","es","field","fieldApi","assign","selected","isSubmitting","_onClick","toString","setValue","SubmitSpinner","MobilePaymentMethod","onConfirm","MobilePaymentButton_MobilePaymentButton","PaymentGateEnum","Gopay","i18n","_","toLocaleUpperCase","Cash","MobileConfirmView","history","segments_mobile_MobileHeader","goBack","OrderFormSetup","form","Fragment","ScrollToTop_ScrollToTop","OrderFormStorageNotice","OrderGoPayModal","OrderErrorModal","OrderTimePicker","OrderFormAutoFill","onFill","values","setAllValues","_lingui_react","id","OrderFormInputs","OrderAgreements","MobilePaymentMethod_MobilePaymentMethod","submitForm","MobileDeliveryView","map","useRoot","useRouterContext","BaseMap","model","DeliveryMap","push","MobileFinishView","objectDestructuringEmpty","reactstrap_es","ColStyle","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","branch","companyBranch","FinishViewFooter","finish","MobileShopIntroQuery","gql","_templateObject","QueryMobileShopIntro","buildQuery","MobileShopIntro","business","useObserver","variables","brandOrBranch","skip","isValid","renderLoading","headerText","intro","MobileIntroView","BackgroundThemed","imageName","size","fixed","ShopHeaderIcons","MobileShopIntro_MobileShopIntro","react_router","OrderMethod","onChange","usingDeliveryOrderMethod","usingPickupOrderMethod","MobileCartSummaryCountThemed","styled","div","withConfig","displayName","componentId","theme","secondary","MobileCartSummaryPriceThemed","span","_ref2","primary","MobileCartSummary","_ref3","count","price","isLoading","logDebug","showContent","components","MobileCart","orderId","_useQuery","useQuery","MobileCartQuery","suspend","data","loading","refetch","useCartRefresh","_useState","useState","_useState2","slicedToArray","isOpen","setOpen","isEmpty","_data$order","countWares","totalSum","formattedValue","useEffect","classNames","mobile__sliding__cart__open","MobileCartSummary_MobileCartSummary","open","CartView","OrderSubmitLine","canSubmit","MobileShopStatusQuery","MobileClosingTimeModal_graphql_templateObject","FCompanyBranchStatusFragmentDoc","QueryMobileShopStatus","MobileClosingTimeModal","branchId","ShopClosingTimeModal","status","MobileOrderView","orderModel","hasOrder","FoodMenuView","MobileCart_MobileCart","AddToCartModal","MobileClosingTimeModal_MobileClosingTimeModal","to","StatusDisplayPosition","MobilePickupList","branches","onSelect","onShowMap","onPrefetch","name","ShopAddress","address","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","pickupEnabled","onMouseEnter","toLocaleLowerCase","ButtonStripeContainerStyled","MobilePickupMap","panToBranch","_this$props","panToLocation","gps","_this$props2","latlng","gpsToLatLng","latitude","Number","longitude","undefined","lib","position","ButtonStripe","MobilePickupView","match","_useRoot","onSelectBranch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","createPickupOrder","stop","_x","renderHeader","renderMap","mobile_MobilePickupMap","params","isBrand","PickupMap_graphql","brandId","_ref5","find","RM","propEq","segments_mobile_MobilePickupList","concat","_ref4","prefetchFoodMenu","renderList","_ref6","_ref7","BannerQuery","MobileSmartBanner_graphql_templateObject","QueryBanner","SmartBannerContainer","MobileSmartBanner","WithRoot","platform","os","UAParser","navigator","userAgent","getOS","MobilePlatformEnum","Ios","Android","getPlatformType","banner","ensureBannerForCurrentBranch","shouldBeVisible","app","setClosedNow","style","backgroundImage","icon","title","href","url","setInstalledNow","MobileApp","path","component","fluid","exact"],"mappings":"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","file":"static/js/11.ac2b07d9.chunk.js","sourcesContent":["import { PureComponent } from 'react'\n\ninterface IProps {}\n\nexport class ScrollToTop extends PureComponent<IProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return null\n  }\n}\n","import './MobileHeader.css'\n\nimport React from 'react'\n\nimport { MobileHeaderButton } from '../../common/Buttons'\n\ninterface IProps {\n  text: string\n  buttonText: string\n  buttonRight?: boolean\n  onButtonClick(): void\n}\n\nconst MobileHeader: React.FC<IProps> = ({\n  text,\n  buttonText,\n  buttonRight = false,\n  onButtonClick,\n}) => {\n  const leftButton =\n    buttonRight === false ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Left\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  const rightButton =\n    buttonRight === true ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Right\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n        isConfirm={true}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  return (\n    <div className=\"mobile__header\">\n      {leftButton}\n      <div className=\"mobile__header__text\">{text}</div>\n      {rightButton}\n    </div>\n  )\n}\n\nexport default MobileHeader\n","import React from 'react'\nimport { Field } from 'react-form'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { PaymentGateEnum } from '../../graph/types'\n\ninterface IProps {\n  method: PaymentGateEnum\n  disabled?: boolean\n  onClick(): void\n}\n\nexport const MobilePaymentButton: React.FC<IProps> = ({\n  method,\n  disabled,\n  onClick,\n  children,\n  ...props\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <Field\n        field=\"payment\"\n        render={fieldApi => (\n          <SelectButtonThemed\n            selected={fieldApi.value === method}\n            disabled={disabled || order.isSubmitting}\n            onClick={() => {\n              fieldApi.setValue(method)\n              onClick()\n            }}\n            {...props}\n          >\n            {order.isSubmitting && fieldApi.value === method ? (\n              <SubmitSpinner />\n            ) : (\n              children\n            )}\n          </SelectButtonThemed>\n        )}\n      />\n    )}\n  />\n)\n","import './MobilePaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { MobilePaymentButton } from './MobilePaymentButton'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const MobilePaymentMethod: React.FC<IProps> = ({ onConfirm }) => {\n  return (\n    <div className=\"mobile__confirm__payment__method\">\n      <MobilePaymentButton\n        method={PaymentGateEnum.Gopay}\n        onClick={onConfirm}\n        data-testid=\"mobilePaymentMethodGoPay\"\n      >\n        <span className=\"flaticon-credit-card\">\n          {i18n.t`Pay by card`.toLocaleUpperCase()}\n        </span>\n      </MobilePaymentButton>\n      <MobilePaymentButton\n        method={PaymentGateEnum.Cash}\n        onClick={onConfirm}\n        data-testid=\"mobilePaymentMethodCash\"\n      >\n        <span className=\"flaticon-money\">\n          {i18n.t`Pay by cash`.toLocaleUpperCase()}\n        </span>\n      </MobilePaymentButton>\n    </div>\n  )\n}\n","import './MobileConfirmView.css'\n\nimport { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { ScrollToTop } from '../../common/ScrollToTop'\nimport { i18n } from '../../i18n'\nimport { OrderAgreements } from '../orderForm/OrderAgreements'\nimport { OrderErrorModal } from '../orderForm/OrderErrorModal'\nimport { OrderFormAutoFill } from '../orderForm/OrderFormAutoFill'\nimport { OrderFormInputs } from '../orderForm/OrderFormInputs'\nimport { OrderFormSetup } from '../orderForm/OrderFormSetup'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderGoPayModal } from '../orderForm/OrderGoPayModal'\nimport { OrderTimePicker } from '../orderForm/OrderTimePicker'\nimport MobileHeader from './MobileHeader'\nimport { MobilePaymentMethod } from './MobilePaymentMethod'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MobileConfirmView: React.FC<IProps> = ({ history }) => (\n  <div className=\"mobile__confirm__view\">\n    <MobileHeader\n      text={i18n.t`Order confirmation`}\n      buttonText={i18n.t`Cancel`}\n      onButtonClick={() => history.goBack()}\n    />\n    <OrderFormSetup\n      render={form => (\n        <>\n          <ScrollToTop />\n          <OrderFormStorageNotice />\n          <OrderGoPayModal />\n          <OrderErrorModal />\n          <OrderTimePicker />\n          <OrderFormAutoFill onFill={values => form.setAllValues(values)} />\n          <div className=\"mobile__confirm__view__form\">\n            <h3>\n              <Trans>Where and to whom we deliver?</Trans>\n            </h3>\n            <OrderFormInputs />\n            <OrderAgreements />\n          </div>\n          <div className=\"mobile__confirm__view__submit\">\n            <h4>\n              <Trans>Place order</Trans>\n            </h4>\n            <MobilePaymentMethod onConfirm={form.submitForm} />\n          </div>\n        </>\n      )}\n    />\n  </div>\n)\n","import './MobileMap.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { DeliveryMap } from '../map/DeliveryMap'\nimport MobileHeader from './MobileHeader'\n\nexport const MobileDeliveryView: React.FC = () => {\n  const { map } = useRoot()\n  const { history } = useRouterContext()\n  return (\n    <div>\n      <MobileHeader\n        text={i18n.t`Enter the address`}\n        buttonText={i18n.t`Back`}\n        onButtonClick={() => history.goBack()}\n      />\n      <div className=\"mobile__map__view\">\n        <BaseMap model={map}>\n          <DeliveryMap onConfirm={() => history.push('/order')} />\n        </BaseMap>\n      </div>\n    </div>\n  )\n}\n","import '../finish/FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport { FinishViewFooter } from '../finish/FinishViewFooter'\nimport { FinishViewLoader } from '../finish/FinishViewLoader'\nimport { FinishViewOrder } from '../finish/FinishViewOrder'\nimport { FinishViewSupport } from '../finish/FinishViewSupport'\n\ninterface IProps {}\n\nexport const MobileFinishView: React.FC<IProps> = ({}) => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyle>\n      <div className=\"finish__view__mobile\">\n        <FinishViewLoader\n          render={result => (\n            <>\n              <FinishViewOrder order={result.order} />\n              <FinishViewSupport branch={result.companyBranch} />\n              <FinishViewFooter finish={result} />\n            </>\n          )}\n        />\n      </div>\n    </ColStyle>\n  </Row>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph/buildQuery'\nimport { GMobileShopIntro } from '../../graph/types'\n\nexport const MobileShopIntroQuery = gql`\n  query GMobileShopIntro($brandId: ID, $branchId: ID) {\n    intro: applicationSettings(brand: $brandId, companyBranch: $branchId) {\n      headerText\n      homepageUrl\n    }\n  }\n`\n\nexport const QueryMobileShopIntro = buildQuery<\n  GMobileShopIntro.Query,\n  GMobileShopIntro.Variables\n>(MobileShopIntroQuery)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { QueryMobileShopIntro } from './MobileShopIntro.graphql'\n\nexport const MobileShopIntro: React.FC = () => {\n  const { business } = useRoot()\n  return useObserver(() => (\n    <QueryMobileShopIntro\n      variables={business.brandOrBranch}\n      skip={!business.isValid}\n      renderLoading={() => null}\n      render={({ intro: { headerText } }) => (\n        <div data-testid=\"MobileShopIntro\">{headerText}</div>\n      )}\n    />\n  ))\n}\n","import './MobileIntroView.css'\n\nimport React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { OrderMethod } from '../destination/OrderMethod'\nimport { ShopHeaderIcons } from '../shop/ShopHeaderIcons'\nimport { MobileShopIntro } from './MobileShopIntro'\n\nexport const MobileIntroView: React.FC = () => (\n  <div className=\"mobile__intro\">\n    <BackgroundThemed\n      className=\"mobile__intro__logo\"\n      data-testid=\"MobileIntroView__BackgroundThemed\"\n      imageName=\"storeLogoMobile\"\n      size=\"cover\"\n      fixed={false}\n    >\n      <ShopHeaderIcons />\n    </BackgroundThemed>\n    <div className=\"mobile__intro__info\">\n      <MobileShopIntro />\n      <Route>\n        {({ history }) => (\n          <OrderMethod\n            onChange={order => {\n              if (order.usingDeliveryOrderMethod) {\n                history.push('/delivery')\n              } else if (order.usingPickupOrderMethod) {\n                history.push('/pickup')\n              }\n            }}\n          />\n        )}\n      </Route>\n    </div>\n  </div>\n)\n","import './MobileCartSummary.css'\n\nimport { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { logDebug } from '../../helpers/logger'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  count: number\n  price: string\n  isLoading: boolean\n  onClick(): void\n}\n\nconst MobileCartSummaryCountThemed = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n`\n\nconst MobileCartSummaryPriceThemed = styled.span`\n  color: ${({ theme }) => theme.primary};\n`\n\nexport const MobileCartSummary: React.FC<IProps> = ({\n  count,\n  price,\n  isLoading,\n  onClick,\n}) => {\n  logDebug(count, isLoading)\n  const showContent = count > 0 || isLoading === true\n  return (\n    <div\n      className=\"mobile__cart__summary\"\n      data-testid=\"mobileCartSummary\"\n      onClick={onClick}\n    >\n      {showContent ? (\n        <div className=\"mobile__cart__summary__toggle\">\n          <span className=\"flaticon-chevron-up\" />\n        </div>\n      ) : null}\n\n      <div className=\"mobile__cart__summary__info\">\n        <span className=\"flaticon-cart\" />\n        {showContent ? (\n          <MobileCartSummaryCountThemed\n            className=\"mobile__cart__summary__count\"\n            data-testid=\"mobileCartSummary__Count\"\n          >\n            {count || '?'}\n          </MobileCartSummaryCountThemed>\n        ) : null}\n        {!showContent ? (\n          <span data-testid=\"cartIsEmpty\">{i18n.t`Cart is empty`}</span>\n        ) : (\n          <div\n            className=\"mobile__cart__summary__cart__with__price\"\n            data-testid=\"mobileCartSummary__Price\"\n          >\n            <Trans>\n              In the cart you have goods for\n              <MobileCartSummaryPriceThemed className=\"mobile__cart__summary__price\">\n                {price}\n              </MobileCartSummaryPriceThemed>\n            </Trans>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import './MobileCart.css'\nimport './MobileSlidingCart.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport classNames from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { GMobileCart } from '../../graph/types'\nimport { CartView } from '../cart/CartView'\nimport { useCartRefresh } from '../cart/useCartRefresh'\nimport { OrderSubmitLine } from '../orderForm/OrderSubmitLine'\nimport { MobileCartQuery } from './MobileCart.graphql'\nimport { MobileCartSummary } from './MobileCartSummary'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const MobileCart: React.FC<IProps> = ({ orderId }) => {\n  const { history } = useRouterContext()\n  const { data, loading, refetch } = useQuery<\n    GMobileCart.Query,\n    GMobileCart.Variables\n  >(MobileCartQuery, { suspend: false, variables: { orderId } })\n\n  useCartRefresh(refetch)\n\n  const [isOpen, setOpen] = useState(false)\n\n  const onSubmit = () => history.push('/confirm')\n\n  let count = 0\n  let price = '???'\n  let isEmpty = true\n  if (data && data.order) {\n    const { countWares, totalSum } = data.order\n    count = countWares\n    isEmpty = countWares === 0\n    price = totalSum.formattedValue\n  }\n\n  useEffect(\n    () => {\n      // auto close empty cart\n      if (count === 0 && isOpen === true) {\n        setOpen(false)\n      }\n    },\n    [count, isOpen],\n  )\n\n  const onToggle = () => {\n    setOpen(open => !(open || count === 0))\n  }\n\n  return (\n    <div\n      className={classNames('mobile__sliding__cart', {\n        mobile__sliding__cart__open: isOpen,\n      })}\n    >\n      <div className=\"mobile__cart__view\">\n        <MobileCartSummary\n          count={count}\n          price={price}\n          isLoading={loading || !(data && data.order)}\n          onClick={onToggle}\n        />\n        {isOpen ? (\n          <>\n            <CartView orderId={orderId} />\n            <OrderSubmitLine canSubmit={!isEmpty} onClick={onSubmit} />\n          </>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { FCompanyBranchStatusFragmentDoc } from '../../graph/generated'\nimport { GMobileShopStatus } from '../../graph/types'\n\nexport const MobileShopStatusQuery = gql`\n  query GMobileShopStatus($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      ...FCompanyBranchStatus\n    }\n  }\n  ${FCompanyBranchStatusFragmentDoc}\n`\n\nexport const QueryMobileShopStatus = buildQuery<\n  GMobileShopStatus.Query,\n  GMobileShopStatus.Variables\n>(MobileShopStatusQuery)\n","import React from 'react'\n\nimport { ShopClosingTimeModal } from '../shop/ShopClosingTimeModal'\nimport { QueryMobileShopStatus } from './MobileClosingTimeModal.graphql'\n\ninterface IProps {\n  branchId: ID\n}\n\nexport const MobileClosingTimeModal: React.FC<IProps> = ({ branchId }) => (\n  <QueryMobileShopStatus\n    variables={{ branchId }}\n    render={({ branch }) => branch && <ShopClosingTimeModal status={branch} />}\n  />\n)\n","import './MobileOrderView.css'\n\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { AddToCartModal } from '../cart/AddToCartModal'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { MobileCart } from './MobileCart'\nimport { MobileClosingTimeModal } from './MobileClosingTimeModal'\n\nexport const MobileOrderView = () => {\n  const { order: orderModel } = useRoot()\n  if (!orderModel.hasOrder) {\n    return <Redirect to=\"/\" />\n  }\n  return useObserver(() => (\n    <div className=\"mobile__order__view\">\n      <FoodMenuView />\n      <MobileCart orderId={orderModel.orderId!} />\n      <AddToCartModal />\n      <MobileClosingTimeModal branchId={orderModel.branchId!} />\n    </div>\n  ))\n}\n","import './MobilePickupList.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { PrimaryButton, SecondaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { GPickupBranch } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { ShopStatusDisplay } from '../shop/ShopStatusDisplay'\n\ninterface IProps {\n  branches: ReadonlyArray<GPickupBranch.Fragment>\n  onSelect(site: GPickupBranch.Fragment): void\n  onShowMap(site: GPickupBranch.Fragment): void\n  onPrefetch(branchId: ID): void\n}\n\nconst StatusDisplayPosition = styled.div``\n\nconst MobilePickupList: React.FC<IProps> = ({\n  branches,\n  onSelect,\n  onShowMap,\n  onPrefetch,\n}) => {\n  const renderBranch = (branch: GPickupBranch.Fragment) => {\n    return (\n      <div\n        className=\"mobile__pickup__list__item\"\n        data-testid=\"MobilePickupList\"\n        key={branch.id}\n      >\n        <div className=\"mobile__pickup__list__header\">{branch.name}</div>\n        <ShopAddress address={branch.address} />\n        <StatusDisplayPosition>\n          <ShopStatusDisplay\n            status={branch}\n            deliveryTime={branch.defaultDeliveryTime}\n            pickupTime={branch.defaultPickupTime}\n          />\n        </StatusDisplayPosition>\n\n        <div className=\"mobile__pickup__list__buttons\">\n          <SecondaryButton onClick={() => onShowMap(branch)}>\n            <span className=\"flaticon-signs\">\n              {i18n.t`Show on map`.toLocaleUpperCase()}\n            </span>\n          </SecondaryButton>\n          {branch.pickupEnabled ? (\n            <PrimaryButton\n              onClick={() => onSelect(branch)}\n              onMouseEnter={() => onPrefetch(branch.id)}\n            >\n              <span className=\"flaticon-mark\">\n                {i18n.t`Choose`.toLocaleUpperCase()}\n              </span>\n            </PrimaryButton>\n          ) : (\n            <PrimaryButton disabled={true}>\n              <span className=\"flaticon-mark\">\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </span>\n            </PrimaryButton>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"mobile__pickup__list\">\n      {branches && branches.map(renderBranch)}\n    </div>\n  )\n}\n\nexport default MobilePickupList\n","import React, { PureComponent } from 'react'\nimport { Marker } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { TMapModel } from '../../models/MapModel'\n\ninterface IProps {\n  model: TMapModel\n  branch: Maybe<GPickupBranch.Fragment>\n  onSelect(): void\n}\n\nconst ButtonStripeContainerStyled = styled.div`\n  margin-top: 2rem;\n  z-index: 10;\n`\n\nclass MobilePickupMap extends PureComponent<IProps> {\n  componentDidMount() {\n    this.panToBranch()\n  }\n  componentDidUpdate() {\n    this.panToBranch()\n  }\n  panToBranch() {\n    const { model, branch } = this.props\n    if (branch) {\n      model.panToLocation(branch.gps)\n    }\n  }\n  render() {\n    const { model, branch, onSelect } = this.props\n    const latlng = branch\n      ? gpsToLatLng({\n          latitude: Number(branch.gps.latitude),\n          longitude: Number(branch.gps.longitude),\n        })\n      : undefined\n    return (\n      <div>\n        <div className=\"mobile__map__view\">\n          <BaseMap model={model}>\n            <Marker position={latlng} />\n          </BaseMap>\n        </div>\n        {branch && branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                onClick={onSelect}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Choose branch`.toLocaleUpperCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n        {branch && !branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                disabled={true}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default MobilePickupMap\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport {\n  QueryPickupMapBranch,\n  QueryPickupMapBrand,\n} from '../map/PickupMap.graphql'\nimport MobileHeader from './MobileHeader'\nimport MobilePickupList from './MobilePickupList'\nimport MobilePickupMap from './MobilePickupMap'\n\ninterface IRouteParams {\n  branchId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const MobilePickupView: React.FC<IProps> = ({ history, match }) => {\n  const { order, map, business } = useRoot()\n  const onSelectBranch = async (id: ID) => {\n    await order.createPickupOrder(id)\n    history.push('/order')\n  }\n  const renderHeader = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobileHeader\n      text={branch ? branch.name : i18n.t`Choose branch`}\n      buttonText={i18n.t`Back`}\n      onButtonClick={() => history.goBack()}\n    />\n  )\n  const renderMap = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobilePickupMap\n      model={map}\n      branch={branch}\n      onSelect={() => branch && onSelectBranch(branch.id)}\n    />\n  )\n  const renderList = (branches: ReadonlyArray<GPickupBranch.Fragment>) => (\n    <MobilePickupList\n      branches={branches}\n      onShowMap={({ id }) => history.push(`/pickup/${id}`)}\n      onSelect={({ id }) => onSelectBranch(id)}\n      onPrefetch={id => order.prefetchFoodMenu(id)}\n    />\n  )\n\n  const { branchId } = match.params\n\n  return business.isBrand ? (\n    <QueryPickupMapBrand\n      variables={{ brandId: business.brandId! }}\n      renderLoading={!branchId}\n      render={({ branches }) => {\n        const branch =\n          (branches && branches.find(RM.propEq('id', branchId))) || null\n        return (\n          <>\n            {renderHeader(branch)}\n            {branch ? renderMap(branch) : renderList(branches)}\n          </>\n        )\n      }}\n    />\n  ) : (\n    <QueryPickupMapBranch\n      variables={{ branchId: business.branchId! }}\n      renderLoading={false}\n      render={({ branch }, { loading }) => (\n        <>\n          {renderHeader(branch)}\n          {renderMap(branch)}\n        </>\n      )}\n    />\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GSmartBanner } from '../../graph/types'\n\nconst BannerQuery = gql`\n  query GSmartBanner($branchId: ID!, $platform: MobilePlatformEnum!) {\n    app: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: $platform\n    ) {\n      title\n      url\n      icon\n    }\n  }\n`\n\nexport const QueryBanner = buildQuery<\n  GSmartBanner.Query,\n  GSmartBanner.Variables\n>(BannerQuery)\n","import './MobileSmartBanner.css'\n\nimport { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\nimport UAParser from 'ua-parser-js'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { MobilePlatformEnum } from '../../graph/generated'\nimport { QueryBanner } from './MobileSmartBanner.graphql'\n\ninterface IProps {}\n\nconst SmartBannerContainer = styled.div`\n  border-bottom: 1px solid #8f8f8f;\n  height: 81px;\n  position: absolute;\n  z-index: 1;\n  top: 3rem;\n  width: 100%;\n`\n\nexport const MobileSmartBanner: React.FC<IProps> = props => (\n  <WithRoot\n    observe={true}\n    render={({ business }) => {\n      const platform = getPlatformType()\n      if (!business.isValid || platform === null) {\n        return null\n      }\n      const banner = business.ensureBannerForCurrentBranch()\n      if (!banner.shouldBeVisible) {\n        return null\n      }\n      const wrapperClassName = `smartbanner smartbanner-ios smartbanner-top`\n      return (\n        <QueryBanner\n          variables={{\n            branchId: banner.branchId,\n            platform,\n          }}\n          render={({ app }) => {\n            return app ? (\n              <SmartBannerContainer>\n                <div className={wrapperClassName}>\n                  <div className=\"smartbanner-container\">\n                    <a\n                      className=\"smartbanner-close\"\n                      onClick={banner.setClosedNow}\n                    >\n                      &times;\n                    </a>\n                    <span\n                      className=\"smartbanner-icon\"\n                      style={{ backgroundImage: `url(${app.icon})` }}\n                    />\n                    <div className=\"smartbanner-info\">\n                      <div className=\"smartbanner-title\">{app.title}</div>\n                      <div className=\"smartbanner-description\">\n                        <Trans>Free</Trans>\n                      </div>\n                    </div>\n                    <div className=\"smartbanner-wrapper\">\n                      <a\n                        href={app.url}\n                        onClick={banner.setInstalledNow}\n                        className=\"smartbanner-button\"\n                      >\n                        <span className=\"smartbanner-button-text\">\n                          <Trans>Show app</Trans>\n                        </span>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </SmartBannerContainer>\n            ) : null\n          }}\n        />\n      )\n    }}\n  />\n)\n\nexport function getPlatformType(): Maybe<MobilePlatformEnum> {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  if (os.name === 'iOS') {\n    return MobilePlatformEnum.Ios\n  } else if (os.name === 'Android') {\n    return MobilePlatformEnum.Android\n  }\n  return null\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { MobileConfirmView } from '../segments/mobile/MobileConfirmView'\nimport { MobileDeliveryView } from '../segments/mobile/MobileDeliveryView'\nimport { MobileFinishView } from '../segments/mobile/MobileFinishView'\nimport { MobileIntroView } from '../segments/mobile/MobileIntroView'\nimport { MobileOrderView } from '../segments/mobile/MobileOrderView'\nimport { MobilePickupView } from '../segments/mobile/MobilePickupView'\nimport { MobileSmartBanner } from '../segments/mobile/MobileSmartBanner'\n\nconst MobileApp = () => (\n  <>\n    <Route path=\"/\" component={MobileSmartBanner} />\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MobileIntroView} />\n      <Route path=\"/pickup/:branchId?\" component={MobilePickupView} />\n      <Route path=\"/delivery\" component={MobileDeliveryView} />\n      <Route path=\"/order\" component={MobileOrderView} />\n      <Route path=\"/confirm\" component={MobileConfirmView} />\n      <Route path=\"/finish\" component={MobileFinishView} />\n    </Container>\n  </>\n)\n\nexport default MobileApp\n"],"sourceRoot":""}