{"version":3,"sources":["segments/orderForm/OrderFormAutoFill.tsx","segments/orderForm/OrderNoteInput.tsx","hooks/useGuardedMutation.ts","segments/orderForm/OrderFormSetup.tsx","segments/orderForm/OrderSubmitLine.tsx","common/SubmitSpinner.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/cart/CartDiscounts.tsx","segments/cart/CartItemButton.tsx","segments/cart/EditCartItemButton.tsx","segments/cart/RemoveCartItemButton.tsx","segments/cart/CartItem.tsx","segments/cart/CartTotals.tsx","segments/cart/CartContents.tsx","segments/cart/CartIsEmpty.tsx","segments/cart/ChangeCartModal.tsx","segments/cart/CartView.tsx","common/FormTextInput.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderPromoInput.graphql.ts","segments/orderForm/OrderPromoInput.tsx","segments/orderForm/OrderTimeButtons.tsx","segments/orderForm/OrderFormInputs.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/LinkToCart.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/OrderLimitModal.tsx","segments/foodMenu/FoodMenuView.tsx","segments/destination/GeolocationButton.tsx","segments/destination/ResolvedAddress.tsx","segments/destination/SearchInput.tsx","segments/destination/AddressInput.tsx","segments/map/AddressSubmit.tsx","segments/map/DeliveryMapPanning.tsx","segments/map/DeliveryMap.tsx","segments/timePicker/createTimeSteps.ts","segments/timePicker/TimePickerButton.tsx","segments/timePicker/TimePicker.tsx","segments/orderForm/OrderTimePicker.graphql.ts","segments/orderForm/OrderTimePicker.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/sidedishPicker/SidedishPicker.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartModal.tsx","common/FormInputCheckbox.tsx","segments/orderForm/OrderAgreements.tsx","segments/finish/FinishView.graphql.ts","segments/finish/FinishViewLoader.tsx","segments/shop/logo-commerce-01.svg","segments/shop/logo-commerce-02.svg","segments/shop/logo-doveze.svg","segments/shop/logo-gopay.png","common/ColStyle.tsx","hooks/useShopStatus.ts","common/ShopAddress.tsx","common/AlertModal.tsx","common/BackgroundThemed.tsx","common/WithOrder.tsx","common/BaseMap.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","segments/destination/OrderMethod.tsx","common/ButtonStripe.tsx","segments/map/atoms/MapPanning.tsx","segments/cart/AddToCartModal.tsx","common/PickerButton.tsx","segments/cart/useCartRefresh.ts","segments/orderForm/OrderFormStorageNotice.tsx","segments/orderForm/OrderFormView.graphql.ts","segments/orderForm/OrderErrorModal.tsx"],"names":["__webpack_require__","d","__webpack_exports__","OrderFormAutoFill","_ref","onFill","isTooLong","value","trim","length","OrderNoteInputValidator","_i18n__WEBPACK_IMPORTED_MODULE_4__","_","OrderNoteInput","ingredientsDescription","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_form__WEBPACK_IMPORTED_MODULE_2__","field","validate","render","fieldApi","reactstrap__WEBPACK_IMPORTED_MODULE_3__","type","placeholder","title","onChange","e","setValue","target","onBlur","setTouched","valid","error","invalid","Boolean","data-testid","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","id","useGuardedMutation","mutation","arguments","undefined","onUserErrors","options","Object","D_workspace_deepvision_doveze_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","defaultMessage","_i18n__WEBPACK_IMPORTED_MODULE_7__","handleGraphQLErrors","useCallback","errors","userErrors","filter","RM","pathEq","map","prop","handleError","err","hasOwnProperty","isApolloError","networkError","window","alert","graphQLErrors","reportError","mutate","useMutation","_ref2","D_workspace_deepvision_doveze_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_deepvision_doveze_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","variables","result","wrap","_context","prev","next","sent","abrupt","data","t0","stop","this","_x","apply","getFormValues","orderModel","firstname","lastname","email","phone","phonePrefix","defaultPhonePrefix","note","payment","PaymentGateEnum","Gopay","agreements","OrderFormSetup","useRoot","order","history","useRouterContext","useEffect","isVamInitialized","initVam","updateVam","D_workspace_deepvision_doveze_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_workspace_deepvision_doveze_node_modules_react_scripts_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","formState","formApi","values","mergeFormAgreements","_x2","useDebounceCallback","react__WEBPACK_IMPORTED_MODULE_4___default","react_form__WEBPACK_IMPORTED_MODULE_5__","defaultValues","validateOnMount","onSubmit","_ref3","_callee2","_context2","submitOrder","replace","logOrder","_x3","reactstrap__WEBPACK_IMPORTED_MODULE_6__","submitForm","formValue","agreement","formAgreement","find","propEq","D_workspace_deepvision_doveze_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isConfirmed","OrderSubmitLine","react__WEBPACK_IMPORTED_MODULE_1__","n","_common_Buttons__WEBPACK_IMPORTED_MODULE_2__","_common_Responsive__WEBPACK_IMPORTED_MODULE_3__","_common_SubmitSpinner__WEBPACK_IMPORTED_MODULE_4__","_common_WithOrder__WEBPACK_IMPORTED_MODULE_5__","_i18n__WEBPACK_IMPORTED_MODULE_6__","onClick","_ref$canSubmit","canSubmit","observe","className","color","size","disabled","isSubmitting","toLocaleUpperCase","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_spinkit__WEBPACK_IMPORTED_MODULE_1__","react_spinkit__WEBPACK_IMPORTED_MODULE_1___default","styled_components__WEBPACK_IMPORTED_MODULE_2__","withTheme","props","name","theme","primary","fadeIn","TextPadding","styled","div","withConfig","displayName","componentId","OrderGoPayModal","useObserver","react__WEBPACK_IMPORTED_MODULE_2___default","_common_AlertModal__WEBPACK_IMPORTED_MODULE_4__","isOpen","isGoPayChecking","headerText","_common_Pacman__WEBPACK_IMPORTED_MODULE_5__","noMargin","CartDiscounts","discounts","react_default","code","description","formattedValue","price","key","_lingui_react","totalDiscount","CartItemButtonStyled","useColor","enabled","css","CartItemButtonIcon","span","CartItemButton","icon","_ref3$enabled","data_testid","onDoubleClick","ev","preventDefault","concat","EditCartItemButton","itemId","objectWithoutProperties","button","CartItemButton_CartItemButton","assign","react_router_dom","to","RemoveCartItemButton","clickedRef","useRef","current","removeItemFromCart","EditButtonsContainerStyled","CartItemStyled","isActive","CartItem","item","onEdit","RemoveCartItemButton_RemoveCartItemButton","automatic","Responsive","EditCartItemButton_EditCartItemButton","recipe","sideDishCount","nameLabel","sideDishes","join","i18n","toLocaleLowerCase","CartItemSummaryTotalThemed","Color","alpha","hsl","string","CartTotals","coverPrice","transportFee","totalSum","CartContents","items","CartItem_CartItem","lastActiveRecipeId","setUsedRecipeId","CartDiscounts_CartDiscounts","CartTotals_CartTotals","CartIsEmptyThemed","secondary","CartIsEmpty","QueryCart","buildQuery","OrderCartForItemQuery","ChangeCartModal","react_router","path","match","params","renderLoading","renderError","reactstrap_es","loading","CartModal","initialSelection","onConfirm","updateItem","onClose","goBack","isLoading","CartView_CartView","CartView","orderId","_useQCartView","useQCartView","skip","refetch","useCartRefresh","Fragment","AddToCartModal","ChangeCartModal_ChangeCartModal","countWares","CartIsEmpty_CartIsEmpty","CartContents_CartContents","FormTextInput","_ref$showFeedback","showFeedback","inputProps","es","touched","emailRx","OrderEmailInputValidator","test","OrderEmailInput","FormTextInput_FormTextInput","autoComplete","OrderNameInput","OrderPhoneInputValidator","OrderPhonePrefixInputValidator","OrderPhoneInput","style","width","OrderPromoCodesQuery","gql","_templateObject","FPromoCodeFragmentDoc","AddOrderPromoMutation","_templateObject2","RemoveOrderPromoMutation","_templateObject3","CodesPanel","OrderPromoInputUI","codes","onCodeAdd","onCodeRemove","_ref$autoSubmitAfterT","autoSubmitAfterTimeout","inputRef","_useState","useState","_useState2","slicedToArray","isValidating","setValidating","addCode","asyncToGenerator","regenerator_default","focus","finish","onKeyDown","innerRef","onPaste","Buttons","OrderPromoInput","useQuery","suspend","addCodeMutation","submitFailed","_ref4","setCartRefresh","addOrderPromoCode","removeCodeMutation","promoCodes","codeId","OrderTimeButtons","delayedOrderEnabled","selected","deliverAt","setDeliverAt","openTimePicker","format","weekday","hour","minute","OrderFormInputs_OrderFormInputs","OrderFormInputs","OrderNameInput_OrderNameInput","OrderPhoneInput_OrderPhoneInput","OrderEmailInput_OrderEmailInput","OrderTimeButtons_OrderTimeButtons","orderForm_OrderPromoInput","CategoryNavigatorContainer","mediaDesktop","mediaMobile","CategoryNavigator","categories","activeCategoryIndex","setActiveCategoryIndex","category","idx","modules_default","Link","classNames","active","onSetActive","offset","smooth","spy","pictogram","Truncate","lines","FoodCategoryStyled","FoodCategoryTitleStyled","FoodCategory_templateObject","FoodCategory","children","Element","LinkStyled","LinkToCart","recipeId","hasSidedish","canAddToCart","pathname","WithRoot","isMobile","_onClick","toString","addFromRecipeMobile","addFromRecipe","FoodMenuItemStyled","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItemCount","FoodMenuItem_templateObject","FoodMenuItem","_ref5","inCart","onPrefetch","LinkToCart_LinkToCart","onMouseEnter","image","src","alt","descriptionLabel","FoodMenuStyled","FoodMenu_templateObject","FoodMenu_templateObject2","FoodMenuListStyled","_templateObject4","FoodMenu","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","shouldUpdate","_this$props","orderItemCount","rootModel","config","orderItemsMax","_this$props2","_this$props2$rootMode","user","orderLimitReached","mobx_react_index_module","foodMenu_FoodCategory","recipes","segments_foodMenu_FoodMenuItem","showOrderLimit","prefetchFood","React","Component","OrderLimitModal","AlertModal","orderLimitAlertHidden","hideOrderLimit","FoodMenuView_FoodMenuView","FoodMenuView","FoodMenuView_graphql","branchId","wareCategories","OrderLimitModal_OrderLimitModal","segments_foodMenu_CategoryNavigator","FoodMenu_FoodMenu","root","getCartPresence","reduce","Container","GeolocationButton","_ref2$isVisible","isVisible","addonType","ResolvedAddress","address","isResolving","onValidClick","dist_default","SearchInput","state","onSearch","debounce","_this","setState","onKeyPress","clear","onInputMount","ref","setFocus","nextProps","isSearching","isHidden","classnames","address__input__hidden","autoFocus","AddressInputStyled","AddressInputBoxStyled","AddressInput","location","destination_ResolvedAddress","hasAddress","clearAddress","destination_SearchInput","withUserAddress","destination_GeolocationButton","attemptGeolocation","isGeolocationAvailable","hasFinishedSearch","isResolved","NoMouseAlert","isStreetAddress","inDeliveryLocation","renderErrorMessage","Alert","AddressSubmit","ButtonStripe","DeliveryMapPanning","_useRoot","useGInitialLocation","useDisposable","reaction","clickPoint","withUserLocation","clearClickPoint","panToGps","useFullComputed","geoPoint","logMap","geolocationPoint","initialLocation","gpsCoordinates","MapPanning","gps","get","DeliveryMap","business","setBranch","createDeliveryOrder","when","isValid","validateUserLocation","DeliveryMapPanning_DeliveryMapPanning","latLng","lib","position","defaultDraggable","onDragEnd","latLngToGps","AddressInput_AddressInput","AddressSubmit_AddressSubmit","isDeliveryAddress","prefetchFoodMenu","createTimeSteps","start","end","minuteStep","startOfMinute","time","addMinutes","subMinutes","getMinutes","timeClampDown","timeClampUp","steps","endMinute","endOfMinute","push","Time","TimePickerButton","buttonProps","node_modules_react_default","PickerButton","outline","getTime","formatTime","TimePickerContainer","TimePickerDay","TimePicker","minDate","maxDate","onStepChange","initialTime","_ref$filterIntervals","filterIntervals","useMemo","allSteps","step","some","isWithinInterval","days","eachDayOfInterval","_React$useState","_React$useState2","stepIdx","setStepIdx","closestIndexTo","day","node_modules_react","getDate","react","month","isEqual","startOfDay","TimePickerButton_TimePickerButton","isSelected","canBeSelected","OrderTimePickerQuery","UpdateOrderDeliveryTimeMutation","OrderTimePicker","_useQuery","updateOrder","selectedTime","onConfirmAndClose","isoDate","closeTimePicker","renderModalContent","companyBranch","willOpenAt","Date","getStartTime","willCloseAt","nextBusinessHour","businessHours","closeAt","getEndTime","isAfter","minuteOffset","_companyBranch","defaultDeliveryTime","defaultPickupTime","usingDeliveryOrderMethod","usingPickupOrderMethod","getMinuteOffset","TimePicker_TimePicker","bhour","openAt","delayedDeliveryEnabled","enableDelayedOrder","header","timePickerOpen","toggle","backdrop","fade","tag","Name","Price","SidedishCheckbox","sidedish","SidedishPicker","selection","onToggle","index_module","SidedishCheckbox_SidedishCheckbox","includes","CartOrderButton","isConfirming","observable","box","set","0","_ref$initialSelection","array","Array","from","SidedishPicker_SidedishPicker","sidedishId","remove","CartOrderButton_CartOrderButton","CheckboxContainerStyled","CheckboxStyled","Input","LabelStyled","FormInputCheckbox","_ref2$defaultValue","defaultValue","checked","OrderAgreements_OrderAgreements","ButtonStyled","Button","GdprAgreementStyled","OrderAgreements","descOpen","toggleId","display","hideConfirmed","FormInputCheckbox_FormInputCheckbox","isMandatory","dangerouslySetInnerHTML","__html","FinishViewOrderFragment","FCartItemFragmentDoc","FPriceFragmentDoc","FinishViewQuery","QueryFinishView","FinishViewLoader_FinishViewLoader","FinishViewLoader","WithOrder","redirect","_render2","_render","module","exports","p","ColStyle","ColStyleLeft","ColStyleRight","reactstrap__WEBPACK_IMPORTED_MODULE_1__","sm","md","lg","xl","useShopStatus","_speedlo_hooks__WEBPACK_IMPORTED_MODULE_0__","date_fns__WEBPACK_IMPORTED_MODULE_1__","status","_ref$updateInterval","updateInterval","SECOND","_ref$openSoonThreshol","openSoonThresholdInMinutes","_ref$closeSoonThresho","closeSoonThresholdInMinutes","getNow","useNow","useTimer","interval","now","openingIn","differenceInMinutes","closingIn","decision","isSoon","threshold","Math","abs","ShopAddress","_i18n__WEBPACK_IMPORTED_MODULE_1__","street","houseNumber","city","modalProps","D_workspace_deepvision_doveze_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","BackgroundThemed","imageName","_ref$fixed","fallbackColor","fixed","_ref$size","_ref$component","component","otherProps","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_WithRoot__WEBPACK_IMPORTED_MODULE_2__","_ref$redirect","hasOrder","BaseMap","mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__","react_google_maps__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","MapContainerStyled","MapElement","BaseMapContainer","withGoogleMap","model","containerElement","mapElement","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","streetViewControl","mapTypeControl","fullscreenControl","zoomControlOptions","google","maps","ControlPosition","RIGHT_TOP","ShopClosingTimeModal","_useShopStatus","_common_AlertModal__WEBPACK_IMPORTED_MODULE_3__","closingTimeAlertHidden","hideClosingTime","ShopHeaderIcons","_common_ColStyle__WEBPACK_IMPORTED_MODULE_2__","_logo_commerce_01_svg__WEBPACK_IMPORTED_MODULE_3__","_logo_commerce_01_svg__WEBPACK_IMPORTED_MODULE_3___default","_logo_commerce_02_svg__WEBPACK_IMPORTED_MODULE_4__","_logo_commerce_02_svg__WEBPACK_IMPORTED_MODULE_4___default","_logo_doveze_svg__WEBPACK_IMPORTED_MODULE_5__","_logo_doveze_svg__WEBPACK_IMPORTED_MODULE_5___default","_logo_gopay_png__WEBPACK_IMPORTED_MODULE_6__","_logo_gopay_png__WEBPACK_IMPORTED_MODULE_6___default","logoDoveze","logoCommerce02","logoCommerce01","logoGoPay","StatusDisplayOpen","StatusDisplayClosed","ShopStatusDisplay","deliveryTime","pickupTime","react__WEBPACK_IMPORTED_MODULE_3___default","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","closestBH","closedNote","formatOpenTime","openAtDate","nowDate","isSameDay","CenteredButtonContainer","FinishViewFooter","_ref$finish","androidApp","iosApp","_common_Responsive__WEBPACK_IMPORTED_MODULE_5__","href","url","reactstrap__WEBPACK_IMPORTED_MODULE_2__","_common_Buttons__WEBPACK_IMPORTED_MODULE_4__","textAlign","HeaderThemed","PriceThemed","PriceCornerThemed","FinishViewOrder","orderPayments","hasMethod","Cash","_i18n__WEBPACK_IMPORTED_MODULE_5__","getPaymentInfo","OrderItem","_ref6","getPaymentPrice","_ref7","PhoneNumberLinkStyled","FinishViewSupport","branch","OrderMethod","mobx_react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","_common_Buttons__WEBPACK_IMPORTED_MODULE_3__","_common_WithRoot__WEBPACK_IMPORTED_MODULE_4__","_graph_generated__WEBPACK_IMPORTED_MODULE_5__","_helpers_ramda__WEBPACK_IMPORTED_MODULE_6__","OrderMethodButton","orderMethod","useOrderMethod","data-testselected","DeliveryTypeEnum","Messenger","identity","Pickup","prefetchPickup","mobx__WEBPACK_IMPORTED_MODULE_0__","mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__","autorun","isReady","panToLocation","OrderCartForRecipeQuery","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_common_Responsive__WEBPACK_IMPORTED_MODULE_4__","_CartModal__WEBPACK_IMPORTED_MODULE_8__","Promise","resolve","PickerButtonStyled","tertiary","tertiaryText","tertiaryHover","onSelect","_common_WithRoot__WEBPACK_IMPORTED_MODULE_2__","onRefresh","shouldRefreshCart","NoticeButton","StorageNotice","OrderFormStorageNotice","_common_WithRoot__WEBPACK_IMPORTED_MODULE_7__","_OrderFormView_graphql__WEBPACK_IMPORTED_MODULE_8__","rememberForm","mobx_react__WEBPACK_IMPORTED_MODULE_2__","setFormRememberYes","setFormRememberNo","OrderFormQuery","QueryOrderForm","OrderErrorModal","reactstrap__WEBPACK_IMPORTED_MODULE_4__","hasErrors","clearErrors","submitErrors"],"mappings":"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","file":"static/js/1.b38f47b9.chunk.js","sourcesContent":["import React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { IOrderFormState } from './OrderFormSetup'\nimport { MAX_LENGTH } from './OrderNoteInput'\n\ninterface IProps {\n  onFill(values: IOrderFormState): void\n}\n\nexport const OrderFormAutoFill: React.FC<IProps> = ({ onFill }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <SecondaryButton\n      style={{ marginBottom: '0.5rem' }}\n      onClick={() => {\n        const faker: Faker.FakerStatic = require('faker')\n        faker.locale = 'cz'\n        onFill({\n          firstname: faker.name.firstName(),\n          lastname: faker.name.lastName(),\n          email: faker.internet.email(),\n          phone: faker.phone.phoneNumberFormat(0),\n          phonePrefix: '+420',\n          note: faker.lorem.sentence().slice(0, MAX_LENGTH - 1),\n          payment: PaymentGateEnum.Gopay,\n          agreements: [],\n        })\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  ) : null\n","import { Plural, Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Field } from 'react-form'\nimport { FormFeedback, FormGroup, FormText, Input } from 'reactstrap'\n\nimport { i18n } from '../../i18n'\n\nexport const MAX_LENGTH = 50\nconst isTooLong = value => value && value.trim().length > MAX_LENGTH\n\nconst OrderNoteInputValidator = value =>\n  isTooLong(value) ? i18n.t`Note is too long` : null\n\nexport const OrderNoteInput: React.FC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <Field\n      field=\"note\"\n      validate={OrderNoteInputValidator}\n      render={fieldApi => (\n        <FormGroup>\n          <Input\n            type=\"textarea\"\n            placeholder={i18n.t`Note`}\n            title={ingredientsDescription}\n            value={fieldApi.value}\n            onChange={e => fieldApi.setValue(e.target.value)}\n            onBlur={() => fieldApi.setTouched(true)}\n            valid={!fieldApi.error}\n            invalid={Boolean(fieldApi.error)}\n            data-testid=\"orderNoteInput\"\n          />\n          <FormText>{ingredientsDescription}</FormText>\n          {isTooLong(fieldApi.value) ? (\n            <FormFeedback>\n              <Trans>\n                Maximum length is{' '}\n                <Plural value={MAX_LENGTH} other=\"# characters\" />. Typed{' '}\n                <Plural\n                  value={fieldApi.value.length}\n                  one=\"# char\"\n                  other=\"# chars\"\n                />\n              </Trans>\n            </FormFeedback>\n          ) : null}\n        </FormGroup>\n      )}\n    />\n  )\n}\n","import { ApolloError } from 'apollo-client'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  onUserErrors?(errors: string[]): void\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  { onUserErrors, ...options }: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(\n        RM.pathEq(['extensions', 'showToUser'], true),\n      )\n      if (onUserErrors) {\n        if (userErrors.length === 0) {\n          onUserErrors([defaultMessage])\n        } else {\n          onUserErrors(userErrors.map(RM.prop('message')))\n        }\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        window.alert(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors && result.errors.length) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      return result.data as TData\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors')\n}\n","import { useDebounceCallback, useRouterContext } from '@speedlo/hooks'\nimport React, { useCallback, useEffect } from 'react'\nimport { Form, IFormApi, IFormState } from 'react-form'\nimport { Form as StrapForm } from 'reactstrap'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { logOrder } from '../../helpers/logger'\nimport { RM } from '../../helpers/ramda'\nimport { reportError } from '../../helpers/sentry'\nimport { TAgreement, TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  render(formApi: IFormApi & IFormState<IOrderFormState>): ReactNode\n}\n\nexport interface IOrderFormState {\n  firstname: string\n  lastname: string\n  email: string\n  phonePrefix: string\n  phone: string\n  note: string\n  payment: PaymentGateEnum\n  agreements: TAgreement[]\n}\n\nfunction getFormValues(orderModel: TOrderModel): IOrderFormState {\n  return {\n    firstname: orderModel.firstname,\n    lastname: orderModel.lastname,\n    email: orderModel.email,\n    phone: orderModel.phone,\n    phonePrefix: orderModel.phonePrefix || orderModel.defaultPhonePrefix,\n    note: orderModel.note,\n    payment: PaymentGateEnum.Gopay,\n    agreements: [],\n  }\n}\n\nconst debounceInterval = 1500\n\nexport const OrderFormSetup: React.FC<IProps> = ({ render }) => {\n  const { order: orderModel } = useRoot()\n  const { history } = useRouterContext()\n\n  useEffect(() => {\n    if (!orderModel.isVamInitialized) {\n      orderModel.initVam()\n    }\n  }, [])\n\n  const updateVam = useCallback(\n    async (formState: IFormState<IOrderFormState>, formApi: IFormApi) => {\n      try {\n        await orderModel.updateVam(formState.values)\n        formApi.setValue(\n          'agreements',\n          mergeFormAgreements(\n            formState.values.agreements,\n            orderModel.agreements,\n          ),\n        )\n      } catch (err) {\n        reportError(err, {\n          formState: formState.values,\n        })\n      }\n    },\n    [],\n  )\n\n  const onChange = useDebounceCallback(updateVam, debounceInterval)\n\n  return (\n    <Form\n      defaultValues={getFormValues(orderModel)}\n      validateOnMount={true}\n      onChange={onChange}\n      onSubmit={async (formState: IOrderFormState) => {\n        try {\n          await orderModel.submitOrder(formState)\n          history.replace(`/finish`)\n        } catch (e) {\n          logOrder(e)\n        }\n      }}\n    >\n      {formApi => (\n        <StrapForm onSubmit={formApi.submitForm}>{render(formApi)}</StrapForm>\n      )}\n    </Form>\n  )\n}\n\nfunction mergeFormAgreements(\n  formValue: TAgreement[],\n  agreements: TAgreement[],\n) {\n  return agreements.map(agreement => {\n    const formAgreement = formValue.find(RM.propEq('id', agreement.id))\n    if (formAgreement) {\n      return { ...agreement, isConfirmed: formAgreement.isConfirmed }\n    }\n    return agreement\n  })\n}\n","import './OrderSubmitLine.css'\n\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  onClick(): void\n  canSubmit: boolean\n}\n\nexport const OrderSubmitLine: React.FC<IProps> = ({\n  onClick,\n  canSubmit = false,\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <div className=\"order__form__submit__line\">\n        <div className=\"order__form__submit__line__strip\" />\n        <PrimaryButton\n          className=\"order__form__submit__line__button\"\n          color=\"primary\"\n          size=\"md\"\n          onClick={onClick}\n          disabled={!canSubmit || order.isSubmitting}\n          data-testid=\"orderSubmitButton\"\n        >\n          <Desktop>\n            {order.isSubmitting ? (\n              <SubmitSpinner />\n            ) : (\n              i18n.t`Place order`.toLocaleUpperCase()\n            )}\n          </Desktop>\n          <Mobile>{i18n.t`Place order`.toLocaleUpperCase()}</Mobile>\n        </PrimaryButton>\n      </div>\n    )}\n  />\n)\n","import React from 'react'\nimport Spinner from 'react-spinkit'\nimport { withTheme } from 'styled-components'\n\nconst SubmitSpinner = props => (\n  <Spinner name=\"three-bounce\" color={props.theme.primary} fadeIn=\"none\" />\n)\n\nexport default withTheme(SubmitSpinner)\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\nimport { useRoot } from '../../common/WithRoot'\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <AlertModal isOpen={orderModel.isGoPayChecking} headerText=\"GoPay platba\">\n      <TextPadding>\n        <Trans>Checking your GoPay payment, please wait...</Trans>\n      </TextPadding>\n      <Pacman noMargin={true} />\n    </AlertModal>\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { QCartView } from '../../graph/types'\n\ninterface IProps {\n  order: QCartView.Order\n}\n\nexport const CartDiscounts: React.FC<IProps> = ({ order }) =>\n  order.discounts && order.discounts.length > 0 ? (\n    <div>\n      {order.discounts.map(\n        ({ code, description, price: { formattedValue } }) => (\n          <div key={code} className=\"cart__item__summary\">\n            <div className=\"cart__item__summary__label\">{description}</div>\n            <div className=\"cart__item__summary__price\">{formattedValue}</div>\n          </div>\n        ),\n      )}\n      <div className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">\n          <Trans>Total discount</Trans>\n        </div>\n        <div className=\"cart__item__summary__price\">\n          {order.totalDiscount.formattedValue}\n        </div>\n      </div>\n    </div>\n  ) : null\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface IButtonProps {\n  color: string\n  enabled?: boolean\n  data_testid?: string\n}\n\ninterface IIconProps {\n  icon: string\n}\n\ninterface IProps extends IButtonProps, IIconProps {\n  onClick?(): void\n}\n\nconst CartItemButtonStyled = styled.div<IButtonProps>`\n  display: inline-block;\n  border-radius: 3rem;\n  background: white;\n  width: 1.8rem;\n  height: 1.8rem;\n  text-align: left;\n  vertical-align: top;\n  padding: 0 0 0 0rem;\n  margin: 0.3rem 0.1rem 0 0.1rem;\n  ${getButtonColor};\n  ${getHoverStyle};\n`\n\nfunction getButtonColor({ color, enabled }: IButtonProps) {\n  const useColor = enabled ? color : '#8d8d8d'\n  return css`\n    color: ${useColor};\n    border: 2px solid ${useColor};\n  `\n}\n\nfunction getHoverStyle({ enabled }: IButtonProps) {\n  return enabled\n    ? css`\n        cursor: pointer;\n        &:hover {\n          background: #c9e8d7;\n          color: #1d1d1d;\n          border-color: #1d1d1d;\n        }\n      `\n    : css`\n        cursor: default;\n      `\n}\n\nconst CartItemButtonIcon = styled.span<IIconProps>`\n  &:before {\n    font-size: 0.8rem;\n    margin-left: 0.36rem;\n  }\n`\n\nexport const CartItemButton: React.FC<IProps> = ({\n  color,\n  icon,\n  onClick,\n  enabled = true,\n  data_testid,\n}) => {\n  return (\n    <CartItemButtonStyled\n      color={color}\n      enabled={enabled}\n      onClick={onClick}\n      onDoubleClick={ev => ev.preventDefault()}\n      data-testid={data_testid}\n    >\n      <CartItemButtonIcon icon={icon} className={`flaticon-${icon}`} />\n    </CartItemButtonStyled>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n  onClick(): void\n}\n\nexport const EditCartItemButton: React.FC<IProps> = ({\n  itemId,\n  onClick,\n  ...props\n}) => {\n  const button = <CartItemButton icon=\"edit\" color=\"#d9a700\" {...props} />\n  return props.enabled ? (\n    <Link\n      to={`/order/change/${itemId}`}\n      onClick={onClick}\n      data-testid={`editCartItemButton__${itemId}`}\n    >\n      {button}\n    </Link>\n  ) : (\n    button\n  )\n}\n","import React, { useRef } from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n}\n\nexport const RemoveCartItemButton: React.FC<IProps> = ({ itemId, enabled }) => {\n  const { order: orderModel } = useRoot()\n  const clickedRef = useRef(false)\n  return (\n    <CartItemButton\n      icon=\"delete\"\n      color=\"#99230e\"\n      enabled={enabled && !clickedRef.current}\n      data_testid={`removeCartItemButton`}\n      onClick={() => {\n        if (!clickedRef.current) {\n          orderModel.removeItemFromCart(itemId)\n        }\n        clickedRef.current = true\n      }}\n    />\n  )\n}\n","import './CartItem.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Desktop } from '../../common/Responsive'\nimport { FOrder } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { EditCartItemButton } from './EditCartItemButton'\nimport { RemoveCartItemButton } from './RemoveCartItemButton'\n\ninterface IProps {\n  item: FOrder.Items\n  isActive: boolean\n  onEdit(): void\n}\n\nconst EditButtonsContainerStyled = styled.div`\n  flex: 0 0 auto;\n`\n\nconst CartItemStyled = styled.div`\n  width: 100%;\n  min-height: 3rem;\n  color: #1d1d1d;\n  margin: 0 0 0.4rem 0;\n  padding: 0.2rem;\n  background: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'rgba(255, 255, 255, 0.8)'};\n  text-align: left;\n  display: flex;\n`\n\nexport const CartItem: React.FC<IProps> = ({ item, isActive, onEdit }) => (\n  <CartItemStyled isActive={isActive}>\n    <EditButtonsContainerStyled>\n      <RemoveCartItemButton itemId={item.id} enabled={!item.automatic} />\n\n      <Desktop>\n        <EditCartItemButton\n          itemId={item.id}\n          enabled={item.recipe.sideDishCount !== 0 && !item.automatic}\n          onClick={onEdit}\n        />\n      </Desktop>\n    </EditButtonsContainerStyled>\n\n    <div className=\"cart__item__description\">\n      <div\n        className=\"cart__item__item__name\"\n        data-testid={`cardItem__Name__${item.recipe.id}`}\n      >\n        {item.recipe.nameLabel}\n      </div>\n      <div\n        className=\"cart__item__item__side__dish\"\n        data-testid={`cardItem__SideDish__${item.recipe.id}`}\n      >\n        {item.sideDishes.length > 0\n          ? `+ ${item.sideDishes\n              .map(({ recipe }) => recipe.nameLabel)\n              .join(', ')}`\n          : item.recipe.sideDishCount > 0 && (\n              <span>{i18n.t`Without sidedish`.toLocaleLowerCase()}</span>\n            )}\n      </div>\n    </div>\n\n    <div\n      className=\"cart__item__item__price\"\n      data-testid={`cardItem__Price__${item.id}`}\n    >\n      {item.automatic ? i18n.t`For free` : item.price.formattedValue}\n    </div>\n  </CartItemStyled>\n)\n","import Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { QCartView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: QCartView.Order\n}\n\nconst CartItemSummaryTotalThemed = styled.div`\n  background: ${({ theme }) =>\n    Color(theme.primary)\n      .alpha(0.7)\n      .hsl()\n      .string()} !important;\n`\n\nexport const CartTotals: React.FC<IProps> = ({ order }) => (\n  <div>\n    {order.coverPrice && order.coverPrice.value ? (\n      <div key=\"casePrice\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Covers`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.coverPrice.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    {order.transportFee && order.transportFee.value ? (\n      <div key=\"transportFee\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Delivery`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.transportFee.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    <CartItemSummaryTotalThemed\n      key=\"totalPrice\"\n      className=\"cart__item__summary cart__item__summary__total\"\n    >\n      <div className=\"cart__item__summary__label\">{i18n.t`Total`}</div>\n      <div\n        className=\"cart__item__summary__price\"\n        data-testid={`cardItemSummary__Price`}\n      >\n        {order.totalSum.formattedValue}\n      </div>\n    </CartItemSummaryTotalThemed>\n  </div>\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { QCartView } from '../../graph/types'\nimport { CartDiscounts } from './CartDiscounts'\nimport { CartItem } from './CartItem'\nimport { CartTotals } from './CartTotals'\n\ninterface IProps {\n  order: QCartView.Order\n}\n\nexport const CartContents: React.FC<IProps> = ({ order }) => {\n  const { order: orderModel } = useRoot()\n\n  return useObserver(() => (\n    <div className=\"cart__items__container\">\n      <div className=\"cart__items__container__content\">\n        {order.items.map(item => (\n          <CartItem\n            key={item.id}\n            item={item}\n            isActive={orderModel.lastActiveRecipeId === item.recipe.id}\n            onEdit={() => orderModel.setUsedRecipeId(item.recipe.id)}\n          />\n        ))}\n        <CartDiscounts order={order} />\n        <CartTotals order={order} />\n      </div>\n    </div>\n  ))\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { i18n } from '../../i18n'\n\nconst CartIsEmptyThemed = styled.span`\n  color: ${({ theme }) => theme.secondary};\n`\n\nexport const CartIsEmpty = () => (\n  <CartIsEmptyThemed\n    className=\"cart__column__cart__empty__label\"\n    data-testid=\"cartIsEmpty\"\n  >\n    {`${i18n.t`Cart is empty`}...`}\n  </CartIsEmptyThemed>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForItem } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { OrderCartForItemQuery } from '../../models/OrderModel.graphql'\nimport { CartModal } from './CartModal'\n\nconst QueryCart = buildQuery<\n  GOrderCartForItem.Query,\n  GOrderCartForItem.Variables\n>(OrderCartForItemQuery)\n\nexport const ChangeCartModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return (\n    <Route\n      path=\"/order/change/:itemId\"\n      render={({ match, history }) => (\n        <QueryCart\n          variables={{ itemId: match.params.itemId }}\n          renderLoading={false}\n          renderError={() => (\n            <Alert color=\"warning\">\n              <Trans>Error in loading cart item. Issue was reported.</Trans>\n            </Alert>\n          )}\n          render={(data, { loading }) => (\n            <CartModal\n              recipe={data.item && data.item.recipe}\n              initialSelection={\n                data.item\n                  ? (data.item.sideDishes.map(\n                      RM.path(['recipe', 'id']),\n                    ) as string[])\n                  : []\n              }\n              onConfirm={sideDishes =>\n                orderModel.updateItem(match.params.itemId, sideDishes)\n              }\n              onClose={() => history.goBack()}\n              isLoading={loading}\n            />\n          )}\n        />\n      )}\n    />\n  )\n}\n","import './CartView.css'\n\nimport React from 'react'\n\nimport { useQCartView } from '../../graph/generated'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartContents } from './CartContents'\nimport { CartIsEmpty } from './CartIsEmpty'\nimport { ChangeCartModal } from './ChangeCartModal'\nimport { useCartRefresh } from './useCartRefresh'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const CartView: React.FC<IProps> = ({ orderId }) => {\n  const { data, loading, refetch } = useQCartView(\n    { orderId: orderId! },\n    {\n      skip: !orderId,\n    },\n  )\n\n  useCartRefresh(refetch)\n\n  return (\n    <>\n      <AddToCartModal />\n      <ChangeCartModal />\n      {loading || data.order.countWares === 0 ? (\n        <CartIsEmpty />\n      ) : (\n        <CartContents order={data.order} />\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Field, FieldProps } from 'react-form'\nimport { FormFeedback, Input, InputProps } from 'reactstrap'\n\ninterface IProps\n  extends Omit<FieldProps<string>, 'render' | 'children'>,\n    Omit<InputProps, 'defaultValue'> {\n  showFeedback?: boolean\n}\n\nexport const FormTextInput: React.FC<IProps> = ({\n  field,\n  validate,\n  showFeedback = false,\n  ...inputProps\n}) => (\n  <Field\n    field={field}\n    validate={validate}\n    render={fieldApi => (\n      <>\n        <Input\n          {...inputProps}\n          value={fieldApi.value}\n          onChange={e => fieldApi.setValue(e.target.value)}\n          onBlur={() => fieldApi.setTouched(true)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n        />\n        {showFeedback && <FormFeedback>{fieldApi.error}</FormFeedback>}\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nconst emailRx = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\nexport const OrderEmailInputValidator = value => {\n  const email = value.trim()\n  if (email === '') {\n    return i18n.t`E-mail is mandatory`\n  }\n  if (!emailRx.test(email)) {\n    return i18n.t`E-mail format is not valid`\n  }\n  return null\n}\n\nexport const OrderEmailInput: React.FC = () => (\n  <FormGroup>\n    <FormTextInput\n      field=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder=\"E-mail\"\n      showFeedback={true}\n      validate={OrderEmailInputValidator}\n      data-testid=\"orderEmailInput\"\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.FC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n        validate={value =>\n          value.trim() === '' ? i18n.t`First name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__FirstName\"\n      />\n      <FormTextInput\n        field=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n        validate={value =>\n          value.trim() === '' ? i18n.t`Last name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__LastName\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone is mandatory` : null\n\nexport const OrderPhonePrefixInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone prefix is mandatory` : null\n\nexport const OrderPhoneInput: React.FC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"phonePrefix\"\n        autoComplete=\"tel-country-code\"\n        placeholder=\"+\"\n        validate={OrderPhonePrefixInputValidator}\n      />\n      <FormTextInput\n        field=\"phone\"\n        type=\"tel\"\n        autoComplete=\"tel-national\"\n        placeholder={i18n.t`Phone`}\n        validate={OrderPhoneInputValidator}\n        style={{ width: '55%' }}\n        data-testid=\"orderPhoneInput__Phone\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import gql from 'graphql-tag'\nimport { FPromoCodeFragmentDoc } from '../../graph/generated'\n\nexport const OrderPromoCodesQuery = gql`\n  query GOrderPromoCodes($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      promoCodes {\n        ...FPromoCode\n      }\n    }\n  }\n  ${FPromoCodeFragmentDoc}\n`\n\nexport const AddOrderPromoMutation = gql`\n  mutation MAddOrderPromo($orderId: ID!, $code: String!) {\n    addOrderPromoCode(order: $orderId, promoCode: $code) {\n      userErrors: errors\n      order {\n        id\n        promoCodes {\n          ...FPromoCode\n        }\n      }\n    }\n  }\n  ${FPromoCodeFragmentDoc}\n`\n\nexport const RemoveOrderPromoMutation = gql`\n  mutation MRemoveOrderPromo($orderId: ID!, $codeId: ID!) {\n    removeOrderPromoCode(order: $orderId, promoCode: $codeId) {\n      id\n      promoCodes {\n        ...FPromoCode\n      }\n    }\n  }\n  ${FPromoCodeFragmentDoc}\n`\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { KeyboardEvent, useCallback, useRef, useState } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport {\n  FPromoCode,\n  GOrderPromoCodes,\n  MAddOrderPromo,\n  MRemoveOrderPromo,\n} from '../../graph/types'\nimport { useGuardedMutation } from '../../hooks/useGuardedMutation'\nimport { i18n } from '../../i18n'\nimport {\n  AddOrderPromoMutation,\n  OrderPromoCodesQuery,\n  RemoveOrderPromoMutation,\n} from './OrderPromoInput.graphql'\n\ntype TPromoCode = FPromoCode.Fragment\n\ninterface IProps {\n  codes: ReadonlyArray<TPromoCode>\n  onCodeAdd(codeInput: string): Promise<void>\n  onCodeRemove(codeId: ID): void\n  autoSubmitAfterTimeout?: number\n}\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport function OrderPromoInputUI({\n  codes,\n  onCodeAdd,\n  onCodeRemove,\n  autoSubmitAfterTimeout = 2000,\n}: IProps) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isValidating, setValidating] = useState(false)\n\n  const addCode = useCallback(\n    async () => {\n      if (!inputRef.current || inputRef.current.disabled) {\n        return\n      }\n      const code = inputRef.current.value.trim()\n      if (code.length === 0) {\n        return\n      }\n      setValidating(true)\n      inputRef.current.disabled = true\n      inputRef.current.value = i18n.t`Validating promo code ${code}...`\n      try {\n        await onCodeAdd(code)\n        if (inputRef.current) {\n          inputRef.current.value = ''\n        }\n      } catch (err) {\n        if (inputRef.current) {\n          inputRef.current.value = code\n        }\n      } finally {\n        setValidating(false)\n        if (inputRef.current) {\n          inputRef.current.disabled = false\n          inputRef.current.focus()\n        }\n      }\n    },\n    [onCodeAdd],\n  )\n\n  const onChange = useDebounceCallback(addCode, autoSubmitAfterTimeout)\n\n  const onKeyDown = useCallback((ev: KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === 'Enter') {\n      addCode()\n      ev.preventDefault()\n    }\n  }, [])\n\n  return (\n    <FormGroup>\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          disabled={isValidating}\n          placeholder={i18n.t`Promo codes`}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          onBlur={addCode}\n          onPaste={addCode}\n        />\n      </InputGroup>\n      <CodesPanel>\n        {codes.map(({ id, code }) => (\n          <SecondaryButton key={id} onClick={() => onCodeRemove(id)}>\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  )\n}\n\nconst OrderPromoInput: React.FC = () => {\n  const { order } = useRoot()\n\n  const { data } = useQuery<GOrderPromoCodes.Query, GOrderPromoCodes.Variables>(\n    OrderPromoCodesQuery,\n    {\n      suspend: false,\n      variables: { orderId: order.orderId! },\n    },\n  )\n\n  const addCodeMutation = useGuardedMutation<\n    MAddOrderPromo.Mutation,\n    MAddOrderPromo.Variables\n  >(AddOrderPromoMutation, { onUserErrors: order.submitFailed })\n\n  const onCodeAdd = useCallback(async (code: string) => {\n    if (!order.orderId) {\n      return\n    }\n    const result = await addCodeMutation({\n      orderId: order.orderId,\n      code,\n    })\n    order.setCartRefresh(true)\n    if (result && result.addOrderPromoCode.userErrors.length) {\n      order.submitFailed(result.addOrderPromoCode.userErrors)\n    }\n  }, [])\n\n  const removeCodeMutation = useGuardedMutation<\n    MRemoveOrderPromo.Mutation,\n    MRemoveOrderPromo.Variables\n  >(RemoveOrderPromoMutation, { onUserErrors: order.submitFailed })\n\n  const onCodeRemove = (codeId: ID) => {\n    if (order.orderId) {\n      order.setCartRefresh(true)\n      removeCodeMutation({ codeId, orderId: order.orderId })\n    }\n  }\n\n  return (\n    <OrderPromoInputUI\n      codes={data && data.order ? data.order.promoCodes : []}\n      onCodeAdd={onCodeAdd}\n      onCodeRemove={onCodeRemove}\n    />\n  )\n}\n\nexport default OrderPromoInput\n","import './OrderPaymentMethod.css'\n\nimport { DateFormat, Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\n\nexport const OrderTimeButtons: React.FC = () => {\n  const { order } = useRoot()\n\n  return useObserver(() => {\n    if (!order.delayedOrderEnabled) {\n      return null\n    }\n    return (\n      <div className=\"order__payment__method\">\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonNow\"\n          selected={order.deliverAt === undefined}\n          onClick={() => order.setDeliverAt(undefined)}\n        >\n          <Trans>When possible</Trans>\n        </SelectButtonThemed>\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonLater\"\n          selected={order.deliverAt !== undefined}\n          onClick={order.openTimePicker}\n        >\n          {order.deliverAt ? (\n            <DateFormat\n              value={order.deliverAt}\n              format={{ weekday: 'long', hour: 'numeric', minute: 'numeric' }}\n            />\n          ) : (\n            <Trans>Choose time</Trans>\n          )}\n        </SelectButtonThemed>\n      </div>\n    )\n  })\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\nimport OrderPromoInput from './OrderPromoInput'\nimport { OrderTimeButtons } from './OrderTimeButtons'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n    <OrderTimeButtons />\n    <OrderPromoInput />\n  </>\n)\n","import './CategoryNavigator.css'\n\nimport classNames from 'classnames'\nimport React, { useState } from 'react'\nimport Scroll from 'react-scroll'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenuCategory.Fragment>\n}\n\nconst CategoryNavigatorContainer = styled.div`\n  background-color: #d4d4d4;\n  border-top-left-radius: 0.6rem;\n  padding: 0.7rem 0.5rem 0 0.2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  user-select: none;\n  display: flex;\n  ${mediaDesktop`\n    flex-wrap: wrap;\n  `}\n  ${mediaMobile`\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    box-shadow: inset -15px -5px 15px -14px rgba(0, 0, 0, 0.6);\n    margin: 0;\n    border-top-left-radius: 0;\n    background-color: #f3f3f3;\n    opacity: 0.94;\n  `}\n`\n\nconst CategoryNavigator: React.FC<IProps> = ({ categories }) => {\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0)\n  return (\n    <CategoryNavigatorContainer>\n      {categories.length === 0\n        ? null\n        : categories.map((category, idx) => (\n            <Scroll.Link\n              to={category.nameLabel}\n              key={category.id}\n              className={classNames('category__navigator__scroll__link', {\n                active: activeCategoryIndex === idx,\n              })}\n              onSetActive={() => setActiveCategoryIndex(idx)}\n              offset={-168}\n              smooth={true}\n              spy={true}\n              data-testid={`categoryNavigatorScrollLink__${category.id}`}\n            >\n              <div className=\"category__navigator__scroll__link__circle\">\n                <span className={`flaticon-${category.pictogram}`} />\n              </div>\n              <div className=\"category__navigator__scroll__link__description\">\n                <Truncate lines={2}>{category.nameLabel}</Truncate>\n              </div>\n            </Scroll.Link>\n          ))}\n    </CategoryNavigatorContainer>\n  )\n}\n\nexport default CategoryNavigator\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\nimport { FoodInCart } from './types'\n\ninterface IProps {\n  category: GFoodMenuCategory.Fragment\n  foodInCart?: FoodInCart\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.FC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default FoodCategory\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { WithRoot } from '../../common/WithRoot'\n\nimport { Mobile } from '../../common/Responsive'\n\ninterface IProps {\n  recipeId: string\n  canAddToCart: boolean\n  hasSidedish: boolean\n  onClick(): void\n}\n\nconst LinkStyled = styled(Link)`\n  color: inherit;\n  &:visited div {\n    border: inherit;\n  }\n`\n\nexport const LinkToCart: React.FC<IProps> = ({\n  recipeId,\n  hasSidedish,\n  canAddToCart,\n  onClick,\n  children,\n}) => {\n  if (!canAddToCart) {\n    return <div onClick={onClick}>{children}</div>\n  }\n  if (hasSidedish) {\n    return (\n      <LinkStyled to={{ pathname: `/order/add/${recipeId}` }} onClick={onClick}>\n        {children}\n      </LinkStyled>\n    )\n  }\n  return (\n    <WithRoot\n      render={({ order }) => (\n        <Mobile>\n          {isMobile => (\n            <div\n              onClick={() => {\n                onClick()\n                isMobile\n                  ? order.addFromRecipeMobile(recipeId)\n                  : order.addFromRecipe(recipeId)\n              }}\n            >\n              {children}\n            </div>\n          )}\n        </Mobile>\n      )}\n    />\n  )\n}\n","import './FoodMenuItem.css'\n\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { GFoodMenuRecipe } from '../../graph/types'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { LinkToCart } from './LinkToCart'\n\ninterface IProps {\n  recipe: GFoodMenuRecipe.Fragment\n  inCart: number\n  isActive: boolean\n  onClick(): void\n  onPrefetch(): void\n  canAddToCart: boolean\n}\n\nconst FoodMenuItemStyled = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  position: relative;\n  min-height: 6rem;\n  &:hover {\n    background-color: #c9e8d7;\n  }\n  background-color: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'white'};\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItemCount = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n  float: left;\n  position: absolute;\n  left: -1.2rem;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  border-radius: 1.8rem;\n  font-size: 0.9rem;\n  ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n`\n\nconst FoodMenuItem: React.FC<IProps> = ({\n  recipe,\n  inCart,\n  onPrefetch,\n  isActive,\n  onClick,\n  canAddToCart,\n}) => (\n  <LinkToCart\n    recipeId={recipe.id}\n    hasSidedish={recipe.sideDishCount > 0}\n    canAddToCart={canAddToCart}\n    onClick={onClick}\n    data-testid={`foodMenuItem__${recipe.id}`}\n  >\n    <FoodMenuItemStyled onMouseEnter={onPrefetch} isActive={isActive}>\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {inCart > 0 ? <FoodMenuItemCount>{`${inCart}x`}</FoodMenuItemCount> : ''}\n      <h4>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </FoodMenuItemStyled>\n  </LinkToCart>\n)\n\nexport default FoodMenuItem\n","import { Trans } from '@lingui/macro'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenu } from '../../graph/types'\nimport { TRootModel } from '../../models/RootModel'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenu.WareCategories>\n  inCart: { [recipeId: string]: number }\n  orderItemCount: number\n  shouldUpdate: boolean\n  rootModel: TRootModel\n}\n\nconst FoodMenuStyled = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n`\n\nconst FoodMenuListStyled = styled.div`\n  ${mediaDesktop`\n    margin: 0 1.4rem 1rem 1.6rem;\n    padding: 2rem 0 2rem 0;\n  `};\n  ${mediaMobile`\n    margin: 0 0.7rem 1rem 0.7rem;\n    padding: 0 0 4rem 0;\n  `};\n`\n\nexport class FoodMenu extends React.Component<IProps> {\n  shouldComponentUpdate({ shouldUpdate }: IProps) {\n    return shouldUpdate\n  }\n  orderLimitReached() {\n    const {\n      orderItemCount,\n      rootModel: { config },\n    } = this.props\n    return orderItemCount >= config.orderItemsMax\n  }\n  render() {\n    const {\n      categories,\n      inCart,\n      rootModel: { order, user },\n    } = this.props\n    const canAddToCart = !this.orderLimitReached()\n    return (\n      <FoodMenuStyled>\n        <FoodMenuListStyled>\n          {categories.length === 0 ? (\n            <h3>\n              <Trans>Food menu is empty. We are sorry.</Trans>\n            </h3>\n          ) : (\n            <Observer>\n              {() =>\n                categories.map(category => (\n                  <FoodCategory key={category.id} category={category}>\n                    {category.recipes.map(recipe => (\n                      <FoodMenuItem\n                        key={recipe.id}\n                        recipe={recipe}\n                        inCart={inCart[recipe.id] || 0}\n                        isActive={order.lastActiveRecipeId === recipe.id}\n                        canAddToCart={canAddToCart}\n                        onClick={() => {\n                          if (canAddToCart) {\n                            order.setUsedRecipeId(recipe.id)\n                          } else {\n                            user.showOrderLimit()\n                          }\n                        }}\n                        onPrefetch={() => {\n                          if (recipe.sideDishCount > 0) {\n                            order.prefetchFood(recipe.id)\n                          }\n                        }}\n                      />\n                    ))}\n                  </FoodCategory>\n                ))\n              }\n            </Observer>\n          )}\n        </FoodMenuListStyled>\n      </FoodMenuStyled>\n    )\n  }\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GCartPresence } from '../../graph/types'\nimport CategoryNavigator from './CategoryNavigator'\nimport { FoodMenu } from './FoodMenu'\nimport {\n  QueryFoodMenu,\n  QueryFoodMenuCartPresence,\n} from './FoodMenuView.graphql'\nimport { OrderLimitModal } from './OrderLimitModal'\n\nexport const FoodMenuView: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <QueryFoodMenu\n      skip={!orderModel.branchId}\n      variables={{\n        branchId: orderModel.branchId!,\n      }}\n      render={({ wareCategories }) => (\n        <>\n          <OrderLimitModal />\n          <CategoryNavigator categories={wareCategories} />\n          <QueryFoodMenuCartPresence\n            variables={{ orderId: orderModel.orderId! }}\n            renderLoading={false}\n            render={({ order }, { loading }) => (\n              <FoodMenu\n                categories={wareCategories}\n                rootModel={orderModel.root}\n                inCart={getCartPresence(order && order.items)}\n                orderItemCount={order ? order.items.length : 0}\n                shouldUpdate={Boolean(order && !loading)}\n              />\n            )}\n          />\n        </>\n      )}\n    />\n  ))\n}\n\nfunction getCartPresence(items: ReadonlyArray<GCartPresence.Items>) {\n  if (!items) {\n    return {}\n  }\n  return items.reduce((result, item) => {\n    const recipeId = item.recipe.id\n    if (!result[recipeId]) {\n      result[recipeId] = 0\n    }\n    result[recipeId] += 1\n    return result\n  }, {})\n}\n","import React from 'react'\nimport { InputGroupAddon } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  isVisible: boolean\n  onClick(): void\n}\n\nconst Container = styled.span`\n  color: ${({ theme }) => theme.secondary};\n  cursor: pointer;\n  position: absolute;\n  right: 0.4rem;\n  top: 0.15rem;\n`\n\nexport const GeolocationButton: React.FC<IProps> = ({\n  onClick,\n  isVisible = false,\n}) =>\n  isVisible ? (\n    <Container>\n      <InputGroupAddon addonType=\"append\" onClick={onClick}>\n        <span className=\"flaticon-gps\" />\n      </InputGroupAddon>\n    </Container>\n  ) : null\n\nexport default GeolocationButton\n","import React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.FC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  if (isResolving) {\n    return (\n      <div className=\"address__input__box__resolved wait\">\n        <Spinner name=\"ball-beat\" fadeIn=\"none\" />\n      </div>\n    )\n  }\n  if (!isVisible) {\n    return null\n  }\n  return (\n    <div className=\"address__input__box__resolved\" onClick={onValidClick}>\n      {address}\n    </div>\n  )\n}\n\nexport default ResolvedAddress\n","import classnames from 'classnames'\nimport debounce from 'debounce'\nimport React, { Component } from 'react'\nimport { Input, InputProps } from 'reactstrap'\n\ninterface IProps {\n  onSearch(search: string): void\n  isVisible: boolean\n  isSearching: boolean\n  inputProps: InputProps\n}\n\ninterface IState {\n  value: string\n}\n\nclass SearchInput extends Component<IProps, IState> {\n  state = { value: '' }\n  componentDidMount() {\n    this.setFocus()\n  }\n  componentDidUpdate(nextProps: IProps) {\n    if (nextProps.isVisible !== this.props.isVisible) {\n      this.setFocus()\n    }\n  }\n  onSearch = debounce(this.props.onSearch, 2000)\n  onChange = ev => {\n    const value = ev.target.value || ''\n    this.setState({ value })\n    this.onSearch(value.trim())\n  }\n  onKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      this.onSearch.clear()\n      this.props.onSearch(this.state.value.trim())\n    }\n  }\n  inputRef: Maybe<HTMLInputElement> = null\n  onInputMount = (ref: HTMLInputElement) => {\n    this.inputRef = ref\n  }\n  isVisible() {\n    return this.props.isVisible !== false\n  }\n  isSearching() {\n    return this.props.isSearching !== false\n  }\n  setFocus() {\n    if (this.isVisible() && this.inputRef !== null) {\n      this.inputRef.focus()\n    }\n  }\n  render() {\n    const { inputProps } = this.props\n    const isHidden = !this.isVisible() || this.isSearching()\n    return (\n      <Input\n        className={classnames({ address__input__hidden: isHidden })}\n        onChange={this.onChange}\n        onKeyPress={this.onKeyPress}\n        value={this.state.value}\n        innerRef={this.onInputMount}\n        autoFocus={true}\n        {...inputProps}\n      />\n    )\n  }\n}\n\nexport default SearchInput\n","import './AddressInput.css'\n\nimport { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TLocationModel } from '../../models/LocationModel'\nimport GeolocationButton from './GeolocationButton'\nimport ResolvedAddress from './ResolvedAddress'\nimport SearchInput from './SearchInput'\n\nconst AddressInputStyled = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n`\n\nconst AddressInputBoxStyled = styled.div`\n  border-radius: 1rem;\n  border: 1px solid #d4d4d4;\n  background-color: white;\n  height: 2.3rem;\n  overflow: hidden;\n  & input {\n    margin: 0.2rem 2rem 0.5rem 0.7rem;\n    background: transparent;\n    border: none;\n  }\n`\n\nexport const AddressInput: React.FC = () => {\n  const { location } = useRoot()\n  return useObserver(() => (\n    <AddressInputStyled>\n      <AddressInputBoxStyled>\n        <InputGroup size=\"sm\">\n          <ResolvedAddress\n            address={location.address || ''}\n            isVisible={location.hasAddress}\n            isResolving={location.isResolving}\n            onValidClick={location.clearAddress}\n          />\n          <SearchInput\n            inputProps={{\n              placeholder: i18n.t`Type address or choose it from map`,\n              autoComplete: 'shipping street-address',\n            }}\n            onSearch={location.withUserAddress}\n            isVisible={!location.hasAddress}\n            isSearching={location.isResolving}\n          />\n          <GeolocationButton\n            onClick={location.attemptGeolocation}\n            isVisible={location.isGeolocationAvailable && !location.isResolving}\n          />\n        </InputGroup>\n      </AddressInputBoxStyled>\n      {location.hasFinishedSearch ? renderErrorMessage(location) : null}\n    </AddressInputStyled>\n  ))\n}\n\nconst NoMouseAlert = styled(Alert)`\n  pointer-events: none;\n`\n\nfunction renderErrorMessage(location: TLocationModel) {\n  if (location.isResolved === false) {\n    return (\n      <NoMouseAlert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </NoMouseAlert>\n    )\n  }\n  return null\n}\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n  onPrefetch(): void\n}\n\nexport const AddressSubmit: React.FC<IProps> = ({\n  enabled,\n  onClick,\n  onPrefetch,\n}) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      onMouseEnter={() => {\n        if (enabled) {\n          onPrefetch()\n        }\n      }}\n    >\n      {i18n.t`Confirm address`.toLocaleUpperCase()}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import { useFullComputed } from '@speedlo/hooks'\nimport { reaction } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { useGInitialLocation } from '../../graph/generated'\nimport { GeoPoint } from '../../helpers/gps'\nimport { logMap } from '../../helpers/logger'\nimport { MapPanning } from './atoms/MapPanning'\n\nexport const DeliveryMapPanning: React.FC = () => {\n  const { location, map } = useRoot()\n  const { data } = useGInitialLocation()\n\n  useDisposable(() =>\n    reaction(\n      () => map.clickPoint,\n      clickPoint => {\n        if (clickPoint) {\n          location.withUserLocation(clickPoint)\n          map.clearClickPoint()\n        }\n      },\n    ),\n  )\n\n  const panToGps = useFullComputed(\n    () => {\n      if (location.geoPoint) {\n        logMap('pan to user location', location.geoPoint)\n        return location.geoPoint\n      } else if (location.geolocationPoint) {\n        logMap('pan to geolocation', location.geolocationPoint)\n        return location.geolocationPoint\n      } else if (data && data.initialLocation) {\n        logMap('pan to initial location', data.initialLocation.gpsCoordinates)\n        return data.initialLocation.gpsCoordinates as GeoPoint\n      }\n      logMap('no pan location available')\n      return\n    },\n    [data],\n  )\n\n  return useObserver(() => <MapPanning gps={panToGps.get()} map={map} />)\n}\n","import './DeliveryMap.css'\n\nimport { when } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport { Marker } from 'react-google-maps'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { latLngToGps } from '../../helpers/gps'\nimport { AddressInput } from '../destination/AddressInput'\nimport { AddressSubmit } from './AddressSubmit'\nimport { DeliveryMapPanning } from './DeliveryMapPanning'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const DeliveryMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { business, order, location } = useRoot()\n\n  const onSubmit = useCallback(\n    async () => {\n      if (location.branchId) {\n        order.setBranch(location.branchId)\n      }\n      await order.createDeliveryOrder()\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  useDisposable(() =>\n    when(() => business.isValid, location.validateUserLocation),\n  )\n\n  return useObserver(() => (\n    <>\n      <DeliveryMapPanning />\n      {location.latLng ? (\n        <Marker\n          position={location.latLng}\n          defaultDraggable={true}\n          onDragEnd={({ latLng }) => {\n            location.withUserLocation(latLngToGps(latLng))\n          }}\n        />\n      ) : null}\n      <div className=\"delivery__map__address\">\n        <AddressInput />\n      </div>\n      <div className=\"delivery__map__submit\">\n        <AddressSubmit\n          enabled={location.isDeliveryAddress}\n          onClick={onSubmit}\n          onPrefetch={() => {\n            if (location.branchId) {\n              order.prefetchFoodMenu(location.branchId)\n            }\n          }}\n        />\n      </div>\n    </>\n  ))\n}\n","import {\n  addMinutes,\n  endOfMinute,\n  getMinutes,\n  startOfMinute,\n  subMinutes,\n} from 'date-fns'\n\nexport function createTimeSteps(start: Date, end: Date, minuteStep: number) {\n  let current = startOfMinute(timeClampUp(start, minuteStep))\n  const steps: Date[] = []\n  const endMinute = endOfMinute(subMinutes(end, 1))\n  do {\n    steps.push(current)\n    current = addMinutes(current, minuteStep)\n  } while (current <= endMinute)\n  return steps\n}\n\nexport function timeClampUp(time: Date, minuteStep: number) {\n  return addMinutes(timeClampDown(time, minuteStep), minuteStep)\n}\n\nexport function timeClampDown(time: Date, minuteStep: number) {\n  return subMinutes(time, getMinutes(time) % minuteStep)\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { formatTime } from '../../helpers/formats'\n\ninterface IProps extends ButtonProps {\n  time: Date\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Time = styled.div`\n  font-size: 1.2rem;\n`\n\nexport const TimePickerButton: React.FC<IProps> = ({\n  time,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"10rem\"\n    data-testid={`timePickerButton__${time.getTime()}`}\n    {...buttonProps}\n  >\n    <Time>{formatTime(time)}</Time>\n  </PickerButton>\n)\n","import { DateFormat } from '@lingui/macro'\nimport {\n  closestIndexTo,\n  eachDayOfInterval,\n  isEqual,\n  startOfDay,\n} from 'date-fns'\nimport { isWithinInterval } from 'date-fns/fp'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components'\n\nimport { createTimeSteps } from './createTimeSteps'\nimport { TimePickerButton } from './TimePickerButton'\n\ninterface IProps {\n  minDate: Date\n  maxDate: Date\n  minuteStep: number\n  onStepChange(step: Date): void\n  initialTime?: Date\n  filterIntervals?: Interval[]\n}\n\nconst TimePickerContainer = styled.div`\n  margin-top: 1rem;\n`\n\nconst TimePickerDay = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: left;\n  margin: 0 0 0.2rem 0.2rem;\n`\n\nexport const TimePicker: React.FC<IProps> = ({\n  minDate,\n  maxDate,\n  minuteStep,\n  onStepChange,\n  initialTime,\n  filterIntervals = [],\n}) => {\n  const steps = React.useMemo(\n    () => {\n      const allSteps = createTimeSteps(minDate, maxDate, minuteStep)\n      if (filterIntervals.length) {\n        return allSteps.filter(step =>\n          filterIntervals.some(isWithinInterval(step)),\n        )\n      }\n      return allSteps\n    },\n    [minDate, maxDate, minuteStep, filterIntervals],\n  )\n\n  const days = React.useMemo(\n    () => {\n      return eachDayOfInterval({ start: minDate, end: maxDate })\n    },\n    [minDate, maxDate],\n  )\n\n  const [stepIdx, setStepIdx] = React.useState(0)\n\n  React.useEffect(\n    () => {\n      if (initialTime) {\n        setStepIdx(closestIndexTo(initialTime, steps))\n      }\n    },\n    [initialTime],\n  )\n\n  React.useEffect(() => {\n    onStepChange(steps[stepIdx])\n  }, [])\n\n  return (\n    <TimePickerContainer>\n      {days.map(day => (\n        <Fragment key={day.getDate()}>\n          <TimePickerDay>\n            <DateFormat\n              value={day}\n              format={{ month: 'long', day: 'numeric', weekday: 'long' }}\n            />\n          </TimePickerDay>\n          {steps.map((step, idx) =>\n            isEqual(day, startOfDay(step)) ? (\n              <TimePickerButton\n                key={step.getTime()}\n                time={step}\n                isSelected={idx === stepIdx}\n                canBeSelected={true}\n                onClick={() => {\n                  setStepIdx(idx)\n                  onStepChange(step)\n                }}\n              />\n            ) : null,\n          )}\n        </Fragment>\n      ))}\n    </TimePickerContainer>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const OrderTimePickerQuery = gql`\n  query GOrderTimePicker($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      isOpen\n      businessHours: businessHoursIntervals {\n        openAt\n        closeAt\n        closed\n      }\n      defaultDeliveryTime\n      defaultPickupTime\n      willOpenAt\n      willCloseAt\n      delayedDeliveryEnabled\n    }\n  }\n`\n\nexport const UpdateOrderDeliveryTimeMutation = gql`\n  mutation MUpdateOrderDeliveryTime($orderId: ID!, $deliverAt: DateTime) {\n    updateOrder(id: $orderId, order: { deliverAt: $deliverAt }) {\n      ...FOrder\n    }\n  }\n`\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { isoDate } from '@speedlo/graphql'\nimport { addMinutes, isAfter } from 'date-fns'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport { GOrderTimePicker, MUpdateOrderDeliveryTime } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { useGuardedMutation } from '../../hooks/useGuardedMutation'\nimport { i18n } from '../../i18n'\nimport { TimePicker } from '../timePicker/TimePicker'\nimport {\n  OrderTimePickerQuery,\n  UpdateOrderDeliveryTimeMutation,\n} from './OrderTimePicker.graphql'\n\nexport const OrderTimePicker: React.FC = () => {\n  const { order } = useRoot()\n\n  const { data, loading } = useQuery<\n    GOrderTimePicker.Query,\n    GOrderTimePicker.Variables\n  >(OrderTimePickerQuery, {\n    variables: { branchId: order.branchId! },\n    suspend: false,\n  })\n\n  const updateOrder = useGuardedMutation<\n    {},\n    MUpdateOrderDeliveryTime.Variables\n  >(UpdateOrderDeliveryTimeMutation, { onUserErrors: order.submitFailed })\n\n  const selectedTime = React.useRef<Date | undefined>(order.deliverAt)\n  const onConfirmAndClose = () => {\n    const time = selectedTime.current\n    updateOrder({\n      orderId: order.orderId!,\n      deliverAt: time && isoDate(time),\n    })\n    order.setDeliverAt(time)\n    order.closeTimePicker()\n  }\n\n  const getStartTime = () => {\n    const { companyBranch } = data!\n    const openAt =\n      companyBranch.isOpen || !companyBranch.willOpenAt\n        ? new Date()\n        : new Date(companyBranch.willOpenAt)\n    return openAt\n  }\n\n  const getEndTime = () => {\n    const { companyBranch } = data!\n    if (companyBranch.isOpen && companyBranch.willCloseAt) {\n      return new Date(companyBranch.willCloseAt)\n    }\n    const nextBusinessHour = companyBranch.businessHours.find(\n      RM.propEq('closed', false),\n    )\n    return nextBusinessHour ? new Date(nextBusinessHour.closeAt) : null\n  }\n\n  const getFilterIntervals = (): Interval[] => {\n    const { companyBranch } = data!\n    return companyBranch.businessHours\n      .filter(RM.propEq('closed', true))\n      .map(bhour => ({\n        start: new Date(bhour.openAt),\n        end: new Date(bhour.closeAt),\n      }))\n  }\n\n  const getMinuteOffset = () => {\n    const { defaultDeliveryTime, defaultPickupTime } = data!.companyBranch\n\n    if (order.usingDeliveryOrderMethod) {\n      return defaultDeliveryTime\n    }\n    if (order.usingPickupOrderMethod) {\n      return defaultPickupTime\n    }\n\n    return 0\n  }\n\n  const renderModalContent = () => {\n    if (loading || !data) {\n      return null\n    }\n\n    const minDate = getStartTime()\n    const maxDate = getEndTime()\n    if (maxDate === null || isAfter(minDate, maxDate)) {\n      return (\n        <Trans>\n          It's not possible to pick a specific order time at this moment.\n        </Trans>\n      )\n    }\n\n    const minuteOffset = getMinuteOffset()\n\n    return (\n      <TimePicker\n        minuteStep={15}\n        minDate={addMinutes(minDate, minuteOffset)}\n        maxDate={addMinutes(maxDate, minuteOffset)}\n        initialTime={selectedTime.current}\n        filterIntervals={getFilterIntervals()}\n        onStepChange={time => (selectedTime.current = time)}\n      />\n    )\n  }\n\n  React.useEffect(\n    () => {\n      if (\n        data &&\n        data.companyBranch &&\n        data.companyBranch.delayedDeliveryEnabled\n      ) {\n        order.enableDelayedOrder()\n      }\n    },\n    [data],\n  )\n\n  const header = order.usingDeliveryOrderMethod\n    ? i18n.t`Deliver at what time?`\n    : i18n.t`When you will pickup the order?`\n\n  return useObserver(() => (\n    <Modal\n      isOpen={order.timePickerOpen}\n      toggle={order.closeTimePicker}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader\n        toggle={order.closeTimePicker}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>{header}</span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderModalContent()}</div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <PrimaryButton\n            onClick={onConfirmAndClose}\n            size=\"md\"\n            className=\"modal__body__button\"\n          >\n            {i18n.t`Confirm time`.toLocaleUpperCase()}\n          </PrimaryButton>\n        </div>\n      </ModalBody>\n    </Modal>\n  ))\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { GCartRecipe } from '../../graph/types'\n\ninterface IProps extends ButtonProps {\n  sidedish: GCartRecipe.SideDishes\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Name = styled.div`\n  float: left;\n  text-align: left;\n  white-space: normal;\n  max-width: 13rem;\n`\n\nconst Price = styled.div`\n  font-weight: bold;\n  float: right;\n`\n\nexport const SidedishCheckbox: React.FC<IProps> = ({\n  sidedish,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"17.5rem\"\n    data-testid={`sidedishCheckbox__${sidedish.id}`}\n    {...buttonProps}\n  >\n    <Name>{sidedish.nameLabel}</Name>\n    <Price>{sidedish.price.formattedValue}</Price>\n  </PickerButton>\n)\n","import './SidedishPicker.css'\n\nimport { Observer } from 'mobx-react'\nimport React, { Fragment } from 'react'\n\nimport { GCartRecipe } from '../../graph/types'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment\n  selection: ReadonlyArray<ID>\n  onToggle(item: ID): void\n}\n\nexport const SidedishPicker: React.FC<IProps> = ({\n  recipe,\n  selection,\n  onToggle,\n}) => (\n  <Observer>\n    {() => (\n      <div className=\"food__sidedish__picker\">\n        {recipe.categories.map(category => (\n          <Fragment key={category.id}>\n            <div className=\"food__sidedish__picker__category\">\n              {category.nameLabel}{' '}\n              {/* <CategoryValidationMessage\n                minCount={category.minCount}\n                maxCount={category.maxCount}\n              /> */}\n            </div>\n            {category.sideDishes.map(sidedish => (\n              <SidedishCheckbox\n                key={`${sidedish.id}-${category.id}`}\n                sidedish={sidedish}\n                isSelected={selection.includes(sidedish.id)}\n                canBeSelected={true}\n                onClick={() => onToggle(sidedish.id)}\n              />\n            ))}\n          </Fragment>\n        ))}\n      </div>\n    )}\n  </Observer>\n)\n","import { observable } from 'mobx'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ID[]\n  onConfirm(): Promise<void>\n  enabled: boolean\n}\n\nexport const CartOrderButton: React.FC<IProps> = ({ selection, onConfirm }) => {\n  const isConfirming = observable.box(false)\n\n  return (\n    <Observer>\n      {() => (\n        <PrimaryButton\n          className=\"modal__body__button\"\n          disabled={isConfirming.get()} /*!cartFood.isValid*/\n          data-testid=\"cartOrderButton\"\n          onClick={async () => {\n            isConfirming.set(true)\n            await onConfirm()\n            isConfirming.set(false)\n          }}\n        >\n          {i18n\n            .plural({\n              value: selection.length,\n              0: 'Order without sidedish',\n              one: 'Order with this sidedish',\n              other: 'Order with # sidedishes',\n            })\n            .toLocaleUpperCase()}\n        </PrimaryButton>\n      )}\n    </Observer>\n  )\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { observable } from 'mobx'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { GCartRecipe } from '../../graph/types'\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment | undefined\n  initialSelection?: ID[]\n  isLoading: boolean\n  onConfirm(selection: ID[]): Promise<void>\n  onClose(): void\n}\n\nexport const CartModal: React.FC<IProps> = ({\n  recipe,\n  initialSelection = [],\n  onConfirm,\n  onClose,\n  isLoading,\n}) => {\n  const selection = observable.array<ID>(initialSelection)\n\n  const onConfirmAndClose = async () => {\n    await onConfirm(Array.from(selection))\n    onClose()\n  }\n\n  const onToggleSidedish = (sidedishId: ID) => {\n    if (selection.includes(sidedishId)) {\n      selection.remove(sidedishId)\n    } else {\n      selection.push(sidedishId)\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={true}\n      toggle={onClose}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader toggle={onClose} tag={Container} className=\"modal__header\">\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {isLoading || !recipe ? null : (\n            <>\n              <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n              <span className=\"modal__body__food_description\">\n                {recipe.descriptionLabel}\n              </span>\n              <SidedishPicker\n                recipe={recipe}\n                selection={selection}\n                onToggle={onToggleSidedish}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n            enabled={!isLoading}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  field: FieldType\n  defaultValue?: boolean\n  validate?(value: boolean): string | null\n}\n\nconst CheckboxContainerStyled = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n`\n\nconst CheckboxStyled = styled(Input)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: white;\n  border: 1px solid;\n  border-color: ${({ invalid }: { invalid: boolean }) =>\n    invalid ? 'red' : '#c5c5c5'};\n  width: 2rem;\n  height: 2rem;\n  min-width: 2rem;\n  border-radius: 0.25rem;\n  position: relative;\n  margin: 0;\n  outline: none;\n  &:checked {\n    background-color: white;\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: #1d1d1d;\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  margin: 0 0 0 0.8rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.FC<IProps> = ({\n  field,\n  defaultValue = false,\n  validate,\n  children,\n  ...props\n}) => (\n  <Field field={field} defaultValue={defaultValue} validate={validate}>\n    {fieldApi => (\n      <CheckboxContainerStyled>\n        <CheckboxStyled\n          type=\"checkbox\"\n          value={fieldApi.value}\n          onChange={checked => fieldApi.setValue(checked.target.checked)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n          {...props}\n        />\n        <LabelStyled>{children}</LabelStyled>\n      </CheckboxContainerStyled>\n    )}\n  </Field>\n)\n","import { observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useRef } from 'react'\nimport { Button, Collapse } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../common/FormInputCheckbox'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TAgreement } from '../../models/OrderModel'\n\nconst ButtonStyled = styled(Button)`\n  padding: 0 0.5rem;\n  font-size: 0.8rem;\n  color: darkgray;\n`\n\nconst GdprAgreementStyled = styled.div`\n  font-size: 0.8rem !important;\n  color: darkgray;\n  margin: 0.5rem 0 0.5rem 0;\n  & .row {\n    margin: 0;\n  }\n`\n\nconst hideConfirmed = (agreement: TAgreement) => {\n  if (agreement.isConfirmed) {\n    // it's necessary to hide confirmed agreements like this\n    // because react-form already has validation errors stored\n    // for mandatory ones and is unable to forget it by not rendering field\n    return { style: { display: 'none' } }\n  }\n  return {}\n}\n\nexport const OrderAgreements: React.FC = () => {\n  const descOpen = useRef(observable.array<ID>([])).current\n  const toggleId = useCallback(\n    (id: ID) => () => {\n      if (descOpen.includes(id)) {\n        descOpen.remove(id)\n      } else {\n        descOpen.push(id)\n      }\n    },\n    [],\n  )\n  const { order } = useRoot()\n  return useObserver(() => (\n    <>\n      {order.agreements.map((agreement, idx) => (\n        <div key={agreement.id} {...hideConfirmed(agreement)}>\n          <FormInputCheckbox\n            field={['agreements', idx, 'isConfirmed']}\n            validate={checked =>\n              agreement.isMandatory && !(agreement.isConfirmed || checked)\n                ? 'Agreement is mandatory'\n                : null\n            }\n            data-testid={`orderAgreement__Check__${agreement.id}`}\n          >\n            <span dangerouslySetInnerHTML={{ __html: agreement.name }} />\n            {agreement.isMandatory && ' * '}\n            {agreement.description && (\n              <>\n                <ButtonStyled\n                  color=\"link\"\n                  onClick={toggleId(agreement.id)}\n                  data-testid={`orderAgreement__MoreButton__${agreement.id}`}\n                >\n                  {descOpen.includes(agreement.id)\n                    ? i18n.t`Less`.toLocaleLowerCase()\n                    : i18n.t`More...`.toLocaleLowerCase()}\n                </ButtonStyled>\n                <Collapse isOpen={descOpen.includes(agreement.id)}>\n                  <GdprAgreementStyled\n                    data-testid={`orderAgreement__Info__${agreement.id}`}\n                    dangerouslySetInnerHTML={{\n                      __html: agreement.description,\n                    }}\n                  />\n                </Collapse>\n              </>\n            )}\n          </FormInputCheckbox>\n        </div>\n      ))}\n    </>\n  ))\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { FCartItemFragmentDoc, FPriceFragmentDoc } from '../../graph/generated'\nimport { GFinishView } from '../../graph/types'\n\nexport const FinishViewOrderFragment = gql`\n  fragment GFinishViewOrder on Order {\n    id\n    items {\n      ...FCartItem\n      sideDishes {\n        ...FCartItem\n      }\n    }\n    totalSum {\n      ...FPrice\n    }\n    orderPayments {\n      paymentMethod {\n        paymentType {\n          enum\n        }\n      }\n    }\n  }\n  ${FCartItemFragmentDoc}\n  ${FPriceFragmentDoc}\n`\n\nexport const FinishViewQuery = gql`\n  query GFinishView($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      ...GFinishViewOrder\n    }\n    companyBranch(id: $branchId) {\n      id\n      phone\n      company {\n        id\n      }\n    }\n    androidApp: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: ANDROID\n    ) {\n      url\n    }\n    iosApp: mobileApplicationSettings(companyBranch: $branchId, platform: IOS) {\n      url\n    }\n  }\n  ${FinishViewOrderFragment}\n`\n\nexport const QueryFinishView = buildQuery<\n  GFinishView.Query,\n  GFinishView.Variables\n>(FinishViewQuery)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GFinishView } from '../../graph/types'\n\nimport { QueryFinishView } from './FinishView.graphql'\n\ninterface IProps {\n  render(result: GFinishView.Query): ReactNode\n}\n\nexport const FinishViewLoader: React.FC<IProps> = ({ render }) => (\n  <WithOrder\n    redirect={true}\n    render={order => (\n      <QueryFinishView\n        variables={{\n          branchId: order.branchId!,\n          orderId: order.orderId!,\n        }}\n        render={data => render(data)}\n      />\n    )}\n  />\n)\n","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-01.6d4e5108.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-02.8afb6c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-doveze.e13c0122.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-gopay.48aa4030.png\";","import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import { SECOND, useNow, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\n\nimport { FCompanyBranchStatusFragment } from '../graph/generated'\n\nexport type TStatus = FCompanyBranchStatusFragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\ninterface IProps {\n  status: TStatus\n  updateInterval?: number\n  openSoonThresholdInMinutes?: number\n  closeSoonThresholdInMinutes?: number\n  onRefresh?(): void\n}\n\nexport interface IShopStatus {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\nexport function useShopStatus({\n  status,\n  updateInterval = 30 * SECOND,\n  openSoonThresholdInMinutes = 30,\n  closeSoonThresholdInMinutes = 30,\n}: IProps) {\n  const getNow = useNow()\n\n  useTimer({\n    interval: updateInterval,\n    enabled: Boolean(updateInterval),\n  })\n\n  const now = getNow()\n  const { isOpen, willCloseAt, willOpenAt } = status\n\n  let decision: TStatusDecision\n\n  const openingIn = willOpenAt ? differenceInMinutes(willOpenAt, now) : 0\n  const closingIn = willCloseAt ? differenceInMinutes(willCloseAt, now) : 0\n\n  if (isOpen) {\n    if (willCloseAt && closingIn <= 0) {\n      decision = 'Closed'\n    } else {\n      decision = isSoon(willCloseAt, closeSoonThresholdInMinutes, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    }\n  } else {\n    if (willOpenAt && openingIn <= 0) {\n      decision = 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openSoonThresholdInMinutes, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n  }\n\n  const shopStatus: IShopStatus = {\n    decision,\n    openingIn,\n    closingIn,\n  }\n  return shopStatus\n}\n\nfunction isSoon(time: Maybe<string>, threshold: number, now: Date) {\n  return time ? Math.abs(differenceInMinutes(time, now)) <= threshold : false\n}\n","import React from 'react'\n\nimport { FAddressFragment } from '../graph/generated'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address?: FAddressFragment\n}\n\nexport const ShopAddress: React.FC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import './Modal.css'\n\nimport React from 'react'\nimport {\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalProps,\n} from 'reactstrap'\n\ninterface IProps extends ModalProps {\n  isOpen: boolean\n  headerText: string\n  onClose?(): void\n}\n\nexport const AlertModal: React.FC<IProps> = ({\n  isOpen,\n  headerText,\n  onClose,\n  children,\n  ...modalProps\n}) => (\n  <Modal\n    isOpen={isOpen}\n    toggle={onClose}\n    className=\"modal__container\"\n    {...modalProps}\n    data-testid=\"alertModal\"\n  >\n    <ModalHeader tag={Container} toggle={onClose} className=\"modal__header\">\n      <span>{headerText}</span>\n    </ModalHeader>\n    <ModalBody className=\"modal__body\">\n      <div className=\"modal__body__content\">{children}</div>\n    </ModalBody>\n  </Modal>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  className: string\n  imageName: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.FC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { TOrderModel } from '../models/OrderModel'\nimport { WithRoot } from './WithRoot'\n\ninterface IProps {\n  render(root: TOrderModel): ReactNode\n  observe?: boolean\n  redirect?: boolean\n}\n\nexport const WithOrder: React.FC<IProps> = ({\n  render,\n  observe,\n  redirect = false,\n}) => (\n  <WithRoot\n    observe={observe}\n    render={({ order }) => {\n      return order.hasOrder ? (\n        render(order)\n      ) : redirect ? (\n        <Redirect to=\"/\" />\n      ) : null\n    }}\n  />\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from '../models/MapModel'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n}\n\nconst MapContainerStyled = styled.div`\n  border-radius: 0 0 0.5rem 0.5rem;\n  overflow: hidden;\n  height: calc(100% - 3.75rem);\n`\n\nconst MapElement = styled.div`\n  height: 100%;\n  position: relative;\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nconst getMapOptions = (): google.maps.MapOptions => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    zoomControlOptions: {\n      position: google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nexport const BaseMap: React.FC<IBaseMapProps> = ({ model, children }) => {\n  return useObserver(() => (\n    <BaseMapContainer\n      containerElement={\n        <MapContainerStyled\n          className=\"map__container\"\n          data-testid=\"googleMap\"\n        />\n      }\n      mapElement={<MapElement />}\n    >\n      <GoogleMap\n        ref={model.setMapRef}\n        zoom={model.zoom}\n        center={model.center}\n        onCenterChanged={model.updatePosition}\n        onZoomChanged={model.updateZoom}\n        onClick={model.onClick}\n        options={getMapOptions()}\n      >\n        {children}\n      </GoogleMap>\n    </BaseMapContainer>\n  ))\n}\n","import { Plural, Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { useRoot } from '../../common/WithRoot'\nimport { FCompanyBranchStatus } from '../../graph/types'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatus.Fragment\n}\n\nexport const ShopClosingTimeModal: React.FC<IProps> = ({ status }) => {\n  const { user } = useRoot()\n  const { decision, openingIn } = useShopStatus({\n    status,\n    // Do not want update here as it would be showing modal every time :)\n    updateInterval: 0,\n  })\n  return useObserver(() => (\n    <AlertModal\n      isOpen={\n        (decision === 'Closed' || decision === 'OpeningSoon') &&\n        !user.closingTimeAlertHidden\n      }\n      onClose={user.hideClosingTime}\n      headerText={i18n.t`We are closed right now`}\n    >\n      {i18n.t`We're sorry, but we do not accept new orders at this time.`}\n      {decision === 'OpeningSoon' && (\n        <Trans>\n          You can prepare your order because we are{' '}\n          <Plural\n            value={openingIn}\n            one=\"opening in 1 minute\"\n            other=\"opening in # minutes\"\n          />\n          !\n        </Trans>\n      )}\n    </AlertModal>\n  ))\n}\n","import './ShopHeaderIcons.css'\n\nimport React from 'react'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport logoCommerce01 from './logo-commerce-01.svg'\nimport logoCommerce02 from './logo-commerce-02.svg'\nimport logoDoveze from './logo-doveze.svg'\nimport logoGoPay from './logo-gopay.png'\n\nexport const ShopHeaderIcons = () => (\n  <ColStyle>\n    <img\n      src={logoDoveze}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={logoCommerce02}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={logoCommerce01}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={logoGoPay}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </ColStyle>\n)\n","import { DateFormat, Plural, Trans } from '@lingui/macro'\nimport { isSameDay } from 'date-fns'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { FCompanyBranchStatus } from '../../graph/types'\nimport { useShopStatus } from '../../hooks/useShopStatus'\n\ninterface IProps {\n  status: FCompanyBranchStatus.Fragment\n  deliveryTime: number\n  pickupTime: number\n}\n\nexport const StatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nexport const StatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.FC<IProps> = ({\n  status,\n  deliveryTime,\n  pickupTime,\n}) => {\n  const { order } = useRoot()\n  const { decision, openingIn, closingIn } = useShopStatus({\n    status,\n  })\n\n  if (!status) {\n    return null\n  }\n\n  if (status.isOpen === false) {\n    if (!status.willOpenAt) {\n      return (\n        <StatusDisplayClosed>\n          <Trans>We are closed until further notice</Trans>\n        </StatusDisplayClosed>\n      )\n    }\n    const closestBH = status.businessHours[0]\n    if (closestBH && closestBH.closedNote) {\n      return <StatusDisplayClosed>{closestBH.closedNote}</StatusDisplayClosed>\n    }\n  }\n\n  switch (decision) {\n    case 'Open':\n      return (\n        <StatusDisplayOpen data-testid=\"statusDisplayOpen\">\n          {order.usingDeliveryOrderMethod ? (\n            <Trans>We are delivering in {deliveryTime} minutes</Trans>\n          ) : (\n            <Trans>We can prepare your order in {pickupTime} minutes</Trans>\n          )}\n        </StatusDisplayOpen>\n      )\n    case 'OpeningSoon':\n      return (\n        <StatusDisplayClosed>\n          <Plural\n            value={openingIn}\n            one=\"Opening in 1 minute\"\n            other=\"Opening in # minutes\"\n          />\n        </StatusDisplayClosed>\n      )\n    case 'ClosingSoon':\n      return (\n        <StatusDisplayOpen>\n          <Plural\n            value={closingIn}\n            one=\"Closing in 1 minute\"\n            other=\"Closing in # minutes\"\n          />\n        </StatusDisplayOpen>\n      )\n    case 'Closed':\n      return (\n        <StatusDisplayClosed>\n          {status.willOpenAt ? (\n            <Trans>We will open at {formatOpenTime(status.willOpenAt)}</Trans>\n          ) : (\n            <Trans>Closed</Trans>\n          )}\n        </StatusDisplayClosed>\n      )\n  }\n}\n\nexport function formatOpenTime(openAt: string) {\n  const openAtDate = new Date(openAt)\n  const nowDate = new Date()\n  let format: Intl.DateTimeFormatOptions = {\n    hour: 'numeric',\n    minute: 'numeric',\n  }\n  if (!isSameDay(openAtDate, nowDate)) {\n    format = {\n      ...format,\n      weekday: 'long',\n    }\n  }\n  return <DateFormat value={openAtDate} format={format} />\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PrimaryRoutedButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFinishView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  finish: GFinishView.Query\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.FC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => (\n  <>\n    <Desktop>\n      {(androidApp || iosApp) && (\n        <div className=\"finish__view__apps__propagation\">\n          <div className=\"finish__view__apps__propagation__header\">\n            <Trans>What about mobile app?</Trans>\n          </div>\n          <div className=\"finish__view__apps__propagation__description\">\n            <Trans>\n              We have prepared mobile app, so you could order from anywhere!\n            </Trans>\n          </div>\n\n          {androidApp && (\n            <a href={androidApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                Google Play\n              </Button>\n            </a>\n          )}\n\n          {iosApp && (\n            <a href={iosApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                App Store\n              </Button>\n            </a>\n          )}\n        </div>\n      )}\n      <CenteredButtonContainer>\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </CenteredButtonContainer>\n    </Desktop>\n\n    <Mobile>\n      <div\n        className=\"finish__view__submit__line\"\n        style={{ textAlign: 'center' }}\n      >\n        <div className=\"finish__view__submit__line__strip\" />\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </div>\n    </Mobile>\n  </>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { GFinishViewOrder } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GFinishViewOrder.Fragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.FC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = RM.pathEq(['paymentMethod', 'paymentType', 'enum'])\n\nfunction getPaymentInfo({ orderPayments }: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({\n  orderPayments,\n  totalSum,\n}: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: GFinishViewOrder.Items) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishView } from '../../graph/types'\n\ninterface IProps {\n  branch: GFinishView.CompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.FC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './OrderMethod.css'\n\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { WithRoot } from '../../common/WithRoot'\nimport { DeliveryTypeEnum } from '../../graph/generated'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\ninterface IButtonProps {\n  orderModel: TOrderModel\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n  onPrefetch?(): void\n}\n\nconst OrderMethodButton: React.FC<IButtonProps> = ({\n  orderModel,\n  orderMethod,\n  onChange,\n  onPrefetch,\n  children,\n}) => (\n  <Observer>\n    {() => (\n      <SelectButtonThemed\n        selected={orderModel.orderMethod === orderMethod}\n        onMouseEnter={onPrefetch}\n        onClick={() => {\n          orderModel.useOrderMethod(orderMethod)\n          onChange(orderModel)\n        }}\n        data-testid={`orderMethod-${orderMethod}`}\n        data-testselected={orderModel.orderMethod === orderMethod}\n      >\n        {children}\n      </SelectButtonThemed>\n    )}\n  </Observer>\n)\n\nexport const OrderMethod: React.FC<IProps> = ({ onChange }) => (\n  <WithRoot\n    observe={false}\n    render={({ order }) => (\n      <div className=\"order__method\">\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Messenger}\n          onChange={onChange || RM.identity}\n        >\n          <span className=\"flaticon-transport\" />\n          {i18n.t`I want to deliver`.toLocaleUpperCase()}\n        </OrderMethodButton>\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Pickup}\n          onChange={onChange || RM.identity}\n          onPrefetch={order.prefetchPickup}\n        >\n          <span className=\"flaticon-restaurant\" />\n          {i18n.t`I'll pick up`.toLocaleUpperCase()}\n        </OrderMethodButton>\n      </div>\n    )}\n  />\n)\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.FC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { autorun } from 'mobx'\nimport { useDisposable } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { GeoPoint } from '../../../helpers/gps'\nimport { TMapModel } from '../../../models/MapModel'\n\ninterface IProps {\n  gps: GeoPoint | undefined\n  map: TMapModel\n}\n\nexport const MapPanning: React.FC<IProps> = ({ map, gps }) => {\n  useDisposable(\n    () =>\n      autorun(() => {\n        if (map.isReady && gps) {\n          map.panToLocation(gps)\n        }\n      }),\n    [gps],\n  )\n  return null\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { Mobile } from '../../common/Responsive'\nimport { useRoot } from '../../common/WithRoot'\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForRecipe } from '../../graph/types'\nimport { OrderCartForRecipeQuery } from '../../models/OrderModel.graphql'\nimport { CartModal } from './CartModal'\n\nconst QueryCart = buildQuery<\n  GOrderCartForRecipe.Query,\n  GOrderCartForRecipe.Variables\n>(OrderCartForRecipeQuery)\n\nexport const AddToCartModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return (\n    <Route\n      path=\"/order/add/:recipeId\"\n      render={({ match, history }) => (\n        <QueryCart\n          variables={{ recipeId: match.params.recipeId }}\n          renderLoading={false}\n          renderError={() => (\n            <Alert color=\"warning\">\n              <Trans>Error in loading cart item. Issue was reported.</Trans>\n            </Alert>\n          )}\n          render={(data, { loading }) => (\n            <Mobile>\n              {isMobile => (\n                <CartModal\n                  recipe={data.recipe}\n                  onConfirm={sideDishes => {\n                    if (isMobile) {\n                      orderModel.addFromRecipeMobile(\n                        match.params.recipeId,\n                        sideDishes,\n                      )\n                      // let the optimistic response happen in this case\n                      return Promise.resolve()\n                    }\n                    return orderModel.addFromRecipe(\n                      match.params.recipeId,\n                      sideDishes,\n                    )\n                  }}\n                  onClose={() => history.goBack()}\n                  isLoading={loading}\n                />\n              )}\n            </Mobile>\n          )}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps extends ButtonProps {\n  isSelected: boolean\n  canBeSelected: boolean\n  width: string\n}\n\nconst PickerButtonStyled = styled(\n  ({ isSelected, canBeSelected, width, ...props }) => <Button {...props} />,\n)`\n  border-radius: 0.6rem;\n  margin: 0.5rem;\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n  width: ${props => props.width};\n  @media (max-width: 370px) {\n    width: 100%;\n  }\n  &.btn-outline-secondary {\n    color: #2e2e2e;\n    border-color: #d4d4d4;\n  }\n  &.btn-outline-secondary.active {\n    color: white;\n  }\n`\n\nexport const PickerButton: React.FC<IProps> = ({\n  isSelected,\n  canBeSelected,\n  onSelect,\n  children,\n  ...buttonProps\n}) => {\n  return (\n    <PickerButtonStyled\n      disabled={!canBeSelected && !isSelected}\n      isSelected={isSelected}\n      {...buttonProps}\n    >\n      {children}\n    </PickerButtonStyled>\n  )\n}\n","import { reaction } from 'mobx'\nimport { useDisposable } from 'mobx-react-lite'\n\nimport { useRoot } from '../../common/WithRoot'\n\nexport function useCartRefresh(onRefresh: () => void) {\n  const { order: orderModel } = useRoot()\n  return useDisposable(() =>\n    reaction(\n      () => orderModel.shouldRefreshCart,\n      () => {\n        orderModel.setCartRefresh(false)\n        onRefresh()\n      },\n    ),\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { WithRoot } from '../../common/WithRoot'\nimport { QueryOrderForm } from './OrderFormView.graphql'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.FC<IProps> = props => (\n  <WithRoot\n    render={root => (\n      <QueryOrderForm\n        skip={!root.order.hasOrder || root.user.rememberForm !== null}\n        variables={{ orderId: root.order.orderId! }}\n        renderLoading={() => null}\n        render={({ order }) => (\n          <Observer>\n            {() =>\n              order.countWares > 0 && root.user.rememberForm === null ? (\n                <StorageNotice data-testid=\"orderFormStorageNotice\">\n                  <p>\n                    <Trans>\n                      This app is using secure storage for keeping filled form\n                      data. It's not cookies, these are stored in your browser\n                      only.\n                    </Trans>\n                  </p>\n\n                  <NoticeButton\n                    color=\"success\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberYes}\n                    data-testid=\"orderFormStorageNotice__Yes\"\n                  >\n                    <Trans>Always remember</Trans>\n                  </NoticeButton>\n                  <NoticeButton\n                    color=\"secondary\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberNo}\n                    data-testid=\"orderFormStorageNotice__No\"\n                  >\n                    <Trans>Do not store</Trans>\n                  </NoticeButton>\n                </StorageNotice>\n              ) : null\n            }\n          </Observer>\n        )}\n      />\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderForm } from '../../graph/types'\n\nexport const OrderFormQuery = gql`\n  query GOrderForm($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      countWares\n    }\n  }\n`\n\nexport const QueryOrderForm = buildQuery<\n  GOrderForm.Query,\n  GOrderForm.Variables\n>(OrderFormQuery)\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../common/WithRoot'\n\nexport const OrderErrorModal: React.FC = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <Modal\n      isOpen={order.hasErrors}\n      toggle={order.clearErrors}\n      className=\"modal__container\"\n    >\n      <ModalHeader\n        toggle={order.clearErrors}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Order can not be completed</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {order.hasErrors &&\n            order.submitErrors!.map((error, idx) => (\n              <div key={idx}>{error}</div>\n            ))}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <Button\n            className=\"modal__body__button\"\n            color=\"primary\"\n            onClick={order.clearErrors}\n          >\n            <Trans>I understand</Trans>\n          </Button>\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  ))\n}\n"],"sourceRoot":""}