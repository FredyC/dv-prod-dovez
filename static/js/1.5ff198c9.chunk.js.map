{"version":3,"sources":["segments/shop/ShopStatusDisplay.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewLoader.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","common/ButtonStripe.tsx","segments/map/hooks/useMapPanning.ts","common/MapBranchMarker.tsx","hooks/useAddToCart.ts","common/PickerButton.tsx","common/ButtonStrip.tsx","segments/orderForm/OrderAgreements.tsx","segments/orderForm/OrderFormAutoFill.tsx","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/orderForm/OrderFormTipInput.tsx","segments/orderForm/OrderPromoInput.tsx","segments/orderForm/OrderSubmitButton.tsx","segments/orderForm/OrderTimeButtons.tsx","segments/orderForm/OrderFormStorageNotice.tsx","segments/map/AddressSubmit.tsx","segments/map/destination/AddressSearchInput.tsx","hooks/useDebounce.ts","segments/map/destination/GeolocationButton.tsx","segments/map/destination/ResolvedAddress.tsx","segments/map/hooks/useAddressSearch.ts","segments/map/ExtraAddressResult.tsx","segments/map/DeliveryAddressSearch.tsx","segments/map/DeliveryMap.tsx","hooks/useLocationResolver.ts","segments/map/hooks/useDeliveryMapPanning.ts","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishRemoveButton.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/sidedishPicker/SidedishPicker.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartModal.tsx","segments/cart/AddToCartModal.tsx","segments/cart/ChangeCartModal.tsx","segments/cart/CartView.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/hooks/useFoodMenuPresence.ts","segments/foodMenu/OrderLimitModal.tsx","segments/foodMenu/FoodMenuView.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderFormInputs.tsx","segments/timePicker/createTimeSteps.ts","segments/timePicker/TimePickerButton.tsx","segments/timePicker/TimePicker.tsx","segments/orderForm/OrderTimePicker.tsx","segments/cart/CartSystem.tsx","segments/cart/hooks/useCartControl.ts","segments/map/destination/OrderMethodButton.tsx","segments/map/destination/OrderMethod.tsx","segments/orderForm/OrderPaymentButton.tsx","segments/orderForm/OrderPaymentMethod.tsx","forms/FormCheckbox.tsx","segments/orderForm/OrderAgreementBox.tsx","common/ColStyle.tsx","forms/FormTextInput.tsx","hooks/useShopStatus.ts","hooks/useEmptyOrderRedirect.ts","common/ShopAddress.tsx","common/BackgroundThemed.tsx","segments/map/hooks/usePickupMapQuery.ts","common/BaseMap.tsx","segments/foodMenu/hooks/useFoodMenuQuery.ts","segments/orderForm/OrderFormSetup.tsx","segments/orderForm/hooks/useOrderPayment.ts","common/LanguagePicker.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx"],"names":["StyledStatusDisplayOpen","styled","span","StyledStatusDisplayClosed","ShopStatusDisplay","status","deliveryTime","pickupTime","order","useRoot","useShopStatus","decision","openingIn","closingIn","isOpen","willOpenAt","closestBH","businessHours","closedNote","timingDisplay","usingDeliveryOrderMethod","defaultDeliveryTimeEnabled","usingPickupOrderMethod","defaultPickupTimeEnabled","path","render","data-testid","formatOpenTime","openAt","openAtDate","Date","nowDate","format","hour","minute","isSameDay","weekday","value","CenteredButtonContainer","div","FinishViewFooter","finish","androidApp","iosApp","renderHomeButton","to","className","href","url","color","style","textAlign","FinishViewLoader","useEmptyOrderRedirect","useQOrderFinish","branchId","orderId","data","loading","HeaderThemed","theme","primary","PriceThemed","PriceCornerThemed","FinishViewOrder","orderPayments","some","hasMethod","PaymentTypeEnum","Cash","Credit","getPaymentInfo","items","map","item","OrderItem","key","id","totalSum","getPaymentPrice","formattedValue","paymentType","payment","paymentMethod","enum","recipe","sideDishes","nameLabel","length","RM","join","PhoneNumberLinkStyled","a","FinishViewSupport","branch","phone","ButtonStripe","children","useMapPanning","mapRef","useGoogleMap","prevGps","React","useRef","gps","prev","current","latitude","longitude","latLng","gpsToLatLngLit","log","panTo","panToGps","StyledPickupMapMarker","MapBranchMarker","onClick","position","gpsToLatLng","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","getPixelPositionOffset","width","height","x","y","title","name","counter","NO_SIDEDISHES","useAddToCart","cartModel","cart","client","useApolloClient","useMAddToCart","context","noBatch","addToCart","recipeId","variables","withGoods","withPresence","optimisticResponse","makeOptimisticResponse","readQuery","query","QCartDocument","__typename","add","countWares","readFragment","fragment","FRecipeFragmentDoc","fragmentName","automatic","price","addItem","presence","PickerButtonStyled","isSelected","props","tertiary","tertiaryText","tertiaryHover","PickerButton","onSelect","buttonProps","StyledButtonStrip","mediaMobile","ButtonStrip","EMPTY_ARRAY","OrderAgreements","orderModel","useOrderModel","formik","useFormikContext","useState","extractVariables","setVariables","updateVariablesLater","useDebounceCallback","values","firstname","lastname","phonePrefix","input","trim","useEffect","clear","useQOrderFormAgreements","skip","errors","agreements","hasFailed","isVamInitialized","initVam","useVamAgreements","state","renderVamAgreements","useAutorun","confirmed","Array","from","confirmedAgreements","setImmediate","setFieldValue","registerField","validate","agreement","isMandatory","has","unregisterField","AgreementBox","OrderAgreementBox","OrderFormAutoFill","OrderErrorModal","useObserver","hasErrors","toggle","clearErrors","tag","Container","submitErrors","error","idx","TextPadding","OrderGoPayModal","isGoPayChecking","headerText","noMargin","StyledOrderFormTipInput","OrderFormTipInput","observer","useMOrderTipUpdate","updateTip","useReaction","usingPaymentMethodWithTips","Number","tips","type","onChange","ev","setTips","parseInt","target","disabled","disableInteraction","CodesPanel","OrderPromoInput","memo","useAlertModal","errorModal","showError","useQOrderPromoCodes","useMOrderPromoAdd","addCodeMutation","useMOrderPromoRemove","removeCodeMutation","onCodeAdd","useCallback","code","onCodeRemove","codeId","useOrderPromoCodes","onCodeErrors","msg","getValidatingMessage","inputProps","inputRef","codes","promoCodes","innerRef","autoComplete","placeholder","role","OrderSubmitButton","history","useRouterContext","useQOrderForm","hasOrder","orderStateCategory","OrderStateCategoryEnum","InCart","replace","canSubmit","size","isSubmitting","fadeIn","StyledOrderTimeButtons","OrderTimeButtons","delayedOrderEnabled","isDelayed","deliverAt","selected","setDeliverAt","openTimePicker","NoticeButton","Button","StorageNotice","Alert","mediaDesktop","OrderFormStorageNotice","user","rememberForm","setFormRememberYes","setFormRememberNo","AddressSubmit","enabled","i18n","AddressSearchInput","onSearch","isVisible","location","focus","onSearchDebounced","cb","time","deps","debounced","debounce","useDebounce","Input","cn","hidden","search","setSearchValue","clearAddress","onKeyPress","onFocus","select","searchValue","GeolocationButton","alert","makeAlert","isGeolocationAvailable","isResolving","navigator","geolocation","getCurrentPosition","coords","accuracy","setGeolocationPoint","err","disableGeolocation","enableHighAccuracy","maximumAge","ResolvedAddress","address","onValidClick","wait","undefined","urlCache","Map","useAddressSearch","count","watchLocation","useLocalStore","results","phrase","searching","params","zoom","doFetch","get","fetch","then","resp","json","result","filter","validateResult","mapResult","set","finally","debouncedFetch","nextPhrase","reaction","userData","category","suggestFirstRow","suggestSecondRow","suffix","municipality","district","country","find","Boolean","Styled","ExtraAddressResult","open","hasSearchValue","usefulResults","bounceInLeft","bounceIn","toString","setSearchResult","secondary","DeliveryAddressSearch","setIsResolving","setAsNotResolved","singleResult","startsWith","setAsNotAddress","resetResolution","hasAddress","ErrorMessage","hasResolutionResult","isResolved","isStreetAddress","inDeliveryLocation","StyledDeliveryMap","DeliveryMap","onConfirm","business","resolver","useExecutableQResolveLocation","fetchPolicy","resolveLocation","resolutionTarget","setResolutionResult","useLocationResolver","resolveUserLocation","setLocation","useWhen","isValid","hasLocation","geoPoint","clickPoint","clearClickPoint","useFoodMenuQuery","isDeliveryAddress","useQInitialDeliveryLocation","source","useAsObservableSource","initial","geolocationPoint","gpsCoordinates","useDeliveryMapPanning","createDeliveryOrder","useOrderCreate","draggable","onDragEnd","latLngToGps","CategoryValidationMessage","minCount","maxCount","message","_","StyledSidedishRemoveButton","primaryHover","SidedishRemoveButton","StyledSidedishCheckbox","SidedishCheckbox","sidedish","canBeSelected","canBeRemoved","onAdd","onRemove","outline","StyledSidedishPicker","SidedishPicker","selection","useSideDishValidator","categories","isCategoryValid","i","includes","CartOrderButton","isConfirming","setConfirming","heartBeat","every","catch","EMPTY_SELECTION","CartModal","isLoading","initialSideDishes","onClose","updateSelection","onCloseModal","onConfirmAndClose","onAddSidedish","sidedishId","sel","append","onRemoveSidedish","remove","indexOf","autoFocus","backdrop","fade","ModalHeader","ModalBody","Pacman","descriptionLabel","AddToCartModal","addToCartRecipeId","useQCartRecipe","executeAddToCart","ChangeCartModal","itemId","changeCartItemId","useQCartItem","useMChangeCartItem","changeItem","changeCartItem","sideDishesSelection","useMemo","CartView","isReadonly","CartSystem","StyledCategoryNavigator","CategoryNavigator","activeCategoryIndex","setActiveCategoryIndex","Link","active","onSetActive","offset","smooth","spy","pictogram","Truncate","lines","FoodCategoryStyled","FoodCategoryTitleStyled","Element","FoodMenuItemStyled","isActive","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItem","onAddToCart","hasSideDishes","sideDishCount","useExecutableQCartRecipe","prefetchFoodItem","onMouseEnter","previousPresence","lastActiveRecipeId","image","src","alt","recipePresence","pulse","zoomIn","renderPresence","StyledFoodMenu","config","useQFoodMenuCartPresence","observable","runInAction","forEach","useFoodMenuPresence","hasSideDish","orderItemsMax","showOrderLimit","setUsedRecipeId","recipes","OrderLimitModal","AlertModal","orderLimitAlertHidden","hideOrderLimit","FoodMenuView","refetch","language","wareCategories","cat","OrderEmailInput","FormGroup","FormTextInput","OrderNameInput","InputGroup","OrderNoteInput","ingredientsDescription","errorForceDisplay","FormText","OrderPhoneInput","isMobileSafari","UAParser","window","userAgent","getBrowser","OrderFormInputs","createTimeSteps","start","end","minuteStep","startOfMinute","addMinutes","subMinutes","getMinutes","timeClampDown","timeClampUp","steps","endMinute","endOfMinute","push","Time","TimePickerButton","getTime","formatTime","TimePickerContainer","TimePickerDay","TimePicker","minDate","maxDate","onStepChange","initialTime","filterIntervals","allSteps","step","isWithinInterval","days","eachDayOfInterval","stepIdx","setStepIdx","closestIndexTo","day","getDate","month","isEqual","startOfDay","OrderTimePicker","root","useQOrderTimePicker","initialized","useMOrderDeliveryTime","updateOrder","selectedTime","isoDate","closeTimePicker","getInterval","companyBranch","getStartTime","defaultDeliveryTime","defaultPickupTime","getMinuteOffset","willCloseAt","nextBusinessHour","propEq","closeAt","getEndTime","canBeDelayed","interval","isAfter","delayedDeliveryEnabled","enableDelayedOrder","header","timePickerOpen","bhour","renderModalContent","StyledCartSystem","useTheme","labels","getCartLabels","onItemEdit","useMRemoveCartItem","removeItem","onItemRemove","makeOptimisticRemove","onPlaceOrder","onChangeOrder","rejectItem","reject","idPropEq","useCartControl","renderMobileSubmit","renderGoodsLoading","useCartSystem","colors","sumRowBg","sumRowText","mobileSummaryItemCount","mobileBreakpoint","backgroundImage","backgroundCart","autorun","updateDisplay","store","isMobile","showGoods","useQCart","updateSummary","updateGoods","renderCart","noSideDish","noCost","cartSumHeader","totalPrice","emptyCart","totalDiscount","coverPrice","transportFee","tip","minimalOrderPrice","OrderMethodButton","orderMethod","useOrderMethod","data-testselected","StyledOrderMethod","OrderMethod","identity","DeliveryTypeEnum","Messenger","Pickup","OrderPaymentButton","setPaymentMethod","Checkmark","show","StyledOrderPaymentMethod","OrderPaymentMethod","PaymentGateEnum","Gopay","StyledFormCheckbox","StyledOrderAgreementBox","isCollapsed","titleNode","descriptionNode","invalid","onInvalid","setCustomValidity","htmlFor","toLocaleLowerCase","Collapse","ColStyle","sm","md","lg","xl","ColStyleLeft","ColStyleRight","hiddenError","label","element","useField","field","meta","labelNode","for","touched","valid","tooltip","updateInterval","SECOND","openSoonThresholdInMinutes","closeSoonThresholdInMinutes","getNow","useNow","useTimer","now","differenceInMinutes","isSoon","threshold","Math","abs","ShopAddress","street","houseNumber","city","BackgroundThemed","imageName","fallbackColor","fixed","component","otherProps","createElement","usePickupMapQuery","useQPickupMap","branchSpecific","isBrand","brandId","getMapOptions","streetViewControl","mapTypeControl","fullscreenControl","clickableIcons","draggableCursor","minZoom","zoomControlOptions","google","maps","ControlPosition","RIGHT_CENTER","RIGHT_TOP","libraries","BaseMap","model","useLoadScript","version","googleMapsApiKey","appConfig","googleMapsApi","isLoaded","loadError","googleMapUrl","googleAvailable","Reflect","Sentry","withScope","scope","setExtras","captureException","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","onLoad","setMapRef","onUnmount","options","mapContainerStyle","borderRadius","overflow","useQFoodMenu","NOTE_MAX_LENGTH","OrderFormSetup","paymentErrorModal","alertPaymentError","useExecutableQOrderPaymentStatus","executePaymentStatusCheck","useGoPay","userToken","goPayStatusCheck","invalidateWithToken","onError","onFinish","executeGoPayPayment","paymentProcessing","paymentLoading","useOrderPayment","useMSubmitOrder","submitOrder","validationSchema","Yup","required","matches","email","note","notRequired","max","onSubmit","submitStarted","getSubmitVariables","submitFailed","userErrors","gopayUrl","submitFinished","captureMessage","useFormik","initialValues","setOrderSubmitting","prefix","defaultPhonePrefix","memoryApplied","setFieldTouched","setTimeout","validateForm","console","OrderFormMemory","Form","handleSubmit","customer","firstName","lastName","emails","phones","paymentGate","LanguagePicker","availableLanguages","supportedLanguages","selectedLanguage","selectLanguage","reload","backgroundColor","arrowColor","ShopClosingTimeModal","closingTimeAlertHidden","hideClosingTime","ShopHeaderIcons","getLogo"],"mappings":"gbAgBO,IAAMA,EAA0BC,IAAOC,KAAV,0EAAGD,CAAH,sCAKvBE,EAA4BF,IAAOC,KAAV,4EAAGD,CAAH,sCAKzBG,EAAsC,SAAC,GAI7C,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEQC,EAAUC,cAAVD,MADJ,EAEuCE,YAAc,CACvDL,WADMM,EAFJ,EAEIA,SAAUC,EAFd,EAEcA,UAAWC,EAFzB,EAEyBA,UAI7B,IAAKR,EACH,OAAO,KAGT,IAAsB,IAAlBA,EAAOS,OAAkB,CAC3B,IAAKT,EAAOU,WACV,OACE,kBAACZ,EAAD,KACE,kBAAC,QAAD,4CAIN,IAAMa,EAAYX,EAAOY,cAAc,GACvC,GAAID,GAAaA,EAAUE,WACzB,OACE,kBAACf,EAAD,KACGa,EAAUE,YAMnB,OAAQP,GACN,IAAK,OACH,IAAIQ,EAWJ,OAVIX,EAAMY,0BAA4Bf,EAAOgB,6BAC3CF,EACE,kBAAC,QAAD,0DAA6Bb,mBAG7BE,EAAMc,wBAA0BjB,EAAOkB,2BACzCJ,EACE,kBAAC,QAAD,gEAAqCZ,iBAIvC,kBAAC,IAAD,CACEiB,KAAK,SACLC,OAAQ,kBACN,kBAACzB,EAAD,CAAyB0B,cAAY,qBAClCP,MAKX,IAAK,cACH,OACE,kBAAChB,EAAD,KACE,oHACSS,gBAMf,IAAK,cACH,OACE,kBAACZ,EAAD,KACE,oHACSa,gBAMf,IAAK,SACH,OACE,kBAACV,EAAD,KACGE,EAAOU,WACN,kBAAC,QAAD,oCAAwBY,EAAetB,EAAOU,eAE9C,kBAAC,QAAD,kBAOL,SAASY,EAAeC,GAC7B,IAAMC,EAAa,IAAIC,KAAKF,GACtBG,EAAU,IAAID,KAChBE,EAAqC,CACvCC,KAAM,UACNC,OAAQ,WAQV,OANKC,oBAAUN,EAAYE,KACzBC,E,qVAAM,IACDA,EADC,CAEJI,QAAS,UAGN,kBAAC,aAAD,CAAYC,MAAOR,EAAYG,OAAQA,M,wIClH1CM,EAA0BrC,IAAOsC,IAAV,8EAAGtC,CAAH,wBAIhBuC,EAAqC,SAAC,GAE5C,IAAD,IADJC,OAAUC,EACN,EADMA,WAAYC,EAClB,EADkBA,OAEhBC,EAAmB,kBACvB,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAeC,UAAU,sCACvB,kBAAC,QAAD,6BAIN,OACE,oCACE,kBAAC,IAAD,MACIJ,GAAcC,IACd,yBAAKG,UAAU,mCACb,yBAAKA,UAAU,2CACb,kBAAC,QAAD,gCAEF,yBAAKA,UAAU,gDACb,kBAAC,QAAD,wEAKDJ,GACC,uBAAGK,KAAML,EAAWM,KAClB,kBAAC,IAAD,CACEF,UAAU,0CACVG,MAAM,aAFR,gBASHN,GACC,uBAAGI,KAAMJ,EAAOK,KACd,kBAAC,IAAD,CACEF,UAAU,0CACVG,MAAM,aAFR,eAUR,kBAACX,EAAD,KAA0BM,MAG5B,kBAAC,IAAD,KACE,yBACEE,UAAU,6BACVI,MAAO,CAAEC,UAAW,WAEpB,yBAAKL,UAAU,sCACdF,S,kCCzEX,sFAWaQ,EAAqC,SAAC,GAAgB,IAAd3B,EAAa,EAAbA,OAC3CjB,EAAUC,cAAVD,MACR6C,cAFgE,MAItCC,YAAgB,CACxCC,SAAU/C,EAAM+C,SAChBC,QAAShD,EAAMgD,UAFTC,EAJwD,EAIxDA,KAKR,OATgE,EAIlDC,QAML,kBAAC,IAAD,MAGFjC,EAAOgC,K,8HCPVE,EAAe1D,IAAOsC,IAAV,+DAAGtC,CAAH,0BACI,qBAAG2D,MAAkBC,UAGrCC,EAAc7D,IAAOsC,IAAV,8DAAGtC,CAAH,0BACK,qBAAG2D,MAAkBC,UAGrCE,EAAoB9D,IAAOsC,IAAV,oEAAGtC,CAAH,qCACD,qBAAG2D,MAAkBC,UAG9BG,EAAoC,SAAC,GAAD,IAAGxD,EAAH,EAAGA,MAAH,OAC/C,oCACE,kBAACmD,EAAD,CAAcb,UAAU,wBACtB,yBAAKA,UAAU,+BACb,0BAAMA,UAAU,oDAChB,4BACE,kBAAC,QAAD,oCAIN,4BACE,kBAAC,QAAD,8CAAqD,IAsB3D,YAAoE,IAA1CmB,EAAyC,EAAzCA,cACxB,GAAIA,EAAcC,KAAKC,EAAUC,IAAgBC,OAC/C,OAAO,IAAK,EAAD,2BAEb,GAAIJ,EAAcC,KAAKC,EAAUC,IAAgBE,SAC/C,OAAO,IAAK,EAAD,mBAEb,OAAO,KA5BFC,CAAe/D,IAElB,yBAAKsC,UAAU,uBACb,yBAAKA,UAAU,iCACb,kBAAC,QAAD,kCAEDtC,EAAMgE,MAAMC,IAAI,SAAAC,GAAI,OACnB,kBAACC,EAAD,eAAWC,IAAKF,EAAKG,IAAQH,MAE/B,kBAACX,EAAD,CAAmBjB,UAAU,uCAC7B,kBAACgB,EAAD,CAAahB,UAAU,8BAqB7B,YAA+E,IAApDmB,EAAmD,EAAnDA,cAAmD,EAApCa,SACxC,GAAIb,EAAcC,KAAKC,EAAUC,IAAgBC,OAC/C,OAAO,IAAK,EAAD,2BAEb,GAAIJ,EAAcC,KAAKC,EAAUC,IAAgBE,SAC/C,OAAO,IAAK,EAAD,qBAEb,OAAO,KA3BAS,CAAgBvE,GADnB,IAC2B,2BAAIA,EAAMsE,SAASE,oBAM9Cb,EAAY,SAACc,GAAD,OAAkC,SAClDC,GADkD,OAE/CA,EAAQC,cAAcF,YAAYG,OAASH,IAsBhD,SAASN,EAAT,GAAiE,IAA5CU,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,WAC3B,OACE,6BACE,2BAAID,EAAOE,WACVD,EAAWE,OAAX,aACSF,EAAWb,IAAIgB,KAAGjE,KAAK,CAAC,SAAU,eAAekE,KAAK,MAC5D,Q,sGC9EJC,EAAwB1F,IAAO2F,EAAV,4EAAG3F,CAAH,4EAQd4F,EAAsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACjD,yBAAKhD,UAAU,yBACb,4BACE,kBAAC,QAAD,oDAEF,0BAAMA,UAAU,oDAChB,0BAAMA,UAAU,gCACd,kBAAC6C,EAAD,CAAuB5C,KAAI,cAAS+C,EAAOC,QACxCD,EAAOC,W,kCC1BhB,4BAWeC,IAPgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC7B,yBAAKnD,UAAU,kBACb,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,0BAA0BmD,M,kCCP7C,8EAMO,SAASC,IAAiB,IACvBzB,EAAQhE,cAARgE,IACF0B,EAASC,cAETC,EAAUC,IAAMC,OAAwB,MAa9C,OAAO,SAACC,GACN,IAAMC,EAAOJ,EAAQK,UAElBD,GACAA,EAAKE,WAAaH,EAAIG,UAAYF,EAAKG,YAAcJ,EAAII,YAf7C,SAACJ,GAChB,GAAKL,EAAL,CAIA,IAAMU,EAASC,YAAeN,GAC9B/B,EAAIsC,IAAI,gBAAiBF,GACzBV,EAAOa,MAAMH,GACbR,EAAQK,QAAUF,OANhB/B,EAAIsC,IAAI,0CAeRE,CAAST,M,gHCjBTU,EAAwBjH,IAAOsC,IAAV,4EAAGtC,CAAH,6IAcdkH,EAAoC,SAAC,GAAyB,IAAvBrB,EAAsB,EAAtBA,OAAQsB,EAAc,EAAdA,QAC1D,OACE,kBAAC,IAAD,CACEC,SAAUC,YAAYxB,EAAOU,KAC7Be,YAAaC,IAAYC,qBACzBC,uBAAwB,SAACC,EAAOC,GAAR,MAAoB,CAC1CC,EAAa,IAAVF,GAAe,IAAOA,EAAQ,EACjCG,EAAc,IAAXF,GAAgB,IAAOA,EAAS,KAGrC,kBAACV,EAAD,CACEpE,UAAU,sBACVpB,cAAY,kBACZqG,MAAOjC,EAAOkC,KACdZ,QAASA,O,0qBCxBjB,IAAIa,EAAU,EAERC,EAAgB,GAEf,SAASC,IAAgB,IAAD,EACM1H,cAA3BD,EADqB,EACrBA,MAAa4H,EADQ,EACdC,KACTC,EAASC,4BAFc,EAITC,YAAc,CAChCC,QAAS,CAAEC,SAAS,KADfC,EAJsB,oBAwB7B,OAhByB,SACvBC,GAEI,IADJtD,EACG,uDADmB4C,EAEhBW,EAAiC,CACrCrF,QAAShD,EAAMgD,QACfoF,WACAtD,aACAwD,UAAWV,EAAUU,UACrBC,aAAcX,EAAUW,cAE1B,OAAOJ,EAAUE,EAAW,CAC1BG,mBAAoBC,EAAuBJ,MAM/C,SAASI,EACPJ,GAEA,IAAMnC,EAAU4B,EAAOY,UACrB,CACEC,MAAOC,IACPP,UAAW,CACTrF,QAASqF,EAAUrF,QACnBsF,UAAWV,EAAUU,UACrBC,aAAcX,EAAUW,gBAG5B,GAEF,GAAKrC,EAAL,CAGA,IAAM7B,EAAE,WAAOoD,KAgDf,MAAO,CACLoB,WAAY,WACZC,IAAI,EAAD,GACE5C,EAAQlG,MADV,CAED+I,WAAY7C,EAAQlG,MAAM+I,WAAa,EACvCzE,SAAS,EAAD,GACH4B,EAAQlG,MAAMsE,SADX,CAENzC,OAAQ,IAEVmC,MAxCY,WACd,IAAK4D,EAAUU,UACb,OAAOpC,EAAQlG,MAAMgE,MAEvB,IAAMa,EAASiD,EAAOkB,aACpB,CACE3E,GAAG,UAAD,OAAYgE,EAAUD,UACxBa,SAAUC,IACVC,aAAc,YAEhB,GAEF,OAAKtE,EAGC,GAAN,mBACKqB,EAAQlG,MAAMgE,OADnB,CAEE,CACE6E,WAAY,cACZO,WAAW,EACX/E,KACAgF,MAAO,CACLR,WAAY,iBACZrE,eAAgB,MAChB3C,OAAQ,GAEVgD,SACAC,WAAY,MAdPoB,EAAQlG,MAAMgE,MA2BdsF,GACPC,SAxDG3B,EAAUW,aAGT,GAAN,mBACKrC,EAAQlG,MAAMuJ,UADnB,CAEE,CACEV,WAAY,cACZxE,KACAQ,OAAQ,CACNgE,WAAY,SACZxE,GAAIgE,EAAUD,aATXlC,EAAQlG,MAAMuJ,gB,+GCzDvBC,EAAqB/J,YAAO,cAAGgK,WAAH,EAAetC,MAAf,IAAyBuC,EAAzB,6CAChC,kBAAC,IAAWA,KADU,yEAAGjK,CAAH,yRAKF,SAAAiK,GAAK,OACvBA,EAAMD,WAAaC,EAAMtG,MAAMuG,SAAW,eACnC,SAAAD,GAAK,OACZA,EAAMD,WAAaC,EAAMtG,MAAMwG,aAAe,WAE9B,qBAAGxG,MAAkByG,eAE9B,SAAAH,GAAK,OAAIA,EAAMvC,QAab2C,EAAiC,SAAC,GAKxC,IAJLL,EAII,EAJJA,WAEAhE,GAEI,EAHJsE,SAGI,EAFJtE,UACGuE,EACC,oDACJ,OACE,kBAACR,EAAD,eAAoBC,WAAYA,GAAgBO,GAC7CvE,K,qPCnCP,IAAMwE,EAAoBxK,IAAOsC,IAAV,uEAAGtC,CAAH,6PAOnByK,YAPmB,MA6BVC,EAAgC,SAAC,GAAkB,IAAhB1E,EAAe,EAAfA,SAC9C,OACE,kBAACwE,EAAD,KACE,yBAAK3H,UAAU,UACdmD,K,wKC7BD2E,EAAc,GAEPC,EAA4B,WACvC,IAAMC,EAAaC,cACbC,EAASC,cAF8B,EAGX3E,IAAM4E,SAASC,GAHJ,mBAGtCtC,EAHsC,KAG3BuC,EAH2B,KAIvCC,EAAuBC,YAAoBF,EAAc,KAE/D,SAASD,IAAoB,IAAD,EAC0BH,EAAOO,OAAnDC,EADkB,EAClBA,UAAWC,EADO,EACPA,SAAUC,EADH,EACGA,YAAa3F,EADhB,EACgBA,MAC1C,MAAO,CACL4F,MAAO,CACLnI,QAASsH,EAAWtH,QACpBgI,YACAC,WACA1F,MAAM,GAAD,OAAK2F,EAAYE,QAAjB,OAA0B7F,EAAM6F,UAK3CtF,IAAMuF,UAAU,WAEd,OADAR,EAAqBF,KACd,kBAAME,EAAqBS,UAEjC,CAACd,EAAOO,OAAQF,IAtB0B,MAwBXU,YAAwBlD,EAAW,CACnEmD,MAAOnD,EAAU8C,MAAMnI,UADjBC,EAxBqC,EAwBrCA,KAAMwI,EAxB+B,EAwB/BA,OAAQvI,EAxBuB,EAwBvBA,QAKhBwI,EAAa5F,IAAMC,OAAwBqE,GAC3CuB,EAAYF,GAAUA,EAAOzG,OAAS,EAEtC9B,GAAWyI,IACfD,EAAWxF,QAAUjD,EAAKyI,YAG5B5F,IAAMuF,UAAU,WACVK,EAAWxF,QAAQlB,OAAS,IAAMsF,EAAWsB,kBAC/CtB,EAAWuB,YAtC8B,MA0CNC,YAAiBJ,EAAWxF,SAA3D6F,EA1CqC,EA0CrCA,MAAOC,EA1C8B,EA0C9BA,oBA0Bf,OAxBAC,YAAW,WAET,IAAMC,EAAYC,MAAMC,KAAKL,EAAMM,qBACnCC,EAAa,WACX9B,EAAO+B,cAAc,aAAcL,OAKvCpG,IAAMuF,UAAU,WAYd,OAXAb,EAAOgC,cAAc,aAAc,CACjCC,SAAU,WAOR,OANef,EAAWxF,QAAQxC,KAAK,SAAAgJ,GACrC,OACEA,EAAUC,cACTZ,EAAMM,oBAAoBO,IAAIF,EAAUrI,MAG7B,YAAc,MAG3B,kBAAMmG,EAAOqC,gBAAgB,gBACnC,CAACrC,EAAQuB,IAERJ,EAEA,kBAAC,QAAD,oFAOGK,EAAoB,CAAEc,aAAcC,S,kEC1F7C,2EAQaC,GARb,OAQ2C,WACtBzC,cACJE,cAEb,OAAO,Q,oKCHEwC,EAA4B,WAAO,IACtCjN,EAAUC,cAAVD,MACR,OAAOkN,YAAY,kBACjB,kBAAC,IAAD,CACE5M,OAAQN,EAAMmN,UACdC,OAAQpN,EAAMqN,YACd/K,UAAU,oBAEV,kBAAC,IAAD,CACE8K,OAAQpN,EAAMqN,YACdC,IAAKC,IACLjL,UAAU,iBAEV,8BACE,kBAAC,QAAD,qCAGJ,kBAAC,IAAD,CAAWA,UAAU,eACnB,yBAAKA,UAAU,wBACZtC,EAAMmN,WACLnN,EAAMwN,aAAcvJ,IAAI,SAACwJ,EAAOC,GAAR,OACtB,yBAAKtJ,IAAKsJ,GAAMD,MAGtB,yBAAKnL,UAAU,6BACb,yBAAKA,UAAU,+BACf,kBAAC,IAAD,CACEA,UAAU,sBACVG,MAAM,UACNmE,QAAS5G,EAAMqN,aAEf,kBAAC,QAAD,sBAPJ,Y,wICxBFM,EAAclO,IAAOsC,IAAV,8DAAGtC,CAAH,0BAIJmO,EAA4B,WAAO,IAC/BtD,EAAerK,cAAtBD,MACR,OAAOkN,YAAY,kBACjB,kBAAC,IAAD,CAAY5M,OAAQgK,EAAWuD,gBAAiBC,WAAW,gBACzD,kBAACH,EAAD,KACE,kBAAC,QAAD,qDAEF,kBAAC,IAAD,CAAQI,UAAU,S,oLCTlBC,EAA0BvO,IAAOsC,IAAV,0EAAGtC,CAAH,+BAIhBwO,EAAoBC,YAAS,WAAO,IAAD,EACtBjO,cAAhBD,EADsC,EACtCA,MAAO6H,EAD+B,EAC/BA,KAD+B,EAE1BsG,cAAbC,EAFuC,oBAgB9C,OAXAC,YACE,kBAAOrO,EAAMsO,2BAA6BC,OAAOvO,EAAMwO,MAAQ,GAC/D,SAAAA,GACEJ,EAAU,CACRI,OACAxL,QAAShD,EAAMgD,QACfsF,UAAWT,EAAKS,cAKjBtI,EAAMsO,2BAKT,kBAACN,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,KAAK,SACL5M,MAAO7B,EAAMwO,KACbE,SAAU,SAAAC,GACR3O,EAAM4O,QAAQL,OAAOM,SAASF,EAAGG,OAAOjN,MAAO,MAEjDkN,SAAU/O,EAAMgP,mBAChB9N,cAAY,mBAEZ,4BAAQW,MAAO,GAAI,IAAK,EAAD,iBACvB,4BAAQA,MAAO,GAAI,IAAK,EAAD,YACvB,4BAAQA,MAAO,IAAK,IAAK,EAAD,aACxB,4BAAQA,MAAO,IAAK,IAAK,EAAD,aACxB,4BAAQA,MAAO,IAAK,IAAK,EAAD,aACxB,4BAAQA,MAAO,IAAK,IAAK,EAAD,gBApBvB,Q,uNChBLoN,EAAaxP,IAAOsC,IAAV,4DAAGtC,CAAH,uEAQHyP,EAAkBpJ,IAAMqJ,KAAK,WAAO,IAAD,EACVlP,cAArBqK,EAD+B,EACtCtK,MAAmB6H,EADmB,EACnBA,KADmB,EAEduH,cAFc,mBAEvCC,EAFuC,KAE3BC,EAF2B,OAIpBC,YACxB,CAAEvM,QAASsH,EAAWtH,SACtB,CAAEwI,MAAOlB,EAAWtH,UAFdC,EAJsC,EAItCA,KAAMC,EAJgC,EAIhCA,QAJgC,EAQpBsM,cAAnBC,EARuC,sBASjBC,cAAtBC,EATuC,oBAWxCC,EAAY9J,IAAM+J,YAAN,sCAChB,WAAOC,GAAP,SAAA1K,EAAA,wDACOkF,EAAWtH,QADlB,0EAISyM,EAAgB,CACrBK,OACA9M,QAASsH,EAAWtH,QACpBsF,UAAWT,EAAKS,aAPpB,yCADgB,sDAWhB,CAACmH,EAAiB5H,EAAMyC,IAGpByF,EAAY,sCAAG,WAAOC,GAAP,SAAA5K,EAAA,qDACfkF,EAAWtH,SACb2M,EAAmB,CACjBK,SACAhN,QAASsH,EAAWtH,QACpBsF,UAAWT,EAAKS,YALD,yCAAH,sDAzB4B,EA8Cb2H,YAAmB,CAClDL,YACAM,aAbmB,SAACJ,EAAMrE,GAC1B6D,EACE,IAAK,EAAD,kCAAiBQ,SACrB,6BACGrE,EAAOxH,IAAI,SAAAkM,GAAG,OACb,yBAAK/L,IAAK+L,GAAMA,QAStBC,qBAAsB,SAAAN,GAAI,OAAI,IAAK,EAAD,mCAA2BA,YAHvDO,EA9CsC,EA8CtCA,WAAYC,EA9C0B,EA8C1BA,SAMdC,EAAQrN,EAAU,GAAKD,EAAKjD,MAAMwQ,WAExC,OAAOtD,YAAY,kBACjB,kBAAC,IAAD,KACGmC,EACD,kBAAC,IAAD,KACE,kBAAC,IAAD,eACEoB,SAAUH,EACVI,aAAa,MACbC,YAAa,IAAK,EAAD,gBACbN,EAJN,CAKEtB,SAAUsB,EAAWtB,UAAYzE,EAAW0E,uBAGhD,kBAACC,EAAD,CAAY/N,cAAY,mBACrBqP,EAAMtM,IAAI,gBAAGI,EAAH,EAAGA,GAAIyL,EAAP,EAAOA,KAAP,OACT,kBAAC,IAAD,CACE1L,IAAKC,EACLuM,KAAK,SACL7B,SAAUzE,EAAW0E,mBACrBpI,QAAS,kBAAMmJ,EAAa1L,KAJ9B,UAMMyL,EANN,qB,kCC5FV,gHAaae,EAAsC,SAAC,GAAkB,IAAhBpL,EAAe,EAAfA,SAC9C+E,EAASC,cACPqG,EAAYC,cAAZD,QACFxG,EAAaC,cAHgD,EAKzCyG,YACxB,CAAEhO,QAASsH,EAAWtH,SACtB,CAAEwI,MAAOlB,EAAWtH,UAFdC,EAL2D,EAK3DA,KAAMC,EALqD,EAKrDA,QAKd4C,IAAMuF,UAAU,WACTf,EAAW2G,WAAY/N,GAIxBD,EAAKjD,MAAMkR,qBAAuBC,IAAuBC,QAC3DN,EAAQO,QAAQ,OAIpB,IAAMC,GACHpO,GAAWD,EAAKjD,MAAM+I,WAAa,GAAKuB,EAAWsB,iBAEtD,OACE,oCACE,kBAAC,IAAD,CACE6C,KAAK,SACLhM,MAAM,UACN8O,KAAK,KACLxC,UAAWuC,GAAa9G,EAAOgH,aAC/BtQ,cAAY,qBAEXsJ,EAAOgH,aACN,kBAAC,IAAD,CAAShK,KAAK,SAASiK,OAAO,OAAOhP,MAAM,SAE3CgD,M,+HCxCJiM,EAAyBjS,IAAOsC,IAAV,6EAAGtC,CAAH,oJAafkS,EAA6B,WACxC,IAAMrH,EAAaC,cAEnB,OAAO2C,YAAY,WACjB,IAAK5C,EAAWsH,oBACd,OAAO,KAET,IAAMC,EAAqC,OAAzBvH,EAAWwH,UAC7B,OACE,kBAACJ,EAAD,KACE,kBAAC,IAAD,CACExQ,cAAY,qBACZ6Q,UAAWF,EACX9C,SAAUzE,EAAW0E,mBACrBpI,QAAS,kBAAM0D,EAAW0H,aAAa,QAEvC,kBAAC,QAAD,uBAEF,kBAAC,IAAD,CACE9Q,cAAY,uBACZ6Q,SAAUF,EACV9C,SAAUzE,EAAW0E,mBACrBpI,QAAS0D,EAAW2H,gBAEnBJ,EACC,kBAAC,aAAD,CACEhQ,MAAOyI,EAAWwH,UAClBtQ,OAAQ,CAAEI,QAAS,OAAQH,KAAM,UAAWC,OAAQ,aAGtD,kBAAC,QAAD,0B,0aCxCZ,IAAMwQ,EAAezS,YAAO0S,KAAV,mEAAG1S,CAAH,6DAMZ2S,EAAgB3S,YAAO4S,KAAV,oEAAG5S,CAAH,iFAGf6S,YAHe,KAQfpI,YARe,MAiBNqI,EAA2C,WAAO,IACrDC,EAASvS,cAATuS,KAER,OAAOtF,YAAY,WACjB,OAA0B,OAAtBsF,EAAKC,aACA,KAGP,kBAACL,EAAD,CACElR,cAAY,yBACZoB,UAAU,sBAEV,2BACE,kBAAC,QAAD,iIAMF,kBAAC4P,EAAD,CACEzP,MAAM,UACN8O,KAAK,KACL3K,QAAS4L,EAAKE,mBACdxR,cAAY,+BAEZ,kBAAC,QAAD,yBAEF,kBAACgR,EAAD,CACEzP,MAAM,YACN8O,KAAK,KACL3K,QAAS4L,EAAKG,kBACdzR,cAAY,8BAEZ,kBAAC,QAAD,2B,mvBCxDG0R,EAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASjM,EAAZ,EAAYA,QAAZ,OAC7C,kBAACpB,EAAA,EAAD,KACE,kBAAC,IAAD,CACE/C,MAAM,UACNsM,UAAW8D,EACXjM,QAASA,EACT1F,cAAY,iBAEX4R,EAAA,EAAK,EAAD,sB,gFCLJ,IAAMC,EAAqB7E,YAChC,YAA0C,IAAvC8E,EAAsC,EAAtCA,SAAU3C,EAA4B,EAA5BA,WAAY4C,EAAgB,EAAhBA,UACfC,EAAajT,cAAbiT,SACF5C,EAAWxK,IAAMC,OAAgC,MAEvDD,IAAMuF,UACJ,WACM4H,GAAkC,OAArB3C,EAASpK,SACxBoK,EAASpK,QAAQiN,SAGrB,CAACF,IAGH,IAAMG,ECzBH,SACLC,GAGC,IAFDC,EAEA,uDAFe,IACfC,EACA,uDAD6B,GAEvBC,EAAY1N,IAAM+J,YAAY4D,IAASJ,EAAIC,GAA/B,sBAA0CC,GAA1C,CAAgDF,EAAIC,KAQtE,OANAxN,IAAMuF,UAAU,WACd,OAAO,WACLmI,EAAUlI,UAEX,CAACkI,IAEGA,EDYqBE,CAAYV,EAAU,KAEhDlN,IAAMuF,UAAU,WACd,OAAO,kBAAM+H,EAAkB9H,UAC9B,CAAC8H,IA0BJ,OACE,kBAACO,EAAA,EAAD,eACErR,UAAWsR,YAAG,CAAEC,QAASZ,IACzBvE,SA3Ba,SACfC,GAEA,IAAMmF,EAASnF,EAAGG,OAAOjN,OAAS,GAClCqR,EAASa,eAAeD,GACK,IAAzBA,EAAO1I,OAAOpG,QAChBkO,EAASc,eAEXZ,KAoBEa,WAjBe,SACjBtF,GAEe,UAAXA,EAAGvK,MACLgP,EAAkB9H,QAClB0H,MAaAkB,QATY,WACd5D,EAASpK,QAASiO,UAShBtS,MAAOqR,EAASkB,YAChB3D,SAAUH,EACVpP,cAAY,eACRmP,M,SEbGgE,EA/CkBnG,YAAS,WAAO,IACvCgF,EAAajT,cAAbiT,SADsC,EAGnB9D,cAHmB,mBAGvCkF,EAHuC,KAGhCC,EAHgC,KAK9C,IAAKrB,EAASsB,wBAA0BtB,EAASuB,YAC/C,OAAO,KA+BT,OACE,oCACGH,EACD,yBAAKhS,UAAU,MAAMsE,QA/BE,WACzBsM,EAAS3M,IAAI,kBACbmO,UAAUC,YAAYC,mBACpB,YAAiB,IAAdC,EAAa,EAAbA,OACO1O,EAAwB0O,EAAxB1O,SAAUC,EAAcyO,EAAdzO,UAClB8M,EAAS3M,IACP,wCACAsO,EAAO1O,SACP0O,EAAOzO,UACPyO,EAAOC,UAET5B,EAAS6B,oBAAoB,CAAE5O,WAAUC,eAE3C,SAAA4O,GACE9B,EAAS3M,IAAI,qBAAsByO,GACnC9B,EAAS+B,qBACTV,EACEzB,EAAA,EAAK,EAAD,sBACJA,EAAA,EAAK,EAAD,gDAGR,CACEoC,oBAAoB,EACpBC,WAAY,QASZ,0BAAM7S,UAAU,qB,kBCrCX8S,EAAoC,SAAC,GAK3C,IAJLC,EAII,EAJJA,QACApC,EAGI,EAHJA,UACAwB,EAEI,EAFJA,YACAa,EACI,EADJA,aAEA,OACE,yBACEpU,cAAY,kBACZoB,UAAWsR,YAAG,oBAAqB,CACjC2B,KAAMd,EACNZ,QAASZ,IAEXrM,QAAS6N,OAAce,EAAYF,GAElCb,EAAc,kBAAC,IAAD,CAASjN,KAAK,YAAYiK,OAAO,SAAY4D,I,6OCXlE,IAAMI,EAAW,IAAIC,IAEd,SAASC,IAGgB,IAAD,yDAAJ,GAAI,IAF7BC,aAE6B,MAFrB,EAEqB,MAD7BC,qBAC6B,WACH5V,cAAlBgE,EADqB,EACrBA,IAAKiP,EADgB,EAChBA,SAEPnH,EAAQ+J,YAAc,iBAAO,CACjCC,QAAS,KACTC,OAAQ9C,EAASkB,YACjB6B,WAAW,EACX,UACE,IAAMC,EAAS,CAAC,SAAD,OACJN,GADI,cAEN3R,EAAImC,WAFE,cAGNnC,EAAIkC,UAHE,eAILlC,EAAIkS,MAJC,sCAQf,MAAM,gCAAN,OAAuCD,EAAOhR,KAAK,UAIjDkR,EAAUtQ,IAAM+J,YAAY,WAChC,GAA4B,IAAxB9D,EAAMiK,OAAOhR,OAAjB,CAKAkO,EAAS3M,IAAT,4BAAkCwF,EAAMiK,SACxC,IAAMxT,EAAG,UAAMuJ,EAAMvJ,IAAZ,mBAA0BuJ,EAAMiK,QAErCP,EAAS7I,IAAIpK,GACfuJ,EAAMgK,QAAUN,EAASY,IAAI7T,IAI/BuJ,EAAMkK,WAAY,EAElBK,MAAM9T,GACH+T,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAE,GACJ,IAAMV,EAAUU,EAAKC,OAAOC,OAAOC,GAAgB3S,IAAI4S,GACvDpB,EAASqB,IAAItU,EAAKuT,GAClBhK,EAAMgK,QAAUA,IAEjBgB,QAAQ,WACPhL,EAAMkK,WAAY,UAtBpBlK,EAAMgK,QAAU,MAyBjB,CAAC7C,IAEE8D,EAAiBlR,IAAMC,OAAO0N,mBAAS2C,EAAS,MAEhDpD,EAAWlN,IAAM+J,YACrB,WAAgD,IAA/CoH,EAA8C,uDAAzB/D,EAASkB,YAC7BlB,EAAS3M,IAAT,mBAAyB0Q,IACzBlL,EAAMiK,OAASiB,EAAW7L,OAC1B4L,EAAe9Q,QAAQoF,QACvB8K,KAGF,CAACA,EAASlD,IA2BZ,OAxBA7E,YACE,kBAAM6E,EAASkB,aACf,SAAAvS,GACuB,IAAjBA,EAAMmD,SACR+G,EAAMiK,OAAS,GACfjK,EAAMgK,QAAU,KAChBiB,EAAe9Q,QAAQoF,WAK7BxF,IAAMuF,UACJ,kBACE6L,mBACE,kBAAMnL,EAAMvJ,KACZ,WACMqT,GACFmB,EAAe9Q,aAIvB,CAAC6F,EAAMvJ,IAAKqT,I,qVAGP,IAAK9J,EAAZ,CAAmBiH,aAGrB,SAAS4D,EAAT,GAAuC,IAAbO,EAAY,EAAZA,SAChBhR,EAAwBgR,EAAxBhR,SAAUC,EAAc+Q,EAAd/Q,UAClB,OAAOD,GAAYC,EAGrB,SAASyQ,EAAT,GAA4C,IAAvBO,EAAsB,EAAtBA,SAAUD,EAAY,EAAZA,SAE3B9S,EAQE8S,EARF9S,GACA8B,EAOEgR,EAPFhR,SACAC,EAME+Q,EANF/Q,UACAiR,EAKEF,EALFE,gBACAC,EAIEH,EAJFG,iBAMIC,EACJ,CAHEJ,EAHFK,aAGEL,EAFFM,SAEEN,EADFO,QAIkCJ,GAAkBK,KAAKC,UAAY,GAEvE,MAAO,CACLvT,KACA+S,WACApR,IAAK,CACHG,WACAC,aAEFiP,QAAQ,GAAD,OAAKgC,GAAL,OAAuBE,EAAM,YAAQA,GAAW,K,g3BC3H3D,IAAMM,EAASpY,IAAOsC,IAAV,KAgDC+V,EAAqB5J,YAAiB,SAAAxE,GAAU,IACnDwJ,EAAajT,cAAbiT,SACFnH,EAAQ+J,YAAc,iBAAO,CACjCiC,MAAM,KAHkD,EAMjBpC,EAAiB,CACxDC,MAAO,EACPC,cAAe9J,EAAMgM,OAFfhC,EANkD,EAMlDA,QAASE,EANyC,EAMzCA,UAAWjD,EAN8B,EAM9BA,SAqB5B,GAhBA3E,YACE,kBAAMtC,EAAMgM,MACZ,SAAAA,GACMA,GACF/E,MAKN3E,YACE,kBAAM6E,EAASkB,aACf,WACErI,EAAMgM,MAAO,KAIZ7E,EAAS8E,eACZ,OAAO,KAGT,IAAMC,EACJlC,GAAWA,EAAQY,OAAO,qBAAGtB,UAA0BnC,EAASmC,UAsDlE,OACE,kBAACwC,EAAD,CACEvV,UAAWsR,YAAG,WAAY,CACxBsE,aAAcnM,EAAMgM,KACpBI,UAAWpM,EAAMgM,OAEnB3T,IAAK2H,EAAMgM,KAAKK,YAEfrM,EAAMgM,KA/CT,6BACE,2BACE,kBAAC,QAAD,mGAKD9B,GAAa,oCACbgC,GACCA,EAAchU,IAAI,SAAAyS,GAAM,OACtB,kBAACvE,EAAA,EAAD,CACEZ,KAAK,KACL9O,MAAM,OACN2B,IAAKsS,EAAOrS,GACZuC,QAAS,WACPsM,EAASmF,gBAAgB3B,GACzB3K,EAAMgM,MAAO,IAGdrB,EAAOrB,WAGd,kBAAClD,EAAA,EAAD,CACEZ,KAAK,KACL9O,MAAM,OACNmE,QAAS,WACPmF,EAAMgM,MAAO,GAEfzV,UAAU,QAET2V,GAA0C,IAAzBA,EAAcjT,OAC9B,kBAAC,QAAD,kCAEA,kBAAC,QAAD,4CA7CN,kBAACmN,EAAA,EAAD,CACE7P,UAAU,OACVG,MAAM,OACNmE,QAAS,WACPmF,EAAMgM,MAAO,IAGf,kBAAC,QAAD,6C,gGCvFN,IAAMF,EAASpY,IAAOsC,IAAV,6DAAGtC,CAAH,ukBAWN6S,YAXM,KA2BC,qBAAGlP,MAAkBkV,YA6BrBC,EAAwBrK,YAAS,WAAO,IAAD,EACxBjO,cAAlBgE,EAD0C,EAC1CA,IAAKiP,EADqC,EACrCA,SADqC,EAGTyC,IAAjCI,EAH0C,EAG1CA,QAASE,EAHiC,EAGjCA,UAAWjD,EAHsB,EAGtBA,SA2C5B,OAzCAlN,IAAMuF,UAAU,WACV4K,GACF/C,EAASsF,eAAevC,IAEzB,CAAC/C,EAAU+C,IAEdnQ,IAAMuF,UAAU,WACd,GAAgB,OAAZ0K,EAAJ,CAIA,GAAuB,IAAnBA,EAAQ/Q,OAGV,OAFAkO,EAAS3M,IAAI,2CACb2M,EAASuF,mBAPS,IAWbC,EAXa,YAWG3C,EAXH,MAalBqB,EAEEsB,EAFFtB,SAbkB,EAehBsB,EADF1S,IAAOG,EAdW,EAcXA,SAAUC,EAdC,EAcDA,UAQnB,GALInC,EAAI0B,SACN1B,EAAIsC,IAAJ,gCAAiCJ,EAAjC,cAA+CC,IAC/CnC,EAAI0B,OAAOa,MAAMF,YAAeoS,EAAa1S,QAGzCoR,IAAYA,EAASuB,WAAW,WAGpC,OAFAzF,EAAS3M,IAAI,0BAA2B6Q,QACxClE,EAAS0F,kBAIX1F,EAAS3M,IAAT,wBAA8BmS,EAAarD,UACvCnC,EAAS/M,WAAaA,GAAY+M,EAAS9M,YAAcA,GAC3D8M,EAAS2F,kBAEX3F,EAASmF,gBAAgBK,KACxB,CAACxF,EAAUjP,EAAK8R,IAGjB,kBAAC,EAAD,KACE,yBAAKzT,UAAU,aACb,kBAAC,EAAD,CACE+S,QAASnC,EAASmC,SAAW,GAC7BpC,UAAWC,EAAS4F,WACpBrE,YAAavB,EAASuB,YACtBa,aAAcpC,EAASc,eAEzB,kBAACjB,EAAD,CACE1C,WAAY,CACVM,YAAamC,EAAA,EAAK,EAAD,sCACjBpC,aAAc,2BAEhBsC,SAAUA,EACVC,YAAaC,EAAS4F,YAAc5F,EAASuB,eAE/C,kBAAC,EAAD,OAEF,kBAACsE,EAAD,MACA,kBAACjB,EAAD,SAKN,SAASiB,IAAgB,IACf7F,EAAajT,cAAbiT,SACR,OAAKA,EAAS8F,qBAGc,IAAxB9F,EAAS+F,WAET,kBAAC5G,EAAA,EAAD,CAAO5P,MAAM,UACX,kBAAC,QAAD,sCAI2B,IAA7ByQ,EAASgG,gBAET,kBAAC7G,EAAA,EAAD,CAAO5P,MAAM,WACX,kBAAC,QAAD,kDAI8B,IAAhCyQ,EAASiG,mBAET,kBAAC9G,EAAA,EAAD,CAAO5P,MAAM,WACX,kBAAC,QAAD,2EAMC,KAzBE,K,yDC/HX,IAAM2W,GAAoB3Z,IAAOsC,IAAV,uEAAGtC,CAAH,iJAcV4Z,GAAcnL,YAAiB,YAAoB,IAAjBoL,EAAgB,EAAhBA,UAAgB,EACzBrZ,cAA5BgE,EADqD,EACrDA,IAAKiP,EADgD,EAChDA,SAAUqG,EADsC,EACtCA,SAEjBC,EC9BD,WAAgC,IAC7BtG,EAAajT,cAAbiT,SAD4B,EAGVuG,YAA8B,CACtDC,YAAa,gBADRC,EAH6B,oBAwBpC,OAjBiB7T,IAAM+J,YAAN,sCACf,WAAO7J,GAAP,eAAAZ,EAAA,4DACE8N,EAASsF,gBAAe,GAD1B,SAGqBmB,EAAgB,EAAD,GAC7BzG,EAAS0G,iBADoB,GAE7B5T,IALP,OAQe,QALP/C,EAHR,SASIiQ,EAAS2G,oBAAoB5W,EAAK0W,iBAEpCzG,EAASsF,gBAAe,GAX1B,yCADe,sDAcf,CAACtF,EAAUyG,IDSIG,GAEXC,EAAsB,SAAC/T,GAC3BkN,EAAS2F,kBACT3F,EAASa,eAAe,IACxBb,EAAS8G,YAAYhU,IAGvBiU,YACE,kBAAMV,EAASW,SACf,WACMhH,EAASiH,cACXjH,EAAS3M,IAAI,yBACbiT,EAAStG,EAASkH,aAKxB/L,YACE,kBAAM6E,EAASkH,UACf,SAAApU,GACMA,IACFkN,EAAS3M,IAAI,2BACbiT,EAASxT,MAKfqI,YACE,kBAAMpK,EAAIoW,YACV,SAAAA,GACMA,IACFnH,EAAS3M,IAAT,2BACAwT,EAAoBM,GACpBpW,EAAIqW,qBAMVC,YAAiBrH,EAASsH,kBAAoBtH,EAASnQ,SAAW,MErE/B,WAAO,IAClCmQ,EAAajT,cAAbiT,SADiC,EAEfuH,YACxB,GACA,CACEf,YAAa,cACblO,KAAM0H,EAAS4F,aAJX7V,EAFiC,EAEjCA,KAAMC,EAF2B,EAE3BA,QAQRwX,EAASC,YAAsB,CACnCC,QAAS1X,EAAU,KAAOD,EAAKiQ,WAG3BzM,EAAWf,cAEjBuG,YAAW,WACLiH,EAASkH,UACXlH,EAAS3M,IAAI,uBAAwB2M,EAASkH,UAC9C3T,EAASyM,EAASkH,WACTlH,EAAS2H,kBAClB3H,EAAS3M,IAAI,qBAAsB2M,EAAS2H,kBAC5CpU,EAASyM,EAAS2H,mBACTH,EAAOE,SAAWF,EAAOE,QAAQE,iBAC1C5H,EAAS3M,IAAI,0BAA2BmU,EAAOE,QAAQE,gBACvDrU,EAASiU,EAAOE,QAAQE,mBAI5BzM,YACE,kBAAM6E,EAAS2H,kBACf,SAAA7U,GACMA,GACFS,EAAST,KFqCf+U,GA5C6D,IA8CrDC,EAAwBC,aAAe3B,GAAvC0B,oBAER,OACE,kBAAC5B,GAAD,CAAmBlY,cAAY,cAC5BgS,EAAS7M,OACR,kBAAC,IAAD,CACEQ,SAAUqM,EAAS7M,OACnB6U,WAAW,EACXC,UAAW,YAAiB,IAAd9U,EAAa,EAAbA,OACZ6M,EAAS3M,IAAT,qBACAwT,EAAoBqB,YAAY/U,OAGlC,KACJ,yBAAK/D,UAAU,0BACb,kBAACiW,EAAD,OAEF,yBAAKjW,UAAU,yBACb,kBAAC,EAAD,CACEuQ,QAASK,EAASsH,oBAAsBtH,EAASuB,YACjD7N,QAASoU,S,iOGxFNK,EAA8C,SAAC,GAIrD,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACArB,EACI,EADJA,QAEIsB,EAAU,GACd,GAAiB,IAAbF,EAAgB,CAClB,KAAIC,EAAW,GAGb,OAAO,KAFPC,EAAU1I,IAAK2I,EAAE,iCAAYF,mBAI1B,GAAiB,IAAbA,EACTC,EAAU1I,IAAK2I,EAAE,iCAAYH,mBACxB,GAAIA,IAAaC,EAAU,CAChC,IAAM3F,EAAQ0F,EACdE,EAAU1I,IAAK2I,EAAE,2BAAS7F,gBAE1B4F,EAAU1I,IAAK2I,EAAE,wDAAYH,WAAwBC,cAEvD,IAAM7Y,EAAuB,GAI7B,OAHKwX,IACHxX,EAAMD,MAAQ,OAGd,0BAAMC,MAAOA,GACV,IACA8Y,EACA,M,mdChCP,IAAME,EAA6Bjc,IAAOsC,IAAV,IAOhB,qBAAGqB,MAAkBC,SAGnB,qBAAGD,MAAkBuY,cAGrB,qBAAGvY,MAAkBC,UAW1BuY,EAAyC,SAAC,GAGhD,IAFLhV,EAEI,EAFJA,QACG8C,EACC,2BACJ,OACE,kBAACgS,EAAD,eACE9U,QAASA,EACTtE,UAAU,oBACVpB,cAAY,wBACRwI,GAEJ,yBAAKpH,UAAU,gBCxBfuZ,EAAyBpc,IAAOsC,IAAV,yEAAGtC,CAAH,6MAsBfqc,EAAmBhW,IAAMqJ,KACpC,YASO,IARL4M,EAQI,EARJA,SACAnG,EAOI,EAPJA,MACAoG,EAMI,EANJA,cACAC,EAKI,EALJA,aACA3Z,EAII,EAJJA,UACA4Z,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACGnS,EACC,kGACEpD,EAAUd,IAAM+J,YAAY,WAC5BmM,GACFE,KAED,CAACF,EAAeE,IACnB,OACE,kBAACL,EAAD,CAAwBvZ,UAAWA,GACjC,kBAACwH,EAAA,EAAD,eACElD,QAASA,EACTmI,UAAWiN,EACXzK,KAAK,KACL6K,SAAS,EACTjV,MAAM,UACNjG,cAAA,4BAAkC6a,EAAS1X,KACvC2F,GAEJ,yBAAK1H,UAAU,QACZyZ,EAAShX,UACV,0BAAMX,IAAKwR,EAAOtT,UAAU,4BACzBsT,EAAQ,GAAR,UAAgBA,EAAhB,OAGL,yBAAKtT,UAAU,SAASyZ,EAAS1S,MAAM7E,iBAExCyX,GAAgB,kBAAC,EAAD,CAAsBrV,QAASuV,O,iVC5DxD,IAAME,EAAuB5c,IAAOsC,IAAV,KAiBbua,EAAmC,SAAC,GAK1C,IAJLzX,EAII,EAJJA,OACA0X,EAGI,EAHJA,UACAL,EAEI,EAFJA,MACAC,EACI,EADJA,SACI,EACuCK,YACzC3X,EAAO4X,WACPF,GAFMP,EADJ,EACIA,cAAeU,EADnB,EACmBA,gBAKvB,OACE,kBAACL,EAAD,CAAsB/Z,UAAU,0BAC7BuC,EAAO4X,WAAWxY,IAAI,SAAAmT,GAAQ,OAC7B,kBAAC,WAAD,CAAUhT,IAAKgT,EAAS/S,IACtB,yBAAK/B,UAAU,8BACZ8U,EAASrS,UAAW,IACrB,kBAAC,EAAD,CACEuW,SAAUlE,EAASkE,SACnBC,SAAUnE,EAASmE,SACnBrB,QAASwC,EAAgBtF,MAG5BA,EAAStS,WAAWb,IAAI,SAAA8X,GAAQ,OAC/B,kBAACD,EAAD,CACE1X,IAAG,UAAK2X,EAAS1X,GAAd,YAAoB+S,EAAS/S,IAChC0X,SAAUA,EACVnG,MAAO2G,EAAU5F,OAAO,SAAAgG,GAAC,OAAIA,IAAMZ,EAAS1X,KAAIW,OAChDyE,WAAY8S,EAAUK,SAASb,EAAS1X,IACxC4X,aAAcM,EAAUK,SAASb,EAAS1X,IAC1C2X,cAAeA,EAAc5E,EAAU2E,GACvCG,MAAK,6GAAE,kBAAMA,EAAMH,EAAS1X,MAC5B8X,SAAQ,6GAAE,kBAAMA,EAASJ,EAAS1X,MAClC/B,UAAU,sC,iBCnDXua,EAAkB/W,IAAMqJ,KACnC,YAAuC,IAApCoN,EAAmC,EAAnCA,UAAW1X,EAAwB,EAAxBA,OAAQyU,EAAgB,EAAhBA,UAAgB,EACExT,IAAM4E,UAAS,GADjB,mBAC7BoS,EAD6B,KACfC,EADe,KAE5BL,EAAoBF,YAC1B3X,EAASA,EAAO4X,WAAa,GAC7BF,GAFMG,gBAKR,OACE,kBAAC,IAAD,CACEpa,UAAWsR,YAAG,sBAAuB,WAAY,CAC/CoJ,UAAWF,IAEb/N,SACE+N,IAAiBjY,IAAWA,EAAO4X,WAAWQ,MAAMP,GAEtDxb,cAAY,kBACZ0F,QAAS,WACPmW,GAAc,GACdzD,IAAY4D,MAAM,WAChBH,GAAc,OAIjBjK,EAAA,EAAK,EAAD,6GACIyJ,EAAUvX,YCnBrBmY,EAAkB,GAEXC,EAA8B,SAAC,GAMrC,IALLvY,EAKI,EALJA,OACAwY,EAII,EAJJA,UAII,IAHJC,yBAGI,MAHgBH,EAGhB,EAFJ7D,EAEI,EAFJA,UACAiE,EACI,EADJA,QACI,EACiCzX,IAAM4E,SAAS,IADhD,mBACG6R,EADH,KACciB,EADd,KAGJ1X,IAAMuF,UAAU,WACdmS,EAAgBF,IACf,CAACA,IAEJ,IAAMG,EAAe3X,IAAM+J,YAAY,WACrC2N,EAAgB,IAChBD,KACC,CAACA,IAEEG,EAAiB,sCAAG,sBAAAtY,EAAA,qEACdkU,EAAUiD,GADI,yCAEtBkB,IAFsB,mBAGf,GAHe,iCAKjB,GALiB,yCAAH,qDAQjBE,EAAgB,SAACC,GACrBJ,EAAgB,SAAAK,GACd,OAAO5Y,KAAG6Y,OAAOF,EAAYC,MAI3BE,EAAmB,SAACH,GACxBJ,EAAgB,SAAAK,GACd,OAAO5Y,KAAG+Y,OAAO/Y,KAAGgZ,QAAQL,EAAYC,GAAM,EAAGA,MA6BrD,OACE,kBAAC,IAAD,CACEvd,OAAmB,OAAXuE,EACRuI,OAAQqQ,EACRnb,UAAU,mBACV4b,WAAW,EACXC,SAAS,SACTC,MAAM,EACNld,cAAY,aAEZ,kBAACmd,EAAA,EAAD,CACEjR,OAAQqQ,EACRnQ,IAAKC,IACLjL,UAAU,iBAEV,8BACE,kBAAC,QAAD,wCAGJ,kBAACgc,EAAA,EAAD,CAAWhc,UAAU,eACnB,yBAAKA,UAAU,wBA5Cf+a,EACK,kBAACkB,EAAA,EAAD,MAEJ1Z,EAMH,oCACE,wBAAIvC,UAAU,2BAA2BuC,EAAOE,WAChD,0BAAMzC,UAAU,iCACbuC,EAAO2Z,kBAEV,kBAAC,EAAD,CACE3Z,OAAQA,EACR0X,UAAWA,EACXL,MAAOyB,EACPxB,SAAU4B,KAbZ,kBAAC,QAAD,+DAwCA,yBAAKzb,UAAU,6BACb,yBAAKA,UAAU,+BACf,kBAACua,EAAD,CACEhY,OAAQA,EACR0X,UAAWA,EACXjD,UAAWoE,QCnGVe,EAAiBvQ,YAAiB,YAAkB,IAAflL,EAAc,EAAdA,QAC1CsH,EAAaC,cAEbnC,EAAWkC,EAAWoU,kBAHkC,EAKpCC,YACxB,CACEvW,SAAUA,GAEZ,CAAEoD,KAAkB,OAAZxI,GAAiC,OAAboF,EAAmBsR,YAAa,gBAJtDzW,EALsD,EAKtDA,KAAMC,EALgD,EAKhDA,QAOR0b,EAAmBjX,cAEnB2R,EAAYxT,IAAM+J,YAAN,sCAChB,WAAM/K,GAAN,eAAAM,EAAA,wDACkB,OAAZpC,GAAiC,OAAboF,EAD1B,0CAEW,GAFX,uBAIuBwW,EAAiBxW,EAAUtD,GAJlD,cAIQ4R,EAJR,yBAKSkB,QAAQlB,IALjB,yCADgB,sDAQhB,CAACkI,EAAkB5b,EAASoF,IAGxBmV,EAAUzX,IAAM+J,YAAY,WAChCvF,EAAWnC,UAAU,OACpB,CAACmC,IAEJ,OACE,kBAAC,EAAD,CACEzF,OAAQ3B,EAAU,KAAOD,EAAK4B,OAC9ByU,UAAWA,EACXiE,QAASA,EACTF,UAAWna,M,kBClCJ2b,EAAkB3Q,YAAiB,YAAkB,IAAflL,EAAc,EAAdA,QAAc,EAChB/C,cAAhCqK,EADgD,EACvDtK,MAAyB4H,EAD8B,EACpCC,KAErBiX,EAASxU,EAAWyU,iBAHqC,EAKrCC,YACxB,CACEF,OAAQA,GAEV,CAAEtT,KAAkB,OAAZxI,GAA+B,OAAX8b,IAJtB7b,EALuD,EAKvDA,KAAMC,EALiD,EAKjDA,QALiD,EAY1C+b,cAAdC,EAZwD,oBAczD5F,EAAYxT,IAAM+J,YAAN,sCAChB,WAAM/K,GAAN,eAAAM,EAAA,wDACkB,OAAZpC,GAA+B,OAAX8b,EAD1B,0CAEW,GAFX,uBAIuBI,EAAW,CAC9BJ,SACAha,aACA9B,UACAsF,UAAWV,EAAUU,YARzB,cAIQoO,EAJR,yBAUSkB,QAAQlB,IAVjB,yCADgB,sDAchB,CAAC1T,EAAS8b,EAAQI,IAGd3B,EAAUzX,IAAM+J,YAAY,WAChCvF,EAAW6U,eAAe,OACzB,CAAC7U,IAEE8U,EAAsBtZ,IAAMuZ,QAChC,kBACEnc,OACIsS,EACCvS,EAAKiB,KAAKY,WAAWb,IAAIgB,KAAGjE,KAAK,CAAC,SAAU,SACnD,CAACkC,EAASD,IAGZ,OACE,kBAAC,EAAD,CACE4B,OAAQ3B,EAAU,KAAOD,EAAKiB,KAAKW,OACnCyY,kBAAmB8B,EACnB9F,UAAWA,EACXiE,QAASA,EACTF,UAAWna,MC7DjB,gCAYO,IAAMoc,EAAWpR,YAAiB,YAA6B,IAAD,IAAzBqR,kBAAyB,SAC7DjV,EAAaC,cACbvH,EAAUsH,EAAWtH,QAC3B,OACE,oCACE,kBAACyb,EAAD,CAAgBzb,QAASA,IACzB,kBAAC6b,EAAD,CAAiB7b,QAASA,IAC1B,kBAACwc,EAAA,EAAD,CACExc,QAASA,EACTuc,WAAYA,GAAcjV,EAAW0E,yB,yiBCR7C,IAAMyQ,EAA0BhgB,IAAOsC,IAAV,0EAAGtC,CAAH,8oBASzB6S,YATyB,KAYzBpI,YAZyB,MA6FdwV,EA/B6B,SAAC,GAAoB,IAAlBjD,EAAiB,EAAjBA,WAAiB,EACR/R,mBAAS,GADD,mBACvDiV,EADuD,KAClCC,EADkC,KAE9D,OACE,kBAACH,EAAD,CAAyBve,cAAY,qBACZ,IAAtBub,EAAWzX,OACR,KACAyX,EAAWxY,IAAI,SAACmT,EAAU1J,GAAX,OACb,kBAAC,IAAOmS,KAAR,CACExd,GAAI+U,EAASrS,UACbX,IAAKgT,EAAS/S,GACd/B,UAAWsR,YAAG,OAAQ,CACpBkM,OAAQH,IAAwBjS,IAElCqS,YAAa,kBAAMH,EAAuBlS,IAC1CsS,QAAS,IACTC,QAAQ,EACRC,KAAK,EACL3Y,MAAO6P,EAASrS,WAEhB,yBAAKzC,UAAU,UACb,0BAAMA,UAAS,mBAAc8U,EAAS+I,cAExC,yBAAK7d,UAAU,eACb,kBAAC8d,EAAA,EAAD,CAAUC,MAAO,GAAIjJ,EAASrS,iB,2HCvF9C,IAAMub,EAAqB7gB,IAAOsC,IAAV,yEAAGtC,CAAH,6EASlB8gB,EAA0B9gB,YAAO,MAAV,8EAAGA,CAAH,SACzByK,YADyB,MAadpE,MAAMqJ,KATkB,SAAC,GAAD,IAAGiI,EAAH,EAAGA,SAAU3R,EAAb,EAAaA,SAAb,OACrC,kBAAC,IAAO+a,QAAR,CAAgBhZ,KAAM4P,EAASrS,WAC7B,kBAACub,EAAD,KACE,kBAACC,EAAD,KAA0BnJ,EAASrS,WAClCU,M,2ICNP,IAAMgb,EAAqBhhB,IAAOsC,IAAV,yEAAGtC,CAAH,6kBAYF,qBAAGihB,SACV,UAAY,SAkBH,qBAAGtd,MAAkBkV,WAQvCpO,YAvCkB,MA6ClByW,EAAoBlhB,IAAOmhB,IAAV,wEAAGnhB,CAAH,sIAUjBohB,EAA0BphB,IAAOsC,IAAV,8EAAGtC,CAAH,oLAGP,qBAAG2D,MAAkBC,UASrCyd,EAAoBrhB,IAAOsC,IAAV,wEAAGtC,CAAH,uOACD,qBAAG2D,MAAkBC,UA0F5B0d,EA3EMjb,IAAMqJ,KAAa,YAAwC,IAArCtK,EAAoC,EAApCA,OAAQ0E,EAA4B,EAA5BA,SAAUyX,EAAkB,EAAlBA,YACrD1W,EAAaC,cAEb0W,EAAgBpc,EAAOqc,cAAgB,EAEvCta,EAAUd,IAAM+J,YAAY,WAChCmR,EAAYnc,EAAOR,GAAI4c,IACtB,CAACA,EAAeD,EAAanc,EAAOR,KAPsC,EASlD8c,YAAyB,CAClDzH,YAAa,gBADR0H,EATsE,oBAavEC,EAAevb,IAAM+J,YAAY,WACSoR,GAC5CG,EAAiB,CAAEhZ,SAAUvD,EAAOR,MAErC,CAAC4c,EAAeG,EAAkBvc,EAAOR,KAEtCid,EAAmBxb,IAAMC,QAAQ,GAuBvC,OAAOmH,YAAY,kBACjB,kBAACuT,EAAD,CACE7Z,QAASA,EACTya,aAAcA,EACdX,SAAUpW,EAAWiX,qBAAuB1c,EAAOR,GACnDnD,cAAA,wBAA8B2D,EAAOR,KAEpCQ,EAAO2c,OACN,kBAACb,EAAD,CAAmBc,IAAK5c,EAAO2c,MAAOE,IAAK7c,EAAOE,YAGpD,kBAAC8b,EAAD,MACA,kBAACC,EAAD,CAAmB5f,cAAA,+BAAqC2D,EAAOR,KAC5DQ,EAAOwE,MAAM7E,gBAlCG,WACrB,IAAMmd,EAAiBpY,EAAS8M,IAAIxR,EAAOR,IAC3C,IAAKsd,EAEH,OADAL,EAAiBpb,SAAW,EACrB,KAET,IAAM5D,EAAYsR,YAAG,WAAY,WAAY,CAC3CgO,MAAOD,EAAiB,GAAKL,EAAiBpb,QAAU,EACxD2b,OACsB,IAAnBF,GAAqD,IAA7BL,EAAiBpb,UACZ,IAA9Bob,EAAiBpb,UAGrB,OADAob,EAAiBpb,QAAUyb,EAEzB,yBACEvd,IAAKud,EACLrf,UAAWA,GAFb,UAGKqf,EAHL,MAsBCG,GACD,wBAAIva,MAAO1C,EAAOE,WAChB,kBAACqb,EAAA,EAAD,CAAUC,MAAO,EAAGnf,cAAA,8BAAoC2D,EAAOR,KAC5DQ,EAAOE,YAGZ,2BACE,kBAACqb,EAAA,EAAD,CACEC,MAAO,EACPnf,cAAA,qCAA2C2D,EAAOR,KAEjDQ,EAAO2Z,wB,8hBC1JlB,IAAMuD,EAAiBtiB,IAAOsC,IAAV,qEAAGtC,CAAH,8DAEhB6S,YAFgB,KAGhBpI,YAHgB,KAUdoI,YAVc,KAcdpI,YAdc,MAgFLpE,MAAMqJ,KA3Dc,SAAC,GAAwC,IAAtCnM,EAAqC,EAArCA,QAASyZ,EAA4B,EAA5BA,WAAYY,EAAgB,EAAhBA,UAAgB,EAC7Bpd,cAA7BqK,EAD0D,EACjEtK,MAAmBgiB,EAD8C,EAC9CA,OAAQxP,EADsC,EACtCA,KAE7BjJ,ECtCD,SAA6BvG,GAAmB,IAAD,EAC1Bif,YACxB,CACEjf,QAASA,GAEX,CACEwI,MAAOxI,EACP0W,YAAa,eANTzW,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,QADsC,EAWjC4C,IAAM4E,SAAS,kBAAMwX,aAAWje,QAA5CsF,EAX6C,oBAyBpD,OAZKrG,GACHif,sBAAY,WACV5Y,EAAS+B,QACTrI,EAAKjD,MAAMuJ,SAAS6Y,QAAQ,YAAyB,IAAZ/d,EAAW,EAArBQ,OAAUR,GAClCkF,EAASqD,IAAIvI,IAChBkF,EAASuN,IAAIzS,EAAI,GAEnBkF,EAASuN,IAAIzS,EAAIkF,EAAS8M,IAAIhS,GAAO,OAKpCkF,EDaU8Y,CAAoBrf,GAE/B4b,EAAmBjX,cACnBqZ,EAAclb,IAAM+J,YACxB,SAACzH,EAAcka,GACThY,EAAW0E,qBAGXzF,EAASgI,MAAQyQ,EAAOO,cAC1B/P,EAAKgQ,iBACIF,EACThY,EAAWnC,UAAUC,IAErBkC,EAAWmY,gBAAgBra,GAC3BwW,EAAiBxW,MAGrB,CAAC4Z,EAAOO,cAAe3D,EAAkBtU,EAAYf,EAAUiJ,IAgCjE,OACE,kBAACuP,EAAD,CAAgB7gB,cAAY,YAC1B,6BA9BEmc,EACK,kBAACkB,EAAA,EAAD,CAAQxQ,UAAU,IAED,IAAtB0O,EAAWzX,OAEX,4BACE,kBAAC,QAAD,2CAKJ,oCACGyX,EAAWxY,IAAI,SAAAmT,GAAQ,OACtB,kBAAC,EAAD,CAAchT,IAAKgT,EAAS/S,GAAI+S,SAAUA,GACvCA,EAASsL,QAAQze,IAAI,SAAAY,GAAM,OAC1B,kBAAC,EAAD,CACET,IAAKS,EAAOR,GACZQ,OAAQA,EACR0E,SAAUA,EACVyX,YAAaA,c,0BE5EhB2B,EAA4B,WAAO,IACtCnQ,EAASvS,cAATuS,KACR,OAAOtF,YAAY,kBACjB,kBAAC0V,EAAA,EAAD,CACEtiB,QAASkS,EAAKqQ,sBACdtF,QAAS/K,EAAKsQ,eACdhV,WAAYgF,EAAA,EAAK,EAAD,2BAEfA,EAAA,EAAK,EAAD,iECfX,gCAUO,IAAMiQ,EAAe7U,YAAS,WAAO,IAAD,EACLjO,cAArBqK,EAD0B,EACjCtK,MAAmBwS,EADc,EACdA,KADc,EAGN+H,YAAiBjQ,EAAWvH,UAAvDE,EAHiC,EAGjCA,KAAMC,EAH2B,EAG3BA,QAAS8f,EAHkB,EAGlBA,QAEvB3U,YAAY,kBAAMmE,EAAKyQ,UAAU,kBAAMD,MAEvC,IAAMvG,EAAa3W,IAAMuZ,QACvB,kBACEnc,EAAU,GAAKD,EAAKigB,eAAevM,OAAO,SAAAwM,GAAG,OAAIA,EAAIT,QAAQ1d,OAAS,KACxE,CAAC9B,EAASD,IAGZ,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAmBwZ,WAAYA,IAC/B,kBAAC,EAAD,CACEzZ,QAASsH,EAAWtH,QACpByZ,WAAYA,EACZY,UAAWna,Q,iFCxBNkgB,EAA4B,kBACvC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE9b,KAAK,QACLiH,KAAK,QACLiC,aAAa,QACbC,YAAamC,EAAA,EAAK,EAAD,c,UCNVyQ,EAA2B,kBACtC,kBAACF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,CACE9b,KAAK,YACLkJ,aAAa,aACbC,YAAamC,EAAA,EAAK,EAAD,gBAEnB,kBAACwQ,EAAA,EAAD,CACE9b,KAAK,WACLkJ,aAAa,cACbC,YAAamC,EAAA,EAAK,EAAD,kB,UCXZ2Q,EAA2B,WACtC,IAAMC,EAAyB5Q,EAAA,EAAK,EAAD,sCACnC,OACE,kBAACuQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE9b,KAAK,OACLiH,KAAK,WACLkC,YAAamC,EAAA,EAAK,EAAD,QACjBvL,MAAOmc,EACPC,mBAAmB,IAErB,kBAACC,EAAA,EAAD,KAAWF,K,SCVJG,EAA4B,WACvC,IACMC,EAA6C,kBADrC,IAAIC,WAASC,OAAOtP,UAAUuP,WACfC,aAAa1c,KAC1C,OACE,kBAAC6b,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,CACE9b,KAAK,cACLkJ,aAAcoT,EAAiB,MAAQ,mBACvCnT,YAAY,WAEd,kBAAC2S,EAAA,EAAD,CACE9b,KAAK,QACLiH,KAAK,MACLiC,aAAa,eACbC,YAAamC,EAAA,EAAK,EAAD,SACjBpQ,MAAO,CAAEyE,MAAO,YCvB1B,gCAOO,IAAMgd,EAAkB,kBAC7B,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,qMCJG,SAASC,EAAgBC,EAAaC,EAAWC,GACtD,IAAIre,EAAUse,wBAUT,SAAqBlR,EAAYiR,GACtC,OAAOE,qBAGF,SAAuBnR,EAAYiR,GACxC,OAAOG,qBAAWpR,EAAMqR,qBAAWrR,GAAQiR,GAJzBK,CAActR,EAAMiR,GAAaA,GAXvBM,CAAYR,EAAOE,IACzCO,EAAgB,GAChBC,EAAYC,sBAAYN,qBAAWJ,EAAK,IAC9C,GACEQ,EAAMG,KAAK/e,GACXA,EAAUue,qBAAWve,EAASqe,SACvBre,GAAW6e,GACpB,OAAOD,E,+BCHHI,EAAOzlB,IAAOsC,IAAV,uDAAGtC,CAAH,uBAIG0lB,EAAqC,SAAC,GAAD,IAChD7R,EADgD,EAChDA,KACGtJ,EAF6C,+BAIhD,kBAACF,EAAA,EAAD,eACEyH,KAAK,KACL6K,SAAS,EACTjV,MAAM,QACNjG,cAAA,4BAAkCoS,EAAK8R,YACnCpb,GAEJ,kBAACkb,EAAD,KAAOG,YAAW/R,MCLhBgS,EAAsB7lB,IAAOsC,IAAV,0EAAGtC,CAAH,sBAInB8lB,EAAgB9lB,IAAOsC,IAAV,oEAAGtC,CAAH,+EAON+lB,EAA+B,SAAC,GAOtC,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,QACAnB,EAII,EAJJA,WACAoB,EAGI,EAHJA,aACAC,EAEI,EAFJA,YAEI,IADJC,uBACI,MADc,GACd,EACEf,EAAQhf,IAAMuZ,QAAQ,WAC1B,IAAMyG,EAAW1B,EAAgBqB,EAASC,EAASnB,GACnD,OAAIsB,EAAgB7gB,OACX8gB,EAASnP,OAAO,SAAAoP,GAAI,OACzBF,EAAgBniB,KAAKsiB,2BAAiBD,MAGnCD,GACN,CAACL,EAASC,EAASnB,EAAYsB,IAE5BI,EAAOngB,IAAMuZ,QAAQ,WACzB,OAAO6G,4BAAkB,CAAE7B,MAAOoB,EAASnB,IAAKoB,KAC/C,CAACD,EAASC,IAbT,EAe0B5f,IAAM4E,SAAS,GAfzC,mBAeGyb,EAfH,KAeYC,EAfZ,KA2BJ,OAVAtgB,IAAMuF,UAAU,WACVua,GACFQ,EAAWC,yBAAeT,EAAad,KAExC,CAACc,EAAad,IAEjBhf,IAAMuF,UAAU,WACdsa,EAAab,EAAMqB,KAClB,CAACR,EAAcQ,EAASrB,IAGzB,kBAACQ,EAAD,KACGW,EAAKhiB,IAAI,SAAAqiB,GAAG,OACX,kBAAC,WAAD,CAAUliB,IAAKkiB,EAAIC,WACjB,kBAAChB,EAAD,KACE,kBAAC,aAAD,CACE1jB,MAAOykB,EACP9kB,OAAQ,CAAEglB,MAAO,OAAQF,IAAK,UAAW1kB,QAAS,WAGrDkjB,EAAM7gB,IAAI,SAAC8hB,EAAMrY,GAAP,OACT+Y,kBAAQH,EAAKI,qBAAWX,IACtB,kBAAC,EAAD,CACE3hB,IAAK2hB,EAAKX,UACV9R,KAAMyS,EACNtc,WAAYiE,IAAQyY,EACpBnK,eAAe,EACfpV,QAAS,WACPwf,EAAW1Y,GACXiY,EAAaI,MAGf,Y,gCCvET,IAAMY,EAAkBzY,YAAS,WACtC,IAAM0Y,EAAO3mB,cAD+B,EAEpBA,cAAhBD,EAFoC,EAEpCA,MAAO6H,EAF6B,EAE7BA,KAF6B,EAIlBgf,YACxB,CAAE9jB,SAAU/C,EAAM+C,UAClB,CAAEyI,MAAOob,EAAKE,cAAgB9mB,EAAM+C,WAF9BE,EAJoC,EAIpCA,KAAMC,EAJ8B,EAI9BA,QAJ8B,EAStB6jB,cAAfC,EATqC,oBAWtCC,EAAenhB,IAAMC,OAAoB/F,EAAM8R,WAC/C4L,EAAoB,WACxB,IAAMpK,EAAO2T,EAAa/gB,QAC1B8gB,EAAY,CACVhkB,QAAShD,EAAMgD,QACf8O,UAAWwB,GAAQ4T,kBAAQ5T,GAC3BhL,UAAWT,EAAKS,YAElBtI,EAAMgS,aAAasB,GACnBtT,EAAMmnB,mBA8CFC,EAAc,WAClB,OAAIlkB,EACK,KAKF,CAAEuiB,QAFOhB,qBAhDG,WAAO,IAClB4C,EAAkBpkB,EAAlBokB,cAKR,OAHEA,EAAc/mB,SAAW+mB,EAAc9mB,WACnC,IAAIe,KACJ,IAAIA,KAAK+lB,EAAc9mB,YA2CF+mB,GAlBL,WAAO,IAAD,EACuBrkB,EAAKokB,cAAhDE,EADoB,EACpBA,oBAAqBC,EADD,EACCA,kBAE7B,OAAIxnB,EAAMY,yBACD2mB,EAELvnB,EAAMc,uBACD0mB,EAGF,EAQoCC,IAEzB/B,QAzCD,WAAO,IAChB2B,EAAkBpkB,EAAlBokB,cACR,GAAIA,EAAc/mB,QAAU+mB,EAAcK,YACxC,OAAO,IAAIpmB,KAAK+lB,EAAcK,aAEhC,IAAMC,EAAmBN,EAAc5mB,cAAckX,KACnD1S,KAAG2iB,OAAO,UAAU,IAEtB,OAAOD,EAAmB,IAAIrmB,KAAKqmB,EAAiBE,SAAW,KAgC/CC,KAIZC,EAAe,SAACC,GACpB,QACe,OAAbA,GACqB,OAArBA,EAAStC,SACTuC,kBAAQD,EAASvC,QAASuC,EAAStC,WAIjCC,EAAe7f,IAAM+J,YAAY,SAACkW,GACtCkB,EAAa/gB,QAAU6f,GACtB,IA8CHjgB,IAAMuF,UAAU,WAEZpI,GACAA,EAAKokB,eACLpkB,EAAKokB,cAAca,wBAEnBloB,EAAMmoB,sBAEP,CAACllB,EAAMjD,IAEV,IAAMooB,EAASpoB,EAAMY,yBACjBkS,EAAA,EAAK,EAAD,yBACJA,EAAA,EAAK,EAAD,mCAER,OACE,kBAAC,IAAD,CACExS,OAAQN,EAAMqoB,eACdjb,OAAQpN,EAAMmnB,gBACd7kB,UAAU,mBACV4b,WAAW,EACXC,SAAS,SACTC,MAAM,GAEN,kBAACC,EAAA,EAAD,CACEjR,OAAQpN,EAAMmnB,gBACd7Z,IAAKC,IACLjL,UAAU,iBAEV,8BAAO8lB,IAET,kBAAC9J,EAAA,EAAD,CAAWhc,UAAU,eACnB,yBAAKA,UAAU,wBA3EM,WACzB,IAAM0lB,EAAWZ,IACjB,OAAiB,OAAbY,EACK,KAGJD,EAAaC,GAShB,kBAAC,EAAD,CACEzD,WAAY,GACZkB,QAASuC,EAASvC,QAClBC,QAASsC,EAAStC,QAClBE,YAAaqB,EAAa/gB,QAC1B2f,gBAhEsB5iB,EAAlBokB,cACa5mB,cAClBkW,OAAO1R,KAAG2iB,OAAO,UAAU,IAC3B3jB,IAAI,SAAAqkB,GAAK,MAAK,CACbjE,MAAO,IAAI/iB,KAAKgnB,EAAMlnB,QACtBkjB,IAAK,IAAIhjB,KAAKgnB,EAAMT,YA4DpBlC,aAAcA,IAbd,kBAAC,QAAD,wEAmEuC4C,IACvC,yBAAKjmB,UAAU,6BAjDdylB,EAAaX,KAIhB,oCACE,yBAAK9kB,UAAU,+BACf,kBAAC,IAAD,CACEiP,KAAK,KACL3K,QAAS8W,EACTpb,UAAU,uBAEV,kBAAC,QAAD,uBAVG,W,uxBCjHb,IAAMkmB,EAAmB/oB,IAAOsC,IAAV,uEAAGtC,CAAH,8BAMT+f,EAA+B,SAAC,GAA6B,IAA3Bxc,EAA0B,EAA1BA,QAASuc,EAAiB,EAAjBA,WAChDnc,EAAQqlB,cACRC,EAAS5iB,IAAMuZ,QAAQsJ,EAAe,IAF2B,ECblE,WAA2B,IAAD,EACgB1oB,cAAhCqK,EADgB,EACvBtK,MAAyB4H,EADF,EACJC,KACrBC,EAASC,4BACP+I,EAAYC,cAAZD,QACF8X,EAAa9iB,IAAM+J,YACvB,SAAC3L,GACCoG,EAAW6U,eAAejb,IAE5B,CAACoG,IAR4B,EAWVue,cAAdC,EAXwB,oBAazBC,EAAejjB,IAAM+J,YACzB,SAAC3L,GACC,IAAMmE,EAAsC,CAC1CyW,OAAQ5a,EACRoE,UAAWV,EAAUU,UACrBC,aAAcX,EAAUW,cAE1BugB,EAAWzgB,EAAW,CACpBG,mBAAoBwgB,EAAqB3gB,GACzCJ,QAAS,CACPC,SAAS,MAIf,CAACN,EAAWohB,EAAsBF,IAG9BG,EAAenjB,IAAM+J,YAAY,WACrCiB,EAAQmU,KAAK,aACZ,CAACnU,IAEEoY,EAAgBpjB,IAAM+J,YAAY,WACtCiB,EAAQmU,KAAK,WACZ,CAACnU,IAEJ,MAAO,CAAElJ,YAAWghB,aAAYG,eAAcE,eAAcC,iBAG5D,SAASF,EACP3gB,GAEA,IAAMnC,EAAU4B,EAAOY,UACrB,CACEC,MAAOC,IACPP,UAAW,CACTrF,QAASsH,EAAWtH,QACpBsF,UAAWV,EAAUU,UACrBC,aAAcX,EAAUW,gBAG5B,GAEF,GAAKrC,EAAL,CAGA,IAAMijB,EAAalkB,KAAGmkB,OAAOC,mBAAShhB,EAAUyW,SAChD,MAAO,CACLjW,WAAY,WACZmV,OAAO,EAAD,GACD9X,EAAQlG,MADP,CAEJ+I,WAAY7C,EAAQlG,MAAM+I,WAAa,EACvCzE,SAAS,EAAD,GACH4B,EAAQlG,MAAMsE,SADX,CAENzC,OAAQ,IAEVmC,MAAOqE,EAAUC,UACb6gB,EAAWjjB,EAAQlG,MAAMgE,OACzBkC,EAAQlG,MAAMgE,MAClBuF,SAAUlB,EAAUE,aAChB4gB,EAAWjjB,EAAQlG,MAAMuJ,UACzBrD,EAAQlG,MAAMuJ,cDlDpB+f,GALF1hB,EALqE,EAKrEA,UACAghB,EANqE,EAMrEA,WACAG,EAPqE,EAOrEA,aACAE,EARqE,EAQrEA,aACAC,EATqE,EASrEA,cAGIK,EAAqBzjB,IAAM+J,YAC/B,kBACE,kBAAC1F,EAAA,EAAD,KACE,kBAAC,IAAD,CAAevD,QAAS2Y,EAAa2J,EAAgBD,GAClD1J,EACC,kBAAC,QAAD,qBAEA,kBAAC,QAAD,uBAKR,CAACA,EAAY2J,EAAeD,IAGxBO,EAAqB1jB,IAAM+J,YAC/B,kBAAM,kBAAC,QAAD,8BACN,IAGIhI,EAAO4hB,YAAc,CACzBC,OAAQ,CACNrmB,QAASD,EAAMC,QACfsmB,SAAUvmB,EAAMC,QAChBumB,WAAY,QACZC,uBAAwBzmB,EAAMkV,WAEhCoQ,SACAnJ,aACAuK,qBACAC,gBAAiB3mB,EAAM4mB,eACvBpB,aACAG,eACAQ,qBACAC,uBAGF1jB,IAAMuF,UACJ,kBACE4e,kBAAQ,WACNriB,EAAUsiB,cAAcriB,EAAKsiB,MAAMC,SAAUviB,EAAKsiB,MAAME,cAE5D,CAACxiB,EAAKsiB,MAAOviB,IAGf,IAAMgf,EAAO3mB,cAEb,OAAOiN,YAAY,WAA4B,IAAD,EAClBod,YACxB,CACEtnB,QAASA,EACTsF,UAAWV,EAAUU,UACrBC,aAAcX,EAAUW,cAE1B,CACEiD,MAAOob,EAAKE,cAAgB9jB,EAC5BiF,QAAS,CACPC,SAAS,KATPjF,EADoC,EACpCA,KAAMC,EAD8B,EAC9BA,QAuBd,OATA4C,IAAMuF,UAAU,WACTnI,IACH2E,EAAK0iB,cAActnB,EAAKjD,OACpB4H,EAAUU,WACZT,EAAK2iB,YAAYvnB,EAAKjD,UAKrB,kBAACwoB,EAAD,KAAmB3gB,EAAK4iB,iBAInC,SAAS9B,IACP,MAAO,CACL+B,WAAY,kBAAC,QAAD,yBACZC,OAAQ,kBAAC,QAAD,iBACRC,cAAe,SAAAC,GAAU,OACvB,kBAAC,QAAD,0DAAuCA,iBAEzCC,UAAW,kBAAC,QAAD,sBACXC,cAAe,kBAAC,QAAD,uBACfC,WAAY,kBAAC,QAAD,eACZC,aAAc,kBAAC,QAAD,iBACd3mB,SAAU,kBAAC,QAAD,cACV4mB,IAAK,kBAAC,QAAD,YACLC,kBAAmB,SAAA9hB,GAAK,OACtB,kBAAC,QAAD,gDAAkCA,e,+GEpH3B+hB,EAAsC,SAAC,GAI7C,IAHLC,EAGI,EAHJA,YACA3c,EAEI,EAFJA,SACAjJ,EACI,EADJA,SAEM6E,EAAaC,cACnB,OAAO2C,YAAY,kBACjB,kBAAC,IAAD,CACE6E,SAAUzH,EAAW+gB,cAAgBA,EACrCzkB,QAAS,WACP0D,EAAWghB,eAAeD,GAC1B3c,EAASpE,IAEXpJ,cAAA,sBAA4BmqB,GAC5BE,oBAAmBjhB,EAAW+gB,cAAgBA,GAE7C5lB,M,gCChBP,IAAM+lB,EAAoB/rB,IAAOsC,IAAV,oEAAGtC,CAAH,2NAmBVgsB,EAAgC,SAAC,GAAgC,IAAD,IAA7B/c,gBAA6B,MAAlBzJ,KAAGymB,SAAe,EAC3E,OACE,kBAACF,EAAD,KACE,kBAAC,EAAD,CACEH,YAAaM,IAAiBC,UAC9Bld,SAAUA,GAEV,0BAAMpM,UAAU,uBAChB,kBAAC,QAAD,2BAEF,kBAAC,EAAD,CACE+oB,YAAaM,IAAiBE,OAC9Bnd,SAAUA,GAEV,0BAAMpM,UAAU,wBAChB,kBAAC,QAAD,yB,sGCpCKwpB,EAAqB5d,YAChC,YAAkC,IAA/BzI,EAA8B,EAA9BA,SAAUd,EAAoB,EAApBA,cACI2F,EAAerK,cAAtBD,MACFyJ,EAAaa,EAAW3F,gBAAkBA,EAChD,OACE,kBAAC,IAAD,CACEoK,SAAUzE,EAAW0E,mBACrB+C,SAAUtI,EACV7C,QAAS,WACP0D,EAAWyhB,iBAAiBpnB,IAE9BzD,cAAA,6BAAmCyD,IAEnC,kBAACqnB,EAAD,CAAWC,KAAMxiB,IAChBhE,KAMT,SAASumB,EAAT,GACE,OAD8C,EAA3BC,KAEjB,0BAAM3pB,UAAU,0DAEhB,yBAAKA,UAAU,8C,gCC5BnB,IAAM4pB,EAA2BzsB,IAAOsC,IAAV,+EAAGtC,CAAH,0SAuBjB0sB,EAAqBrmB,IAAMqJ,KAAK,kBAC3C,kBAAC+c,EAAD,KACE,kBAACJ,EAAD,CAAoBnnB,cAAeynB,IAAgBC,OACjD,0BAAM/pB,UAAU,wBACd,kBAAC,QAAD,sBAGJ,kBAACwpB,EAAD,CAAoBnnB,cAAeynB,IAAgBvoB,MACjD,0BAAMvB,UAAU,kBACd,kBAAC,QAAD,0B,+LC5BKgqB,G,0BAAqB7sB,IAAOsC,IAAV,wEAAGtC,CAAH,se,iDCD/B,IAAM8sB,EAA0B9sB,IAAOsC,IAAV,0EAAGtC,CAAH,oLAiBhBsN,EAAoBmB,YAC/B,YAQO,IAPLxB,EAOI,EAPJA,UACAwN,EAMI,EANJA,QACAsS,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,gBACArc,EAEI,EAFJA,WACArG,EACI,EADJA,YAEMM,EAAaC,cACblG,EAAE,oBAAgBqI,EAAUrI,IAElC,OACE,kBAACkoB,EAAD,KACE,kBAACD,EAAD,KACE,kBAAC3Y,EAAA,EAAD,iBACMtD,EADN,CAEEhM,GAAIA,EACJoK,KAAK,WACLM,SAAUzE,EAAW0E,mBACrB2d,SAAUzS,EACV0S,UAAW,SAAAje,GACJuL,GACDvL,EAAGG,OAA4B+d,kBAC/B/Z,EAAA,EAAK,EAAD,mDAIVlM,QAAS,SAAA+H,GACLA,EAAGG,OAA4B+d,kBAAkB,KAErD3rB,cAAA,wBACEwL,EAAUC,YAAc,YAAc,OAG1C,2BAAOmgB,QAASzoB,GACbooB,EACA/f,EAAUC,aAAe,OAE5B,kBAACwF,EAAA,EAAD,iBAAYnI,EAAZ,CAAyBvH,MAAM,SAC5B+pB,EACG1Z,EAAA,EAAK,EAAD,WAAYia,oBAChBja,EAAA,EAAK,EAAD,QAASia,sBAGrB,kBAACC,EAAA,EAAD,CAAU1sB,QAASksB,EAAalqB,UAAU,eACvCoqB,O,iCC1EX,8HAGaO,EAAW,SAAC,GAAD,IAAGxnB,EAAH,EAAGA,SAAH,OACtB,kBAAC,IAAD,CAAKnD,UAAU,UAAU4qB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACjD5nB,IAIQ6nB,EAAe,SAAC,GAAD,IAAG7nB,EAAH,EAAGA,SAAH,OAC1B,kBAAC,IAAD,CAAKnD,UAAU,UAAU4qB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC9C5nB,IAIQ8nB,EAAgB,SAAC,GAAD,IAAG9nB,EAAH,EAAGA,SAAH,OAC3B,kBAAC,IAAD,CAAKnD,UAAU,UAAU4qB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC9C5nB,K,6LCFQ+nB,EAAc,WAEdlK,EAAgBpV,YAC3B,YAMO,IALL1G,EAKI,EALJA,KACAimB,EAII,EAJJA,MAII,IAHJhf,YAGI,MAHG,OAGH,MAFJkV,yBAEI,SADD+J,EACC,2DACEpjB,EAAaC,cADf,EAEkBojB,YAAS,CAAEnmB,OAAMiH,SAFnC,mBAEGmf,EAFH,KAEUC,EAFV,KAIEC,EACJ,kBAAC,IAAD,CAAOC,IAAKvmB,EAAMqM,QAAS4Z,GACxBC,EAAQ/c,aAAe8c,GAItBne,EAAYqU,GAAqBkK,EAAKG,QAE5C,OACE,oCACGF,EACD,kBAAC,IAAD,iBACMJ,EACAE,EAFN,CAGEvpB,GAAImD,EACJiH,KAAMA,EACNwf,MAAOJ,EAAKG,UAAYH,EAAKpgB,MAC7Bkf,QAASrd,GAAasI,QAAQiW,EAAKpgB,OACnCsB,SAAUzE,EAAW0E,sBAEtBM,GAAaue,EAAKpgB,QAAU+f,EAC3B,kBAAC,IAAD,CAAcS,OAAO,EAAOC,SAAS,GAClCL,EAAKpgB,OAEN,S,iCCpDZ,qDAuBO,SAASvN,EAAT,GAKK,IAJVL,EAIS,EAJTA,OAIS,IAHTsuB,sBAGS,MAHQ,GAAKC,IAGb,MAFTC,kCAES,MAFoB,GAEpB,MADTC,mCACS,MADqB,GACrB,EACHC,EAASC,cAEfC,YAAS,CACPzG,SAAUmG,EACVtb,QAASsb,EAAiB,IAG5B,IAAMO,EAAMH,IACJjuB,EAAoCT,EAApCS,OAAQonB,EAA4B7nB,EAA5B6nB,YAAannB,EAAeV,EAAfU,WAIvBH,EAAYG,EAAaouB,8BAAoBpuB,EAAYmuB,GAAO,EAChEruB,EAAYqnB,EAAciH,8BAAoBjH,EAAagH,GAAO,EAyBxE,MALgC,CAC9BvuB,SAnBEG,EACEonB,GAAernB,GAAa,EACnB,SAEAuuB,EAAOlH,EAAa4G,EAA6BI,GACxD,cACA,OAGFnuB,GAAcH,GAAa,EAClB,OAEAwuB,EAAOruB,EAAY8tB,EAA4BK,GACtD,cACA,SAMNtuB,YACAC,aAKJ,SAASuuB,EAAOtb,EAAqBub,EAAmBH,GACtD,QAAOpb,GAAOwb,KAAKC,IAAIJ,8BAAoBrb,EAAMob,KAASG,I,iCCvE5D,6DAKO,SAAShsB,IACd,IAAM+jB,EAAO3mB,cACPqK,EAAaC,cACXuG,EAAYC,cAAZD,QAERmJ,YACE,kBAAM2M,EAAKE,aACX,WACOxc,EAAW2G,UACdH,EAAQmU,KAAK,S,iCCdrB,4DASa+J,EAAgC,SAAC,GAAiB,IAAf3Z,EAAc,EAAdA,QAC9C,IAAKA,IAAYA,EAAQnC,SACvB,OAAO,8BAAO,IAAK,EAAD,oBAFwC,IAIpDA,EAAamC,EAAbnC,SACR,OACE,wCAAUA,EAAS+b,OAAnB,YAA6B/b,EAASgc,YAAtC,eACEhc,EAASic,S,qGCHFC,EAAqC,SAAC,GAAD,IAChDC,EADgD,EAChDA,UADgD,KAEhDC,cAFgD,EAGhDC,cAHgD,aAIhDhe,YAJgD,MAIzC,UAJyC,EAKhD9L,EALgD,EAKhDA,SALgD,IAMhD+pB,iBANgD,MAMpC,MANoC,EAO7CC,EAP6C,0FAShD3pB,IAAM4pB,cACJjwB,YAAO+vB,GADT,uEACE/vB,CADF,iIAEwB,SAAAiK,GAAK,oBAAWA,EAAMtG,MAAMisB,GAAvB,MACA,SAAA3lB,GAAK,OAAK6lB,EAAQ,QAAU,WAGlC,SAAA7lB,GAAK,OAAI6H,IAE9Bke,EACAhqB,IAGW2pB,O,iCClCf,oDAGO,SAASO,EAAkB5sB,GAAgB,IACxCwW,EAAatZ,cAAbsZ,SACR,OAAOqW,YACL,CACEC,gBAAiBtW,EAASuW,WAAa/sB,EACvCgtB,QAASxW,EAASwW,QAClBhtB,SAAUA,GAAYwW,EAASxW,UAEjC,CACEyI,MAAO+N,EAASW,QAChBR,YAAa,cACbzR,QAAS,CAAEC,SAAS,O,+ICKpB8nB,EAAgB,SAAC5F,GACrB,MAAO,CACL6F,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,EACnBC,gBAAgB,EAChBC,gBAAiB,UACjBC,QAAS,GACTC,mBAAoB,CAClB1pB,SAAUujB,EACNoG,OAAOC,KAAKC,gBAAgBC,aAC5BH,OAAOC,KAAKC,gBAAgBE,aAKhCC,EAAY,CAAC,UAENC,EAAU5iB,YACrB,YAA4C,IAAzC6iB,EAAwC,EAAxCA,MAAwC,IAAjC3G,gBAAiC,SAAf3kB,EAAe,EAAfA,SAClB+M,EAASvS,cAATuS,KADiC,EAGUwe,YAAc,CAC/D3sB,GAAI,gBACJ4sB,QAAS,SACTC,iBAAkBC,IAAUC,cAC5BP,YACA5N,SAAUzQ,EAAKyQ,WALToO,EAHiC,EAGjCA,SAAUC,EAHuB,EAGvBA,UAAgBC,EAHO,EAGZ/uB,IA8BvBgvB,EAAkBC,QAAQ7kB,IAAIoX,OAAQ,UAE5C,OAAIsN,GAAcD,IAAaG,GACzBF,GACFI,IAAOC,UAAU,SAAAC,GACfA,EAAMC,UAAU,CAAEN,iBAClBG,IAAOI,iBAAiBR,KAI1B,4BACE,kBAAC,QAAD,6DAKCD,EApCH,kBAAC,IAAD,CACElb,KAAM4a,EAAM5a,KACZ4b,OAAQhB,EAAMgB,OACdC,gBAAiBjB,EAAMkB,eACvBC,cAAenB,EAAMoB,WACrBvrB,QAASmqB,EAAMnqB,QACfwrB,OAAQrB,EAAMsB,UACdC,UAAW,kBAAMvB,EAAMsB,UAAU,OACjCE,QAASvC,EAAc5F,GACvBoI,kBAAmB,CACjBC,aAAc,oBACdC,SAAU,SACVtrB,OAAQgjB,EAAW,OAAS,yBAGT,oBAAb3kB,EAA0BA,IAAaA,GAqBrB,kBAAC,IAAD,CAAQsI,UAAU,O,iCCvFtD,4DAKO,SAASwM,EAAiBxX,GAAoB,IAC3CyP,EAASvS,cAATuS,KACFkE,EAASic,YACb,CAAE5vB,SAAUA,GACZ,CAAEyI,MAAOzI,EAAU2W,YAAa,gBAUlC,OAPArL,YACE,kBAAMmE,EAAKyQ,UACX,WACEvM,EAAOsM,YAIJtM,I,mTCSF,IAAMkc,EAAkB,GAElBC,EAA2B,SAAC,GAAkB,IAAhBptB,EAAe,EAAfA,SACnC6E,EAAaC,cACXuG,EAAYC,cAAZD,QAFgD,ECtBnD,WAA4B,IAAD,EACQ7Q,cAAzBqK,EADiB,EACxBtK,MAAmBuZ,EADK,EACLA,SACnBzI,EAAYC,cAAZD,QAFwB,EAIe1B,cAJf,mBAIzB0jB,EAJyB,KAINC,EAJM,OAMIC,YAAiC,CACnEtZ,YAAa,aADRuZ,EANyB,sBAUmCC,YAAQ,qBACzE,4CAAA9tB,EAAA,wDAAOpC,EAAP,+BAAiBsH,EAAWtH,QAAUmwB,EAAtC,uBACOnwB,EADP,yCAEW,MAFX,cAIEsH,EAAW8oB,kBAAiB,GAJ9B,SAKuBH,EACnB,CAAEjwB,WACF,CACEiF,QAAS,CACPorB,oBAAqBF,KAT7B,cAKQzc,EALR,OAaEpM,EAAW8oB,kBAAiB,GAb9B,kBAcS1c,EAASA,EAAO7W,OAAS,MAdlC,0CAgBA,CACEyzB,QADF,SACU7nB,GACN,IAAMlG,EAAQgU,EAASjU,OAAQC,MAC/BwtB,EACEjgB,EAAA,EAAK,EAAD,mCACJrH,EAAOzG,OACHyG,EAAOvG,KAAK,UACZ4N,EAAA,EAAK,EAAD,iGAA2FvN,YAGvGguB,SAVF,WAWIziB,EAAQO,QAAQ,cAKtB,MAAO,CAAEyhB,oBAAmBU,oBA3CI,EAUxBA,oBAiCyCC,kBA3CjB,EAUHC,gBDgBsBC,GAA3CH,EAJgD,EAIhDA,oBAAqBV,EAJ2B,EAI3BA,kBAJ2B,EAMlCc,cAAfC,EANiD,oBAQlDC,EAAmBhuB,IAAMuZ,QAC7B,kBACE0U,SAAW,CACT/oB,UAAW+oB,WAAaC,SAASxG,KACjCviB,SAAU8oB,WAAaC,SAASxG,KAChCtiB,YAAa6oB,WAAaC,SAASxG,KACnCjoB,MAAOwuB,WACJC,SAASxG,KACTyG,QAAQ,MAAOnhB,EAAA,EAAK,EAAD,mCACtBohB,MAAOH,WACJC,SAASxG,KACT0G,MAAMphB,EAAA,EAAK,EAAD,yBACbqhB,KAAMJ,WACHK,cACAC,IACCzB,EACA,gBAAG/wB,EAAH,EAAGA,MAAH,OACEiR,EAAA,EAAK,EAAD,kIAIKjR,EAAMmD,OAHN4tB,yBASnB,IAGI0B,EAAWxuB,IAAM+J,YAAN,sCACf,WAAO9E,GAAP,uBAAA3F,EAAA,4DACEkF,EAAWiqB,gBAELlsB,EAAYmsB,EAAmBzpB,EAAQT,GAH/C,SAIuBupB,EAAYxrB,GAJnC,UAIQqO,EAJR,8BAOIpM,EAAWmqB,eAPf,+BAWmC/d,EAAOmd,YAAhCa,EAXV,EAWUA,WAAYC,EAXtB,EAWsBA,UAChBD,EAAW1vB,OAZjB,wBAaIsF,EAAWmqB,aAAaC,GAb5B,8BAiBEpqB,EAAWsqB,iBAEPtqB,EAAW3F,gBAAkBynB,IAAgBvoB,KAnBnD,wBAoBIiN,EAAQO,QAAR,WApBJ,2BAwBM/G,EAAW3F,gBAAkBynB,IAAgBC,MAC3CsI,EACFnB,EAAoBmB,IAEpBjD,IAAOC,UAAU,SAAAC,GACfA,EAAMC,UAAU,CAAExpB,cAClBqpB,IAAOmD,eAAe,4CAExBvqB,EAAWmqB,iBAGb/C,IAAOC,UAAU,SAAAC,GACfA,EAAMC,UAAU,CAAExpB,cAClBqpB,IAAOmD,eAAP,+BAC0BvqB,EAAW3F,kBAGvC2F,EAAWmqB,gBAzCf,0CADe,sDA6Cf,CAACjB,EAAqB1iB,EAASxG,EAAYupB,IAGvCrpB,EAASsqB,YAAU,CACvBC,cA+CK,CACL/pB,UAAW,GACXC,SAAU,GACVipB,MAAO,GACP3uB,MAAO,GACP2F,YAAa,GACbipB,KAAM,GACNzoB,WAAY,IArDZooB,mBACAQ,aA8BF,OA3BAxuB,IAAMuF,UAAU,WACdf,EAAWsc,KAAK/e,KAAKmtB,mBAAmBxqB,EAAOgH,eAC9C,CAAChH,EAAOgH,aAAclH,EAAWsc,KAAK/e,OAEzCoE,YAAW,WACT,IAAMgpB,EAAS3qB,EAAW4qB,mBAExBD,GACA3qB,EAAWsc,KAAKpU,KAAK2iB,eACgB,IAArC3qB,EAAOO,OAAOG,YAAYlG,SAE1BwF,EAAO+B,cAAc,cAAe0oB,GAChCA,IACFzqB,EAAO4qB,gBAAgB,eAAe,GAEtCC,WAAW,WACT7qB,EAAO8qB,gBACN,SAKTxvB,IAAMuF,UAAU,WACdkqB,QAAQhvB,IAAIiE,EAAOO,OAAQP,EAAOiB,SAEjC,CAACjB,EAAOiB,SAGT,oCACGqnB,EACD,kBAAC,IAAD,CAAgBjxB,MAAO2I,GACrB,kBAACmc,EAAA,EAAD,MACA,kBAAC/Y,EAAA,EAAD,MACA,kBAACX,EAAA,EAAD,MACA,kBAACuoB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMnB,SAAU9pB,EAAOkrB,cAAejwB,MAkB9C,SAAS+uB,EACPzpB,EACAT,GAEA,MAAO,CACLtH,QAASsH,EAAWtH,QACpB2yB,SAAU,CACRC,UAAW7qB,EAAOC,UAClB6qB,SAAU9qB,EAAOE,SACjB6qB,OAAQ,CAAC,CAAE5B,MAAOnpB,EAAOmpB,QACzB6B,OAAQ,CAAC,CAAExwB,MAAM,GAAD,OAAKwF,EAAOG,aAAZ,OAA0BH,EAAOxF,UAEnD4uB,KAAMppB,EAAOopB,KACb3lB,KAAMlE,EAAWkE,KACjBwnB,YAAa1rB,EAAW3F,cACxBmN,UAAWxH,EAAWwH,WAAaoV,kBAAQ5c,EAAWwH,WACtDpG,WAAYX,EAAOW,c,uDE/LvB,6EAUauqB,EAAiB/nB,YAAiB,YAAoB,IAAjB5L,EAAgB,EAAhBA,UAAgB,EACrCrC,cAAnBsZ,EADwD,EACxDA,SAAU/G,EAD8C,EAC9CA,KAClB,OAAK+G,EAASW,QAIZ,kBAAC,IAAD,CACEgc,mBAAoB3c,EAASjU,OAAQ6wB,mBACrCC,iBAAkB5jB,EAAKyQ,SACvBvU,SAAU,SAAAuU,GACJA,IAAazQ,EAAKyQ,WACpBzQ,EAAK6jB,eAAepT,GAEpBoS,WAAW,WACTrR,OAAO9Q,SAASojB,UACf,OAGPh0B,UAAWA,EACXi0B,gBAAgB,QAChBC,WAAW,YAjBN,Q,iCCbX,sGAcaC,EAAyC,SAAC,GAAgB,IAAd52B,EAAa,EAAbA,OAC/C2S,EAASvS,cAATuS,KAD4D,EAEpCtS,YAAc,CAC5CL,SAEAsuB,eAAgB,IAHVhuB,EAF4D,EAE5DA,SAAUC,EAFkD,EAElDA,UAKlB,OAAO8M,YAAY,kBACjB,kBAAC,IAAD,CACE5M,QACgB,WAAbH,GAAsC,gBAAbA,KACzBqS,EAAKkkB,uBAERnZ,QAAS/K,EAAKmkB,gBACd7oB,WAAY,IAAK,EAAD,4BAEf,IAAK,EAAD,8DACS,gBAAb3N,GACC,kBAAC,QAAD,sIAGWC,oB,iCCnCnB,qEAKaw2B,EAAkB,kBAC7B,oCACE,yBACEnV,IAAKoV,kBAAQ,UACbv0B,UAAU,8BACVpB,cAAY,2BACZwgB,IAAI,mBAEN,yBACED,IAAKoV,kBAAQ,cACbv0B,UAAU,gCACVof,IAAI,eAEN,yBACED,IAAKoV,kBAAQ,QACbv0B,UAAU,gCACVpB,cAAY,4BACZwgB,IAAI,SAEN,yBACED,IAAKoV,kBAAQ,SACbv0B,UAAU,6BACVof,IAAI,QACJxgB,cAAY","file":"static/js/1.5ff198c9.chunk.js","sourcesContent":["import { DateFormat, Plural, Trans } from '@lingui/react'\nimport { isSameDay } from 'date-fns'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n  deliveryTime: number\n  pickupTime: number\n}\n\nexport const StyledStatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nexport const StyledStatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.FC<IProps> = ({\n  status,\n  deliveryTime,\n  pickupTime,\n}) => {\n  const { order } = useRoot()\n  const { decision, openingIn, closingIn } = useShopStatus({\n    status,\n  })\n\n  if (!status) {\n    return null\n  }\n\n  if (status.isOpen === false) {\n    if (!status.willOpenAt) {\n      return (\n        <StyledStatusDisplayClosed>\n          <Trans>We are closed until further notice</Trans>\n        </StyledStatusDisplayClosed>\n      )\n    }\n    const closestBH = status.businessHours[0]\n    if (closestBH && closestBH.closedNote) {\n      return (\n        <StyledStatusDisplayClosed>\n          {closestBH.closedNote}\n        </StyledStatusDisplayClosed>\n      )\n    }\n  }\n\n  switch (decision) {\n    case 'Open':\n      let timingDisplay\n      if (order.usingDeliveryOrderMethod && status.defaultDeliveryTimeEnabled) {\n        timingDisplay = (\n          <Trans>We are delivering in {deliveryTime} minutes</Trans>\n        )\n      }\n      if (order.usingPickupOrderMethod && status.defaultPickupTimeEnabled) {\n        timingDisplay = (\n          <Trans>We can prepare your order in {pickupTime} minutes</Trans>\n        )\n      }\n      return (\n        <Route\n          path=\"/order\"\n          render={() => (\n            <StyledStatusDisplayOpen data-testid=\"statusDisplayOpen\">\n              {timingDisplay}\n            </StyledStatusDisplayOpen>\n          )}\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <StyledStatusDisplayClosed>\n          <Plural\n            value={openingIn}\n            one=\"Opening in 1 minute\"\n            other=\"Opening in # minutes\"\n          />\n        </StyledStatusDisplayClosed>\n      )\n    case 'ClosingSoon':\n      return (\n        <StyledStatusDisplayOpen>\n          <Plural\n            value={closingIn}\n            one=\"Closing in 1 minute\"\n            other=\"Closing in # minutes\"\n          />\n        </StyledStatusDisplayOpen>\n      )\n    case 'Closed':\n      return (\n        <StyledStatusDisplayClosed>\n          {status.willOpenAt ? (\n            <Trans>We will open at {formatOpenTime(status.willOpenAt)}</Trans>\n          ) : (\n            <Trans>Closed</Trans>\n          )}\n        </StyledStatusDisplayClosed>\n      )\n  }\n}\n\nexport function formatOpenTime(openAt: string) {\n  const openAtDate = new Date(openAt)\n  const nowDate = new Date()\n  let format: Intl.DateTimeFormatOptions = {\n    hour: 'numeric',\n    minute: 'numeric',\n  }\n  if (!isSameDay(openAtDate, nowDate)) {\n    format = {\n      ...format,\n      weekday: 'long',\n    }\n  }\n  return <DateFormat value={openAtDate} format={format} />\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { QOrderFinishQuery } from '../../graph/generated'\n\ninterface IProps {\n  finish: QOrderFinishQuery\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.FC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => {\n  const renderHomeButton = () => (\n    <Link to=\"/\">\n      <PrimaryButton className=\"finish__view__submit__line__button\">\n        <Trans>Back to home page</Trans>\n      </PrimaryButton>\n    </Link>\n  )\n  return (\n    <>\n      <Desktop>\n        {(androidApp || iosApp) && (\n          <div className=\"finish__view__apps__propagation\">\n            <div className=\"finish__view__apps__propagation__header\">\n              <Trans>What about mobile app?</Trans>\n            </div>\n            <div className=\"finish__view__apps__propagation__description\">\n              <Trans>\n                We have prepared mobile app, so you could order from anywhere!\n              </Trans>\n            </div>\n\n            {androidApp && (\n              <a href={androidApp.url}>\n                <Button\n                  className=\"finish__view__apps__propagation__button\"\n                  color=\"secondary\"\n                >\n                  Google Play\n                </Button>\n              </a>\n            )}\n\n            {iosApp && (\n              <a href={iosApp.url}>\n                <Button\n                  className=\"finish__view__apps__propagation__button\"\n                  color=\"secondary\"\n                >\n                  App Store\n                </Button>\n              </a>\n            )}\n          </div>\n        )}\n        <CenteredButtonContainer>{renderHomeButton()}</CenteredButtonContainer>\n      </Desktop>\n\n      <Mobile>\n        <div\n          className=\"finish__view__submit__line\"\n          style={{ textAlign: 'center' }}\n        >\n          <div className=\"finish__view__submit__line__strip\" />\n          {renderHomeButton()}\n        </div>\n      </Mobile>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport Pacman from '../../common/Pacman'\nimport { QOrderFinishQuery, useQOrderFinish } from '../../graph/generated'\nimport { useEmptyOrderRedirect } from '../../hooks/useEmptyOrderRedirect'\n\ninterface IProps {\n  render(result: QOrderFinishQuery): ReactNode\n}\n\nexport const FinishViewLoader: React.FC<IProps> = ({ render }) => {\n  const { order } = useRoot()\n  useEmptyOrderRedirect()\n\n  const { data, loading } = useQOrderFinish({\n    branchId: order.branchId!,\n    orderId: order.orderId!,\n  })\n\n  if (loading) {\n    return <Pacman />\n  }\n\n  return render(data)\n}\n","import { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport {\n  FOrderFinishedFragment,\n  FOrderFinishedItems,\n  FOrderFinishedOrderPayments,\n  PaymentTypeEnum,\n} from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: FOrderFinishedFragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.FC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = (paymentType: PaymentTypeEnum) => (\n  payment: FOrderFinishedOrderPayments,\n) => payment.paymentMethod.paymentType.enum === paymentType\n\nfunction getPaymentInfo({ orderPayments }: FOrderFinishedFragment) {\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Credit))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({ orderPayments, totalSum }: FOrderFinishedFragment) {\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentTypeEnum.Credit))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: FOrderFinishedItems) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { QOrderFinishCompanyBranch } from '../../graph/generated'\n\ninterface IProps {\n  branch: QOrderFinishCompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.FC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.FC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { useGoogleMap } from '@react-google-maps/api'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { GeoPoint, gpsToLatLngLit } from '../../../helpers/gps'\n\nexport function useMapPanning() {\n  const { map } = useRoot()\n  const mapRef = useGoogleMap()\n\n  const prevGps = React.useRef<Maybe<GeoPoint>>(null)\n\n  const panToGps = (gps: GeoPoint) => {\n    if (!mapRef) {\n      map.log('cannot pan map as ref is not available')\n      return\n    }\n    const latLng = gpsToLatLngLit(gps)\n    map.log('panning to %j', latLng)\n    mapRef.panTo(latLng)\n    prevGps.current = gps\n  }\n\n  return (gps: GeoPoint) => {\n    const prev = prevGps.current\n    if (\n      !prev ||\n      (prev.latitude !== gps.latitude && prev.longitude !== gps.longitude)\n    ) {\n      panToGps(gps)\n    }\n  }\n}\n","import { OverlayView } from '@react-google-maps/api'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { FPickupBranchFragment } from '../graph/generated'\nimport { gpsToLatLng } from '../helpers/gps'\n\ninterface IProps {\n  branch: FPickupBranchFragment\n  onClick?: () => void\n}\n\nconst StyledPickupMapMarker = styled.div`\n  cursor: pointer;\n  color: white;\n  opacity: 0.5;\n\n  &::before {\n    font-size: 1.3rem;\n    margin: 0;\n    padding: 0.5rem;\n    background-color: #ff0000;\n    border-radius: 1rem;\n  }\n`\n\nexport const MapBranchMarker: React.FC<IProps> = ({ branch, onClick }) => {\n  return (\n    <OverlayView\n      position={gpsToLatLng(branch.gps)}\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n      getPixelPositionOffset={(width, height) => ({\n        x: width === 0 ? -12 : -(width / 2),\n        y: height === 0 ? -12 : -(height / 2),\n      })}\n    >\n      <StyledPickupMapMarker\n        className=\"flaticon-restaurant\"\n        data-testid=\"PickupMapMarker\"\n        title={branch.name}\n        onClick={onClick}\n      />\n    </OverlayView>\n  )\n}\n","import { useApolloClient } from '@speedlo/graphql'\n\nimport { useRoot } from '../app/useRoot'\nimport {\n  FCartGoodsItems,\n  FCartPresencePresence,\n  FRecipeFragment,\n  FRecipeFragmentDoc,\n  MAddToCartMutation,\n  MAddToCartVariables,\n  QCartDocument,\n  QCartQuery,\n  QCartVariables,\n  useMAddToCart,\n} from '../graph/generated'\n\nlet counter = 1\n\nconst NO_SIDEDISHES = []\n\nexport function useAddToCart() {\n  const { order, cart: cartModel } = useRoot()\n  const client = useApolloClient()\n\n  const [addToCart] = useMAddToCart({\n    context: { noBatch: true },\n  })\n\n  const executeAddToCart = (\n    recipeId: ID,\n    sideDishes: RoA<ID> = NO_SIDEDISHES,\n  ) => {\n    const variables: MAddToCartVariables = {\n      orderId: order.orderId!,\n      recipeId,\n      sideDishes,\n      withGoods: cartModel.withGoods,\n      withPresence: cartModel.withPresence,\n    }\n    return addToCart(variables, {\n      optimisticResponse: makeOptimisticResponse(variables),\n    })\n  }\n\n  return executeAddToCart\n\n  function makeOptimisticResponse(\n    variables: MAddToCartVariables,\n  ): MAddToCartMutation | undefined {\n    const current = client.readQuery<QCartQuery, QCartVariables>(\n      {\n        query: QCartDocument,\n        variables: {\n          orderId: variables.orderId,\n          withGoods: cartModel.withGoods,\n          withPresence: cartModel.withPresence,\n        },\n      },\n      true,\n    )\n    if (!current) {\n      return undefined\n    }\n    const id = `-${counter++}`\n    const addPresence = (): RoA<FCartPresencePresence> => {\n      if (!cartModel.withPresence) {\n        return current.order.presence\n      }\n      return [\n        ...current.order.presence,\n        {\n          __typename: 'OrderRecipe',\n          id,\n          recipe: {\n            __typename: 'Recipe',\n            id: variables.recipeId,\n          },\n        },\n      ]\n    }\n    const addItem = (): RoA<FCartGoodsItems> => {\n      if (!cartModel.withGoods) {\n        return current.order.items\n      }\n      const recipe = client.readFragment<FRecipeFragment>(\n        {\n          id: `Recipe-${variables.recipeId}`,\n          fragment: FRecipeFragmentDoc,\n          fragmentName: 'FRecipe',\n        },\n        true,\n      )\n      if (!recipe) {\n        return current.order.items\n      }\n      return [\n        ...current.order.items,\n        {\n          __typename: 'OrderRecipe',\n          automatic: false,\n          id,\n          price: {\n            __typename: 'PriceConverted',\n            formattedValue: '???',\n            value: -1,\n          },\n          recipe,\n          sideDishes: [],\n        },\n      ]\n    }\n    return {\n      __typename: 'Mutation',\n      add: {\n        ...current.order,\n        countWares: current.order.countWares + 1,\n        totalSum: {\n          ...current.order.totalSum,\n          value: -1,\n        },\n        items: addItem(),\n        presence: addPresence(),\n      },\n    }\n  }\n}\n","import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\ninterface IProps extends ButtonProps {\n  isSelected: boolean\n  width: string\n}\n\nconst PickerButtonStyled = styled(({ isSelected, width, ...props }) => (\n  <Button {...props} />\n))`\n  border-radius: 0.6rem;\n  margin: 0.5rem;\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n  width: ${props => props.width};\n  @media (max-width: 370px) {\n    width: 100%;\n  }\n  &.btn-outline-secondary {\n    color: #2e2e2e;\n    border-color: #d4d4d4;\n  }\n  &.btn-outline-secondary.active {\n    color: white;\n  }\n`\n\nexport const PickerButton: React.FC<IProps> = ({\n  isSelected,\n  onSelect,\n  children,\n  ...buttonProps\n}) => {\n  return (\n    <PickerButtonStyled isSelected={isSelected} {...buttonProps}>\n      {children}\n    </PickerButtonStyled>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from './Responsive'\n\ninterface IProps {}\n\nconst StyledButtonStrip = styled.div`\n  margin: 0;\n  margin-bottom: 1rem;\n  text-align: center;\n  position: sticky;\n  bottom: 1rem;\n\n  ${mediaMobile`\n      position: fixed;\n      bottom: 0;\n      width: 100%;\n  `}\n\n  div.strip {\n    background-color: #d4d4d4;\n    position: relative;\n    top: 3.2rem;\n    z-index: 0;\n    height: 1.6rem;\n    width: 100%;\n  }\n  button {\n    margin: 1rem;\n    padding: 0.8rem 1.6rem;\n    z-index: 1;\n    position: relative;\n  }\n`\n\nexport const ButtonStrip: React.FC<IProps> = ({ children }) => {\n  return (\n    <StyledButtonStrip>\n      <div className=\"strip\" />\n      {children}\n    </StyledButtonStrip>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useAutorun, useDebounceCallback } from '@speedlo/hooks'\nimport { useVamAgreements } from '@speedlo/ui'\nimport { useFormikContext } from 'formik'\nimport React from 'react'\n\nimport { useQOrderFormAgreements } from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { OrderAgreementBox } from './OrderAgreementBox'\nimport { OrderFormValues, TAgreement } from './OrderFormSetup'\n\nconst EMPTY_ARRAY = []\n\nexport const OrderAgreements: React.FC = () => {\n  const orderModel = useOrderModel()\n  const formik = useFormikContext<OrderFormValues>()\n  const [variables, setVariables] = React.useState(extractVariables)\n  const updateVariablesLater = useDebounceCallback(setVariables, 2000)\n\n  function extractVariables() {\n    const { firstname, lastname, phonePrefix, phone } = formik.values\n    return {\n      input: {\n        orderId: orderModel.orderId!,\n        firstname,\n        lastname,\n        phone: `${phonePrefix.trim()}${phone.trim()}`,\n      },\n    }\n  }\n\n  React.useEffect(() => {\n    updateVariablesLater(extractVariables())\n    return () => updateVariablesLater.clear()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formik.values, updateVariablesLater])\n\n  const { data, errors, loading } = useQOrderFormAgreements(variables, {\n    skip: !variables.input.orderId,\n  })\n\n  // remember latest agreements to prevent rendering to blank on update of form values\n  const agreements = React.useRef<RoA<TAgreement>>(EMPTY_ARRAY)\n  const hasFailed = errors && errors.length > 0\n\n  if (!(loading || hasFailed)) {\n    agreements.current = data.agreements\n  }\n\n  React.useEffect(() => {\n    if (agreements.current.length > 0 && !orderModel.isVamInitialized) {\n      orderModel.initVam()\n    }\n  })\n\n  const { state, renderVamAgreements } = useVamAgreements(agreements.current)\n\n  useAutorun(() => {\n    // confirmed agreements are passed to formik to be collected for a submission later\n    const confirmed = Array.from(state.confirmedAgreements)\n    setImmediate(() => {\n      formik.setFieldValue('agreements', confirmed)\n    })\n  })\n\n  // setup validation for mandatory agreements\n  React.useEffect(() => {\n    formik.registerField('agreements', {\n      validate: () => {\n        const result = agreements.current.some(agreement => {\n          return (\n            agreement.isMandatory &&\n            !state.confirmedAgreements.has(agreement.id)\n          )\n        })\n        return result ? 'mandatory' : ''\n      },\n    })\n    return () => formik.unregisterField('agreements')\n  }, [formik, state])\n\n  if (hasFailed) {\n    return (\n      <Trans>\n        Failed retrieving company agreements. Please try again later or contact\n        us.\n      </Trans>\n    )\n  }\n\n  return renderVamAgreements({ AgreementBox: OrderAgreementBox })\n}\n","import { fakerCZ } from '@speedlo/testing/dist/faker'\nimport { useFormikContext } from 'formik'\nimport React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { NOTE_MAX_LENGTH, OrderFormValues } from './OrderFormSetup'\n\nexport const OrderFormAutoFill: React.FC = () => {\n  const orderModel = useOrderModel()\n  const formik = useFormikContext<OrderFormValues>()\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n  return (\n    <SecondaryButton\n      style={{ marginBottom: '0.5rem' }}\n      onClick={() => {\n        formik.setTouched({\n          firstname: true,\n          lastname: true,\n          email: true,\n          phone: true,\n          phonePrefix: true,\n          note: true,\n        })\n        const values = {\n          firstname: fakerCZ.name.firstName(),\n          lastname: fakerCZ.name.lastName(),\n          email: fakerCZ.internet.email(),\n          phone: fakerCZ.phone.phoneNumberFormat(0).replace(/\\s/g, ''),\n          phonePrefix: '+420',\n          note: fakerCZ.lorem.sentence().slice(0, NOTE_MAX_LENGTH - 1),\n          agreements: [],\n        }\n\n        formik.setValues(values)\n        formik.validateForm(values)\n\n        if (orderModel.usingPaymentMethodWithTips) {\n          orderModel.setTips(15)\n        }\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  )\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../app/useRoot'\n\nexport const OrderErrorModal: React.FC = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <Modal\n      isOpen={order.hasErrors}\n      toggle={order.clearErrors}\n      className=\"modal__container\"\n    >\n      <ModalHeader\n        toggle={order.clearErrors}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Order can not be completed</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {order.hasErrors &&\n            order.submitErrors!.map((error, idx) => (\n              <div key={idx}>{error}</div>\n            ))}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <Button\n            className=\"modal__body__button\"\n            color=\"primary\"\n            onClick={order.clearErrors}\n          >\n            <Trans>I understand</Trans>\n          </Button>\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  ))\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <AlertModal isOpen={orderModel.isGoPayChecking} headerText=\"GoPay platba\">\n      <TextPadding>\n        <Trans>Checking your GoPay payment, please wait...</Trans>\n      </TextPadding>\n      <Pacman noMargin={true} />\n    </AlertModal>\n  ))\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport FormGroup from 'reactstrap/lib/FormGroup'\nimport Input from 'reactstrap/lib/Input'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useMOrderTipUpdate } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\nconst StyledOrderFormTipInput = styled.div`\n  margin: 0.8rem 0 1.4rem 0;\n`\n\nexport const OrderFormTipInput = observer(() => {\n  const { order, cart } = useRoot()\n  const [updateTip] = useMOrderTipUpdate()\n\n  // TODO: Vyresit aby se nespoustelo po navratu z GoPay\n  useReaction(\n    () => (order.usingPaymentMethodWithTips ? Number(order.tips) : 0),\n    tips => {\n      updateTip({\n        tips,\n        orderId: order.orderId!,\n        withGoods: cart.withGoods,\n      })\n    },\n  )\n\n  if (!order.usingPaymentMethodWithTips) {\n    return null\n  }\n\n  return (\n    <StyledOrderFormTipInput>\n      <FormGroup>\n        <Input\n          type=\"select\"\n          value={order.tips}\n          onChange={ev => {\n            order.setTips(Number.parseInt(ev.target.value, 10))\n          }}\n          disabled={order.disableInteraction}\n          data-testid=\"orderTipsSelect\"\n        >\n          <option value={0}>{i18n.t`Without tips`}</option>\n          <option value={5}>{i18n.t`Tips 5%`}</option>\n          <option value={10}>{i18n.t`Tips 10%`}</option>\n          <option value={15}>{i18n.t`Tips 15%`}</option>\n          <option value={20}>{i18n.t`Tips 20%`}</option>\n          <option value={25}>{i18n.t`Tips 25%`}</option>\n        </Input>\n      </FormGroup>\n    </StyledOrderFormTipInput>\n  )\n})\n","import { useOrderPromoCodes } from '@speedlo/ui'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { SecondaryButton } from '../../common/Buttons'\nimport {\n  useMOrderPromoAdd,\n  useMOrderPromoRemove,\n  useQOrderPromoCodes,\n} from '../../graph/generated'\nimport { useAlertModal } from '../../hooks/useAlertModal'\nimport { i18n } from '../../i18n'\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport const OrderPromoInput = React.memo(() => {\n  const { order: orderModel, cart } = useRoot()\n  const [errorModal, showError] = useAlertModal()\n\n  const { data, loading } = useQOrderPromoCodes(\n    { orderId: orderModel.orderId! },\n    { skip: !orderModel.orderId },\n  )\n  const [addCodeMutation] = useMOrderPromoAdd()\n  const [removeCodeMutation] = useMOrderPromoRemove()\n\n  const onCodeAdd = React.useCallback(\n    async (code: string) => {\n      if (!orderModel.orderId) {\n        return\n      }\n      return addCodeMutation({\n        code,\n        orderId: orderModel.orderId,\n        withGoods: cart.withGoods,\n      })\n    },\n    [addCodeMutation, cart, orderModel],\n  )\n\n  const onCodeRemove = async (codeId: ID) => {\n    if (orderModel.orderId) {\n      removeCodeMutation({\n        codeId,\n        orderId: orderModel.orderId,\n        withGoods: cart.withGoods,\n      })\n    }\n  }\n\n  const onCodeErrors = (code, errors) => {\n    showError(\n      i18n.t`Promo code \"${code}\" is invalid`,\n      <div>\n        {errors.map(msg => (\n          <div key={msg}>{msg}</div>\n        ))}\n      </div>,\n    )\n  }\n\n  const { inputProps, inputRef } = useOrderPromoCodes({\n    onCodeAdd,\n    onCodeErrors,\n    getValidatingMessage: code => i18n.t`Validating promo code ${code}...`,\n  })\n\n  const codes = loading ? [] : data.order.promoCodes\n\n  return useObserver(() => (\n    <FormGroup>\n      {errorModal}\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          placeholder={i18n.t`Promo codes`}\n          {...inputProps}\n          disabled={inputProps.disabled || orderModel.disableInteraction}\n        />\n      </InputGroup>\n      <CodesPanel data-testid=\"promoCodesPanel\">\n        {codes.map(({ id, code }) => (\n          <SecondaryButton\n            key={id}\n            role=\"button\"\n            disabled={orderModel.disableInteraction}\n            onClick={() => onCodeRemove(id)}\n          >\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  ))\n})\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useFormikContext } from 'formik'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { OrderStateCategoryEnum, useQOrderForm } from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\n\ninterface IProps {\n  children: ReactNode\n}\n\nexport const OrderSubmitButton: React.FC<IProps> = ({ children }) => {\n  const formik = useFormikContext()\n  const { history } = useRouterContext()\n  const orderModel = useOrderModel()\n\n  const { data, loading } = useQOrderForm(\n    { orderId: orderModel.orderId! },\n    { skip: !orderModel.orderId },\n  )\n\n  React.useEffect(() => {\n    if (!orderModel.hasOrder || loading) {\n      return\n    }\n    // ensure order is still in cart, otherwise redirect user away\n    if (data.order.orderStateCategory !== OrderStateCategoryEnum.InCart) {\n      history.replace('/')\n    }\n  })\n\n  const canSubmit =\n    !loading && data.order.countWares > 0 && orderModel.isVamInitialized\n\n  return (\n    <>\n      <PrimaryButton\n        type=\"submit\"\n        color=\"primary\"\n        size=\"md\"\n        disabled={!canSubmit || formik.isSubmitting}\n        data-testid=\"OrderSubmitButton\"\n      >\n        {formik.isSubmitting ? (\n          <Spinner name=\"circle\" fadeIn=\"none\" color=\"#ccc\" />\n        ) : (\n          children\n        )}\n      </PrimaryButton>\n    </>\n  )\n}\n","import { DateFormat, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { useOrderModel } from '../../hooks/useOrderModel'\n\nconst StyledOrderTimeButtons = styled.div`\n  margin: 0 0 1.4rem 0;\n  button {\n    position: relative;\n    padding-top: 0.3rem;\n    margin-bottom: 0.2rem;\n    height: 2.8rem;\n  }\n  button:first-of-type {\n    margin-right: 0.8rem;\n  }\n`\n\nexport const OrderTimeButtons: React.FC = () => {\n  const orderModel = useOrderModel()\n\n  return useObserver(() => {\n    if (!orderModel.delayedOrderEnabled) {\n      return null\n    }\n    const isDelayed = orderModel.deliverAt !== null\n    return (\n      <StyledOrderTimeButtons>\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonNow\"\n          selected={!isDelayed}\n          disabled={orderModel.disableInteraction}\n          onClick={() => orderModel.setDeliverAt(null)}\n        >\n          <Trans>When possible</Trans>\n        </SelectButtonThemed>\n        <SelectButtonThemed\n          data-testid=\"orderTimeButtonLater\"\n          selected={isDelayed}\n          disabled={orderModel.disableInteraction}\n          onClick={orderModel.openTimePicker}\n        >\n          {isDelayed ? (\n            <DateFormat\n              value={orderModel.deliverAt}\n              format={{ weekday: 'long', hour: 'numeric', minute: 'numeric' }}\n            />\n          ) : (\n            <Trans>Choose time</Trans>\n          )}\n        </SelectButtonThemed>\n      </StyledOrderTimeButtons>\n    )\n  })\n}\n","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.FC<IProps> = () => {\n  const { user } = useRoot()\n\n  return useObserver(() => {\n    if (user.rememberForm !== null) {\n      return null\n    }\n    return (\n      <StorageNotice\n        data-testid=\"OrderFormStorageNotice\"\n        className=\"animated slideInUp\"\n      >\n        <p>\n          <Trans>\n            This app is using secure storage for keeping filled form data. It's\n            not cookies, these are stored in your browser only.\n          </Trans>\n        </p>\n\n        <NoticeButton\n          color=\"success\"\n          size=\"sm\"\n          onClick={user.setFormRememberYes}\n          data-testid=\"orderFormStorageNotice__Yes\"\n        >\n          <Trans>Always remember</Trans>\n        </NoticeButton>\n        <NoticeButton\n          color=\"secondary\"\n          size=\"sm\"\n          onClick={user.setFormRememberNo}\n          data-testid=\"orderFormStorageNotice__No\"\n        >\n          <Trans>Do not store</Trans>\n        </NoticeButton>\n      </StorageNotice>\n    )\n  })\n}\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n}\n\nexport const AddressSubmit: React.FC<IProps> = ({ enabled, onClick }) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      data-testid=\"AddressSubmit\"\n    >\n      {i18n.t`Confirm address`}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import { cn } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Input, InputProps } from 'reactstrap'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useDebounce } from '../../../hooks/useDebounce'\n\ninterface IProps {\n  onSearch: () => void\n  isVisible: boolean\n  inputProps: InputProps\n}\n\nexport const AddressSearchInput = observer<IProps>(\n  ({ onSearch, inputProps, isVisible }) => {\n    const { location } = useRoot()\n    const inputRef = React.useRef<Maybe<HTMLInputElement>>(null)\n\n    React.useEffect(\n      function autoFocus() {\n        if (isVisible && inputRef.current !== null) {\n          inputRef.current.focus()\n        }\n      },\n      [isVisible],\n    )\n\n    const onSearchDebounced = useDebounce(onSearch, 2000)\n\n    React.useEffect(() => {\n      return () => onSearchDebounced.clear()\n    }, [onSearchDebounced])\n\n    const onChange = function searchOnChangeDebounced(\n      ev: React.ChangeEvent<HTMLInputElement>,\n    ) {\n      const search = ev.target.value || ''\n      location.setSearchValue(search)\n      if (search.trim().length === 0) {\n        location.clearAddress()\n      }\n      onSearchDebounced()\n    }\n\n    const onKeyPress = function searchOnEnterKey(\n      ev: React.KeyboardEvent<HTMLInputElement>,\n    ) {\n      if (ev.key === 'Enter') {\n        onSearchDebounced.clear()\n        onSearch()\n      }\n    }\n\n    const onFocus = function autoSelectOnFocus() {\n      inputRef.current!.select()\n    }\n\n    return (\n      <Input\n        className={cn({ hidden: !isVisible })}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        onFocus={onFocus}\n        value={location.searchValue}\n        innerRef={inputRef}\n        data-testid=\"SearchInput\"\n        {...inputProps}\n      />\n    )\n  },\n)\n","import debounce from 'debounce'\nimport React from 'react'\n\nexport function useDebounce(\n  cb: AnyFunction,\n  time: number = 300,\n  deps: React.DependencyList = [],\n) {\n  const debounced = React.useCallback(debounce(cb, time), [...deps, cb, time])\n\n  React.useEffect(() => {\n    return () => {\n      debounced.clear()\n    }\n  }, [debounced])\n\n  return debounced\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useAlertModal } from '../../../hooks/useAlertModal'\nimport { i18n } from '../../../i18n'\n\nexport const GeolocationButton = observer(() => {\n  const { location } = useRoot()\n\n  const [alert, makeAlert] = useAlertModal()\n\n  if (!location.isGeolocationAvailable || location.isResolving) {\n    return null\n  }\n\n  const attemptGeolocation = () => {\n    location.log('geolocating...')\n    navigator.geolocation.getCurrentPosition(\n      ({ coords }) => {\n        const { latitude, longitude } = coords\n        location.log(\n          'geolocated at coords %s, %s (acc: %s)',\n          coords.latitude,\n          coords.longitude,\n          coords.accuracy,\n        )\n        location.setGeolocationPoint({ latitude, longitude })\n      },\n      err => {\n        location.log('failed geolocation', err)\n        location.disableGeolocation()\n        makeAlert(\n          i18n.t`Geolocation failed`,\n          i18n.t`Your browser does not support geolocation.`,\n        )\n      },\n      {\n        enableHighAccuracy: true,\n        maximumAge: 60 * 1000,\n      },\n    )\n  }\n\n  return (\n    <>\n      {alert}\n      <div className=\"gps\" onClick={attemptGeolocation}>\n        <span className=\"flaticon-gps\" />\n      </div>\n    </>\n  )\n})\n\nexport default GeolocationButton\n","import { cn } from '@speedlo/ui'\nimport React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.FC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  return (\n    <div\n      data-testid=\"ResolvedAddress\"\n      className={cn('resolved__address', {\n        wait: isResolving,\n        hidden: !isVisible,\n      })}\n      onClick={isResolving ? undefined : onValidClick}\n    >\n      {isResolving ? <Spinner name=\"ball-beat\" fadeIn=\"none\" /> : address}\n    </div>\n  )\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { debounce } from 'debounce'\nimport { reaction } from 'mobx'\nimport { useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\n\ninterface IAddressSearchOptions {\n  count?: number\n  watchLocation?: boolean\n}\n\nexport type AddressSearchResult = ReturnType<typeof mapResult>\n\nconst urlCache = new Map()\n\nexport function useAddressSearch({\n  count = 1,\n  watchLocation = false,\n}: IAddressSearchOptions = {}) {\n  const { map, location } = useRoot()\n\n  const state = useLocalStore(() => ({\n    results: null as RoA<AddressSearchResult> | null,\n    phrase: location.searchValue,\n    searching: false,\n    get url() {\n      const params = [\n        `count=${count}`,\n        `lon=${map.longitude}`,\n        `lat=${map.latitude}`,\n        `zoom=${map.zoom}`,\n        `lang=cs,sk,en`,\n        `enableCategories=1`,\n      ]\n      return `https://api.mapy.cz/suggest/?${params.join('&')}`\n    },\n  }))\n\n  const doFetch = React.useCallback(() => {\n    if (state.phrase.length === 0) {\n      state.results = null\n      return\n    }\n\n    location.log(`searching phrase: ${state.phrase}`)\n    const url = `${state.url}&phrase=${state.phrase}`\n\n    if (urlCache.has(url)) {\n      state.results = urlCache.get(url)\n      return\n    }\n\n    state.searching = true\n\n    fetch(url)\n      .then(resp => resp.json())\n      .then(json => {\n        const results = json.result.filter(validateResult).map(mapResult)\n        urlCache.set(url, results)\n        state.results = results\n      })\n      .finally(() => {\n        state.searching = false\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location])\n\n  const debouncedFetch = React.useRef(debounce(doFetch, 500))\n\n  const onSearch = React.useCallback(\n    (nextPhrase: string = location.searchValue) => {\n      location.log(`onSearch ${nextPhrase}`)\n      state.phrase = nextPhrase.trim()\n      debouncedFetch.current.clear()\n      doFetch()\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [doFetch, location],\n  )\n\n  useReaction(\n    () => location.searchValue,\n    value => {\n      if (value.length === 0) {\n        state.phrase = ''\n        state.results = null\n        debouncedFetch.current.clear()\n      }\n    },\n  )\n\n  React.useEffect(\n    () =>\n      reaction(\n        () => state.url,\n        () => {\n          if (watchLocation) {\n            debouncedFetch.current()\n          }\n        },\n      ),\n    [state.url, watchLocation],\n  )\n\n  return { ...state, onSearch }\n}\n\nfunction validateResult({ userData }) {\n  const { latitude, longitude } = userData\n  return latitude && longitude\n}\n\nfunction mapResult({ category, userData }) {\n  const {\n    id,\n    latitude,\n    longitude,\n    suggestFirstRow,\n    suggestSecondRow,\n    municipality,\n    district,\n    country,\n  } = userData\n\n  const suffix =\n    [municipality, district, country, suggestSecondRow].find(Boolean) || ''\n\n  return {\n    id,\n    category,\n    gps: {\n      latitude,\n      longitude,\n    },\n    address: `${suggestFirstRow}${suffix ? `, ${suffix}` : ''}`,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { useReaction } from '@speedlo/hooks'\nimport { cn } from '@speedlo/ui'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useAddressSearch } from './hooks/useAddressSearch'\n\ninterface IProps {}\n\nconst Styled = styled.div`\n  position: absolute;\n  margin-top: 0.1rem;\n\n  > div,\n  button.hint:hover {\n    background-color: #ffffffaa;\n  }\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    border: 1px solid transparent;\n    border-radius: 0.4rem;\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    max-width: 25rem;\n    text-align: left;\n\n    & > p {\n      font-size: 0.8rem;\n      color: gray;\n    }\n\n    button {\n      &:hover,\n      &:hover:focus {\n        text-decoration: none;\n      }\n    }\n\n    button.done {\n      color: darkgray;\n    }\n  }\n\n  button.hint {\n    color: coral;\n    text-shadow: 0.5px 0.5px darkgray;\n    &:hover {\n      text-decoration: none;\n      transition: background-color 0.5s ease;\n    }\n  }\n`\n\nexport const ExtraAddressResult = observer<IProps>(props => {\n  const { location } = useRoot()\n  const state = useLocalStore(() => ({\n    open: false,\n  }))\n\n  const { results, searching, onSearch } = useAddressSearch({\n    count: 5,\n    watchLocation: state.open,\n  })\n\n  useReaction(\n    () => state.open,\n    open => {\n      if (open) {\n        onSearch()\n      }\n    },\n  )\n\n  useReaction(\n    () => location.searchValue,\n    () => {\n      state.open = false\n    },\n  )\n\n  if (!location.hasSearchValue) {\n    return null\n  }\n\n  const usefulResults =\n    results && results.filter(({ address }) => address !== location.address)\n\n  const renderHint = () => (\n    <Button\n      className=\"hint\"\n      color=\"link\"\n      onClick={() => {\n        state.open = true\n      }}\n    >\n      <Trans>Looking for a different address?</Trans>\n    </Button>\n  )\n\n  const renderResults = () => (\n    <div>\n      <p>\n        <Trans>\n          Hint: Try moving map around and zooming closer to your location to\n          improve these results.\n        </Trans>\n      </p>\n      {searching && <div>...</div>}\n      {usefulResults &&\n        usefulResults.map(result => (\n          <Button\n            size=\"sm\"\n            color=\"link\"\n            key={result.id}\n            onClick={() => {\n              location.setSearchResult(result)\n              state.open = false\n            }}\n          >\n            {result.address}\n          </Button>\n        ))}\n      <Button\n        size=\"sm\"\n        color=\"link\"\n        onClick={() => {\n          state.open = false\n        }}\n        className=\"done\"\n      >\n        {usefulResults && usefulResults.length === 0 ? (\n          <Trans>No match for map location</Trans>\n        ) : (\n          <Trans>I don't see anything useful here.</Trans>\n        )}\n      </Button>\n    </div>\n  )\n\n  return (\n    <Styled\n      className={cn('animated', {\n        bounceInLeft: state.open,\n        bounceIn: !state.open,\n      })}\n      key={state.open.toString()}\n    >\n      {state.open ? renderResults() : renderHint()}\n    </Styled>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { mediaDesktop } from '../../common/Responsive'\nimport { gpsToLatLngLit } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { AddressSearchInput } from './destination/AddressSearchInput'\nimport GeolocationButton from './destination/GeolocationButton'\nimport { ResolvedAddress } from './destination/ResolvedAddress'\nimport { ExtraAddressResult } from './ExtraAddressResult'\nimport { useAddressSearch } from './hooks/useAddressSearch'\n\nconst Styled = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n\n  div.container {\n    display: flex;\n    border-radius: 1rem;\n    border: 1px solid #d4d4d4;\n    background-color: white;\n    ${mediaDesktop`\n    height: 2.3rem;\n    `}\n  input {\n    height: auto;\n    background: transparent;\n    border: none;\n    &:focus {\n      box-shadow: initial;\n    }\n    &.hidden {\n      display: none;\n    }\n  }\n\n  div.gps {\n    color: ${({ theme }) => theme.secondary};\n    cursor: pointer;\n    position: relative;\n    top: 0.2rem;\n  }\n\n  div.resolved__address {\n    margin: 0.4rem 0.7rem 0.4rem 0.7rem;\n    font-size: 1rem;\n    color: green;\n    width: 100%;\n    cursor: pointer;\n    &.hidden {\n      display: none;\n    }\n    &.wait {\n      display: flex;\n      justify-content: center;\n      font-size: 0.5rem;\n      cursor: wait;\n    }\n  }\n\n  .alert {\n    pointer-events: none;\n    margin-bottom: 0;\n  }\n`\n\nexport const DeliveryAddressSearch = observer(() => {\n  const { map, location } = useRoot()\n\n  const { results, searching, onSearch } = useAddressSearch()\n\n  React.useEffect(() => {\n    if (searching) {\n      location.setIsResolving(searching)\n    }\n  }, [location, searching])\n\n  React.useEffect(() => {\n    if (results === null) {\n      return\n    }\n\n    if (results.length === 0) {\n      location.log('no result from direct geocoder api')\n      location.setAsNotResolved()\n      return\n    }\n\n    const [singleResult] = results\n    const {\n      category,\n      gps: { latitude, longitude },\n    } = singleResult\n\n    if (map.mapRef) {\n      map.log(`panning to result gps ${latitude} / ${longitude}`)\n      map.mapRef.panTo(gpsToLatLngLit(singleResult.gps))\n    }\n\n    if (!(category && category.startsWith('address'))) {\n      location.log('result with category %s', category)\n      location.setAsNotAddress()\n      return\n    }\n\n    location.log(`found address ${singleResult.address}`)\n    if (location.latitude !== latitude && location.longitude !== longitude) {\n      location.resetResolution()\n    }\n    location.setSearchResult(singleResult)\n  }, [location, map, results])\n\n  return (\n    <Styled>\n      <div className=\"container\">\n        <ResolvedAddress\n          address={location.address || ''}\n          isVisible={location.hasAddress}\n          isResolving={location.isResolving}\n          onValidClick={location.clearAddress}\n        />\n        <AddressSearchInput\n          inputProps={{\n            placeholder: i18n.t`Type address or choose it from map`,\n            autoComplete: 'shipping street-address',\n          }}\n          onSearch={onSearch}\n          isVisible={!(location.hasAddress || location.isResolving)}\n        />\n        <GeolocationButton />\n      </div>\n      <ErrorMessage />\n      <ExtraAddressResult />\n    </Styled>\n  )\n})\n\nfunction ErrorMessage() {\n  const { location } = useRoot()\n  if (!location.hasResolutionResult) {\n    return null\n  }\n  if (location.isResolved === false) {\n    return (\n      <Alert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </Alert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <Alert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </Alert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <Alert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </Alert>\n    )\n  }\n  return null\n}\n","import { Marker } from '@react-google-maps/api'\nimport { useReaction, useWhen } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { GeoPoint, latLngToGps } from '../../helpers/gps'\nimport { useLocationResolver } from '../../hooks/useLocationResolver'\nimport { useFoodMenuQuery } from '../foodMenu/hooks/useFoodMenuQuery'\nimport { AddressSubmit } from './AddressSubmit'\nimport { DeliveryAddressSearch } from './DeliveryAddressSearch'\nimport { useDeliveryMapPanning } from './hooks/useDeliveryMapPanning'\nimport { useOrderCreate } from './hooks/useOrderCreate'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst StyledDeliveryMap = styled.div`\n  .delivery__map__address {\n    position: absolute;\n    top: 0;\n    left: 2.3rem;\n    right: 2.3rem;\n  }\n  .delivery__map__submit {\n    position: absolute;\n    bottom: 3rem;\n    width: 100%;\n  }\n`\n\nexport const DeliveryMap = observer<IProps>(({ onConfirm }) => {\n  const { map, location, business } = useRoot()\n\n  const resolver = useLocationResolver()\n\n  const resolveUserLocation = (gps: GeoPoint) => {\n    location.resetResolution()\n    location.setSearchValue('')\n    location.setLocation(gps)\n  }\n\n  useWhen(\n    () => business.isValid,\n    () => {\n      if (location.hasLocation) {\n        location.log('resolving initial gps')\n        resolver(location.geoPoint!)\n      }\n    },\n  )\n\n  useReaction(\n    () => location.geoPoint,\n    gps => {\n      if (gps) {\n        location.log('resolving on gps change')\n        resolver(gps)\n      }\n    },\n  )\n\n  useReaction(\n    () => map.clickPoint,\n    clickPoint => {\n      if (clickPoint) {\n        location.log(`resolve with clickpoint`)\n        resolveUserLocation(clickPoint)\n        map.clearClickPoint()\n      }\n    },\n  )\n\n  // prefetch food menu when correct address is resolved\n  useFoodMenuQuery(location.isDeliveryAddress ? location.branchId : null)\n  useDeliveryMapPanning()\n\n  const { createDeliveryOrder } = useOrderCreate(onConfirm)\n\n  return (\n    <StyledDeliveryMap data-testid=\"DeliverMap\">\n      {location.latLng ? (\n        <Marker\n          position={location.latLng}\n          draggable={true}\n          onDragEnd={({ latLng }) => {\n            location.log(`resolve with drag`)\n            resolveUserLocation(latLngToGps(latLng))\n          }}\n        />\n      ) : null}\n      <div className=\"delivery__map__address\">\n        <DeliveryAddressSearch />\n      </div>\n      <div className=\"delivery__map__submit\">\n        <AddressSubmit\n          enabled={location.isDeliveryAddress && !location.isResolving}\n          onClick={createDeliveryOrder}\n        />\n      </div>\n    </StyledDeliveryMap>\n  )\n})\n","import React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { useExecutableQResolveLocation } from '../graph/generated'\nimport { GeoPoint } from '../helpers/gps'\n\nexport function useLocationResolver() {\n  const { location } = useRoot()\n\n  const [resolveLocation] = useExecutableQResolveLocation({\n    fetchPolicy: 'cache-first',\n  })\n\n  const resolver = React.useCallback(\n    async (gps: GeoPoint) => {\n      location.setIsResolving(true)\n\n      const data = await resolveLocation({\n        ...location.resolutionTarget,\n        ...gps,\n      })\n\n      if (data !== null) {\n        location.setResolutionResult(data.resolveLocation)\n      }\n      location.setIsResolving(false)\n    },\n    [location, resolveLocation],\n  )\n\n  return resolver\n}\n","import { useAutorun, useReaction } from '@speedlo/hooks'\nimport { useAsObservableSource } from 'mobx-react-lite'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useQInitialDeliveryLocation } from '../../../graph/generated'\nimport { useMapPanning } from './useMapPanning'\n\nexport const useDeliveryMapPanning = () => {\n  const { location } = useRoot()\n  const { data, loading } = useQInitialDeliveryLocation(\n    {},\n    {\n      fetchPolicy: 'cache-first',\n      skip: location.hasAddress,\n    },\n  )\n\n  const source = useAsObservableSource({\n    initial: loading ? null : data.location,\n  })\n\n  const panToGps = useMapPanning()\n\n  useAutorun(() => {\n    if (location.geoPoint) {\n      location.log('pan to user location', location.geoPoint)\n      panToGps(location.geoPoint)\n    } else if (location.geolocationPoint) {\n      location.log('pan to geolocation', location.geolocationPoint)\n      panToGps(location.geolocationPoint)\n    } else if (source.initial && source.initial.gpsCoordinates) {\n      location.log('pan to initial location', source.initial.gpsCoordinates)\n      panToGps(source.initial.gpsCoordinates)\n    }\n  })\n\n  useReaction(\n    () => location.geolocationPoint,\n    gps => {\n      if (gps) {\n        panToGps(gps)\n      }\n    },\n  )\n}\n","import { t } from '@lingui/macro'\nimport React, { CSSProperties } from 'react'\n\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n  isValid: boolean\n}\n\nexport const CategoryValidationMessage: React.FC<IProps> = ({\n  minCount,\n  maxCount,\n  isValid,\n}) => {\n  let message = ''\n  if (minCount === 0) {\n    if (maxCount > 0) {\n      message = i18n._(t`maximum ${maxCount}`)\n    } else {\n      return null\n    }\n  } else if (maxCount === 0) {\n    message = i18n._(t`minimum ${minCount}`)\n  } else if (minCount === maxCount) {\n    const count = minCount\n    message = i18n._(t`only ${count}`)\n  } else {\n    message = i18n._(t`minimum ${minCount} and maximum ${maxCount}`)\n  }\n  const style: CSSProperties = {}\n  if (!isValid) {\n    style.color = 'red'\n  }\n  return (\n    <span style={style}>\n      {'('}\n      {message}\n      {')'}\n    </span>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  onClick(): void\n}\n\nconst StyledSidedishRemoveButton = styled.div`\n  position: absolute;\n  left: -0.6rem;\n  top: -0.4rem;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 1rem;\n  background: ${({ theme }) => theme.primary};\n\n  &:hover {\n    background: ${({ theme }) => theme.primaryHover} !important;\n  }\n  &:active {\n    background: ${({ theme }) => theme.primary} !important;\n  }\n  & .rectangle {\n    width: 45%;\n    position: absolute;\n    top: 45%;\n    left: 30%;\n    height: 4px;\n    background: white;\n  }\n`\nexport const SidedishRemoveButton: React.FC<IProps> = ({\n  onClick,\n  ...props\n}) => {\n  return (\n    <StyledSidedishRemoveButton\n      onClick={onClick}\n      className=\"animated bounceIn\"\n      data-testid=\"SidedishRemoveButton\"\n      {...props}\n    >\n      <div className=\"rectangle\" />\n    </StyledSidedishRemoveButton>\n  )\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { FRecipeDetailSideDishes } from '../../graph/generated'\nimport { SidedishRemoveButton } from './SidedishRemoveButton'\n\ninterface IProps extends ButtonProps {\n  sidedish: FRecipeDetailSideDishes\n  count: number\n  isSelected: boolean\n  canBeSelected: boolean\n  canBeRemoved: boolean\n  onAdd(): void\n  onRemove(): void\n}\n\nconst StyledSidedishCheckbox = styled.div`\n  display: inline-block;\n  position: relative;\n\n  & .name {\n    float: left;\n    text-align: left;\n    white-space: normal;\n    max-width: 13rem;\n  }\n\n  & .price {\n    font-weight: bold;\n    float: right;\n  }\n\n  & .count {\n    display: inline-block;\n    margin-left: 0.5rem;\n  }\n`\n\nexport const SidedishCheckbox = React.memo<IProps>(\n  ({\n    sidedish,\n    count,\n    canBeSelected,\n    canBeRemoved,\n    className,\n    onAdd,\n    onRemove,\n    ...buttonProps\n  }) => {\n    const onClick = React.useCallback(() => {\n      if (canBeSelected) {\n        onAdd()\n      }\n    }, [canBeSelected, onAdd])\n    return (\n      <StyledSidedishCheckbox className={className}>\n        <PickerButton\n          onClick={onClick}\n          disabled={!canBeSelected}\n          size=\"xs\"\n          outline={true}\n          width=\"17.5rem\"\n          data-testid={`sidedishCheckbox__${sidedish.id}`}\n          {...buttonProps}\n        >\n          <div className=\"name\">\n            {sidedish.nameLabel}\n            <span key={count} className=\"animated heartBeat count\">\n              {count > 1 && `${count}x`}\n            </span>\n          </div>\n          <div className=\"price\">{sidedish.price.formattedValue}</div>\n        </PickerButton>\n        {canBeRemoved && <SidedishRemoveButton onClick={onRemove} />}\n      </StyledSidedishCheckbox>\n    )\n  },\n)\n","import { useSideDishValidator } from '@speedlo/cart'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components'\n\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { CategoryValidationMessage } from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: FRecipeDetailFragment\n  selection: ReadonlyArray<ID>\n  onAdd(item: ID): void\n  onRemove(item: ID): void\n}\n\nconst StyledSidedishPicker = styled.div`\n  margin-top: 1rem;\n\n  & .sidedish__picker__checkbox {\n    @media (max-width: 370px) {\n      width: 100%;\n    }\n  }\n\n  & .sidedish__picker__category {\n    font-size: 1rem;\n    font-weight: bold;\n    text-align: left;\n    margin: 0 0 0.2rem 0.2rem;\n  }\n`\n\nexport const SidedishPicker: React.FC<IProps> = ({\n  recipe,\n  selection,\n  onAdd,\n  onRemove,\n}) => {\n  const { canBeSelected, isCategoryValid } = useSideDishValidator(\n    recipe.categories,\n    selection,\n  )\n\n  return (\n    <StyledSidedishPicker className=\"food__sidedish__picker\">\n      {recipe.categories.map(category => (\n        <Fragment key={category.id}>\n          <div className=\"sidedish__picker__category\">\n            {category.nameLabel}{' '}\n            <CategoryValidationMessage\n              minCount={category.minCount}\n              maxCount={category.maxCount}\n              isValid={isCategoryValid(category)}\n            />\n          </div>\n          {category.sideDishes.map(sidedish => (\n            <SidedishCheckbox\n              key={`${sidedish.id}-${category.id}`}\n              sidedish={sidedish}\n              count={selection.filter(i => i === sidedish.id).length}\n              isSelected={selection.includes(sidedish.id)}\n              canBeRemoved={selection.includes(sidedish.id)}\n              canBeSelected={canBeSelected(category, sidedish)}\n              onAdd={() => onAdd(sidedish.id)}\n              onRemove={() => onRemove(sidedish.id)}\n              className=\"sidedish__picker__checkbox\"\n            />\n          ))}\n        </Fragment>\n      ))}\n    </StyledSidedishPicker>\n  )\n}\n","import { useSideDishValidator } from '@speedlo/cart'\nimport { cn } from '@speedlo/ui'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ReadonlyArray<ID>\n  recipe: Maybe<FRecipeDetailFragment>\n  onConfirm(): Promise<boolean>\n}\n\nexport const CartOrderButton = React.memo<IProps>(\n  ({ selection, recipe, onConfirm }) => {\n    const [isConfirming, setConfirming] = React.useState(false)\n    const { isCategoryValid } = useSideDishValidator(\n      recipe ? recipe.categories : [],\n      selection,\n    )\n\n    return (\n      <PrimaryButton\n        className={cn('modal__body__button', 'animated', {\n          heartBeat: isConfirming,\n        })}\n        disabled={\n          isConfirming || !recipe || !recipe.categories.every(isCategoryValid)\n        }\n        data-testid=\"CartOrderButton\"\n        onClick={() => {\n          setConfirming(true)\n          onConfirm().catch(() => {\n            setConfirming(false)\n          })\n        }}\n      >\n        {i18n.plural({\n          value: selection.length,\n          0: 'Order without sidedish',\n          one: 'Order with this sidedish',\n          other: 'Order with # sidedishes',\n        })}\n      </PrimaryButton>\n    )\n  },\n)\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { RM } from '@speedlo/tools'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport Pacman from '../../common/Pacman'\nimport { FRecipeDetailFragment } from '../../graph/generated'\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: Maybe<FRecipeDetailFragment>\n  isLoading: boolean\n  initialSideDishes?: ID[]\n  onConfirm(selection: ID[]): Promise<boolean>\n  onClose(): void\n}\n\nconst EMPTY_SELECTION = []\n\nexport const CartModal: React.FC<IProps> = ({\n  recipe,\n  isLoading,\n  initialSideDishes = EMPTY_SELECTION,\n  onConfirm,\n  onClose,\n}) => {\n  const [selection, updateSelection] = React.useState([] as string[])\n\n  React.useEffect(() => {\n    updateSelection(initialSideDishes)\n  }, [initialSideDishes])\n\n  const onCloseModal = React.useCallback(() => {\n    updateSelection([])\n    onClose()\n  }, [onClose])\n\n  const onConfirmAndClose = async () => {\n    if (await onConfirm(selection)) {\n      onCloseModal()\n      return true\n    }\n    return false\n  }\n\n  const onAddSidedish = (sidedishId: ID) => {\n    updateSelection(sel => {\n      return RM.append(sidedishId, sel)\n    })\n  }\n\n  const onRemoveSidedish = (sidedishId: ID) => {\n    updateSelection(sel => {\n      return RM.remove(RM.indexOf(sidedishId, sel), 1, sel)\n    })\n  }\n\n  const renderBody = () => {\n    if (isLoading) {\n      return <Pacman />\n    }\n    if (!recipe) {\n      return (\n        <Trans>We sorry, but the item is unavailable at this moment.</Trans>\n      )\n    }\n    return (\n      <>\n        <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n        <span className=\"modal__body__food_description\">\n          {recipe.descriptionLabel}\n        </span>\n        <SidedishPicker\n          recipe={recipe}\n          selection={selection}\n          onAdd={onAddSidedish}\n          onRemove={onRemoveSidedish}\n        />\n      </>\n    )\n  }\n\n  return (\n    <Modal\n      isOpen={recipe !== null}\n      toggle={onCloseModal}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n      data-testid=\"CartModal\"\n    >\n      <ModalHeader\n        toggle={onCloseModal}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderBody()}</div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            recipe={recipe}\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useQCartRecipe } from '../../graph/generated'\nimport { useAddToCart } from '../../hooks/useAddToCart'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const AddToCartModal = observer<IProps>(({ orderId }) => {\n  const orderModel = useOrderModel()\n\n  const recipeId = orderModel.addToCartRecipeId\n\n  const { data, loading } = useQCartRecipe(\n    {\n      recipeId: recipeId!,\n    },\n    { skip: orderId === null || recipeId === null, fetchPolicy: 'cache-first' },\n  )\n\n  const executeAddToCart = useAddToCart()\n\n  const onConfirm = React.useCallback(\n    async sideDishes => {\n      if (orderId === null || recipeId === null) {\n        return false\n      }\n      const result = await executeAddToCart(recipeId, sideDishes)\n      return Boolean(result)\n    },\n    [executeAddToCart, orderId, recipeId],\n  )\n\n  const onClose = React.useCallback(() => {\n    orderModel.addToCart(null)\n  }, [orderModel])\n\n  return (\n    <CartModal\n      recipe={loading ? null : data.recipe}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      isLoading={loading}\n    />\n  )\n})\n","import { RM } from '@speedlo/tools'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useMChangeCartItem, useQCartItem } from '../../graph/generated'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const ChangeCartModal = observer<IProps>(({ orderId }) => {\n  const { order: orderModel, cart: cartModel } = useRoot()\n\n  const itemId = orderModel.changeCartItemId\n\n  const { data, loading } = useQCartItem(\n    {\n      itemId: itemId!,\n    },\n    { skip: orderId === null || itemId === null },\n  )\n\n  const [changeItem] = useMChangeCartItem()\n\n  const onConfirm = React.useCallback(\n    async sideDishes => {\n      if (orderId === null || itemId === null) {\n        return false\n      }\n      const result = await changeItem({\n        itemId,\n        sideDishes,\n        orderId,\n        withGoods: cartModel.withGoods,\n      })\n      return Boolean(result)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [orderId, itemId, changeItem],\n  )\n\n  const onClose = React.useCallback(() => {\n    orderModel.changeCartItem(null)\n  }, [orderModel])\n\n  const sideDishesSelection = React.useMemo(\n    () =>\n      loading\n        ? undefined\n        : (data.item.sideDishes.map(RM.path(['recipe', 'id'])) as string[]),\n    [loading, data],\n  )\n\n  return (\n    <CartModal\n      recipe={loading ? null : data.item.recipe}\n      initialSideDishes={sideDishesSelection}\n      onConfirm={onConfirm}\n      onClose={onClose}\n      isLoading={loading}\n    />\n  )\n})\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartSystem } from './CartSystem'\nimport { ChangeCartModal } from './ChangeCartModal'\n\ninterface IProps {\n  isReadonly?: boolean\n}\n\nexport const CartView = observer<IProps>(({ isReadonly = false }) => {\n  const orderModel = useOrderModel()\n  const orderId = orderModel.orderId\n  return (\n    <>\n      <AddToCartModal orderId={orderId} />\n      <ChangeCartModal orderId={orderId} />\n      <CartSystem\n        orderId={orderId}\n        isReadonly={isReadonly || orderModel.disableInteraction}\n      />\n    </>\n  )\n})\n","import { cn } from '@speedlo/ui'\nimport React, { useState } from 'react'\nimport Scroll from 'react-scroll'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components/macro'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { FFoodMenuCategoryFragment } from '../../graph/generated'\n\ninterface IProps {\n  categories: ReadonlyArray<FFoodMenuCategoryFragment>\n}\n\nconst StyledCategoryNavigator = styled.div`\n  background-color: #d4d4d4;\n  border-top-left-radius: 0.6rem;\n  padding: 0.7rem 0.5rem 0 0.2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  user-select: none;\n  display: flex;\n  ${mediaDesktop`\n    flex-wrap: wrap;\n  `}\n  ${mediaMobile`\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    box-shadow: inset -15px -5px 15px -14px rgba(0, 0, 0, 0.6);\n    margin: 0;\n    border-top-left-radius: 0;\n    background-color: #f3f3f3;\n    opacity: 0.94;\n  `}\n\n  a.link {\n    text-align: center;\n    color: #595959 !important;\n    display: inline-block;\n    min-width: 4rem;\n    cursor: pointer;\n    margin: 0 0.2rem;\n    &:hover,\n    &.active {\n      color: #5ca651 !important;\n      border-color: #5ca651;\n    }\n  }\n  div.circle {\n    background-color: white;\n    border: 1px solid #595959;\n    border-radius: 2rem;\n    width: 2.6rem;\n    height: 2.6rem;\n    margin: 0 auto;\n    padding: 0;\n    &:hover,\n    a.link.active > & {\n      border-color: #5ca651;\n    }\n    & span::before,\n    & span::after {\n      margin: 0;\n      padding: 0;\n      font-size: 1.7rem;\n    }\n  }\n\n  div.description {\n    font-size: 0.9rem;\n    margin-top: 0.2rem;\n    max-width: 5rem;\n  }\n`\nconst CategoryNavigator: React.FC<IProps> = ({ categories }) => {\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0)\n  return (\n    <StyledCategoryNavigator data-testid=\"CategoryNavigator\">\n      {categories.length === 0\n        ? null\n        : categories.map((category, idx) => (\n            <Scroll.Link\n              to={category.nameLabel}\n              key={category.id}\n              className={cn('link', {\n                active: activeCategoryIndex === idx,\n              })}\n              onSetActive={() => setActiveCategoryIndex(idx)}\n              offset={-168}\n              smooth={true}\n              spy={true}\n              title={category.nameLabel}\n            >\n              <div className=\"circle\">\n                <span className={`flaticon-${category.pictogram}`} />\n              </div>\n              <div className=\"description\">\n                <Truncate lines={2}>{category.nameLabel}</Truncate>\n              </div>\n            </Scroll.Link>\n          ))}\n    </StyledCategoryNavigator>\n  )\n}\n\nexport default CategoryNavigator\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { FFoodMenuCategoryFragment } from '../../graph/generated'\n\ninterface IProps {\n  category: FFoodMenuCategoryFragment\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.FC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default React.memo(FoodCategory)\n","import './FoodMenuItem.css'\n\nimport { cn } from '@speedlo/ui'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components/macro'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport {\n  FFoodMenuRecipeFragment,\n  useExecutableQCartRecipe,\n} from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { TFoodMenuPresence } from './hooks/useFoodMenuPresence'\n\ninterface IProps {\n  recipe: FFoodMenuRecipeFragment\n  presence: TFoodMenuPresence\n  onAddToCart(recipeId: ID, hasSideDish: boolean): void\n}\n\nconst FoodMenuItemStyled = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  position: relative;\n  min-height: 6rem;\n  user-select: none;\n  &:hover {\n    background-color: #c9e8d7;\n  }\n  background-color: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'white'};\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n\n  & div.presence {\n    background-color: ${({ theme }) => theme.secondary};\n    float: left;\n    position: absolute;\n    left: -1.2rem;\n    padding: 0.4rem 0.6rem;\n    color: white;\n    border-radius: 1.8rem;\n    font-size: 0.9rem;\n    ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItem = React.memo<IProps>(({ recipe, presence, onAddToCart }) => {\n  const orderModel = useOrderModel()\n\n  const hasSideDishes = recipe.sideDishCount > 0\n\n  const onClick = React.useCallback(() => {\n    onAddToCart(recipe.id, hasSideDishes)\n  }, [hasSideDishes, onAddToCart, recipe.id])\n\n  const [prefetchFoodItem] = useExecutableQCartRecipe({\n    fetchPolicy: 'cache-first',\n  })\n\n  const onMouseEnter = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'development' && hasSideDishes) {\n      prefetchFoodItem({ recipeId: recipe.id })\n    }\n  }, [hasSideDishes, prefetchFoodItem, recipe.id])\n\n  const previousPresence = React.useRef(-1)\n\n  const renderPresence = () => {\n    const recipePresence = presence.get(recipe.id)\n    if (!recipePresence) {\n      previousPresence.current = -1\n      return null\n    }\n    const className = cn('presence', 'animated', {\n      pulse: recipePresence > 1 || previousPresence.current > 0,\n      zoomIn:\n        (recipePresence === 1 && previousPresence.current === 0) ||\n        previousPresence.current === -1,\n    })\n    previousPresence.current = recipePresence\n    return (\n      <div\n        key={recipePresence}\n        className={className}\n      >{`${recipePresence}x`}</div>\n    )\n  }\n\n  return useObserver(() => (\n    <FoodMenuItemStyled\n      onClick={onClick}\n      onMouseEnter={onMouseEnter}\n      isActive={orderModel.lastActiveRecipeId === recipe.id}\n      data-testid={`foodMenuItem__${recipe.id}`}\n    >\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {renderPresence()}\n      <h4 title={recipe.nameLabel}>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </FoodMenuItemStyled>\n  ))\n})\n\nexport default FoodMenuItem\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport Pacman from '../../common/Pacman'\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { QFoodMenuWareCategories } from '../../graph/generated'\nimport { useAddToCart } from '../../hooks/useAddToCart'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\nimport { useFoodMenuPresence } from './hooks/useFoodMenuPresence'\n\ninterface IProps {\n  orderId: MaybeID\n  categories: ReadonlyArray<QFoodMenuWareCategories>\n  isLoading: boolean\n}\n\nconst StyledFoodMenu = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n\n  & > div {\n    ${mediaDesktop`\n      margin: 0 1.4rem 1rem 1.6rem;\n      padding: 2rem 0 2rem 0;\n    `};\n    ${mediaMobile`\n      margin: 0 0.7rem 1rem 0.7rem;\n      padding: 0 0 4rem 0;\n    `};\n  }\n`\n\nconst FoodMenu: React.FC<IProps> = ({ orderId, categories, isLoading }) => {\n  const { order: orderModel, config, user } = useRoot()\n\n  const presence = useFoodMenuPresence(orderId)\n\n  const executeAddToCart = useAddToCart()\n  const onAddToCart = React.useCallback(\n    (recipeId: ID, hasSideDish: boolean) => {\n      if (orderModel.disableInteraction) {\n        return\n      }\n      if (presence.size >= config.orderItemsMax) {\n        user.showOrderLimit()\n      } else if (hasSideDish) {\n        orderModel.addToCart(recipeId)\n      } else {\n        orderModel.setUsedRecipeId(recipeId)\n        executeAddToCart(recipeId)\n      }\n    },\n    [config.orderItemsMax, executeAddToCart, orderModel, presence, user],\n  )\n\n  const render = () => {\n    if (isLoading) {\n      return <Pacman noMargin={true} />\n    }\n    if (categories.length === 0) {\n      return (\n        <h3>\n          <Trans>Food menu is empty. We are sorry.</Trans>\n        </h3>\n      )\n    }\n    return (\n      <>\n        {categories.map(category => (\n          <FoodCategory key={category.id} category={category}>\n            {category.recipes.map(recipe => (\n              <FoodMenuItem\n                key={recipe.id}\n                recipe={recipe}\n                presence={presence}\n                onAddToCart={onAddToCart}\n              />\n            ))}\n          </FoodCategory>\n        ))}\n      </>\n    )\n  }\n\n  return (\n    <StyledFoodMenu data-testid=\"FoodMenu\">\n      <div>{render()}</div>\n    </StyledFoodMenu>\n  )\n}\n\nexport default React.memo(FoodMenu)\n","import { observable, ObservableMap, runInAction } from 'mobx'\nimport React from 'react'\n\nimport { useQFoodMenuCartPresence } from '../../../graph/generated'\n\nexport function useFoodMenuPresence(orderId: MaybeID) {\n  const { data, loading } = useQFoodMenuCartPresence(\n    {\n      orderId: orderId!,\n    },\n    {\n      skip: !orderId,\n      fetchPolicy: 'cache-only',\n    },\n  )\n\n  const [presence] = React.useState(() => observable.map<ID, number>())\n\n  if (!loading) {\n    runInAction(() => {\n      presence.clear()\n      data.order.presence.forEach(({ recipe: { id } }) => {\n        if (!presence.has(id)) {\n          presence.set(id, 0)\n        }\n        presence.set(id, presence.get(id)! + 1)\n      })\n    })\n  }\n\n  return presence\n}\n\nexport type TFoodMenuPresence = ObservableMap<ID, number>\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import { useReaction } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport CategoryNavigator from './CategoryNavigator'\nimport FoodMenu from './FoodMenu'\nimport { useFoodMenuQuery } from './hooks/useFoodMenuQuery'\nimport { OrderLimitModal } from './OrderLimitModal'\n\nexport const FoodMenuView = observer(() => {\n  const { order: orderModel, user } = useRoot()\n\n  const { data, loading, refetch } = useFoodMenuQuery(orderModel.branchId)\n\n  useReaction(() => user.language, () => refetch())\n\n  const categories = React.useMemo(\n    () =>\n      loading ? [] : data.wareCategories.filter(cat => cat.recipes.length > 0),\n    [loading, data],\n  )\n\n  return (\n    <>\n      <OrderLimitModal />\n      <CategoryNavigator categories={categories} />\n      <FoodMenu\n        orderId={orderModel.orderId}\n        categories={categories}\n        isLoading={loading}\n      />\n    </>\n  )\n})\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderEmailInput: React.FC = () => (\n  <FormGroup>\n    <FormTextInput\n      name=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder={i18n.t`E-mail`}\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.FC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        name=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n      />\n      <FormTextInput\n        name=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, FormText } from 'reactstrap'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNoteInput: React.FC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <FormGroup>\n      <FormTextInput\n        name=\"note\"\n        type=\"textarea\"\n        placeholder={i18n.t`Note`}\n        title={ingredientsDescription}\n        errorForceDisplay={true}\n      />\n      <FormText>{ingredientsDescription}</FormText>\n    </FormGroup>\n  )\n}\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\nimport { UAParser } from 'ua-parser-js'\n\nimport { FormTextInput } from '../../forms/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInput: React.FC = () => {\n  const agent = new UAParser(window.navigator.userAgent)\n  const isMobileSafari = agent.getBrowser().name === 'Mobile Safari'\n  return (\n    <FormGroup>\n      <InputGroup>\n        <FormTextInput\n          name=\"phonePrefix\"\n          autoComplete={isMobileSafari ? 'off' : 'tel-country-code'}\n          placeholder=\"Prefix\"\n        />\n        <FormTextInput\n          name=\"phone\"\n          type=\"tel\"\n          autoComplete=\"tel-national\"\n          placeholder={i18n.t`Phone`}\n          style={{ width: '55%' }}\n        />\n      </InputGroup>\n    </FormGroup>\n  )\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n  </>\n)\n","import {\n  addMinutes,\n  endOfMinute,\n  getMinutes,\n  startOfMinute,\n  subMinutes,\n} from 'date-fns'\n\nexport function createTimeSteps(start: Date, end: Date, minuteStep: number) {\n  let current = startOfMinute(timeClampUp(start, minuteStep))\n  const steps: Date[] = []\n  const endMinute = endOfMinute(subMinutes(end, 1))\n  do {\n    steps.push(current)\n    current = addMinutes(current, minuteStep)\n  } while (current <= endMinute)\n  return steps\n}\n\nexport function timeClampUp(time: Date, minuteStep: number) {\n  return addMinutes(timeClampDown(time, minuteStep), minuteStep)\n}\n\nexport function timeClampDown(time: Date, minuteStep: number) {\n  return subMinutes(time, getMinutes(time) % minuteStep)\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { formatTime } from '../../helpers/formats'\n\ninterface IProps extends ButtonProps {\n  time: Date\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Time = styled.div`\n  font-size: 1.2rem;\n`\n\nexport const TimePickerButton: React.FC<IProps> = ({\n  time,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"10rem\"\n    data-testid={`timePickerButton__${time.getTime()}`}\n    {...buttonProps}\n  >\n    <Time>{formatTime(time)}</Time>\n  </PickerButton>\n)\n","import { DateFormat } from '@lingui/macro'\nimport {\n  closestIndexTo,\n  eachDayOfInterval,\n  isEqual,\n  startOfDay,\n} from 'date-fns'\nimport { isWithinInterval } from 'date-fns/fp'\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { createTimeSteps } from './createTimeSteps'\nimport { TimePickerButton } from './TimePickerButton'\n\ninterface IProps {\n  minDate: Date\n  maxDate: Date\n  minuteStep: number\n  onStepChange(step: Date): void\n  initialTime?: Maybe<Date>\n  filterIntervals?: Interval[]\n}\n\nconst TimePickerContainer = styled.div`\n  margin-top: 1rem;\n`\n\nconst TimePickerDay = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: left;\n  margin: 0 0 0.2rem 0.2rem;\n`\n\nexport const TimePicker: React.FC<IProps> = ({\n  minDate,\n  maxDate,\n  minuteStep,\n  onStepChange,\n  initialTime,\n  filterIntervals = [],\n}) => {\n  const steps = React.useMemo(() => {\n    const allSteps = createTimeSteps(minDate, maxDate, minuteStep)\n    if (filterIntervals.length) {\n      return allSteps.filter(step =>\n        filterIntervals.some(isWithinInterval(step)),\n      )\n    }\n    return allSteps\n  }, [minDate, maxDate, minuteStep, filterIntervals])\n\n  const days = React.useMemo(() => {\n    return eachDayOfInterval({ start: minDate, end: maxDate })\n  }, [minDate, maxDate])\n\n  const [stepIdx, setStepIdx] = React.useState(0)\n\n  React.useEffect(() => {\n    if (initialTime) {\n      setStepIdx(closestIndexTo(initialTime, steps))\n    }\n  }, [initialTime, steps])\n\n  React.useEffect(() => {\n    onStepChange(steps[stepIdx])\n  }, [onStepChange, stepIdx, steps])\n\n  return (\n    <TimePickerContainer>\n      {days.map(day => (\n        <Fragment key={day.getDate()}>\n          <TimePickerDay>\n            <DateFormat\n              value={day}\n              format={{ month: 'long', day: 'numeric', weekday: 'long' }}\n            />\n          </TimePickerDay>\n          {steps.map((step, idx) =>\n            isEqual(day, startOfDay(step)) ? (\n              <TimePickerButton\n                key={step.getTime()}\n                time={step}\n                isSelected={idx === stepIdx}\n                canBeSelected={true}\n                onClick={() => {\n                  setStepIdx(idx)\n                  onStepChange(step)\n                }}\n              />\n            ) : null,\n          )}\n        </Fragment>\n      ))}\n    </TimePickerContainer>\n  )\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/macro'\nimport { isoDate } from '@speedlo/graphql'\nimport { RM } from '@speedlo/tools'\nimport { addMinutes, isAfter } from 'date-fns'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\nimport {\n  useMOrderDeliveryTime,\n  useQOrderTimePicker,\n} from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { TimePicker } from '../timePicker/TimePicker'\n\nexport const OrderTimePicker = observer(() => {\n  const root = useRoot()\n  const { order, cart } = useRoot()\n\n  const { data, loading } = useQOrderTimePicker(\n    { branchId: order.branchId! },\n    { skip: !root.initialized || !order.branchId },\n  )\n\n  const [updateOrder] = useMOrderDeliveryTime()\n\n  const selectedTime = React.useRef<Maybe<Date>>(order.deliverAt)\n  const onConfirmAndClose = () => {\n    const time = selectedTime.current\n    updateOrder({\n      orderId: order.orderId!,\n      deliverAt: time && isoDate(time),\n      withGoods: cart.withGoods,\n    })\n    order.setDeliverAt(time)\n    order.closeTimePicker()\n  }\n\n  const getStartTime = () => {\n    const { companyBranch } = data\n    const openAt =\n      companyBranch.isOpen || !companyBranch.willOpenAt\n        ? new Date()\n        : new Date(companyBranch.willOpenAt)\n    return openAt\n  }\n\n  const getEndTime = () => {\n    const { companyBranch } = data\n    if (companyBranch.isOpen && companyBranch.willCloseAt) {\n      return new Date(companyBranch.willCloseAt)\n    }\n    const nextBusinessHour = companyBranch.businessHours.find(\n      RM.propEq('closed', false),\n    )\n    return nextBusinessHour ? new Date(nextBusinessHour.closeAt) : null\n  }\n\n  const getFilterIntervals = (): Interval[] => {\n    const { companyBranch } = data\n    return companyBranch.businessHours\n      .filter(RM.propEq('closed', true))\n      .map(bhour => ({\n        start: new Date(bhour.openAt),\n        end: new Date(bhour.closeAt),\n      }))\n  }\n\n  const getMinuteOffset = () => {\n    const { defaultDeliveryTime, defaultPickupTime } = data.companyBranch\n\n    if (order.usingDeliveryOrderMethod) {\n      return defaultDeliveryTime\n    }\n    if (order.usingPickupOrderMethod) {\n      return defaultPickupTime\n    }\n\n    return 0\n  }\n\n  const getInterval = () => {\n    if (loading) {\n      return null\n    }\n\n    const minDate = addMinutes(getStartTime(), getMinuteOffset())\n    const maxDate = getEndTime()\n    return { minDate, maxDate }\n  }\n\n  const canBeDelayed = (interval: ReturnType<typeof getInterval>) => {\n    return !(\n      interval === null ||\n      interval.maxDate === null ||\n      isAfter(interval.minDate, interval.maxDate)\n    )\n  }\n\n  const onStepChange = React.useCallback((step: Date) => {\n    selectedTime.current = step\n  }, [])\n\n  const renderModalContent = () => {\n    const interval = getInterval()\n    if (interval === null) {\n      return null\n    }\n\n    if (!canBeDelayed(interval)) {\n      return (\n        <Trans>\n          It's not possible to pick a specific order time at this moment.\n        </Trans>\n      )\n    }\n\n    return (\n      <TimePicker\n        minuteStep={15}\n        minDate={interval.minDate}\n        maxDate={interval.maxDate!}\n        initialTime={selectedTime.current}\n        filterIntervals={getFilterIntervals()}\n        onStepChange={onStepChange}\n      />\n    )\n  }\n\n  const renderBottomLine = () => {\n    if (!canBeDelayed(getInterval())) {\n      return null\n    }\n    return (\n      <>\n        <div className=\"modal__body__button__strip\" />\n        <PrimaryButton\n          size=\"md\"\n          onClick={onConfirmAndClose}\n          className=\"modal__body__button\"\n        >\n          <Trans>Confirm time</Trans>\n        </PrimaryButton>\n      </>\n    )\n  }\n\n  React.useEffect(() => {\n    if (\n      data &&\n      data.companyBranch &&\n      data.companyBranch.delayedDeliveryEnabled\n    ) {\n      order.enableDelayedOrder()\n    }\n  }, [data, order])\n\n  const header = order.usingDeliveryOrderMethod\n    ? i18n.t`Deliver at what time?`\n    : i18n.t`When you will pickup the order?`\n\n  return (\n    <Modal\n      isOpen={order.timePickerOpen}\n      toggle={order.closeTimePicker}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader\n        toggle={order.closeTimePicker}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>{header}</span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderModalContent()}</div>\n        <div className=\"modal__body__button__line\">{renderBottomLine()}</div>\n      </ModalBody>\n    </Modal>\n  )\n})\n","import './CartView.css'\n\nimport { Trans } from '@lingui/macro'\nimport { CartLabels, useCartSystem } from '@speedlo/cart'\nimport { autorun } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useTheme } from '../../app/ThemeSwitchProvider'\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ButtonStrip } from '../../common/ButtonStrip'\nimport { mobileBreakpoint } from '../../common/Responsive'\nimport { useQCart } from '../../graph/generated'\nimport { useCartControl } from './hooks/useCartControl'\n\ninterface IProps {\n  orderId: MaybeID\n  isReadonly: boolean\n}\n\nconst StyledCartSystem = styled.div`\n  & .animated {\n    z-index: 10;\n  }\n`\n\nexport const CartSystem: React.FC<IProps> = ({ orderId, isReadonly }) => {\n  const theme = useTheme()\n  const labels = React.useMemo(getCartLabels, [])\n\n  const {\n    cartModel,\n    onItemEdit,\n    onItemRemove,\n    onPlaceOrder,\n    onChangeOrder,\n  } = useCartControl()\n\n  const renderMobileSubmit = React.useCallback(\n    () => (\n      <ButtonStrip>\n        <PrimaryButton onClick={isReadonly ? onChangeOrder : onPlaceOrder}>\n          {isReadonly ? (\n            <Trans>Change order</Trans>\n          ) : (\n            <Trans>Place order</Trans>\n          )}\n        </PrimaryButton>\n      </ButtonStrip>\n    ),\n    [isReadonly, onChangeOrder, onPlaceOrder],\n  )\n\n  const renderGoodsLoading = React.useCallback(\n    () => <Trans>Accessing your order</Trans>,\n    [],\n  )\n\n  const cart = useCartSystem({\n    colors: {\n      primary: theme.primary,\n      sumRowBg: theme.primary,\n      sumRowText: 'white',\n      mobileSummaryItemCount: theme.secondary,\n    },\n    labels,\n    isReadonly,\n    mobileBreakpoint,\n    backgroundImage: theme.backgroundCart,\n    onItemEdit,\n    onItemRemove,\n    renderMobileSubmit,\n    renderGoodsLoading,\n  })\n\n  React.useEffect(\n    () =>\n      autorun(() => {\n        cartModel.updateDisplay(cart.store.isMobile, cart.store.showGoods)\n      }),\n    [cart.store, cartModel],\n  )\n\n  const root = useRoot()\n\n  return useObserver(function useObserverBody() {\n    const { data, loading } = useQCart(\n      {\n        orderId: orderId!,\n        withGoods: cartModel.withGoods,\n        withPresence: cartModel.withPresence,\n      },\n      {\n        skip: !root.initialized || !orderId,\n        context: {\n          noBatch: true,\n        },\n      },\n    )\n\n    React.useEffect(() => {\n      if (!loading) {\n        cart.updateSummary(data.order)\n        if (cartModel.withGoods) {\n          cart.updateGoods(data.order)\n        }\n      }\n    })\n\n    return <StyledCartSystem>{cart.renderCart()}</StyledCartSystem>\n  })\n}\n\nfunction getCartLabels(): CartLabels {\n  return {\n    noSideDish: <Trans>Without sidedish</Trans>,\n    noCost: <Trans>For free</Trans>,\n    cartSumHeader: totalPrice => (\n      <Trans>In the cart you have goods for {totalPrice}</Trans>\n    ),\n    emptyCart: <Trans>Cart is empty</Trans>,\n    totalDiscount: <Trans>Total discount</Trans>,\n    coverPrice: <Trans>Covers</Trans>,\n    transportFee: <Trans>Delivery</Trans>,\n    totalSum: <Trans>Total</Trans>,\n    tip: <Trans>Tip</Trans>,\n    minimalOrderPrice: price => (\n      <Trans>Minimal price of order is {price}</Trans>\n    ),\n  }\n}\n","import { useApolloClient } from '@speedlo/graphql'\nimport { useRouterContext } from '@speedlo/hooks'\nimport { idPropEq, RM } from '@speedlo/tools'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport {\n  MRemoveCartItemMutation,\n  MRemoveCartItemVariables,\n  QCartDocument,\n  QCartQuery,\n  QCartVariables,\n  useMRemoveCartItem,\n} from '../../../graph/generated'\n\nexport function useCartControl() {\n  const { order: orderModel, cart: cartModel } = useRoot()\n  const client = useApolloClient()\n  const { history } = useRouterContext()\n  const onItemEdit = React.useCallback(\n    (item: ID) => {\n      orderModel.changeCartItem(item)\n    },\n    [orderModel],\n  )\n\n  const [removeItem] = useMRemoveCartItem()\n\n  const onItemRemove = React.useCallback(\n    (item: ID) => {\n      const variables: MRemoveCartItemVariables = {\n        itemId: item,\n        withGoods: cartModel.withGoods,\n        withPresence: cartModel.withPresence,\n      }\n      removeItem(variables, {\n        optimisticResponse: makeOptimisticRemove(variables),\n        context: {\n          noBatch: true,\n        },\n      })\n    },\n    [cartModel, makeOptimisticRemove, removeItem],\n  )\n\n  const onPlaceOrder = React.useCallback(() => {\n    history.push('/confirm')\n  }, [history])\n\n  const onChangeOrder = React.useCallback(() => {\n    history.push('/order')\n  }, [history])\n\n  return { cartModel, onItemEdit, onItemRemove, onPlaceOrder, onChangeOrder }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function makeOptimisticRemove(\n    variables: MRemoveCartItemVariables,\n  ): MRemoveCartItemMutation | undefined {\n    const current = client.readQuery<QCartQuery, QCartVariables>(\n      {\n        query: QCartDocument,\n        variables: {\n          orderId: orderModel.orderId!,\n          withGoods: cartModel.withGoods,\n          withPresence: cartModel.withPresence,\n        },\n      },\n      true,\n    )\n    if (!current) {\n      return undefined\n    }\n    const rejectItem = RM.reject(idPropEq(variables.itemId))\n    return {\n      __typename: 'Mutation',\n      remove: {\n        ...current.order,\n        countWares: current.order.countWares - 1,\n        totalSum: {\n          ...current.order.totalSum,\n          value: -1,\n        },\n        items: variables.withGoods\n          ? rejectItem(current.order.items)\n          : current.order.items,\n        presence: variables.withPresence\n          ? rejectItem(current.order.presence)\n          : current.order.presence,\n      },\n    }\n  }\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../../common/Buttons'\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { useOrderModel } from '../../../hooks/useOrderModel'\nimport { TOrderModel } from '../../../models/OrderModel'\n\ninterface IProps {\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n}\n\nexport const OrderMethodButton: React.FC<IProps> = ({\n  orderMethod,\n  onChange,\n  children,\n}) => {\n  const orderModel = useOrderModel()\n  return useObserver(() => (\n    <SelectButtonThemed\n      selected={orderModel.orderMethod === orderMethod}\n      onClick={() => {\n        orderModel.useOrderMethod(orderMethod)\n        onChange(orderModel)\n      }}\n      data-testid={`orderMethod-${orderMethod}`}\n      data-testselected={orderModel.orderMethod === orderMethod}\n    >\n      {children}\n    </SelectButtonThemed>\n  ))\n}\n","import { Trans } from '@lingui/react'\nimport { RM } from '@speedlo/tools'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { DeliveryTypeEnum } from '../../../graph/generated'\nimport { TOrderModel } from '../../../models/OrderModel'\nimport { OrderMethodButton } from './OrderMethodButton'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\nconst StyledOrderMethod = styled.div`\n  padding: 0.2rem;\n\n  & button {\n    font-size: 1.3rem;\n    margin: 0.3rem 1rem 0.3rem 1rem;\n    padding: 0.3rem 1.2rem;\n    height: 2.7rem;\n    line-height: 1rem;\n    white-space: nowrap;\n\n    span:before {\n      margin: 0 0.8rem 0 0;\n      font-size: 2rem;\n      font-weight: initial;\n    }\n  }\n`\n\nexport const OrderMethod: React.FC<IProps> = ({ onChange = RM.identity }) => {\n  return (\n    <StyledOrderMethod>\n      <OrderMethodButton\n        orderMethod={DeliveryTypeEnum.Messenger}\n        onChange={onChange}\n      >\n        <span className=\"flaticon-transport\" />\n        <Trans>I want to deliver</Trans>\n      </OrderMethodButton>\n      <OrderMethodButton\n        orderMethod={DeliveryTypeEnum.Pickup}\n        onChange={onChange}\n      >\n        <span className=\"flaticon-restaurant\" />\n        <Trans>I'll pick up</Trans>\n      </OrderMethodButton>\n    </StyledOrderMethod>\n  )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\n\nexport interface IPaymentButtonProps {\n  paymentMethod: PaymentGateEnum\n}\n\nexport const OrderPaymentButton = observer<IPaymentButtonProps>(\n  ({ children, paymentMethod }) => {\n    const { order: orderModel } = useRoot()\n    const isSelected = orderModel.paymentMethod === paymentMethod\n    return (\n      <SelectButtonThemed\n        disabled={orderModel.disableInteraction}\n        selected={isSelected}\n        onClick={() => {\n          orderModel.setPaymentMethod(paymentMethod)\n        }}\n        data-testid={`orderPaymentMethod-${paymentMethod}`}\n      >\n        <Checkmark show={isSelected} />\n        {children}\n      </SelectButtonThemed>\n    )\n  },\n)\n\nfunction Checkmark({ show }: { show: boolean }) {\n  return show ? (\n    <span className=\"flaticon-mark order__payment__method__button__checked\" />\n  ) : (\n    <div className=\"order__payment__method__button__unchecked\" />\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { OrderPaymentButton } from './OrderPaymentButton'\n\nconst StyledOrderPaymentMethod = styled.div`\n  margin: 0 0 1.4rem 0;\n  span::before {\n    margin-left: 0;\n    margin-right: 0.5rem;\n  }\n  button {\n    position: relative;\n    padding-top: 0.3rem;\n    margin-bottom: 0.2rem;\n    height: 2.8rem;\n  }\n  button:first-of-type {\n    margin-right: 0.8rem;\n  }\n  .order__payment__method__button__unchecked {\n    width: 1.75rem;\n    height: 1.4rem;\n    margin: 0;\n    display: inline-block;\n  }\n`\n\nexport const OrderPaymentMethod = React.memo(() => (\n  <StyledOrderPaymentMethod>\n    <OrderPaymentButton paymentMethod={PaymentGateEnum.Gopay}>\n      <span className=\"flaticon-credit-card\">\n        <Trans>Pay by card</Trans>\n      </span>\n    </OrderPaymentButton>\n    <OrderPaymentButton paymentMethod={PaymentGateEnum.Cash}>\n      <span className=\"flaticon-money\">\n        <Trans>Pay by cash</Trans>\n      </span>\n    </OrderPaymentButton>\n  </StyledOrderPaymentMethod>\n))\n","import { cn } from '@speedlo/ui'\nimport { useField } from 'formik'\nimport React from 'react'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\ninterface IProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  name: string\n  children: ReactNode\n}\n\nexport const StyledFormCheckbox = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n\n  input {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-color: white;\n    border: 1px solid;\n    border-color: #c5c5c5;\n    width: 2rem;\n    height: 2rem;\n    min-width: 2rem;\n    border-radius: 0.25rem;\n    position: relative;\n    margin: 0;\n    outline: none;\n    &:checked {\n      background-color: white;\n    }\n    &:checked:after {\n      content: '\\\\2714';\n      font-size: 2rem;\n      position: absolute;\n      top: -0.5rem;\n      left: 0.1rem;\n      color: #1d1d1d;\n      overflow: hidden;\n    }\n    &.is-invalid {\n      border-color: red;\n    }\n  }\n  label {\n    margin: 0 0 0 0.8rem;\n    vertical-align: top;\n  }\n`\n\nexport const FormCheckbox: React.FC<IProps> = ({\n  name,\n  children,\n  ...element\n}) => {\n  const [field, meta] = useField({ name, type: 'checkbox' })\n  return (\n    <StyledFormCheckbox\n      className={cn({ 'is-invalid': meta.touched && Boolean(meta.error) })}\n    >\n      <Input {...element} {...field} type=\"checkbox\" id={name} />\n      <label htmlFor={name}>{children}</label>\n    </StyledFormCheckbox>\n  )\n}\n","import { IAgreementBoxProps } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Collapse, Input } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { StyledFormCheckbox } from '../../forms/FormCheckbox'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\n\nconst StyledOrderAgreementBox = styled.div`\n  button {\n    padding: 0 0.5rem;\n    font-size: 0.8rem;\n    min-width: 5rem;\n    color: darkgray;\n  }\n  div.description {\n    font-size: 0.8rem !important;\n    color: darkgray;\n    margin: 0.5rem 0 0.5rem 0;\n    & .row {\n      margin: 0;\n    }\n  }\n`\n\nexport const OrderAgreementBox = observer<IAgreementBoxProps>(\n  ({\n    agreement,\n    isValid,\n    isCollapsed,\n    titleNode,\n    descriptionNode,\n    inputProps,\n    buttonProps,\n  }) => {\n    const orderModel = useOrderModel()\n    const id = `agreement-${agreement.id}`\n\n    return (\n      <StyledOrderAgreementBox>\n        <StyledFormCheckbox>\n          <Input\n            {...inputProps}\n            id={id}\n            type=\"checkbox\"\n            disabled={orderModel.disableInteraction}\n            invalid={!isValid}\n            onInvalid={ev => {\n              if (!isValid) {\n                ;(ev.target as HTMLInputElement).setCustomValidity(\n                  i18n.t`Please check this box if you want to proceed.`,\n                )\n              }\n            }}\n            onClick={ev => {\n              ;(ev.target as HTMLInputElement).setCustomValidity('')\n            }}\n            data-testid={`OrderAgreement${\n              agreement.isMandatory ? 'Mandatory' : ''\n            }`}\n          />\n          <label htmlFor={id}>\n            {titleNode}\n            {agreement.isMandatory && ' * '}\n          </label>\n          <Button {...buttonProps} color=\"link\">\n            {isCollapsed\n              ? i18n.t`More...`.toLocaleLowerCase()\n              : i18n.t`Less`.toLocaleLowerCase()}\n          </Button>\n        </StyledFormCheckbox>\n        <Collapse isOpen={!isCollapsed} className=\"description\">\n          {descriptionNode}\n        </Collapse>\n      </StyledOrderAgreementBox>\n    )\n  },\n)\n","import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import { useField } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { FormFeedback, Input, Label } from 'reactstrap'\nimport { InputType } from 'reactstrap/lib/Input'\n\nimport { useOrderModel } from '../hooks/useOrderModel'\n\ninterface IProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  name: string\n  label?: string\n  type?: InputType\n  errorForceDisplay?: boolean\n}\n\nexport const hiddenError = '<hidden>'\n\nexport const FormTextInput = observer<IProps>(\n  ({\n    name,\n    label,\n    type = 'text' as InputType,\n    errorForceDisplay = false,\n    ...element\n  }) => {\n    const orderModel = useOrderModel()\n    const [field, meta] = useField({ name, type })\n\n    const labelNode = (\n      <Label for={name} hidden={!label}>\n        {element.placeholder || label}\n      </Label>\n    )\n\n    const showError = errorForceDisplay || meta.touched\n\n    return (\n      <>\n        {labelNode}\n        <Input\n          {...element}\n          {...field}\n          id={name}\n          type={type}\n          valid={meta.touched && !meta.error}\n          invalid={showError && Boolean(meta.error)}\n          disabled={orderModel.disableInteraction}\n        />\n        {showError && meta.error !== hiddenError ? (\n          <FormFeedback valid={false} tooltip={false}>\n            {meta.error}\n          </FormFeedback>\n        ) : null}\n      </>\n    )\n  },\n)\n","import { SECOND, useNow, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\n\nimport { FCompanyBranchStatusFragment } from '../graph/generated'\n\nexport type TStatus = FCompanyBranchStatusFragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\ninterface IProps {\n  status: TStatus\n  updateInterval?: number\n  openSoonThresholdInMinutes?: number\n  closeSoonThresholdInMinutes?: number\n  onRefresh?(): void\n}\n\nexport interface IShopStatus {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\nexport function useShopStatus({\n  status,\n  updateInterval = 30 * SECOND,\n  openSoonThresholdInMinutes = 30,\n  closeSoonThresholdInMinutes = 30,\n}: IProps) {\n  const getNow = useNow()\n\n  useTimer({\n    interval: updateInterval,\n    enabled: updateInterval > 0,\n  })\n\n  const now = getNow()\n  const { isOpen, willCloseAt, willOpenAt } = status\n\n  let decision: TStatusDecision\n\n  const openingIn = willOpenAt ? differenceInMinutes(willOpenAt, now) : 0\n  const closingIn = willCloseAt ? differenceInMinutes(willCloseAt, now) : 0\n\n  if (isOpen) {\n    if (willCloseAt && closingIn <= 0) {\n      decision = 'Closed'\n    } else {\n      decision = isSoon(willCloseAt, closeSoonThresholdInMinutes, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    }\n  } else {\n    if (willOpenAt && openingIn <= 0) {\n      decision = 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openSoonThresholdInMinutes, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n  }\n\n  const shopStatus: IShopStatus = {\n    decision,\n    openingIn,\n    closingIn,\n  }\n  return shopStatus\n}\n\nfunction isSoon(time: Maybe<string>, threshold: number, now: Date) {\n  return time ? Math.abs(differenceInMinutes(time, now)) <= threshold : false\n}\n","import { useRouterContext, useWhen } from '@speedlo/hooks'\n\nimport { useRoot } from '../app/useRoot'\nimport { useOrderModel } from './useOrderModel'\n\nexport function useEmptyOrderRedirect() {\n  const root = useRoot()\n  const orderModel = useOrderModel()\n  const { history } = useRouterContext()\n\n  useWhen(\n    () => root.initialized,\n    () => {\n      if (!orderModel.hasOrder) {\n        history.push('/')\n      }\n    },\n  )\n}\n","import React from 'react'\n\nimport { FAddressFragment } from '../graph/generated'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address: Maybe<FAddressFragment>\n}\n\nexport const ShopAddress: React.FC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\ninterface IProps {\n  imageName: string\n  className?: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.FC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import { useRoot } from '../../../app/useRoot'\nimport { useQPickupMap } from '../../../graph/generated'\n\nexport function usePickupMapQuery(branchId?: ID) {\n  const { business } = useRoot()\n  return useQPickupMap(\n    {\n      branchSpecific: !business.isBrand || !!branchId,\n      brandId: business.brandId,\n      branchId: branchId || business.branchId!,\n    },\n    {\n      skip: !business.isValid,\n      fetchPolicy: 'cache-first',\n      context: { noBatch: true },\n    },\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api'\nimport { Sentry } from '@speedlo/sentry'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { appConfig } from '../config'\nimport { TMapModel } from '../models/MapModel'\nimport Pacman from './Pacman'\n\ninterface IBaseMapProps {\n  model: TMapModel\n  children?: ReactNode | ReactNode[] | (() => ReactNode | ReactNode[])\n  isMobile?: boolean\n}\n\n/* global google */\n\nconst getMapOptions = (isMobile: boolean): google.maps.MapOptions => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    clickableIcons: false,\n    draggableCursor: 'default',\n    minZoom: 10,\n    zoomControlOptions: {\n      position: isMobile\n        ? google.maps.ControlPosition.RIGHT_CENTER\n        : google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nconst libraries = ['places']\n\nexport const BaseMap = observer<IBaseMapProps>(\n  ({ model, isMobile = false, children }) => {\n    const { user } = useRoot()\n\n    const { isLoaded, loadError, url: googleMapUrl } = useLoadScript({\n      id: 'script-loader',\n      version: 'weekly',\n      googleMapsApiKey: appConfig.googleMapsApi!,\n      libraries,\n      language: user.language,\n    })\n\n    const renderMap = () => {\n      return (\n        <GoogleMap\n          zoom={model.zoom}\n          center={model.center}\n          onCenterChanged={model.updatePosition}\n          onZoomChanged={model.updateZoom}\n          onClick={model.onClick}\n          onLoad={model.setMapRef}\n          onUnmount={() => model.setMapRef(null)}\n          options={getMapOptions(isMobile)}\n          mapContainerStyle={{\n            borderRadius: '0 0 0.5rem 0.5rem',\n            overflow: 'hidden',\n            height: isMobile ? '100%' : 'calc(100% - 3.75rem)',\n          }}\n        >\n          {typeof children === 'function' ? children() : children}\n        </GoogleMap>\n      )\n    }\n\n    const googleAvailable = Reflect.has(window, 'google')\n\n    if (loadError || (isLoaded && !googleAvailable)) {\n      if (loadError) {\n        Sentry.withScope(scope => {\n          scope.setExtras({ googleMapUrl })\n          Sentry.captureException(loadError)\n        })\n      }\n      return (\n        <h2>\n          <Trans>Cannot load map right now. Please try again later.</Trans>\n        </h2>\n      )\n    }\n\n    return isLoaded ? renderMap() : <Pacman noMargin={true} />\n  },\n)\n","import { useReaction } from '@speedlo/hooks'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useQFoodMenu } from '../../../graph/generated'\n\nexport function useFoodMenuQuery(branchId: MaybeID) {\n  const { user } = useRoot()\n  const result = useQFoodMenu(\n    { branchId: branchId! },\n    { skip: !branchId, fetchPolicy: 'cache-first' },\n  )\n\n  useReaction(\n    () => user.language,\n    () => {\n      result.refetch()\n    },\n  )\n\n  return result\n}\n","import { isoDate } from '@speedlo/graphql'\nimport { useAutorun, useRouterContext } from '@speedlo/hooks'\nimport { Sentry } from '@speedlo/sentry'\nimport { FormikProvider, useFormik } from 'formik'\nimport React from 'react'\nimport { Form } from 'reactstrap'\nimport * as Yup from 'yup'\n\nimport { hiddenError } from '../../forms/FormTextInput'\nimport {\n  MSubmitOrderVariables,\n  PaymentGateEnum,\n  QOrderFormAgreementsAgreements,\n  useMSubmitOrder,\n} from '../../graph/generated'\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { useOrderPayment } from './hooks/useOrderPayment'\nimport { OrderErrorModal } from './OrderErrorModal'\nimport { OrderFormMemory } from './OrderFormMemory'\nimport { OrderGoPayModal } from './OrderGoPayModal'\nimport { OrderTimePicker } from './OrderTimePicker'\n\nexport type TAgreement = QOrderFormAgreementsAgreements\n\nexport type OrderFormValues = ReturnType<typeof getInitialValues>\n\nexport const NOTE_MAX_LENGTH = 50\n\nexport const OrderFormSetup: React.FC = ({ children }) => {\n  const orderModel = useOrderModel()\n  const { history } = useRouterContext()\n\n  const { executeGoPayPayment, paymentErrorModal } = useOrderPayment()\n\n  const [submitOrder] = useMSubmitOrder()\n\n  const validationSchema = React.useMemo(\n    () =>\n      Yup.object({\n        firstname: Yup.string().required(hiddenError),\n        lastname: Yup.string().required(hiddenError),\n        phonePrefix: Yup.string().required(hiddenError),\n        phone: Yup.string()\n          .required(hiddenError)\n          .matches(/\\d+/, i18n.t`Only numbers allowed for phone`),\n        email: Yup.string()\n          .required(hiddenError)\n          .email(i18n.t`Invalid email format`),\n        note: Yup.string()\n          .notRequired()\n          .max(\n            NOTE_MAX_LENGTH,\n            ({ value }) =>\n              i18n.t`Maximum length is ${i18n.plural({\n                value: NOTE_MAX_LENGTH,\n                other: '# characters',\n              })}. Typed ${i18n.plural({\n                value: value.length,\n                one: '# character',\n                other: '# characters',\n              })}`,\n          ),\n      }),\n    [],\n  )\n\n  const onSubmit = React.useCallback(\n    async (values: OrderFormValues) => {\n      orderModel.submitStarted()\n\n      const variables = getSubmitVariables(values, orderModel)\n      const result = await submitOrder(variables)\n\n      if (!result) {\n        orderModel.submitFailed()\n        return\n      }\n\n      const { userErrors, gopayUrl } = result.submitOrder\n      if (userErrors.length) {\n        orderModel.submitFailed(userErrors)\n        return\n      }\n\n      orderModel.submitFinished()\n\n      if (orderModel.paymentMethod === PaymentGateEnum.Cash) {\n        history.replace(`/finish`)\n        return\n      }\n\n      if (orderModel.paymentMethod === PaymentGateEnum.Gopay) {\n        if (gopayUrl) {\n          executeGoPayPayment(gopayUrl)\n        } else {\n          Sentry.withScope(scope => {\n            scope.setExtras({ variables })\n            Sentry.captureMessage('No gopayUrl received for GoPay payment')\n          })\n          orderModel.submitFailed()\n        }\n      } else {\n        Sentry.withScope(scope => {\n          scope.setExtras({ variables })\n          Sentry.captureMessage(\n            `Unknown payment mode ${orderModel.paymentMethod}`,\n          )\n        })\n        orderModel.submitFailed()\n      }\n    },\n    [executeGoPayPayment, history, orderModel, submitOrder],\n  )\n\n  const formik = useFormik({\n    initialValues: getInitialValues(),\n    validationSchema,\n    onSubmit,\n  })\n\n  React.useEffect(() => {\n    orderModel.root.cart.setOrderSubmitting(formik.isSubmitting)\n  }, [formik.isSubmitting, orderModel.root.cart])\n\n  useAutorun(() => {\n    const prefix = orderModel.defaultPhonePrefix\n    if (\n      prefix &&\n      orderModel.root.user.memoryApplied &&\n      formik.values.phonePrefix.length === 0\n    ) {\n      formik.setFieldValue('phonePrefix', prefix)\n      if (prefix) {\n        formik.setFieldTouched('phonePrefix', true)\n        // timeout because some strange bug in Formik validating over old values\n        setTimeout(() => {\n          formik.validateForm()\n        }, 100)\n      }\n    }\n  })\n\n  React.useEffect(() => {\n    console.log(formik.values, formik.errors)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formik.errors])\n\n  return (\n    <>\n      {paymentErrorModal}\n      <FormikProvider value={formik}>\n        <OrderTimePicker />\n        <OrderGoPayModal />\n        <OrderErrorModal />\n        <OrderFormMemory />\n        <Form onSubmit={formik.handleSubmit}>{children}</Form>\n      </FormikProvider>\n    </>\n  )\n}\n\nfunction getInitialValues() {\n  return {\n    firstname: '',\n    lastname: '',\n    email: '',\n    phone: '',\n    phonePrefix: '',\n    note: '',\n    agreements: [] as RoA<ID>,\n  }\n}\n\nfunction getSubmitVariables(\n  values: OrderFormValues,\n  orderModel: TOrderModel,\n): MSubmitOrderVariables {\n  return {\n    orderId: orderModel.orderId!,\n    customer: {\n      firstName: values.firstname,\n      lastName: values.lastname,\n      emails: [{ email: values.email }],\n      phones: [{ phone: `${values.phonePrefix}${values.phone}` }],\n    },\n    note: values.note,\n    tips: orderModel.tips,\n    paymentGate: orderModel.paymentMethod as PaymentGateEnum,\n    deliverAt: orderModel.deliverAt && isoDate(orderModel.deliverAt),\n    agreements: values.agreements,\n  }\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { useGoPay } from '@speedlo/payments'\n\nimport { useRoot } from '../../../app/useRoot'\nimport { useExecutableQOrderPaymentStatus } from '../../../graph/generated'\nimport { useAlertModal } from '../../../hooks/useAlertModal'\nimport { i18n } from '../../../i18n'\n\nexport function useOrderPayment() {\n  const { order: orderModel, business } = useRoot()\n  const { history } = useRouterContext()\n\n  const [paymentErrorModal, alertPaymentError] = useAlertModal()\n\n  const [executePaymentStatusCheck] = useExecutableQOrderPaymentStatus({\n    fetchPolicy: 'no-cache',\n  })\n\n  const { executeGoPayPayment, paymentLoading: paymentProcessing } = useGoPay(\n    async (orderId = orderModel.orderId!, userToken) => {\n      if (!orderId) {\n        return null\n      }\n      orderModel.goPayStatusCheck(true)\n      const result = await executePaymentStatusCheck(\n        { orderId },\n        {\n          context: {\n            invalidateWithToken: userToken,\n          },\n        },\n      )\n      orderModel.goPayStatusCheck(false)\n      return result ? result.status : null\n    },\n    {\n      onError(errors) {\n        const phone = business.branch!.phone\n        alertPaymentError(\n          i18n.t`Payment status check has failed`,\n          errors.length\n            ? errors.join('<br />')\n            : i18n.t`We were unable to verify status of your payment. Please contact operator using number ${phone}`,\n        )\n      },\n      onFinish() {\n        history.replace('/finish')\n      },\n    },\n  )\n\n  return { paymentErrorModal, executeGoPayPayment, paymentProcessing }\n}\n","import { LanguagePicker as LangPick } from '@speedlo/ui'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\n\ninterface IProps {\n  className?: string\n}\n\nexport const LanguagePicker = observer<IProps>(({ className }) => {\n  const { business, user } = useRoot()\n  if (!business.isValid) {\n    return null\n  }\n  return (\n    <LangPick\n      availableLanguages={business.branch!.supportedLanguages}\n      selectedLanguage={user.language}\n      onChange={language => {\n        if (language !== user.language) {\n          user.selectLanguage(language)\n          // TODO: Figure out way to flush model persistence\n          setTimeout(() => {\n            window.location.reload()\n          }, 300)\n        }\n      }}\n      className={className}\n      backgroundColor=\"white\"\n      arrowColor=\"#5A5A5A\"\n    />\n  )\n})\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AlertModal } from '../../common/AlertModal'\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n}\n\nexport const ShopClosingTimeModal: React.FC<IProps> = ({ status }) => {\n  const { user } = useRoot()\n  const { decision, openingIn } = useShopStatus({\n    status,\n    // Do not want update here as it would be showing modal every time :)\n    updateInterval: 0,\n  })\n  return useObserver(() => (\n    <AlertModal\n      isOpen={\n        (decision === 'Closed' || decision === 'OpeningSoon') &&\n        !user.closingTimeAlertHidden\n      }\n      onClose={user.hideClosingTime}\n      headerText={i18n.t`We are closed right now`}\n    >\n      {i18n.t`We're sorry, but we do not accept new orders at this time.`}\n      {decision === 'OpeningSoon' && (\n        <Trans>\n          You can prepare your order because we are{' '}\n          <Plural\n            value={openingIn}\n            one=\"opening in 1 minute\"\n            other=\"opening in # minutes\"\n          />\n          !\n        </Trans>\n      )}\n    </AlertModal>\n  ))\n}\n","import './ShopHeaderIcons.css'\n\nimport { getLogo } from '@speedlo/assets'\nimport React from 'react'\n\nexport const ShopHeaderIcons = () => (\n  <>\n    <img\n      src={getLogo('doveze')}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={getLogo('mastercard')}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={getLogo('visa')}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={getLogo('gopay')}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </>\n)\n"],"sourceRoot":""}