{"version":3,"sources":["app/icons/share-icon.svg","segments/mobile/AppleBanner.tsx","common/ScrollToTop.tsx","segments/mobile/MobileHeader.tsx","segments/mobile/MobilePaymentMethod.tsx","segments/mobile/MobileSubmitButton.tsx","segments/mobile/MobileConfirmView.tsx","segments/mobile/MobileDeliveryView.tsx","segments/mobile/MobileFinishView.tsx","segments/mobile/MobileShopIntro.graphql.ts","segments/mobile/MobileShopIntro.tsx","segments/mobile/MobileIntroView.tsx","segments/mobile/MobileClosingTimeModal.graphql.ts","segments/mobile/MobileClosingTimeModal.tsx","segments/mobile/MobileOrderView.tsx","segments/mobile/MobilePickupList.tsx","segments/mobile/MobilePickupMap.tsx","segments/mobile/MobilePickupView.tsx","segments/mobile/MobileSmartBanner.tsx","app/MobileApp.tsx"],"names":["module","exports","__webpack_require__","p","StyledAppleBanner","styled","div","withConfig","displayName","componentId","ShareIcon","react_default","a","createElement","width","height","src","shareIcon","alt","AppleBanner","user","useRoot","useObserver","showAppleBanner","UAParser","window","navigator","userAgent","getOS","name","standalone","onClick","hideAppleBanner","_lingui_react","id","components","AppleBanner_ShareIcon","ScrollToTop","_PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","scrollTo","PureComponent","MobileHeader","_ref","text","buttonText","_ref$buttonRight","buttonRight","onButtonClick","leftButton","Buttons","className","data-testid","rightButton","isConfirm","MobilePaymentMethod","OrderPaymentButton","method","PaymentGateEnum","Gopay","i18n","_","toLocaleUpperCase","Cash","OrderFormTipInput","MobileSubmitButtonStyled","PrimaryButton","MobileSubmitButton","children","isSubmitting","orderModel","order","cn","heartBeat","disabled","isVamInitialized","MobileConfirmView","history","hasOrder","segments_mobile_MobileHeader","goBack","CartSystem","orderId","isReadonly","OrderFormSetup","render","form","Fragment","ScrollToTop_ScrollToTop","OrderFormStorageNotice","OrderGoPayModal","OrderErrorModal","OrderTimePicker","OrderFormAutoFill","onFill","values","setAllValues","OrderFormInputs","OrderAgreements","MobilePaymentMethod_MobilePaymentMethod","MobileSubmitButton_MobileSubmitButton","submitForm","react_router","to","MobileDeliveryView","map","useRouterContext","BaseMap","model","DeliveryMap","onConfirm","push","MobileFinishView","objectDestructuringEmpty","reactstrap_es","ColStyle","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","branch","companyBranch","FinishViewFooter","finish","MobileShopIntroQuery","gql","_templateObject","QueryMobileShopIntro","buildQuery","MobileShopIntro","business","variables","brandOrBranch","skip","isValid","renderLoading","headerText","intro","StyledLanguagePicker","LanguagePicker","MobileIntroView","BackgroundThemed","imageName","size","fixed","ShopHeaderIcons","MobileShopIntro_MobileShopIntro","OrderMethod","onChange","usingDeliveryOrderMethod","usingPickupOrderMethod","MobileShopStatusQuery","MobileClosingTimeModal_graphql_templateObject","FCompanyBranchStatusFragmentDoc","QueryMobileShopStatus","MobileClosingTimeModal","branchId","_ref2","ShopClosingTimeModal","status","MobileOrderView","useOrderModel","FoodMenuView","CartView","MobileClosingTimeModal_MobileClosingTimeModal","StatusDisplayPosition","MobilePickupList","branches","onSelect","onShowMap","onPrefetch","ShopAddress","address","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","pickupEnabled","onMouseEnter","toLocaleLowerCase","ButtonStripeContainerStyled","MobilePickupMap","MapPanning","gps","lib","position","gpsToLatLngLit","ButtonStripe","MobilePickupView","match","_useRoot","onSelectBranch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","createPickupOrder","stop","_x","renderHeader","renderMap","MobilePickupMap_MobilePickupMap","params","isBrand","PickupMap_graphql","brandId","_ref5","find","RM","propEq","segments_mobile_MobilePickupList","_ref3","concat","_ref4","prefetchFoodMenu","renderList","_ref6","_ref7","loading","SmartBannerContainer","MobileSmartBanner","observer","platform","os","MobilePlatformEnum","Ios","Android","getPlatformType","showBanner","banner","ensureBannerForCurrentBranch","shouldBeVisible","_useQSmartBanner","useQSmartBanner","data","app","setClosedNow","style","backgroundImage","icon","title","href","url","setInstalledNow","MobileApp","fluid","exact","path","component","AppleBanner_AppleBanner"],"mappings":"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","file":"static/js/11.59ca8021.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/share-icon.9dc3f608.svg\";","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\nimport { UAParser } from 'ua-parser-js'\n\nimport shareIcon from '../../app/icons/share-icon.svg'\nimport { useRoot } from '../../app/useRoot'\n\nconst StyledAppleBanner = styled.div`\n  width: 100%;\n  height: 5rem;\n  background: #f4f4f4;\n  padding: 1rem;\n  position: absolute;\n  bottom: 0rem;\n  z-index: 50;\n  opacity: 0.9;\n\n  a {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0 5px 0 0;\n    font-family: ArialRoundedMTBold, Arial;\n    font-size: 20px;\n    text-align: center;\n  }\n`\n\nconst ShareIcon: React.FC = () => {\n  return <img width=\"26\" height=\"26\" src={shareIcon} alt=\"Share\" />\n}\n\nexport const AppleBanner: React.FC = () => {\n  const { user } = useRoot()\n\n  return useObserver(() => {\n    if (user.showAppleBanner && isIos() && !isInStandaloneMode()) {\n      return (\n        <StyledAppleBanner onClick={user.hideAppleBanner}>\n          <a>&times;</a>\n          <Trans>\n            Install this webapp on your device: Tap <ShareIcon /> and then Add\n            to homescreen.\n          </Trans>\n        </StyledAppleBanner>\n      )\n    }\n    return null\n  })\n}\n\nfunction isIos() {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  return os.name === 'iOS'\n}\n\nfunction isInStandaloneMode() {\n  // @ts-ignore standalone typing\n  return 'standalone' in window.navigator && window.navigator.standalone\n}\n","import { PureComponent } from 'react'\n\ninterface IProps {}\n\nexport class ScrollToTop extends PureComponent<IProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return null\n  }\n}\n","import './MobileHeader.css'\n\nimport React from 'react'\n\nimport { MobileHeaderButton } from '../../common/Buttons'\n\ninterface IProps {\n  text: string\n  buttonText: string\n  buttonRight?: boolean\n  onButtonClick(): void\n}\n\nconst MobileHeader: React.FC<IProps> = ({\n  text,\n  buttonText,\n  buttonRight = false,\n  onButtonClick,\n}) => {\n  const leftButton =\n    buttonRight === false ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Left\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  const rightButton =\n    buttonRight === true ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Right\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n        isConfirm={true}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  return (\n    <div className=\"mobile__header\">\n      {leftButton}\n      <div className=\"mobile__header__text\">{text}</div>\n      {rightButton}\n    </div>\n  )\n}\n\nexport default MobileHeader\n","import './MobilePaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { OrderFormTipInput } from '../orderForm/OrderFormTipInput'\nimport { OrderPaymentButton } from '../orderForm/OrderPaymentButton'\n\ninterface IProps {}\n\nexport const MobilePaymentMethod: React.FC<IProps> = () => {\n  return (\n    <div className=\"mobile__confirm__payment__method\">\n      <OrderPaymentButton\n        method={PaymentGateEnum.Gopay}\n        data-testid=\"mobilePaymentMethodGoPay\"\n      >\n        <span className=\"flaticon-credit-card\">\n          {i18n.t`Pay by card`.toLocaleUpperCase()}\n        </span>\n      </OrderPaymentButton>\n      <OrderPaymentButton\n        method={PaymentGateEnum.Cash}\n        data-testid=\"mobilePaymentMethodCash\"\n      >\n        <span className=\"flaticon-money\">\n          {i18n.t`Pay by cash`.toLocaleUpperCase()}\n        </span>\n      </OrderPaymentButton>\n      <OrderFormTipInput />\n    </div>\n  )\n}\n","import { cn } from '@speedlo/ui'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\n\ninterface IProps {\n  isSubmitting: boolean\n  onClick(): void\n}\n\nconst MobileSubmitButtonStyled = styled(PrimaryButton)`\n  margin: 0.2rem;\n  padding: 1rem 4rem;\n  text-transform: uppercase;\n`\n\nexport const MobileSubmitButton: React.FC<IProps> = ({\n  children,\n  isSubmitting,\n  onClick,\n}) => {\n  const { order: orderModel } = useRoot()\n  const className = cn('animated', 'infinite', {\n    heartBeat: isSubmitting,\n  })\n  return useObserver(() => (\n    <MobileSubmitButtonStyled\n      disabled={!orderModel.isVamInitialized || isSubmitting}\n      onClick={onClick}\n      className={className}\n    >\n      {children}\n    </MobileSubmitButtonStyled>\n  ))\n}\n","import './MobileConfirmView.css'\n\nimport { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nimport { useRoot } from '../../app/useRoot'\nimport { ScrollToTop } from '../../common/ScrollToTop'\nimport { i18n } from '../../i18n'\nimport { CartSystem } from '../cart/CartSystem'\nimport { OrderAgreements } from '../orderForm/OrderAgreements'\nimport { OrderErrorModal } from '../orderForm/OrderErrorModal'\nimport { OrderFormAutoFill } from '../orderForm/OrderFormAutoFill'\nimport { OrderFormInputs } from '../orderForm/OrderFormInputs'\nimport { OrderFormSetup } from '../orderForm/OrderFormSetup'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderGoPayModal } from '../orderForm/OrderGoPayModal'\nimport { OrderTimePicker } from '../orderForm/OrderTimePicker'\nimport MobileHeader from './MobileHeader'\nimport { MobilePaymentMethod } from './MobilePaymentMethod'\nimport { MobileSubmitButton } from './MobileSubmitButton'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MobileConfirmView: React.FC<IProps> = ({ history }) => {\n  const { order: orderModel } = useRoot()\n  if (!orderModel.hasOrder) {\n    return <Redirect to=\"/\" />\n  }\n  return (\n    <div className=\"mobile__confirm__view\">\n      <MobileHeader\n        text={i18n.t`Order confirmation`}\n        buttonText={i18n.t`Change`}\n        onButtonClick={() => history.goBack()}\n      />\n      <CartSystem orderId={orderModel.orderId!} isReadonly={true} />\n      <OrderFormSetup\n        render={(form, isSubmitting) => (\n          <>\n            <ScrollToTop />\n            <OrderFormStorageNotice />\n            <OrderGoPayModal />\n            <OrderErrorModal />\n            <OrderTimePicker />\n            <OrderFormAutoFill onFill={values => form.setAllValues(values)} />\n            <div className=\"mobile__confirm__view__form\">\n              <h3>\n                <Trans>Where and to whom we deliver?</Trans>\n              </h3>\n              <OrderFormInputs />\n              <OrderAgreements />\n            </div>\n            <div className=\"mobile__confirm__view__submit\">\n              <h4>\n                <Trans>Place order</Trans>\n              </h4>\n              <MobilePaymentMethod />\n\n              <MobileSubmitButton\n                onClick={form.submitForm}\n                isSubmitting={isSubmitting}\n              >\n                <Trans>Place order</Trans>\n              </MobileSubmitButton>\n            </div>\n          </>\n        )}\n      />\n    </div>\n  )\n}\n","import './MobileMap.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { i18n } from '../../i18n'\nimport { DeliveryMap } from '../map/DeliveryMap'\nimport MobileHeader from './MobileHeader'\n\nexport const MobileDeliveryView: React.FC = () => {\n  const { map } = useRoot()\n  const { history } = useRouterContext()\n  return (\n    <div>\n      <MobileHeader\n        text={i18n.t`Enter the address`}\n        buttonText={i18n.t`Back`}\n        onButtonClick={() => history.goBack()}\n      />\n      <div className=\"mobile__map__view\">\n        <BaseMap model={map}>\n          <DeliveryMap onConfirm={() => history.push('/order')} />\n        </BaseMap>\n      </div>\n    </div>\n  )\n}\n","import '../finish/FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport { FinishViewFooter } from '../finish/FinishViewFooter'\nimport { FinishViewLoader } from '../finish/FinishViewLoader'\nimport { FinishViewOrder } from '../finish/FinishViewOrder'\nimport { FinishViewSupport } from '../finish/FinishViewSupport'\n\ninterface IProps {}\n\nexport const MobileFinishView: React.FC<IProps> = ({}) => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyle>\n      <div className=\"finish__view__mobile\">\n        <FinishViewLoader\n          render={result => (\n            <>\n              <FinishViewOrder order={result.order} />\n              <FinishViewSupport branch={result.companyBranch} />\n              <FinishViewFooter finish={result} />\n            </>\n          )}\n        />\n      </div>\n    </ColStyle>\n  </Row>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph/buildQuery'\nimport { GMobileShopIntro } from '../../graph/types'\n\nexport const MobileShopIntroQuery = gql`\n  query GMobileShopIntro($brandId: ID, $branchId: ID) {\n    intro: applicationSettings(brand: $brandId, companyBranch: $branchId) {\n      headerText\n      homepageUrl\n    }\n  }\n`\n\nexport const QueryMobileShopIntro = buildQuery<\n  GMobileShopIntro.Query,\n  GMobileShopIntro.Variables\n>(MobileShopIntroQuery)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { QueryMobileShopIntro } from './MobileShopIntro.graphql'\n\nexport const MobileShopIntro: React.FC = () => {\n  const { business } = useRoot()\n  return useObserver(() => (\n    <QueryMobileShopIntro\n      variables={business.brandOrBranch}\n      skip={!business.isValid}\n      renderLoading={() => null}\n      render={({ intro: { headerText } }) => (\n        <div data-testid=\"MobileShopIntro\">{headerText}</div>\n      )}\n    />\n  ))\n}\n","import './MobileIntroView.css'\n\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { ColStyle } from '../../common/ColStyle'\nimport { LanguagePicker } from '../../common/LanguagePicker'\nimport { OrderMethod } from '../destination/OrderMethod'\nimport { ShopHeaderIcons } from '../shop/ShopHeaderIcons'\nimport { MobileShopIntro } from './MobileShopIntro'\n\nconst StyledLanguagePicker = styled(LanguagePicker)`\n  position: absolute;\n  right: 0.3rem;\n  margin-top: 0.4rem;\n`\n\nexport const MobileIntroView: React.FC = () => (\n  <div className=\"mobile__intro\">\n    <BackgroundThemed\n      className=\"mobile__intro__logo\"\n      data-testid=\"MobileIntroView__BackgroundThemed\"\n      imageName=\"storeLogoMobile\"\n      size=\"cover\"\n      fixed={false}\n    >\n      <ColStyle>\n        <ShopHeaderIcons />\n      </ColStyle>\n\n      <StyledLanguagePicker />\n    </BackgroundThemed>\n    <div className=\"mobile__intro__info\">\n      <MobileShopIntro />\n      <Route>\n        {({ history }) => (\n          <OrderMethod\n            onChange={order => {\n              if (order.usingDeliveryOrderMethod) {\n                history.push('/delivery')\n              } else if (order.usingPickupOrderMethod) {\n                history.push('/pickup')\n              }\n            }}\n          />\n        )}\n      </Route>\n    </div>\n  </div>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { FCompanyBranchStatusFragmentDoc } from '../../graph/generated'\nimport { GMobileShopStatus } from '../../graph/types'\n\nexport const MobileShopStatusQuery = gql`\n  query GMobileShopStatus($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      ...FCompanyBranchStatus\n    }\n  }\n  ${FCompanyBranchStatusFragmentDoc}\n`\n\nexport const QueryMobileShopStatus = buildQuery<\n  GMobileShopStatus.Query,\n  GMobileShopStatus.Variables\n>(MobileShopStatusQuery)\n","import React from 'react'\n\nimport { ShopClosingTimeModal } from '../shop/ShopClosingTimeModal'\nimport { QueryMobileShopStatus } from './MobileClosingTimeModal.graphql'\n\ninterface IProps {\n  branchId: ID\n}\n\nexport const MobileClosingTimeModal: React.FC<IProps> = ({ branchId }) => (\n  <QueryMobileShopStatus\n    variables={{ branchId }}\n    render={({ branch }) => branch && <ShopClosingTimeModal status={branch} />}\n  />\n)\n","import './MobileOrderView.css'\n\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useOrderModel } from '../../hooks/useOrderModel'\nimport { CartView } from '../cart/CartView'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { MobileClosingTimeModal } from './MobileClosingTimeModal'\n\nexport const MobileOrderView = () => {\n  const orderModel = useOrderModel()\n  if (!orderModel.hasOrder) {\n    return <Redirect to=\"/\" />\n  }\n  return useObserver(() => (\n    <div className=\"mobile__order__view\">\n      <FoodMenuView />\n      <CartView />\n      <MobileClosingTimeModal branchId={orderModel.branchId!} />\n    </div>\n  ))\n}\n","import './MobilePickupList.css'\n\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton, SecondaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { GPickupBranch } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { ShopStatusDisplay } from '../shop/ShopStatusDisplay'\n\ninterface IProps {\n  branches: ReadonlyArray<GPickupBranch.Fragment>\n  onSelect(site: GPickupBranch.Fragment): void\n  onShowMap(site: GPickupBranch.Fragment): void\n  onPrefetch(branchId: ID): void\n}\n\nconst StatusDisplayPosition = styled.div``\n\nconst MobilePickupList: React.FC<IProps> = ({\n  branches,\n  onSelect,\n  onShowMap,\n  onPrefetch,\n}) => {\n  const renderBranch = (branch: GPickupBranch.Fragment) => {\n    return (\n      <div\n        className=\"mobile__pickup__list__item\"\n        data-testid=\"MobilePickupList\"\n        key={branch.id}\n      >\n        <div className=\"mobile__pickup__list__header\">{branch.name}</div>\n        <ShopAddress address={branch.address} />\n        <StatusDisplayPosition>\n          <ShopStatusDisplay\n            status={branch}\n            deliveryTime={branch.defaultDeliveryTime}\n            pickupTime={branch.defaultPickupTime}\n          />\n        </StatusDisplayPosition>\n\n        <div className=\"mobile__pickup__list__buttons\">\n          <SecondaryButton onClick={() => onShowMap(branch)}>\n            <span className=\"flaticon-signs\">\n              {i18n.t`Show on map`.toLocaleUpperCase()}\n            </span>\n          </SecondaryButton>\n          {branch.pickupEnabled ? (\n            <PrimaryButton\n              onClick={() => onSelect(branch)}\n              onMouseEnter={() => onPrefetch(branch.id)}\n            >\n              <span className=\"flaticon-mark\">\n                {i18n.t`Choose`.toLocaleUpperCase()}\n              </span>\n            </PrimaryButton>\n          ) : (\n            <PrimaryButton disabled={true}>\n              <span className=\"flaticon-mark\">\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </span>\n            </PrimaryButton>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"mobile__pickup__list\">\n      {branches && branches.map(renderBranch)}\n    </div>\n  )\n}\n\nexport default MobilePickupList\n","import { Marker } from '@react-google-maps/api'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLngLit } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { TMapModel } from '../../models/MapModel'\nimport { MapPanning } from '../map/atoms/MapPanning'\n\ninterface IProps {\n  model: TMapModel\n  branch: Maybe<GPickupBranch.Fragment>\n  onSelect(): void\n}\n\nconst ButtonStripeContainerStyled = styled.div`\n  margin-top: 2rem;\n  z-index: 10;\n`\n\nexport const MobilePickupMap: React.FC<IProps> = ({\n  model,\n  branch,\n  onSelect,\n}) => {\n  return (\n    <div>\n      <div className=\"mobile__map__view\">\n        <BaseMap model={model}>\n          <MapPanning map={model} gps={branch && branch.gps} />\n          {branch && <Marker position={gpsToLatLngLit(branch.gps)} />}\n        </BaseMap>\n      </div>\n      {branch && branch.pickupEnabled && (\n        <ButtonStripeContainerStyled>\n          <ButtonStripe>\n            <PrimaryButton\n              onClick={onSelect}\n              data-testid=\"mobilePickupMap__SubmitButton\"\n            >\n              {i18n.t`Choose branch`.toLocaleUpperCase()}\n            </PrimaryButton>\n          </ButtonStripe>\n        </ButtonStripeContainerStyled>\n      )}\n      {branch && !branch.pickupEnabled && (\n        <ButtonStripeContainerStyled>\n          <ButtonStripe>\n            <PrimaryButton\n              disabled={true}\n              data-testid=\"mobilePickupMap__SubmitButton\"\n            >\n              {i18n.t`Delivery only`.toLocaleLowerCase()}\n            </PrimaryButton>\n          </ButtonStripe>\n        </ButtonStripeContainerStyled>\n      )}\n    </div>\n  )\n}\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { useRoot } from '../../app/useRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport {\n  QueryPickupMapBranch,\n  QueryPickupMapBrand,\n} from '../map/PickupMap.graphql'\nimport MobileHeader from './MobileHeader'\nimport MobilePickupList from './MobilePickupList'\nimport { MobilePickupMap } from './MobilePickupMap'\n\ninterface IRouteParams {\n  branchId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const MobilePickupView: React.FC<IProps> = ({ history, match }) => {\n  const { order, map, business } = useRoot()\n  const onSelectBranch = async (id: ID) => {\n    await order.createPickupOrder(id)\n    history.push('/order')\n  }\n  const renderHeader = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobileHeader\n      text={branch ? branch.name : i18n.t`Choose branch`}\n      buttonText={i18n.t`Back`}\n      onButtonClick={() => history.goBack()}\n    />\n  )\n  const renderMap = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobilePickupMap\n      model={map}\n      branch={branch}\n      onSelect={() => branch && onSelectBranch(branch.id)}\n    />\n  )\n  const renderList = (branches: ReadonlyArray<GPickupBranch.Fragment>) => (\n    <MobilePickupList\n      branches={branches}\n      onShowMap={({ id }) => history.push(`/pickup/${id}`)}\n      onSelect={({ id }) => onSelectBranch(id)}\n      onPrefetch={id => order.prefetchFoodMenu(id)}\n    />\n  )\n\n  const { branchId } = match.params\n\n  return business.isBrand ? (\n    <QueryPickupMapBrand\n      variables={{ brandId: business.brandId! }}\n      renderLoading={!branchId}\n      render={({ branches }) => {\n        const branch =\n          (branches && branches.find(RM.propEq('id', branchId))) || null\n        return (\n          <>\n            {renderHeader(branch)}\n            {branch ? renderMap(branch) : renderList(branches)}\n          </>\n        )\n      }}\n    />\n  ) : (\n    <QueryPickupMapBranch\n      variables={{ branchId: business.branchId! }}\n      renderLoading={false}\n      render={({ branch }, { loading }) => (\n        <>\n          {renderHeader(branch)}\n          {renderMap(branch)}\n        </>\n      )}\n    />\n  )\n}\n","import './MobileSmartBanner.css'\n\nimport { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components/macro'\nimport { UAParser } from 'ua-parser-js'\n\nimport { useRoot } from '../../app/useRoot'\nimport { MobilePlatformEnum, useQSmartBanner } from '../../graph/generated'\nimport { TBannerModel } from '../../models/BannerModel'\n\nconst SmartBannerContainer = styled.div`\n  border-bottom: 1px solid #8f8f8f;\n  height: 81px;\n  position: absolute;\n  z-index: 1;\n  top: 3rem;\n  width: 100%;\n`\n\nexport const MobileSmartBanner = observer(() => {\n  const { business } = useRoot()\n  const platform = getPlatformType()\n\n  let showBanner: Maybe<TBannerModel> = null\n  if (business.isValid && platform !== null) {\n    const banner = business.ensureBannerForCurrentBranch()\n    if (banner.shouldBeVisible) {\n      showBanner = banner\n    }\n  }\n\n  const { data, loading } = useQSmartBanner(\n    {\n      branchId: business.branchId!,\n      platform: platform!,\n    },\n    {\n      skip: showBanner === null,\n    },\n  )\n\n  if (showBanner === null || loading || !data.app) {\n    return null\n  }\n\n  const { app } = data\n\n  const wrapperClassName = `smartbanner smartbanner-ios smartbanner-top`\n\n  return (\n    <SmartBannerContainer>\n      <div className={wrapperClassName}>\n        <div className=\"smartbanner-container\">\n          <a className=\"smartbanner-close\" onClick={showBanner.setClosedNow}>\n            &times;\n          </a>\n          <span\n            className=\"smartbanner-icon\"\n            style={{ backgroundImage: `url(${app.icon})` }}\n          />\n          <div className=\"smartbanner-info\">\n            <div className=\"smartbanner-title\">{app.title}</div>\n            <div className=\"smartbanner-description\">\n              <Trans>Free</Trans>\n            </div>\n          </div>\n          <div className=\"smartbanner-wrapper\">\n            <a\n              href={app.url}\n              onClick={showBanner.setInstalledNow}\n              className=\"smartbanner-button\"\n            >\n              <span className=\"smartbanner-button-text\">\n                <Trans>Show app</Trans>\n              </span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </SmartBannerContainer>\n  )\n})\n\nexport function getPlatformType(): Maybe<MobilePlatformEnum> {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  if (os.name === 'iOS') {\n    return MobilePlatformEnum.Ios\n  } else if (os.name === 'Android') {\n    return MobilePlatformEnum.Android\n  }\n  return null\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { AppleBanner } from '../segments/mobile/AppleBanner'\nimport { MobileConfirmView } from '../segments/mobile/MobileConfirmView'\nimport { MobileDeliveryView } from '../segments/mobile/MobileDeliveryView'\nimport { MobileFinishView } from '../segments/mobile/MobileFinishView'\nimport { MobileIntroView } from '../segments/mobile/MobileIntroView'\nimport { MobileOrderView } from '../segments/mobile/MobileOrderView'\nimport { MobilePickupView } from '../segments/mobile/MobilePickupView'\nimport { MobileSmartBanner } from '../segments/mobile/MobileSmartBanner'\n\nconst MobileApp = () => (\n  <>\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MobileIntroView} />\n      <Route path=\"/pickup/:branchId?\" component={MobilePickupView} />\n      <Route path=\"/delivery\" component={MobileDeliveryView} />\n      <Route path=\"/order\" component={MobileOrderView} />\n      <Route path=\"/confirm\" component={MobileConfirmView} />\n      <Route path=\"/finish\" component={MobileFinishView} />\n    </Container>\n    <Route path={['/', '/finish']} exact={true} component={MobileSmartBanner} />\n    <AppleBanner />\n  </>\n)\n\nexport default MobileApp\n"],"sourceRoot":""}