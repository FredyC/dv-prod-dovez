{"version":3,"sources":["common/Buttons.tsx","common/Responsive.tsx","helpers/gps.ts","common/AlertModal.tsx","hooks/useOrderModel.ts","app/useRoot.tsx","tools/ramda.ts","common/Pacman.tsx","hooks/useAlertModal.ts","segments/map/hooks/useOrderCreate.ts","segments/orderForm/OrderFormMemory.ts","helpers/formats.ts","tools/datefns.ts","app/ThemeSwitchProvider.tsx","enableDebug.ts","i18n.tsx","config.ts","graph/generated.ts","../node_modules/date-fns/locale lazy /^/.*/index/.js$/ groupOptions: {} namespace object","../ /^/.*/messages/.po$/ groupOptions: {} namespace object","locale lazy /^/.*/messages/.js$/ groupOptions: {} namespace object","../node_modules/@speedlo/assets/flags sync /^/.*/.svg$","../node_modules/@speedlo/assets/logos sync /^/logo/-.*/.svg$","common/ErrorContainer.tsx","common/PageTitle.tsx","app/AddSentryContext.tsx","app/BusinessLoader.tsx","app/CypressHelper.tsx","app/IdentifyGuest.tsx","app/ResetOrderAtRoot.tsx","app/ResetPersistenceButton.tsx","app/SuspendOnInit.tsx","app/hooks/useSuspenseWhen.ts","app/App.tsx","app/Router.tsx","hooks/useAnalytics.ts","helpers/logger.ts","helpers/persistModel.ts","models/BaseModel.ts","models/AuthModel.ts","models/BannerModel.ts","models/BusinessModel.ts","models/CartModel.ts","models/ConfigModel.ts","models/LocationModel.ts","models/MapModel.ts","models/OrderModel.ts","models/UserModel.ts","models/RootModel.ts","index.tsx","graph/createClient.ts"],"names":["PrimaryButton","styled","Button","themeProp","SecondaryButton","SelectButtonThemed","selected","theme","props","css","mediaDesktop","tertiary","unselected","mediaMobile","tertiaryText","unselectedText","tertiaryHover","unselectedHover","name","mobileBreakpoint","Desktop","minWidth","Mobile","maxWidth","gpsToLatLngLit","gps","lat","Number","latitude","lng","longitude","gpsToLatLng","google","maps","LatLng","latLngToGps","latLng","AlertModal","isOpen","headerText","onClose","children","modalProps","toggle","className","data-testid","tag","Container","useOrderModel","useRoot","order","rootContext","React","createContext","undefined","root","useContext","Error","RootProvider","Provider","idPropEq","RM","Pacman","noMargin","style","display","alignSelf","justifyContent","marginTop","useAlertModal","useState","alertModal","setAlertModal","useCallback","header","body","createElement","useOrderCreate","onConfirm","location","business","useMDeliveryOrderCreate","deliveryOrderCreate","useMPickupOrderCreate","pickupOrderCreate","createDeliveryOrder","a","geoPoint","branchId","setBranch","orderOrigin","address","brandOrBranch","result","branch","id","Sentry","withScope","scope","setExtras","requestedBranchId","createdOrderId","createdBranchId","captureMessage","orderCreated","createPickupOrder","memoryKey","appConfig","persistenceKey","catchError","err","setTag","captureException","writeMemory","debounce","memory","done","localforage","setItem","OrderFormMemory","memo","user","xform","useXFormCtx","applyMemory","memoryApplied","api","mergeValues","Object","entries","forEach","key","state","touched","add","setMemoryApplied","log","useEffect","getItem","catch","then","useAutorun","shouldRememberForm","firstname","values","lastname","email","phonePrefix","phone","note","formatTime","format","formatAddress","street","houseNumber","city","DFLocale","curry","value","DF","locale","changeDFLocale","lang","default","forkCSLang","timeFormats","full","long","medium","short","formatLong","time","dirtyOptions","options","width","String","ThemeSwitchProvider","observer","variables","brandId","isBrand","hasOrder","data","useQThemeStyle","skip","isValid","fetchPolicy","disableBatching","useMemo","styles","defaultTheme","primary","secondary","primaryHover","calcHoverColor","secondaryHover","storeLogo","storeLogoMobile","backgroundCart","active","main","mainSecondary","getTheme","useTheme","ThemeContext","inputColor","Color","lighten","hsl","string","window","localStorage","i18n","setupI18n","I18nManager","forceUpdate","initialized","languageActivated","loadCatalog","language","activate","activateLanguage","i","catalog","load","fallbackLanguage","supportedLanguages","endpoint","process","REACT_APP_LOCAL_KEY","googleMapsApi","redirectOnFail","sentryDSN","pageTitleSuffix","analytics","assign","CompanyTypeEnum","AddressTypeEnum","CurrencyEnum","WeekDayEnum","OrderStateCategoryTargetEnum","OrderStateCategoryEnum","LanguageEnum","MobilePlatformEnum","WareUnitEnum","PaymentGateEnum","PaymentTypeEnum","AvailabilityTypeEnum","OrderOriginCategoryEnum","AllergenEnum","WarePriceTypeEnum","FieldStateEnum","ZoneTypeEnum","DeviceStateEnum","DeviceTypeEnum","DeliveryStateEnum","OrderStateEnum","OrderBillingTypeEnum","DeliveryTypeEnum","OrderRecipeStateEnum","OrderOnlineStateEnum","OrderOriginEnum","WareCategoryTypeEnum","SectorTypeEnum","ShiftUserStateEnum","CountryEnum","SubscriptionActionType","WareCategoryColorEnum","WareRequirementEnum","SettingTypeEnum","FCompanyBranchFragmentDoc","gql","FPromoCodeFragmentDoc","FRecipeFragmentDoc","FCartItemFragmentDoc","FPriceFragmentDoc","FCartGoodsFragmentDoc","FCartStaticFragmentDoc","FCartSummaryFragmentDoc","FRecipeDetailFragmentDoc","FOrderFinishedFragmentDoc","FCartPresenceFragmentDoc","FFoodMenuCategoryFragmentDoc","FFoodMenuRecipeFragmentDoc","FOrderCreateFragmentDoc","FGeoPointFragmentDoc","FJsonAddressFragmentDoc","FAddressFragmentDoc","FCompanyBranchStatusFragmentDoc","FPickupBranchFragmentDoc","FShopOpeningHoursFragmentDoc","QBusinessLookupDocument","useQBusinessLookup","baseOptions","Hooks","QDelayedOrderDocument","useQDelayedOrder","QThemeStyleDocument","MAddToCartDocument","useMAddToCart","MChangeCartItemDocument","useMChangeCartItem","MRemoveCartItemDocument","useMRemoveCartItem","QCartDocument","useQCart","QCartItemDocument","useQCartItem","QCartRecipeDocument","useQCartRecipe","useLazyQCartRecipe","QOrderFinishDocument","useQOrderFinish","QFoodMenuDocument","useQFoodMenu","QFoodMenuCartPresenceDocument","useQFoodMenuCartPresence","MDeliveryOrderCreateDocument","MPickupOrderCreateDocument","QInitialDeliveryLocationDocument","useQInitialDeliveryLocation","QPickupMapDocument","useQPickupMap","QResolveLocationDocument","useLazyQResolveLocation","QMobileShopIntroDocument","useQMobileShopIntro","QMobileShopStatusDocument","useQMobileShopStatus","QSmartBannerDocument","useQSmartBanner","MOrderDeliveryTimeDocument","useMOrderDeliveryTime","MOrderPromoAddDocument","useMOrderPromoAdd","MOrderPromoRemoveDocument","useMOrderPromoRemove","MOrderTipUpdateDocument","useMOrderTipUpdate","MSubmitOrderDocument","useMSubmitOrder","QOrderFormDocument","useQOrderForm","QOrderFormAgreementsDocument","useQOrderFormAgreements","QOrderPaymentStatusDocument","useLazyQOrderPaymentStatus","QOrderPromoCodesDocument","useQOrderPromoCodes","QShopHeaderBranchDocument","useQShopHeaderBranch","QShopHeaderIntroDocument","useQShopHeaderIntro","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","code","ids","t","keys","module","exports","webpackContext","webpackContextResolve","makeError","message","ErrorContainer","errorGuard","prod","errorKind","setErrorKind","makeAlert","onRetry","onUnhandledError","error","indexOf","isChunkError","setLevel","Severity","Debug","flushSentry","reload","isApolloError","isNetworkUnreachableError","onNetworkError","isUnreachable","console","onOperationError","onUserErrors","messages","msg","history","useRouterContext","modalOpen","setModalOpen","onFeedback","showReportDialog","labelClose","title","onRestart","replace","routerBasePath","render","onClick","onError","DeveloperErrorBoundary","require","PageTitle","suffix","hostname","includes","getProdSuffix","document","autorun","brand","trim","AddSentryContext","useSentryScope","orderModel","orderId","orderBranchId","BusinessLoader","lookup","getStash","requestedCode","url","href","updateFromLookup","companyId","CypressHelper","IdentifyGuest","auth","userId","token","configureScope","setUser","username","setExtra","ResetOrderAtRoot","match","useRouteMatch","isExact","orderCancel","ResetPersistenceButton","SuspendOnInit","predicate","suspend","setSuspend","thrown","useRef","resolverRef","current","when","useSuspenseWhen","DesktopApp","lazy","MobileApp","App","Suspense","fallback","Router","useObserver","basename","ReactGA","initialize","debug","gaOptions","siteSpeedSampleRate","logPersist","persistModel","model","modelName","getType","stateKey","writeState","snapshot","removeItem","applySnapshot","getSnapshot","onSnapshot","BaseModel","types","views","self","getPath","getRoot","AuthModel","named","maybeNull","actions","authenticate","addBreadcrumb","category","level","Info","BannerModel","identifier","closedAt","maybe","Date","installedAt","isMobileApp","differenceInDays","Boolean","setInstalledNow","setClosedNow","BusinessModel","banners","volatile","country","Web","defaultLanguage","company","this","urlCode","URL","searchParams","get","codeParam","REACT_APP_BUSINESS_CODE","knownBasePath","toLowerCase","ensureBannerForCurrentBranch","has","set","CartModel","withGoods","withPresence","orderIsSubmitting","updateDisplay","isMobile","showGoods","setOrderSubmitting","ConfigModel","orderItemsMax","LocationModel","number","searchValue","optional","isResolved","isStreetAddress","inDeliveryLocation","geolocationDisabled","geolocationPoint","isResolving","hasResolutionResult","initialSearchAddress","navigator","geolocation","length","hasLocation","setLocation","setIsResolving","resolving","setSearchValue","search","setInitialSearchAddress","setAddress","clearAddress","setGeolocationPoint","point","disableGeolocation","setResolutionResult","companyBranch","isValidAddress","finalAddress","hasSearchValue","gpsCoordinates","zone","setSearchResult","setAsNotResolved","setAsNotAddress","resetResolution","GPSCzechia","MapModel","zoom","mapRef","clickPoint","setMapRef","ref","updateZoom","getZoom","updatePosition","center","getCenter","ev","clearClickPoint","OrderModel","orderMethod","Messenger","paymentMethod","Gopay","deliverAt","tips","isSubmitting","isGoPayChecking","hasUsedGoPay","submitErrors","lastActiveRecipeId","timePickerOpen","addToCartRecipeId","changeCartItemId","isVamInitialized","Pickup","useOrderMethod","method","setPaymentMethod","orderPaid","submitStarted","submitFinished","submitFailed","errors","vamFailed","clearErrors","goPayStatusCheck","checking","setUsedRecipeId","recipeId","openTimePicker","closeTimePicker","setTips","setDeliverAt","addToCart","changeCartItem","itemId","initVam","UserModel","selectedLanguage","rememberForm","boolean","showAppleBanner","closingTimeAlertHidden","orderLimitAlertHidden","detectLanguage","selectLanguage","showClosingTime","hideClosingTime","showOrderLimit","hideOrderLimit","setFormRememberYes","setFormRememberNo","hideAppleBanner","RootModel","cart","config","extend","initialSnapshot","observable","box","afterCreate","reset","init","all","persistedModels","ReactDOM","opts","reportPage","pageview","useAnalytics","useSentryInit","rootInit","rootInst","create","getToken","fetchGuestToken","createDefaultApolloClient","createAuthLink","createLanguageLink","createLogLink","enabled","createRetryLink","createOfflineLink","createDateParserLink","CompanyBranch","BusinessHourInterval","createNetworkLink","createApolloClient","client","getElementById","updateWorker","register","autoUpdate","onUpdate","sw","setTimeout","confirm","postMessage","serviceWorker","addEventListener","event"],"mappings":"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AA,E,QAAAA,E,QAAAA,E,QAAAA,E,SAAAA,M,cAQAC,K,kBAAAA,E,UAAAA,E,WAAAA,M,cAMAC,K,oBAAAA,E,YAAAA,E,cAAAA,E,eAAAA,M,cAOAC,K,cAAAA,E,gBAAAA,E,gBAAAA,E,aAAAA,M,cAOAC,K,YAAAA,E,gBAAAA,E,kBAAAA,E,qBAAAA,M,cAOAC,K,YAAAA,E,qBAAAA,M,cAKAC,K,gBAAAA,E,YAAAA,E,cAAAA,E,mBAAAA,M,cAOAC,K,0CAAAA,E,UAAAA,E,sBAAAA,E,YAAAA,E,gBAAAA,E,oBAAAA,E,YAAAA,E,UAAAA,E,gBAAAA,E,kBAAAA,E,gBAAAA,E,sBAAAA,E,cAAAA,E,qBAAAA,M,cAiBAC,K,oBAAAA,E,mBAAAA,M,cAKAC,K,kBAAAA,E,kBAAAA,E,qBAAAA,M,cAMAC,K,YAAAA,E,cAAAA,E,gBAAAA,E,iBAAAA,M,cAOAC,K,kBAAAA,E,gBAAAA,E,YAAAA,E,aAAAA,M,cAOAC,K,UAAAA,E,cAAAA,E,aAAAA,M,cAMAC,K,cAAAA,E,eAAAA,E,sBAAAA,E,oBAAAA,E,+BAAAA,E,qBAAAA,E,6BAAAA,E,2BAAAA,M,cAWAC,K,iBAAAA,E,oBAAAA,E,yBAAAA,E,oBAAAA,E,0BAAAA,E,yCAAAA,E,gBAAAA,E,YAAAA,E,8BAAAA,E,gBAAAA,E,8BAAAA,E,qCAAAA,E,UAAAA,E,gBAAAA,E,sBAAAA,E,6BAAAA,E,cAAAA,E,oBAAAA,E,kCAAAA,E,uBAAAA,E,YAAAA,E,eAAAA,E,4BAAAA,E,YAAAA,E,sBAAAA,E,cAAAA,E,oBAAAA,E,0CAAAA,E,2CAAAA,E,mCAAAA,E,4BAAAA,E,oBAAAA,E,6BAAAA,E,iCAAAA,E,kCAAAA,E,yBAAAA,E,2BAAAA,E,8CAAAA,E,6BAAAA,E,2BAAAA,E,wCAAAA,E,kCAAAA,M,cA6CAC,K,qBAAAA,E,wBAAAA,E,UAAAA,E,6BAAAA,E,uBAAAA,M,cAQAC,K,gBAAAA,E,sBAAAA,E,YAAAA,E,aAAAA,M,cAOAC,K,cAAAA,E,sBAAAA,E,gBAAAA,E,oBAAAA,E,oBAAAA,E,eAAAA,M,cASAC,K,kBAAAA,E,k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LqD,GACAzK,EACAmH,GAgBG,IAAMwD,GAA4B9E,IAAH,IAYlCgB,GACAG,GACAF,IAGG,SAAS8D,GACd5K,EACAmH,GAKA,OAAOC,WACLuD,GACA3K,EACAmH,GAgBG,IAAM0D,GAA2BhF,IAAH,KAS9B,SAASiF,GACd9K,EACAmH,GAKA,OAAOC,WACLyD,GACA7K,EACAmH,K,oBCvzHJ,IAAI4D,EAAM,CACT,oCAAqC,CACpC,IACA,GAED,kCAAmC,CAClC,IACA,GAED,+BAAgC,CAC/B,IACA,KAED,sCAAuC,CACtC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,IACA,KAED,uCAAwC,CACvC,IACA,GAED,mCAAoC,CACnC,IACA,IAED,uCAAwC,CACvC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,mBAAoB,CACnB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uCAAwC,CACvC,IACA,IAED,iCAAkC,CACjC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,mBAAoB,CACnB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,uCAAwC,CACvC,IACA,KAED,mCAAoC,CACnC,IACA,KAED,mBAAoB,CACnB,KACA,KAED,mCAAoC,CACnC,IACA,KAED,mBAAoB,CACnB,KACA,KAED,uCAAwC,CACvC,IACA,KAED,mCAAoC,CACnC,IACA,KAED,uCAAwC,CACvC,IACA,KAED,iCAAkC,CACjC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,mBAAoB,CACnB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,uCAAwC,CACvC,IACA,KAED,mCAAoC,CACnC,IACA,GAED,uCAAwC,CACvC,IACA,GAED,iCAAkC,CACjC,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,mBAAoB,CACnB,KACA,GAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,KACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gBAAiB,CAChB,KACA,IAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,uCAAwC,CACvC,IACA,KAED,mCAAoC,CACnC,IACA,KAED,uCAAwC,CACvC,IACA,KAED,iCAAkC,CACjC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,mBAAoB,CACnB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,gBAAiB,CAChB,KACA,KAED,oCAAqC,CACpC,IACA,KAED,gCAAiC,CAChC,IACA,KAED,oCAAqC,CACpC,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,2BAA4B,CAC3B,IACA,KA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","file":"static/js/main.b06f72cc.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled, { css } from 'styled-components/macro'\n\nimport { TTheme } from '../app/ThemeSwitchProvider'\nimport { mediaDesktop, mediaMobile } from '../common/Responsive'\n\nexport const PrimaryButton = styled(Button)`\n  font-size: 1.1rem;\n  font-variant-caps: all-small-caps;\n  background-color: ${themeProp('secondary')};\n  border-color: ${themeProp('secondary')};\n  &:hover {\n    background-color: ${themeProp('secondaryHover')};\n    border-color: ${themeProp('secondaryHover')};\n  }\n  &:active {\n    background-color: #262626 !important;\n  }\n`\n\nexport const SecondaryButton = styled(Button)`\n  font-size: 1.1rem;\n  font-variant-caps: all-small-caps;\n  background-color: ${themeProp('tertiary')};\n  border-color: ${themeProp('tertiary')};\n  &:hover {\n    background-color: ${themeProp('tertiaryHover')};\n    border-color: ${themeProp('tertiaryHover')};\n  }\n`\n\ninterface ISelectButtonThemed {\n  selected?: boolean\n  theme: TTheme\n}\n\nexport const SelectButtonThemed = styled(\n  ({ selected, theme, ...props }: ButtonProps & ISelectButtonThemed) => (\n    <Button {...props} />\n  ),\n)`\n  ${({ theme, selected }: ISelectButtonThemed) => css`\n    font-size: 1.1rem;\n    font-variant-caps: all-small-caps;\n    ${mediaDesktop`\n      background-color: ${selected ? theme.tertiary : theme.unselected}\n    `};\n    ${mediaMobile`\n      background-color: ${selected ? theme.tertiary : 'white'}`}\n      border-color: ${selected ? theme.tertiary : theme.unselected};\n      color: ${selected ? theme.tertiaryText : theme.unselectedText};\n      &:hover {\n        background-color: ${\n          selected ? theme.tertiaryHover : theme.unselectedHover\n        };\n        border-color: ${selected ? theme.tertiaryHover : theme.unselectedHover};\n        color: ${selected ? theme.tertiaryText : theme.unselectedText};\n      }\n  `};\n`\n\nfunction themeProp(name: keyof TTheme) {\n  return ({ theme }: { theme?: TTheme }) => theme![name] as string\n}\n","import React from 'react'\nimport ReactResponsive from 'react-responsive'\nimport { css } from 'styled-components/macro'\n\nexport const mobileBreakpoint = 767\n\nexport const Desktop = props => (\n  <ReactResponsive {...props} minWidth={mobileBreakpoint} />\n)\nexport const Mobile = props => (\n  <ReactResponsive {...props} maxWidth={mobileBreakpoint} />\n)\n\ninterface IResponsiveProps {\n  desktop: string\n  mobile: string\n}\n\nexport const Responsive: React.FC<IResponsiveProps> = ({\n  children,\n  mobile,\n  desktop,\n}) => (\n  <>\n    <Desktop className={desktop} children={children} />\n    <Mobile className={mobile} children={children} />\n  </>\n)\n\nexport const mediaDesktop = (...args) => css`\n  @media (min-width: ${mobileBreakpoint / 16}em) {\n    // @ts-ignore\n    ${css(...args)};\n  }\n`\n\nexport const mediaMobile = (...args) => css`\n  @media (max-width: ${mobileBreakpoint / 16}em) {\n    // @ts-ignore\n    ${css(...args)};\n  }\n`\n","import { FGeoPointFragment } from '../graph/generated'\n\nexport type GeoPoint = LegacyOmit<FGeoPointFragment, '__typename'>\n\nexport const gpsToLatLngLit = (gps: GeoPoint): google.maps.LatLngLiteral => ({\n  lat: Number(gps.latitude),\n  lng: Number(gps.longitude),\n})\n\n/* global google */\n\nexport const gpsToLatLng = (gps: GeoPoint): google.maps.LatLng =>\n  new google.maps.LatLng(Number(gps.latitude), Number(gps.longitude))\n\nexport const latLngToGps = (latLng: google.maps.LatLng): GeoPoint => ({\n  latitude: Number(latLng.lat()),\n  longitude: Number(latLng.lng()),\n})\n","import './Modal.css'\n\nimport React from 'react'\nimport {\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalProps,\n} from 'reactstrap'\n\ninterface IProps extends ModalProps {\n  isOpen: boolean\n  headerText: string\n  onClose?(): void\n}\n\nexport const AlertModal: React.FC<IProps> = ({\n  isOpen,\n  headerText,\n  onClose,\n  children,\n  ...modalProps\n}) => (\n  <Modal\n    isOpen={isOpen}\n    toggle={onClose}\n    className=\"modal__container\"\n    {...modalProps}\n    data-testid=\"alertModal\"\n  >\n    <ModalHeader tag={Container} toggle={onClose} className=\"modal__header\">\n      <span>{headerText}</span>\n    </ModalHeader>\n    <ModalBody className=\"modal__body\">\n      <div className=\"modal__body__content\">{children}</div>\n    </ModalBody>\n  </Modal>\n)\n","import { useRoot } from '../app/useRoot'\n\nexport function useOrderModel() {\n  const { order } = useRoot()\n  return order\n}\n","import React, { useContext } from 'react'\n\nimport { TRootModel } from '../models/RootModel'\n\nexport const rootContext = React.createContext<TRootModel | undefined>(\n  undefined,\n)\n\nexport const useRoot = () => {\n  const root = useContext(rootContext)\n  if (!root) {\n    throw new Error('RootProvider missing in the tree')\n  }\n  return root\n}\n\nexport const RootProvider = rootContext.Provider\n","/**\n *  This file was generated via `npx @speedlo/config`.\n *  Do NOT alter this file – all changes will be overridden!\n */\nimport * as RM from 'ramda'\n\nexport { RM }\n\nexport const idProp = RM.prop('id')\nexport const idPropEq = RM.propEq('id')\n","import React from 'react'\nimport Spinner from 'react-spinkit'\n\nexport interface IProps {\n  noMargin?: boolean\n}\n\nconst Pacman: React.FC<IProps> = ({ noMargin = false }) => (\n  <div\n    style={{\n      display: 'flex',\n      alignSelf: 'center',\n      justifyContent: 'center',\n    }}\n    data-testid=\"loader\"\n  >\n    <Spinner name=\"pacman\" style={noMargin ? {} : { marginTop: '45vh' }} />\n  </div>\n)\n\nexport default Pacman\n","import React from 'react'\n\nimport { AlertModal } from '../common/AlertModal'\n\nexport function useAlertModal() {\n  const [alertModal, setAlertModal] = React.useState<ReactNode>(null)\n\n  const makeAlert = React.useCallback(\n    (header: string, body: ReactNode | string) => {\n      setAlertModal(\n        React.createElement(\n          AlertModal,\n          {\n            isOpen: true,\n            onClose: () => setAlertModal(null),\n            headerText: header,\n          },\n          body,\n        ),\n      )\n    },\n    [],\n  )\n\n  return [alertModal, makeAlert] as [ReactNode, typeof makeAlert]\n}\n","import { Sentry } from '@speedlo/sentry'\nimport React from 'react'\n\nimport { useRoot } from '../../../app/useRoot'\nimport {\n  useMDeliveryOrderCreate,\n  useMPickupOrderCreate,\n} from '../../../graph/generated'\n\nexport function useOrderCreate(onConfirm: () => void) {\n  const { order, location, business } = useRoot()\n\n  const [deliveryOrderCreate] = useMDeliveryOrderCreate()\n  const [pickupOrderCreate] = useMPickupOrderCreate()\n\n  const createDeliveryOrder = React.useCallback(async () => {\n    if (!location.geoPoint) {\n      return\n    }\n    if (location.branchId) {\n      order.setBranch(location.branchId)\n    }\n    const result = await deliveryOrderCreate({\n      gps: location.geoPoint,\n      orderOrigin: business.orderOrigin,\n      address: location.address,\n      ...business.brandOrBranch,\n    })\n    if (result) {\n      if (location.branchId && result.order.branch.id !== location.branchId) {\n        Sentry.withScope(scope => {\n          scope.setExtras({\n            requestedBranchId: location.branchId,\n            createdOrderId: result.order.id,\n            createdBranchId: result.order.branch.id,\n          })\n          Sentry.captureMessage(\n            'Delivery order was created for different branch.',\n          )\n        })\n      }\n      order.orderCreated(result.order)\n      onConfirm()\n    }\n  }, [business, deliveryOrderCreate, location, onConfirm, order])\n\n  const createPickupOrder = async (branchId: ID) => {\n    // it's necessary to set asap so correct data are displayed further\n    order.setBranch(branchId)\n    const result = await pickupOrderCreate({\n      branchId,\n      orderOrigin: business.orderOrigin,\n    })\n    if (result) {\n      if (result.order.branch.id !== branchId) {\n        Sentry.withScope(scope => {\n          scope.setExtras({\n            requestedBranchId: branchId,\n            createdOrderId: result.order.id,\n            createdBranchId: result.order.branch.id,\n          })\n          Sentry.captureMessage(\n            'Pickup order was created for different branch.',\n          )\n        })\n      }\n      order.orderCreated(result.order)\n      onConfirm()\n    }\n  }\n\n  return { createDeliveryOrder, createPickupOrder }\n}\n","import { useAutorun } from '@speedlo/hooks'\nimport { Sentry } from '@speedlo/sentry'\nimport { useXFormCtx } from '@speedlo/xform'\nimport { debounce } from 'debounce'\nimport localforage from 'localforage'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { appConfig } from '../../config'\nimport { OrderFormValues } from './OrderFormSetup'\n\nexport const memoryKey = `${appConfig.persistenceKey}_orderForm`\n\nconst catchError = err => {\n  Sentry.withScope(scope => {\n    scope.setTag('persistence', memoryKey)\n    Sentry.captureException(err)\n  })\n}\n\ntype TMemory = Pick<\n  OrderFormValues,\n  'firstname' | 'lastname' | 'email' | 'phone' | 'phonePrefix' | 'note'\n>\n\nconst writeMemory = debounce((memory: TMemory, done: () => void) => {\n  localforage.setItem(memoryKey, memory)\n  done()\n}, 3000)\n\nconst readMemory = (): Promise<any> => {\n  return localforage.getItem(memoryKey).catch(catchError)\n}\n\nexport const OrderFormMemory = React.memo(() => {\n  const { user } = useRoot()\n  const xform = useXFormCtx<OrderFormValues>()\n\n  const applyMemory = React.useCallback(\n    (memory: OrderFormValues) => {\n      if (user.memoryApplied) {\n        return\n      }\n      xform.api.mergeValues(memory)\n      Object.entries(memory).forEach(([key, value]) => {\n        if (value) {\n          xform.state.touched.add(key)\n        }\n      })\n      user.setMemoryApplied()\n      user.log('applied order form memory')\n    },\n    [user, xform],\n  )\n\n  React.useEffect(() => {\n    readMemory().then(memory => {\n      if (memory) {\n        applyMemory(memory)\n        return\n      }\n    })\n  }, [applyMemory])\n\n  useAutorun(() => {\n    if (!user.shouldRememberForm) {\n      return\n    }\n    writeMemory(\n      {\n        firstname: xform.state.values.firstname,\n        lastname: xform.state.values.lastname,\n        email: xform.state.values.email,\n        phonePrefix: xform.state.values.phonePrefix,\n        phone: xform.state.values.phone,\n        note: xform.state.values.note,\n      },\n      () => {\n        user.log('written order form memory')\n      },\n    )\n  })\n\n  return null\n})\n","import { format } from 'date-fns/fp'\n\nimport { FJsonAddressFragment } from '../graph/generated'\n\nexport const formatTime = format('H:mm')\n\nexport const formatAddress = (address: FJsonAddressFragment) => {\n  if (!address.street) {\n    if (address.city) {\n      return `${address.city} ${address.houseNumber}`\n    }\n    return `${address.state}`\n  }\n  if (!address.houseNumber) {\n    return `${address.street}, ${address.city}`\n  }\n  return `${address.street} ${address.houseNumber}, ${address.city}`\n}\n","import * as DF from 'date-fns'\nimport * as DFP from 'date-fns/fp'\n\nimport { RM } from './ramda'\n\nexport { DF, DFP }\n\nexport let DFLocale: Locale\n\nexport const formatWithLocale = RM.curry((format: string, value: Date) =>\n  DF.format(value, format, { locale: DFLocale }),\n)\n\nexport async function changeDFLocale(lang: string) {\n  let locale = lang\n  if (lang === 'en') {\n    locale = 'en-US'\n  }\n  // prettier-ignore\n  DFLocale = (await import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"datefns\" */\n    `date-fns/locale/${locale}/index.js`\n  )).default\n\n  if (lang === 'cs') {\n    forkCSLang()\n  }\n}\n\n/**\n * Temporary because official localization uses\n * AM/PM format for time which is most likely wrong\n */\nfunction forkCSLang() {\n  const timeFormats = {\n    full: 'HH:mm:ss zzzz',\n    long: 'HH:mm:ss z',\n    medium: 'HH:mm:ss',\n    short: 'HH:mm',\n  }\n  const defaultWidth = 'long'\n  // @ts-ignore\n  DFLocale.formatLong.time = function(dirtyOptions) {\n    var options = dirtyOptions || {}\n    var width = options.width ? String(options.width) : defaultWidth\n    var format = timeFormats[width] || timeFormats[defaultWidth]\n    return format\n  }\n}\n","import { disableBatching } from '@speedlo/graphql'\nimport Color from 'color'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { ThemeContext, ThemeProvider } from 'styled-components/macro'\n\nimport {\n  QThemeStyleStyles,\n  QThemeStyleVariables,\n  useQThemeStyle,\n} from '../graph/generated'\nimport { useRoot } from './useRoot'\n\ninterface IProps {\n  children: ReactNode[]\n}\n\nconst ThemeSwitchProvider = observer<IProps>(({ children }) => {\n  const { order, business } = useRoot()\n\n  const variables: QThemeStyleVariables = {\n    brandId: business.isBrand && !order.hasOrder ? business.brandId : undefined,\n    branchId:\n      business.isBrand && !order.hasOrder\n        ? undefined\n        : order.branchId || business.branchId,\n  }\n\n  const { data } = useQThemeStyle(variables, {\n    skip: !business.isValid && !order.hasOrder,\n    fetchPolicy: 'cache-first',\n    ...disableBatching,\n  })\n\n  const theme = React.useMemo(\n    () => getTheme(data && data.theme && data.theme.styles),\n    [data],\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>{children}</>\n    </ThemeProvider>\n  )\n})\n\nexport function useTheme() {\n  return React.useContext(ThemeContext) as TTheme\n}\n\nexport function getTheme(styles?: QThemeStyleStyles) {\n  // Fallback colors\n  const defaultPrimary = '#54984a'\n  const defaultSecondary = '#99230e'\n  const defaultTertiary = '#d9a700'\n\n  const defaultTheme = {\n    primary: defaultPrimary,\n    secondary: defaultSecondary,\n    tertiary: defaultTertiary,\n    primaryHover: calcHoverColor(defaultPrimary),\n    secondaryHover: calcHoverColor(defaultPrimary),\n    tertiaryHover: calcHoverColor(defaultTertiary),\n    tertiaryText: 'white',\n    unselected: '#E5E5E5',\n    unselectedHover: '#EDEDED',\n    unselectedText: '#5A5A5A',\n    storeLogo: null,\n    storeLogoMobile: null,\n    backgroundCart: undefined,\n  }\n\n  if (styles) {\n    return {\n      ...defaultTheme,\n      primary: styles.active || defaultPrimary,\n      secondary: styles.main || defaultSecondary,\n      tertiary: styles.mainSecondary || defaultTertiary,\n      primaryHover: styles.active && calcHoverColor(styles.active),\n      secondaryHover: styles.main && calcHoverColor(styles.main),\n      tertiaryHover:\n        styles.mainSecondary && calcHoverColor(styles.mainSecondary),\n      storeLogo: styles.storeLogo,\n      storeLogoMobile: styles.storeLogoMobile,\n      backgroundCart: styles.backgroundCart,\n    }\n  }\n\n  return defaultTheme\n}\n\nfunction calcHoverColor(inputColor: string) {\n  return Color(inputColor)\n    .lighten(0.2)\n    .hsl()\n    .string()\n}\n\nexport type TTheme = ReturnType<typeof getTheme>\n\nexport default ThemeSwitchProvider\n","// @ts-ignore temporary before figuring out a logging solution that works in prod\nwindow.localStorage.setItem('debug', 'doveze*')\n","import { Catalog, setupI18n } from '@lingui/core'\nimport { I18nProvider } from '@lingui/react'\nimport { useAutorun } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { useRoot } from './app/useRoot'\nimport { changeDFLocale } from './tools/datefns'\n\nexport const i18n = setupI18n()\n\nexport const I18nManager: React.FC = ({ children }) => {\n  const root = useRoot()\n  const { user } = root\n  const [, forceUpdate] = React.useState(1)\n\n  useAutorun(async () => {\n    if (root.initialized && !user.languageActivated) {\n      await loadCatalog(user.language)\n      user.log(`loaded language \"${user.language}\" catalog`)\n      i18n.activate(user.language)\n      await changeDFLocale(user.language)\n      user.activateLanguage()\n      forceUpdate(i => i + 1)\n    }\n  })\n\n  return <I18nProvider i18n={i18n}>{children}</I18nProvider>\n}\n\nasync function loadCatalog(lang: string) {\n  let catalog: Catalog\n  if (process.env.NODE_ENV !== 'production') {\n    // prettier-ignore\n    catalog = await import(\n      /* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n      `@lingui/loader!./locale/${lang}/messages.po`\n    )\n  } else {\n    // prettier-ignore\n    catalog = await import(\n      /* webpackMode: \"lazy\", webpackChunkName: \"i18n-[index]\" */\n      `./locale/${lang}/messages.js`\n    )\n  }\n  i18n.load({ [lang]: catalog })\n}\n","export const appConfig = {\n  fallbackLanguage: 'en',\n  supportedLanguages: ['cs', 'sk', 'en', 'pl', 'de'],\n  endpoint: 'https://app.dev.speedlo.cloud',\n  persistenceKey: process.env.REACT_APP_LOCAL_KEY || 'client@local',\n  googleMapsApi: process.env.REACT_APP_LOCAL_GOOGLE_API_KEY,\n  redirectOnFail: 'https://kdo.doveze.cz',\n  sentryDSN: '',\n  pageTitleSuffix: 'LOCAL',\n  analytics: '',\n}\n\nif (process.env.REACT_APP_STAGE === 'dev') {\n  Object.assign(appConfig, {\n    persistenceKey: 'client@dev',\n    sentryDSN: 'https://31756c9e430d450eaf3a44af1c1cd0f2@sentry.io/1354460',\n    pageTitleSuffix: 'DEV',\n    analytics: '',\n  })\n}\n\nif (process.env.REACT_APP_STAGE === 'prod') {\n  Object.assign(appConfig, {\n    endpoint: 'https://c2e-p1.deep-vision.cloud',\n    persistenceKey: 'client@prod',\n    sentryDSN: 'https://31756c9e430d450eaf3a44af1c1cd0f2@sentry.io/1354460',\n    pageTitleSuffix: 'Doveze.cz',\n    analytics: 'UA-4990100-13',\n    googleMapsApi: 'AIzaSyCDn-SXz6ngOCNVwHR8zDY38JopNFVIrsU',\n  })\n}\n","export type Maybe<T> = T | null\n\nexport interface InputOrderIndex {\n  readonly companyBranches?: Maybe<ReadonlyArray<string>>\n\n  readonly user?: Maybe<string>\n\n  readonly orderStatesAND?: Maybe<ReadonlyArray<OrderStateEnum>>\n\n  readonly orderStatesOR?: Maybe<ReadonlyArray<OrderStateEnum>>\n\n  readonly orderStateCategoriesOR?: Maybe<ReadonlyArray<OrderStateCategoryEnum>>\n\n  readonly orderStateCategoryTarget?: OrderStateCategoryTargetEnum\n\n  readonly currency?: Maybe<CurrencyEnum>\n\n  readonly location?: Maybe<InputLocationIndex>\n\n  readonly stateChangeSince?: Maybe<Date>\n\n  readonly includeOldFinished?: boolean\n\n  readonly sectors?: Maybe<ReadonlyArray<string>>\n\n  readonly sectorsWithChildren?: boolean\n\n  readonly occasions?: Maybe<ReadonlyArray<string>>\n}\n\nexport interface InputLocationIndex {\n  readonly tableNumber?: Maybe<number>\n}\n\nexport interface InputPaginationParams {\n  readonly fromIndex: number\n\n  readonly toIndex: number\n}\n\nexport interface InputPaymentMethodIndex {\n  readonly companyBranch: string\n\n  readonly orderOrigin: OrderOriginEnum\n\n  readonly warePriceType: WarePriceTypeEnum\n\n  readonly paymentType: PaymentTypeEnum\n\n  readonly paymentGate: PaymentGateEnum\n\n  readonly enabled?: boolean\n}\n\nexport interface InputVamStatus {\n  readonly email?: Maybe<string>\n\n  readonly phone?: Maybe<string>\n\n  readonly firstname?: Maybe<string>\n\n  readonly lastname?: Maybe<string>\n\n  readonly orderId: string\n}\n\nexport interface InputOrderRecipeCreate {\n  readonly order: string\n\n  readonly recipe: string\n\n  readonly orderRecipeState?: Maybe<OrderRecipeStateEnum>\n\n  readonly parent?: Maybe<string>\n\n  readonly sideDishes?: Maybe<ReadonlyArray<string>>\n\n  readonly associatedRecipes?: Maybe<ReadonlyArray<string>>\n\n  readonly amount?: number\n}\n\nexport interface InputOrderRecipeUpdate {\n  readonly order?: Maybe<string>\n\n  readonly recipe?: Maybe<string>\n\n  readonly orderRecipeState?: Maybe<OrderRecipeStateEnum>\n\n  readonly parent?: Maybe<string>\n\n  readonly sideDishes?: Maybe<ReadonlyArray<string>>\n}\n\nexport interface InputOrderDeliveryCreate {\n  readonly companyBranch?: Maybe<string>\n\n  readonly brand?: Maybe<string>\n\n  readonly orderOrigin: OrderOriginEnum\n\n  readonly gps: InputGeoPointCreate\n\n  readonly deliveryType?: Maybe<DeliveryTypeEnum>\n\n  readonly address?: Maybe<string>\n}\n\nexport interface InputGeoPointCreate {\n  readonly latitude: number\n\n  readonly longitude: number\n}\n\nexport interface InputExternalOrderCreate {\n  readonly companyBranch: string\n\n  readonly orderOrigin: OrderOriginEnum\n\n  readonly deliverAt: Date\n\n  readonly gps?: Maybe<InputGeoPointCreate>\n\n  readonly address?: Maybe<string>\n\n  readonly warePriceType?: WarePriceTypeEnum\n\n  readonly deliveryType?: Maybe<DeliveryTypeEnum>\n\n  readonly orderRecipes?: Maybe<ReadonlyArray<InputOrderRecipeCreates>>\n\n  readonly customer?: Maybe<InputCustomerCreate>\n\n  readonly note?: Maybe<string>\n\n  readonly cancelUnpaid?: boolean\n}\n\nexport interface InputOrderRecipeCreates {\n  readonly recipe: string\n\n  readonly sideDishes?: Maybe<ReadonlyArray<string>>\n\n  readonly associatedRecipes?: Maybe<ReadonlyArray<string>>\n\n  readonly amount?: number\n}\n\nexport interface InputCustomerCreate {\n  readonly firstName?: Maybe<string>\n\n  readonly lastName?: Maybe<string>\n\n  readonly emails?: Maybe<ReadonlyArray<InputEmailCreate>>\n\n  readonly phones?: Maybe<ReadonlyArray<InputPhoneCreate>>\n}\n\nexport interface InputEmailCreate {\n  readonly email: string\n\n  readonly description?: Maybe<string>\n\n  readonly default?: boolean\n}\n\nexport interface InputPhoneCreate {\n  readonly phone: string\n\n  readonly description?: Maybe<string>\n\n  readonly default?: boolean\n}\n\nexport interface InputOrderCreate {\n  readonly companyBranch: string\n\n  readonly orderOrigin: OrderOriginEnum\n\n  readonly warePriceType: WarePriceTypeEnum\n\n  readonly deliveryType?: DeliveryTypeEnum\n\n  readonly language?: Maybe<LanguageEnum>\n\n  readonly customer: InputCustomerCreate\n\n  readonly gps?: Maybe<InputGeoPointCreate>\n\n  readonly address?: Maybe<string>\n\n  readonly notification?: Maybe<InputNotificationCreate>\n\n  readonly note?: Maybe<string>\n\n  readonly deliverAt?: Maybe<Date>\n\n  readonly location?: Maybe<InputLocationCreate>\n\n  readonly callEventId?: Maybe<string>\n\n  readonly sector?: Maybe<string>\n\n  readonly occasion?: Maybe<string>\n}\n\nexport interface InputNotificationCreate {\n  readonly sms?: Maybe<string>\n\n  readonly chrome?: Maybe<{ [key: string]: string | number }>\n\n  readonly firebase?: Maybe<{ [key: string]: string | number }>\n}\n\nexport interface InputLocationCreate {\n  readonly tableNumber?: Maybe<number>\n}\n\nexport interface InputOrderPickupCreate {\n  readonly companyBranch: string\n\n  readonly orderOrigin: OrderOriginEnum\n}\n\nexport interface InputOrderWifiCreate {\n  readonly companyBranch: string\n\n  readonly orderOrigin: OrderOriginEnum\n\n  readonly warePriceType: WarePriceTypeEnum\n\n  readonly deliveryType?: Maybe<DeliveryTypeEnum>\n\n  readonly sector?: Maybe<string>\n\n  readonly occasion?: Maybe<string>\n}\n\nexport interface InputOrderPaymentMethodsCreate {\n  readonly paymentType: PaymentTypeEnum\n\n  readonly paymentGate: PaymentGateEnum\n\n  readonly price: InputCurrencyCreate\n}\n\nexport interface InputCurrencyCreate {\n  readonly value: number\n\n  readonly currency?: Maybe<CurrencyEnum>\n}\n\nexport interface InputOrderFinish {\n  readonly customer?: Maybe<InputCustomerCreate>\n  /** payment type used to finalize order */\n  readonly paymentMethod?: Maybe<PaymentTypeEnum>\n  /** payment gate used to finalize order */\n  readonly paymentGate?: Maybe<PaymentGateEnum>\n  /** id of payment method  used to finalize order */\n  readonly paymentMethodId?: Maybe<number>\n  /** Preferred time of order delivery. In case that argument is null, deliver_at value is computed based on branch opening hours and default delivery times */\n  readonly deliverAt?: Maybe<Date>\n\n  readonly note?: Maybe<string>\n\n  readonly confirmedAgreements?: Maybe<ReadonlyArray<string>>\n  /** percentage value of tips */\n  readonly tips?: Maybe<number>\n}\n\nexport interface InputOrderStaffImport {\n  readonly warePriceType: WarePriceTypeEnum\n\n  readonly companyBranch: string\n\n  readonly acceptedAt?: Maybe<Date>\n\n  readonly acceptedAtRaw?: Maybe<string>\n\n  readonly orderRecipes: ReadonlyArray<InputOrderRecipeCreates>\n\n  readonly deliveryType?: Maybe<DeliveryTypeEnum>\n\n  readonly invoice: string\n\n  readonly invoiceNumber: number\n\n  readonly paymentMethods: ReadonlyArray<InputOrderPaymentMethodsCreate>\n\n  readonly canceled?: Maybe<boolean>\n\n  readonly sector?: Maybe<string>\n\n  readonly recipePrices?: Maybe<ReadonlyArray<InputRecipePriceCashBox>>\n\n  readonly totalDiscount?: Maybe<InputCurrencyCreate>\n}\n\nexport interface InputRecipePriceCashBox {\n  readonly recipe: string\n\n  readonly price: InputCurrencyCreate\n}\n\nexport interface InputOrderUpdate {\n  readonly deliveryType?: Maybe<DeliveryTypeEnum>\n\n  readonly language?: Maybe<LanguageEnum>\n\n  readonly customer?: Maybe<InputCustomerCreate>\n\n  readonly gps?: Maybe<InputGeoPointCreate>\n\n  readonly address?: Maybe<string>\n\n  readonly notification?: Maybe<InputNotificationCreate>\n\n  readonly note?: Maybe<string>\n\n  readonly deliverAt?: Maybe<Date>\n\n  readonly location?: Maybe<InputLocationCreate>\n\n  readonly warePriceType?: Maybe<WarePriceTypeEnum>\n  /** percentage value of tips */\n  readonly tips?: Maybe<number>\n}\n\nexport interface InputAvailabilityCreate {\n  readonly availabilityType?: AvailabilityTypeEnum\n\n  readonly dateFrom?: Maybe<Date>\n\n  readonly timeFrom?: Maybe<string>\n\n  readonly dateTo?: Maybe<Date>\n\n  readonly timeTo?: Maybe<string>\n\n  readonly available?: boolean\n\n  readonly periodic?: boolean\n\n  readonly weekDay?: Maybe<WeekDayEnum>\n\n  readonly orderOriginCategories?: Maybe<ReadonlyArray<OrderOriginCategoryEnum>>\n}\n\nexport interface InputAvailabilityUpdate {\n  readonly availabilityType?: Maybe<AvailabilityTypeEnum>\n\n  readonly dateFrom?: Maybe<Date>\n\n  readonly timeFrom?: Maybe<string>\n\n  readonly dateTo?: Maybe<Date>\n\n  readonly timeTo?: Maybe<string>\n\n  readonly available?: Maybe<boolean>\n\n  readonly periodic?: Maybe<boolean>\n\n  readonly weekDay?: Maybe<WeekDayEnum>\n\n  readonly orderOriginCategories?: Maybe<ReadonlyArray<OrderOriginCategoryEnum>>\n}\n\nexport interface InputBusinessHourCreate {\n  readonly weekDay: WeekDayEnum\n\n  readonly openAt: string\n\n  readonly closeAt: string\n\n  readonly smsLabel?: Maybe<InputLabelCreate>\n\n  readonly webLabel?: Maybe<InputLabelCreate>\n}\n\nexport interface InputLabelCreate {\n  readonly translations: ReadonlyArray<InputLabelTranslation>\n\n  readonly enabled?: boolean\n}\n\nexport interface InputLabelTranslation {\n  readonly language: LanguageEnum\n\n  readonly content: string\n}\n\nexport interface InputBusinessHourSpecificCloseCreate {\n  readonly companyBranchId: string\n  /** close for defined interval in minutes */\n  readonly closingInterval: number\n\n  readonly closedNote?: Maybe<string>\n}\n\nexport interface InputBusinessHourSpecificDateCreate {\n  readonly companyBranch: string\n\n  readonly openAt?: Maybe<string>\n\n  readonly closeAt?: Maybe<string>\n\n  readonly specificDate: Date\n\n  readonly closed?: boolean\n\n  readonly smsLabel?: Maybe<InputLabelCreate>\n\n  readonly webLabel?: Maybe<InputLabelCreate>\n\n  readonly closedNote?: Maybe<string>\n\n  readonly overwritesRegular?: boolean\n}\n\nexport interface InputCompanyBranchCreate {\n  readonly currencies?: ReadonlyArray<CurrencyEnum>\n\n  readonly name: string\n\n  readonly enabled?: boolean\n\n  readonly brand: string\n\n  readonly internalNumber: string\n}\n\nexport interface InputCompanyCreate {\n  readonly name: string\n\n  readonly number: string\n\n  readonly vatIdent: string\n\n  readonly account: string\n\n  readonly internalNumber?: Maybe<string>\n\n  readonly companyType: CompanyTypeEnum\n}\n\nexport interface InputIngredientCreate {\n  readonly recipe: string\n\n  readonly stockItem: string\n\n  readonly quantity: number\n}\n\nexport interface InputLabelUpdate {\n  readonly translations?: Maybe<ReadonlyArray<InputLabelTranslation>>\n\n  readonly enabled?: Maybe<boolean>\n}\n\nexport interface InputOccasionCreate {\n  readonly companyBranch: string\n\n  readonly title: string\n  /** Short title for mobile view */\n  readonly titleShort: string\n  /** Date of occasion */\n  readonly date: Date\n  /** Beginning of preorder */\n  readonly preorderFrom: Date\n  /** End of preorder */\n  readonly preorderTo: Date\n\n  readonly image?: Maybe<InputFile>\n}\n\nexport interface InputOccasionUpdate {\n  readonly title?: Maybe<string>\n  /** Short title for mobile view */\n  readonly titleShort?: Maybe<string>\n  /** Date of occasion */\n  readonly date?: Maybe<Date>\n  /** Beginning of preorder */\n  readonly preorderFrom?: Maybe<Date>\n  /** End of preorder */\n  readonly preorderTo?: Maybe<Date>\n\n  readonly image?: Maybe<InputRecipeImage>\n}\n\nexport interface InputRecipeImage {\n  readonly file?: Maybe<InputFile>\n\n  readonly delete: boolean\n}\n\nexport interface InputOrderPaymentMethodCreate {\n  readonly order: string\n\n  readonly paymentMethod: string\n\n  readonly price: InputCurrencyCreate\n}\n\nexport interface InputOrderPaymentMethodUpdate {\n  readonly paymentMethodId: string\n\n  readonly price: InputCurrencyCreate\n}\n\nexport interface InputPromoCodeIndex {\n  readonly companyBranch?: Maybe<string>\n\n  readonly enabled?: Maybe<boolean>\n}\n\nexport interface InputRecipeCreate {\n  readonly companyBranch: string\n\n  readonly nameLabel: string\n\n  readonly descriptionLabel?: Maybe<string>\n\n  readonly internalNote?: Maybe<string>\n\n  readonly wareCategoryType: WareCategoryTypeEnum\n\n  readonly enabled?: boolean\n\n  readonly ingredients?: Maybe<ReadonlyArray<InputRecipeIngredient>>\n\n  readonly wareCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly sideDishCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly availabilities?: Maybe<ReadonlyArray<InputAvailabilityCreate>>\n\n  readonly video?: Maybe<string>\n\n  readonly code?: Maybe<string>\n\n  readonly ware?: Maybe<string>\n\n  readonly prices: ReadonlyArray<InputRecipePriceCreate>\n\n  readonly associatedRecipes?: Maybe<ReadonlyArray<InputRecipeRelationCreate>>\n\n  readonly image?: Maybe<InputFile>\n}\n\nexport interface InputRecipeIngredient {\n  readonly stockItem: string\n\n  readonly quantity: number\n}\n\nexport interface InputRecipePriceCreate {\n  readonly warePriceType: WarePriceTypeEnum\n\n  readonly price: InputCurrencyCreate\n\n  readonly vat: string\n}\n\nexport interface InputRecipeRelationCreate {\n  readonly associatedRecipe: string\n\n  readonly warePriceType: WarePriceTypeEnum\n}\n\nexport interface InputRecipeTranslation {\n  readonly language: LanguageEnum\n\n  readonly nameLabel?: Maybe<string>\n\n  readonly descriptionLabel?: Maybe<string>\n}\n\nexport interface InputRecipeUpdate {\n  readonly ware?: Maybe<string>\n\n  readonly nameLabel?: Maybe<string>\n\n  readonly descriptionLabel?: Maybe<string>\n\n  readonly translations?: Maybe<ReadonlyArray<InputRecipeTranslation>>\n\n  readonly enabled?: Maybe<boolean>\n\n  readonly internalNote?: Maybe<string>\n\n  readonly video?: Maybe<string>\n\n  readonly code?: Maybe<string>\n\n  readonly ingredients?: Maybe<ReadonlyArray<InputRecipeIngredient>>\n\n  readonly wareCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly sideDishCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly prices?: Maybe<ReadonlyArray<InputRecipePriceCreate>>\n\n  readonly associatedRecipes?: Maybe<ReadonlyArray<InputRecipeRelationCreate>>\n\n  readonly image?: Maybe<InputRecipeImage>\n}\n\nexport interface InputSectorCreate {\n  readonly companyBranch: string\n\n  readonly sectorType: SectorTypeEnum\n\n  readonly nameLabel: string\n\n  readonly code: string\n\n  readonly enabled?: boolean\n\n  readonly warePriceType?: Maybe<WarePriceTypeEnum>\n\n  readonly deliveryType?: Maybe<DeliveryTypeEnum>\n\n  readonly parent?: Maybe<string>\n\n  readonly enabledWareCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly disabledWareCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly availabilities?: Maybe<ReadonlyArray<InputAvailabilityCreate>>\n\n  readonly eetEnabled?: Maybe<boolean>\n\n  readonly orderDelaySeconds?: Maybe<number>\n\n  readonly occasions?: Maybe<ReadonlyArray<string>>\n}\n\nexport interface InputSectorRecipeCreate {\n  readonly recipe: string\n\n  readonly sector: string\n\n  readonly parent?: Maybe<string>\n\n  readonly sideDishes?: Maybe<ReadonlyArray<string>>\n\n  readonly associatedRecipes?: Maybe<ReadonlyArray<string>>\n\n  readonly amount?: number\n\n  readonly warePriceType?: WarePriceTypeEnum\n}\n\nexport interface InputSectorTranslation {\n  readonly language: LanguageEnum\n\n  readonly nameLabel?: Maybe<string>\n}\n\nexport interface InputSectorUpdate {\n  readonly id: string\n\n  readonly companyBranch?: Maybe<string>\n\n  readonly sectorType?: Maybe<SectorTypeEnum>\n\n  readonly translations?: Maybe<ReadonlyArray<InputSectorTranslation>>\n\n  readonly code?: Maybe<string>\n\n  readonly enabled?: Maybe<boolean>\n\n  readonly warePriceType?: Maybe<WarePriceTypeEnum>\n\n  readonly deliveryType?: Maybe<DeliveryTypeEnum>\n\n  readonly parent?: Maybe<string>\n\n  readonly enabledWareCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly disabledWareCategories?: Maybe<ReadonlyArray<string>>\n\n  readonly availabilities?: Maybe<ReadonlyArray<InputAvailabilityCreate>>\n\n  readonly eetEnabled?: Maybe<boolean>\n\n  readonly orderDelaySeconds?: Maybe<number>\n\n  readonly occasions?: Maybe<ReadonlyArray<string>>\n}\n\nexport interface InputShiftCreate {\n  readonly companyBranch: string\n\n  readonly beginAt: Date\n\n  readonly endAt: Date\n\n  readonly capacity?: number\n\n  readonly placeCode: string\n}\n\nexport interface InputStatisticCreate {\n  readonly dateFrom?: Maybe<Date>\n\n  readonly dateTo?: Maybe<Date>\n\n  readonly dateTimeFrom?: Maybe<Date>\n\n  readonly dateTimeTo?: Maybe<Date>\n\n  readonly branches?: Maybe<ReadonlyArray<string>>\n\n  readonly drivers?: Maybe<ReadonlyArray<string>>\n\n  readonly cashBoxes?: Maybe<ReadonlyArray<string>>\n\n  readonly cashiers?: Maybe<ReadonlyArray<string>>\n\n  readonly sectors?: Maybe<ReadonlyArray<string>>\n\n  readonly sectorsWithChildren?: boolean\n\n  readonly orderOrigins?: Maybe<ReadonlyArray<OrderOriginEnum>>\n\n  readonly occasions?: Maybe<ReadonlyArray<string>>\n\n  readonly country?: Maybe<CountryEnum>\n}\n\nexport interface InputStockItemCreate {\n  readonly companyBranch: string\n\n  readonly wareUnit: WareUnitEnum\n\n  readonly label: string\n\n  readonly code: string\n\n  readonly allowNegative: FieldStateEnum\n\n  readonly plu?: Maybe<string>\n\n  readonly quantity?: number\n\n  readonly allergens?: Maybe<ReadonlyArray<AllergenEnum>>\n\n  readonly note?: Maybe<string>\n}\n\nexport interface InputStockItemUpdate {\n  readonly quantity?: Maybe<number>\n\n  readonly label?: Maybe<string>\n\n  readonly code?: Maybe<string>\n\n  readonly plu?: Maybe<string>\n\n  readonly wareUnit?: Maybe<WareUnitEnum>\n\n  readonly allergens?: Maybe<ReadonlyArray<AllergenEnum>>\n\n  readonly note?: Maybe<string>\n\n  readonly allowNegative?: Maybe<FieldStateEnum>\n}\n\nexport interface InputStockTransferCreate {\n  readonly stockItemId: string\n\n  readonly quantity: number\n}\n\nexport interface InputTransportationDeviceCreate {\n  readonly companyBranch: string\n\n  readonly deviceType: string\n\n  readonly deviceState: string\n\n  readonly idNumber: string\n}\n\nexport interface InputUserUpdate {\n  readonly language?: Maybe<LanguageEnum>\n}\n\nexport interface InputWareCategoryCreate {\n  readonly companyBranch: string\n\n  readonly wareCategoryType: WareCategoryTypeEnum\n\n  readonly pictogram?: Maybe<string>\n\n  readonly nameLabel: string\n\n  readonly internalNoteLabel?: Maybe<string>\n\n  readonly enabled?: boolean\n\n  readonly public?: boolean\n\n  readonly availabilities?: ReadonlyArray<InputAvailabilityCreate>\n\n  readonly maxRecipesCount?: number\n\n  readonly minCount?: number\n\n  readonly maxCount?: number\n\n  readonly recipes?: Maybe<ReadonlyArray<string>>\n\n  readonly orderOriginCategories?: Maybe<ReadonlyArray<OrderOriginCategoryEnum>>\n\n  readonly wareCategoryColor?: Maybe<WareCategoryColorEnum>\n}\n\nexport interface InputWareCategoryTranslation {\n  readonly language: LanguageEnum\n\n  readonly nameLabel?: Maybe<string>\n\n  readonly internalNoteLabel?: Maybe<string>\n}\n\nexport interface InputWareCategoryUpdate {\n  readonly companyBranch?: Maybe<string>\n\n  readonly pictogram?: Maybe<string>\n\n  readonly nameLabel?: Maybe<string>\n\n  readonly internalNoteLabel?: Maybe<string>\n\n  readonly translations?: Maybe<ReadonlyArray<InputWareCategoryTranslation>>\n\n  readonly wareRequirement?: Maybe<WareRequirementEnum>\n\n  readonly wareCategoryType?: Maybe<WareCategoryTypeEnum>\n\n  readonly enabled?: Maybe<boolean>\n\n  readonly public?: Maybe<boolean>\n\n  readonly maxRecipesCount?: Maybe<number>\n\n  readonly minCount?: Maybe<number>\n\n  readonly maxCount?: Maybe<number>\n\n  readonly recipes?: Maybe<ReadonlyArray<string>>\n\n  readonly orderOriginCategories?: Maybe<ReadonlyArray<OrderOriginCategoryEnum>>\n}\n\nexport interface InputWareCreate {\n  readonly companyBranch: string\n\n  readonly nameLabel: InputLabelCreate\n\n  readonly descriptionLabel: InputLabelCreate\n\n  readonly code?: Maybe<string>\n\n  readonly internalCode?: Maybe<string>\n\n  readonly enabled?: boolean\n\n  readonly availabilities?: ReadonlyArray<InputAvailabilityCreate>\n}\n\nexport interface InputWareUpdate {\n  readonly code?: Maybe<string>\n\n  readonly internalCode?: Maybe<string>\n\n  readonly companyBranch?: Maybe<string>\n\n  readonly nameLabel?: Maybe<InputLabelUpdate>\n\n  readonly descriptionLabel?: Maybe<InputLabelUpdate>\n\n  readonly enabled?: Maybe<boolean>\n}\n\nexport interface InputZoneCreate {\n  readonly companyBranch: string\n\n  readonly name?: Maybe<string>\n\n  readonly zoneType?: Maybe<ZoneTypeEnum>\n\n  readonly zoneColor?: Maybe<string>\n\n  readonly enabled?: boolean\n\n  readonly geoPolygon?: Maybe<ReadonlyArray<InputGeoPointCreate>>\n\n  readonly availability?: Maybe<InputAvailabilityCreate>\n\n  readonly priceRangeRules?: Maybe<ReadonlyArray<PriceRangeRuleCreate>>\n\n  readonly minimalOrderPrice?: Maybe<InputCurrencyCreate>\n}\n\nexport interface PriceRangeRuleCreate {\n  readonly price: InputCurrencyCreate\n\n  readonly toPrice: InputCurrencyCreate\n}\n\nexport interface InputZoneUpdate {\n  readonly companyBranch?: Maybe<string>\n\n  readonly name?: Maybe<string>\n\n  readonly zoneColor?: Maybe<string>\n\n  readonly enabled?: Maybe<boolean>\n\n  readonly geoPolygon?: Maybe<ReadonlyArray<InputGeoPointCreate>>\n\n  readonly availability?: Maybe<InputAvailabilityUpdate>\n\n  readonly priceRangeRules?: Maybe<ReadonlyArray<PriceRangeRuleCreate>>\n\n  readonly minimalOrderPrice?: Maybe<InputCurrencyCreate>\n}\n/** CompanyType enum */\nexport enum CompanyTypeEnum {\n  Client = 'CLIENT',\n  Affiliate = 'AFFILIATE',\n  Brand = 'BRAND',\n}\n/** AddressType enum */\nexport enum AddressTypeEnum {\n  Business = 'BUSINESS',\n  Premises = 'PREMISES',\n  MainAddress = 'MAIN_ADDRESS',\n}\n/** Currency enum */\nexport enum CurrencyEnum {\n  Hop = 'HOP',\n  Usd = 'USD',\n  Pln = 'PLN',\n  Eur = 'EUR',\n  Czk = 'CZK',\n  Zar = 'ZAR',\n}\n/** WeekDay enum */\nexport enum WeekDayEnum {\n  Monday = 'MONDAY',\n  Tuesday = 'TUESDAY',\n  Wednesday = 'WEDNESDAY',\n  Thursday = 'THURSDAY',\n  Friday = 'FRIDAY',\n  Saturday = 'SATURDAY',\n  Sunday = 'SUNDAY',\n}\n/** OrderStateCategoryTarget enum */\nexport enum OrderStateCategoryTargetEnum {\n  Backend = 'BACKEND',\n  FeAdmin = 'FE_ADMIN',\n  FeKitchen = 'FE_KITCHEN',\n  Driver = 'DRIVER',\n  FeCompletion = 'FE_COMPLETION',\n}\n/** OrderStateCategory enum */\nexport enum OrderStateCategoryEnum {\n  Main = 'MAIN',\n  NewOrders = 'NEW_ORDERS',\n  InCart = 'IN_CART',\n  Production = 'PRODUCTION',\n  Preparing = 'PREPARING',\n  Payment = 'PAYMENT',\n  ReadyToDeliver = 'READY_TO_DELIVER',\n  OnWay = 'ON_WAY',\n  Notification = 'NOTIFICATION',\n  Delivery = 'DELIVERY',\n  Finished = 'FINISHED',\n  Cancel = 'CANCEL',\n  Reclamation = 'RECLAMATION',\n  Bills = 'BILLS',\n}\n/** Language enum */\nexport enum LanguageEnum {\n  Cs = 'CS',\n  Sk = 'SK',\n  Pl = 'PL',\n  De = 'DE',\n  En = 'EN',\n}\n/** Possible mobile plantforms */\nexport enum MobilePlatformEnum {\n  Android = 'ANDROID',\n  Ios = 'IOS',\n  Pwa = 'PWA',\n}\n/** WareUnit enum */\nexport enum WareUnitEnum {\n  Kilogram = 'KILOGRAM',\n  Gram = 'GRAM',\n  Litre = 'LITRE',\n  Piece = 'PIECE',\n}\n/** PaymentGate enum */\nexport enum PaymentGateEnum {\n  Gopay = 'GOPAY',\n  Paypal = 'PAYPAL',\n  Credit = 'CREDIT',\n  Cash = 'CASH',\n}\n/** PaymentType enum */\nexport enum PaymentTypeEnum {\n  Cash = 'CASH',\n  Credit = 'CREDIT',\n  Voucher = 'VOUCHER',\n  Discount = 'DISCOUNT',\n}\n/** AvailabilityType enum */\nexport enum AvailabilityTypeEnum {\n  Main = 'MAIN',\n  Specific = 'SPECIFIC',\n}\n/** OrderOriginCategory enum */\nexport enum OrderOriginCategoryEnum {\n  Doveze = 'DOVEZE',\n  Wifi = 'WIFI',\n  Staff = 'STAFF',\n  Website = 'WEBSITE',\n}\n/** Allergen enum */\nexport enum AllergenEnum {\n  CerealsWithGlutten = 'CEREALS_WITH_GLUTTEN',\n  Egg = 'EGG',\n  Shellfish = 'SHELLFISH',\n  Fish = 'FISH',\n  Peanut = 'PEANUT',\n  Soybeans = 'SOYBEANS',\n  Milk = 'MILK',\n  Nut = 'NUT',\n  Celery = 'CELERY',\n  Mustard = 'MUSTARD',\n  Sesame = 'SESAME',\n  Sulfurous = 'SULFUROUS',\n  Lupin = 'LUPIN',\n  Molluscs = 'MOLLUSCS',\n}\n/** WarePriceType enum */\nexport enum WarePriceTypeEnum {\n  Delivery = 'DELIVERY',\n  Inhouse = 'INHOUSE',\n}\n/** FieldState enum */\nexport enum FieldStateEnum {\n  Default = 'DEFAULT',\n  Enabled = 'ENABLED',\n  Disabled = 'DISABLED',\n}\n/** ZoneType enum */\nexport enum ZoneTypeEnum {\n  Area = 'AREA',\n  Table = 'TABLE',\n  Sector = 'SECTOR',\n  Return = 'RETURN',\n}\n/** DeviceState enum */\nexport enum DeviceStateEnum {\n  Working = 'WORKING',\n  Broken = 'BROKEN',\n  Free = 'FREE',\n  Busy = 'BUSY',\n}\n/** DeviceType enum */\nexport enum DeviceTypeEnum {\n  Car = 'CAR',\n  Plane = 'PLANE',\n  Dron = 'DRON',\n}\n/** DeliveryState enum */\nexport enum DeliveryStateEnum {\n  Fresh = 'FRESH',\n  OnWay = 'ON_WAY',\n  Delivered = 'DELIVERED',\n  Canceled = 'CANCELED',\n  DriverChanged = 'DRIVER_CHANGED',\n  NotFound = 'NOT_FOUND',\n  LateDelivery = 'LATE_DELIVERY',\n  Reclamation = 'RECLAMATION',\n}\n/** OrderState enum */\nexport enum OrderStateEnum {\n  InCart = 'IN_CART',\n  Received = 'RECEIVED',\n  InProgress = 'IN_PROGRESS',\n  Finished = 'FINISHED',\n  Reclamation = 'RECLAMATION',\n  ReclamationHandled = 'RECLAMATION_HANDLED',\n  Unpaid = 'UNPAID',\n  Paid = 'PAID',\n  ByCreditCard = 'BY_CREDIT_CARD',\n  Refund = 'REFUND',\n  ShouldBePaid = 'SHOULD_BE_PAID',\n  CustomerNotified = 'CUSTOMER_NOTIFIED',\n  New = 'NEW',\n  Online = 'ONLINE',\n  Evaluated = 'EVALUATED',\n  NotEvaluated = 'NOT_EVALUATED',\n  Shown = 'SHOWN',\n  Accepted = 'ACCEPTED',\n  ReadyToProduce = 'READY_TO_PRODUCE',\n  InProduce = 'IN_PRODUCE',\n  Made = 'MADE',\n  OnWay = 'ON_WAY',\n  StuckOnRoad = 'STUCK_ON_ROAD',\n  Late = 'LATE',\n  Delivered = 'DELIVERED',\n  Cause = 'CAUSE',\n  Handover = 'HANDOVER',\n  WaitingForCustomer = 'WAITING_FOR_CUSTOMER',\n  CustomerDidNotCome = 'CUSTOMER_DID_NOT_COME',\n  DeliverRejected = 'DELIVER_REJECTED',\n  CancelOnWay = 'CANCEL_ON_WAY',\n  Canceled = 'CANCELED',\n  BranchCancel = 'BRANCH_CANCEL',\n  CustomerCancel = 'CUSTOMER_CANCEL',\n  ReadyToDeliver = 'READY_TO_DELIVER',\n  BillPassed = 'BILL_PASSED',\n  BillPrinted = 'BILL_PRINTED',\n  KitchenTicketPrinted = 'KITCHEN_TICKET_PRINTED',\n  HighPriority = 'HIGH_PRIORITY',\n  WifiDelayed = 'WIFI_DELAYED',\n  AssignedToDeliver = 'ASSIGNED_TO_DELIVER',\n  TransferCancel = 'TRANSFER_CANCEL',\n}\n/** OrderBillingType enum */\nexport enum OrderBillingTypeEnum {\n  PriceSum = 'PRICE_SUM',\n  Commission = 'COMMISSION',\n  Fee = 'FEE',\n  RewardResult = 'REWARD_RESULT',\n  Affiliate = 'AFFILIATE',\n}\n/** DeliveryType enum */\nexport enum DeliveryTypeEnum {\n  Pickup = 'PICKUP',\n  Messenger = 'MESSENGER',\n  Dron = 'DRON',\n  Mail = 'MAIL',\n}\n/** OrderRecipeState enum */\nexport enum OrderRecipeStateEnum {\n  Fresh = 'FRESH',\n  Preparing = 'PREPARING',\n  Cooked = 'COOKED',\n  Canceled = 'CANCELED',\n  Finished = 'FINISHED',\n  Ready = 'READY',\n}\n/** OrderOnlineState enum */\nexport enum OrderOnlineStateEnum {\n  Created = 'CREATED',\n  Pending = 'PENDING',\n  Paid = 'PAID',\n  Canceled = 'CANCELED',\n  Completed = 'COMPLETED',\n}\n/** OrderOrigin enum */\nexport enum OrderOriginEnum {\n  Web = 'WEB',\n  DameJidlo = 'DAME_JIDLO',\n  Staff = 'STAFF',\n  Wifi = 'WIFI',\n  Baker = 'BAKER',\n  WebPartner = 'WEB_PARTNER',\n  Enigoo = 'ENIGOO',\n  MobilAndroid = 'MOBIL_ANDROID',\n  MobilIos = 'MOBIL_IOS',\n  Mpizza = 'MPIZZA',\n  Minisite = 'MINISITE',\n  AffiliatePizzaRozvoz = 'AFFILIATE_PIZZA_ROZVOZ',\n  AffiliateRozvozPizzyZdarma = 'AFFILIATE_ROZVOZ_PIZZY_ZDARMA',\n  AffiliateRozvozJidla = 'AFFILIATE_ROZVOZ_JIDLA',\n  CallCenter = 'CALL_CENTER',\n  Pwa = 'PWA',\n  WebMenu = 'WEB_MENU',\n  WifiPreorder = 'WIFI_PREORDER',\n}\n/** WareCategoryType enum */\nexport enum WareCategoryTypeEnum {\n  Main = 'MAIN',\n  SideDish = 'SIDE_DISH',\n  Cover = 'COVER',\n  Tip = 'TIP',\n  Mixin = 'MIXIN',\n}\n/** SectorType enum */\nexport enum SectorTypeEnum {\n  Area = 'AREA',\n  Table = 'TABLE',\n}\n/** ShiftUserState enum */\nexport enum ShiftUserStateEnum {\n  Accepted = 'ACCEPTED',\n  Rejected = 'REJECTED',\n  WaitingForResponse = 'WAITING_FOR_RESPONSE',\n}\n/** Country enum */\nexport enum CountryEnum {\n  Pl = 'PL',\n  Sk = 'SK',\n  Rsa = 'RSA',\n  Cz = 'CZ',\n}\n/** Possible action types of subscription */\nexport enum SubscriptionActionType {\n  Create = 'CREATE',\n  Update = 'UPDATE',\n  Destroy = 'DESTROY',\n  Remove = 'REMOVE',\n}\n/** WareCategoryColor enum */\nexport enum WareCategoryColorEnum {\n  Yellow = 'YELLOW',\n  Pink = 'PINK',\n  Blue = 'BLUE',\n  Red = 'RED',\n  Turqoise = 'TURQOISE',\n  Orange = 'ORANGE',\n  Violet = 'VIOLET',\n  GreyDarkest = 'GREY_DARKEST',\n}\n/** WareRequirement enum */\nexport enum WareRequirementEnum {\n  NoLimit = 'NO_LIMIT',\n  Optional = 'OPTIONAL',\n  MaxOne = 'MAX_ONE',\n  Mandatory = 'MANDATORY',\n}\n/** SettingType enum */\nexport enum SettingTypeEnum {\n  Confirmation = 'CONFIRMATION',\n  AdminOrderListing = 'ADMIN_ORDER_LISTING',\n  Rules = 'RULES',\n  Url = 'URL',\n  Graphic = 'GRAPHIC',\n  Options = 'OPTIONS',\n}\n\n/** Date in format YYYY-MM-DD */\n\n/** Time without date (HH:MM:SS) */\nexport type Time = string\n\n/** Date in format iso 8601 format */\nexport type DateTime = Date\n\n/** Data in json format */\nexport type Json = { [key: string]: string | number }\n\n/** Input file type for Apollo upload using multipart requests */\nexport type InputFile = any\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport type QBusinessLookupVariables = {\n  readonly code?: Maybe<string>\n  readonly url?: Maybe<string>\n}\n\nexport type QBusinessLookupQuery = {\n  readonly __typename?: 'Query'\n\n  readonly lookup: QBusinessLookupLookup\n}\n\nexport type QBusinessLookupLookup = {\n  readonly __typename?: 'CompanyBrandLookUp'\n\n  readonly branch: Maybe<QBusinessLookupBranch>\n\n  readonly isBrand: boolean\n\n  readonly isMobileApp: boolean\n\n  readonly knownBasePath: string\n\n  readonly orderOrigin: OrderOriginEnum\n\n  readonly defaultLanguage: LanguageEnum\n}\n\nexport type QBusinessLookupBranch = FCompanyBranchFragment\n\nexport type QDelayedOrderVariables = {\n  readonly branchId: string\n}\n\nexport type QDelayedOrderQuery = {\n  readonly __typename?: 'Query'\n\n  readonly delayedOrder: QDelayedOrderDelayedOrder\n}\n\nexport type QDelayedOrderDelayedOrder = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n\n  readonly intervals: ReadonlyArray<QDelayedOrderIntervals>\n\n  readonly enabled: boolean\n}\n\nexport type QDelayedOrderIntervals = {\n  readonly __typename?: 'BusinessHourInterval'\n\n  readonly start: Date\n\n  readonly end: Date\n}\n\nexport type QThemeStyleVariables = {\n  readonly brandId?: Maybe<string>\n  readonly branchId?: Maybe<string>\n}\n\nexport type QThemeStyleQuery = {\n  readonly __typename?: 'Query'\n\n  readonly theme: QThemeStyleTheme\n}\n\nexport type QThemeStyleTheme = {\n  readonly __typename?: 'ApplicationSettings'\n\n  readonly styles: QThemeStyleStyles\n}\n\nexport type QThemeStyleStyles = {\n  readonly __typename?: 'GraphicStyle'\n\n  readonly active: string\n\n  readonly main: string\n\n  readonly mainSecondary: string\n\n  readonly storeLogo: string\n\n  readonly storeLogoMobile: string\n\n  readonly backgroundCart: string\n}\n\nexport type MAddToCartVariables = {\n  readonly orderId: string\n  readonly recipeId: string\n  readonly sideDishes?: Maybe<ReadonlyArray<string>>\n  readonly withGoods: boolean\n  readonly withPresence: boolean\n}\n\nexport type MAddToCartMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly add: MAddToCartAdd\n}\n\nexport type MAddToCartAdd = FCartSummaryFragment &\n  FCartGoodsFragment &\n  FCartPresenceFragment\n\nexport type MChangeCartItemVariables = {\n  readonly orderId: string\n  readonly itemId: string\n  readonly sideDishes?: Maybe<ReadonlyArray<string>>\n  readonly withGoods: boolean\n}\n\nexport type MChangeCartItemMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly change: MChangeCartItemChange\n}\n\nexport type MChangeCartItemChange = FCartSummaryFragment & FCartGoodsFragment\n\nexport type MRemoveCartItemVariables = {\n  readonly itemId: string\n  readonly withGoods: boolean\n  readonly withPresence: boolean\n}\n\nexport type MRemoveCartItemMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly remove: MRemoveCartItemRemove\n}\n\nexport type MRemoveCartItemRemove = FCartSummaryFragment &\n  FCartGoodsFragment &\n  FCartPresenceFragment\n\nexport type QCartVariables = {\n  readonly orderId: string\n  readonly withGoods: boolean\n  readonly withPresence: boolean\n}\n\nexport type QCartQuery = {\n  readonly __typename?: 'Query'\n\n  readonly order: QCartOrder\n}\n\nexport type QCartOrder = FCartSummaryFragment &\n  FCartGoodsFragment &\n  FCartPresenceFragment &\n  FCartStaticFragment\n\nexport type QCartItemVariables = {\n  readonly itemId: string\n}\n\nexport type QCartItemQuery = {\n  readonly __typename?: 'Query'\n\n  readonly item: QCartItemItem\n}\n\nexport type QCartItemItem = {\n  readonly __typename?: 'OrderRecipe'\n\n  readonly id: string\n\n  readonly recipe: QCartItemRecipe\n\n  readonly sideDishes: ReadonlyArray<QCartItemSideDishes>\n}\n\nexport type QCartItemRecipe = FRecipeDetailFragment\n\nexport type QCartItemSideDishes = {\n  readonly __typename?: 'OrderRecipe'\n\n  readonly id: string\n\n  readonly recipe: QCartItem_Recipe\n}\n\nexport type QCartItem_Recipe = {\n  readonly __typename?: 'Recipe'\n\n  readonly id: string\n}\n\nexport type QCartRecipeVariables = {\n  readonly recipeId: string\n}\n\nexport type QCartRecipeQuery = {\n  readonly __typename?: 'Query'\n\n  readonly recipe: QCartRecipeRecipe\n}\n\nexport type QCartRecipeRecipe = FRecipeDetailFragment\n\nexport type QOrderFinishVariables = {\n  readonly orderId: string\n  readonly branchId: string\n}\n\nexport type QOrderFinishQuery = {\n  readonly __typename?: 'Query'\n\n  readonly order: QOrderFinishOrder\n\n  readonly companyBranch: QOrderFinishCompanyBranch\n\n  readonly androidApp: Maybe<QOrderFinishAndroidApp>\n\n  readonly iosApp: Maybe<QOrderFinishIosApp>\n}\n\nexport type QOrderFinishOrder = FOrderFinishedFragment\n\nexport type QOrderFinishCompanyBranch = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n\n  readonly phone: string\n\n  readonly company: QOrderFinishCompany\n}\n\nexport type QOrderFinishCompany = {\n  readonly __typename?: 'Company'\n\n  readonly id: string\n}\n\nexport type QOrderFinishAndroidApp = {\n  readonly __typename?: 'MobileApplicationSetting'\n\n  readonly url: string\n}\n\nexport type QOrderFinishIosApp = {\n  readonly __typename?: 'MobileApplicationSetting'\n\n  readonly url: string\n}\n\nexport type QFoodMenuVariables = {\n  readonly branchId: string\n}\n\nexport type QFoodMenuQuery = {\n  readonly __typename?: 'Query'\n\n  readonly wareCategories: ReadonlyArray<QFoodMenuWareCategories>\n}\n\nexport type QFoodMenuWareCategories = {\n  readonly __typename?: 'WareCategory'\n\n  readonly recipes: ReadonlyArray<QFoodMenuRecipes>\n} & FFoodMenuCategoryFragment\n\nexport type QFoodMenuRecipes = FFoodMenuRecipeFragment\n\nexport type QFoodMenuCartPresenceVariables = {\n  readonly orderId: string\n}\n\nexport type QFoodMenuCartPresenceQuery = {\n  readonly __typename?: 'Query'\n\n  readonly order: QFoodMenuCartPresenceOrder\n}\n\nexport type QFoodMenuCartPresenceOrder = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n} & FCartPresenceFragment\n\nexport type MDeliveryOrderCreateVariables = {\n  readonly brandId?: Maybe<string>\n  readonly branchId?: Maybe<string>\n  readonly gps: InputGeoPointCreate\n  readonly orderOrigin: OrderOriginEnum\n  readonly address?: Maybe<string>\n}\n\nexport type MDeliveryOrderCreateMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly order: MDeliveryOrderCreateOrder\n}\n\nexport type MDeliveryOrderCreateOrder = FOrderCreateFragment\n\nexport type MPickupOrderCreateVariables = {\n  readonly branchId: string\n  readonly orderOrigin: OrderOriginEnum\n}\n\nexport type MPickupOrderCreateMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly order: MPickupOrderCreateOrder\n}\n\nexport type MPickupOrderCreateOrder = FOrderCreateFragment\n\nexport type QInitialDeliveryLocationVariables = {}\n\nexport type QInitialDeliveryLocationQuery = {\n  readonly __typename?: 'Query'\n\n  readonly location: QInitialDeliveryLocationLocation\n}\n\nexport type QInitialDeliveryLocationLocation = {\n  readonly __typename?: 'AddressResolvedLocation'\n\n  readonly gpsCoordinates: Maybe<QInitialDeliveryLocationGpsCoordinates>\n}\n\nexport type QInitialDeliveryLocationGpsCoordinates = {\n  readonly __typename?: 'GeoPoint'\n\n  readonly latitude: number\n\n  readonly longitude: number\n}\n\nexport type QInitialLocationVariables = {}\n\nexport type QInitialLocationQuery = {\n  readonly __typename?: 'Query'\n\n  readonly initialLocation: QInitialLocationInitialLocation\n}\n\nexport type QInitialLocationInitialLocation = {\n  readonly __typename?: 'AddressResolvedLocation'\n\n  readonly gpsCoordinates: Maybe<QInitialLocationGpsCoordinates>\n}\n\nexport type QInitialLocationGpsCoordinates = {\n  readonly __typename?: 'GeoPoint'\n\n  readonly latitude: number\n\n  readonly longitude: number\n}\n\nexport type QPickupMapVariables = {\n  readonly branchSpecific: boolean\n  readonly brandId?: Maybe<string>\n  readonly branchId: string\n}\n\nexport type QPickupMapQuery = {\n  readonly __typename?: 'Query'\n\n  readonly brand: ReadonlyArray<QPickupMapBrand>\n\n  readonly branch: QPickupMapBranch\n}\n\nexport type QPickupMapBrand = FPickupBranchFragment\n\nexport type QPickupMapBranch = FPickupBranchFragment\n\nexport type QResolveLocationVariables = {\n  readonly brandId?: Maybe<string>\n  readonly branchId?: Maybe<string>\n  readonly address?: Maybe<string>\n  readonly latitude?: Maybe<number>\n  readonly longitude?: Maybe<number>\n}\n\nexport type QResolveLocationQuery = {\n  readonly __typename?: 'Query'\n\n  readonly resolveLocation: QResolveLocationResolveLocation\n}\n\nexport type QResolveLocationResolveLocation = {\n  readonly __typename?: 'AddressResolvedLocation'\n\n  readonly finalAddress: Maybe<QResolveLocationFinalAddress>\n\n  readonly isResolved: boolean\n\n  readonly isValidAddress: boolean\n\n  readonly inDeliveryLocation: boolean\n\n  readonly gpsCoordinates: Maybe<QResolveLocationGpsCoordinates>\n\n  readonly companyBranch: Maybe<QResolveLocationCompanyBranch>\n\n  readonly zone: Maybe<QResolveLocationZone>\n}\n\nexport type QResolveLocationFinalAddress = FJsonAddressFragment\n\nexport type QResolveLocationGpsCoordinates = {\n  readonly __typename?: 'GeoPoint'\n\n  readonly latitude: number\n\n  readonly longitude: number\n}\n\nexport type QResolveLocationCompanyBranch = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n\n  readonly isOpen: boolean\n}\n\nexport type QResolveLocationZone = {\n  readonly __typename?: 'Zone'\n\n  readonly id: string\n}\n\nexport type QMobileShopIntroVariables = {\n  readonly brandId?: Maybe<string>\n  readonly branchId?: Maybe<string>\n}\n\nexport type QMobileShopIntroQuery = {\n  readonly __typename?: 'Query'\n\n  readonly intro: QMobileShopIntroIntro\n}\n\nexport type QMobileShopIntroIntro = {\n  readonly __typename?: 'ApplicationSettings'\n\n  readonly headerText: Maybe<string>\n\n  readonly homepageUrl: Maybe<string>\n}\n\nexport type QMobileShopStatusVariables = {\n  readonly branchId: string\n}\n\nexport type QMobileShopStatusQuery = {\n  readonly __typename?: 'Query'\n\n  readonly branch: QMobileShopStatusBranch\n}\n\nexport type QMobileShopStatusBranch = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n} & FCompanyBranchStatusFragment\n\nexport type QSmartBannerVariables = {\n  readonly branchId: string\n  readonly platform: MobilePlatformEnum\n}\n\nexport type QSmartBannerQuery = {\n  readonly __typename?: 'Query'\n\n  readonly app: Maybe<QSmartBannerApp>\n}\n\nexport type QSmartBannerApp = {\n  readonly __typename?: 'MobileApplicationSetting'\n\n  readonly title: string\n\n  readonly url: string\n\n  readonly icon: string\n}\n\nexport type MOrderDeliveryTimeVariables = {\n  readonly orderId: string\n  readonly deliverAt?: Maybe<Date>\n  readonly withGoods: boolean\n}\n\nexport type MOrderDeliveryTimeMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly updateOrder: MOrderDeliveryTimeUpdateOrder\n}\n\nexport type MOrderDeliveryTimeUpdateOrder = FCartSummaryFragment &\n  FCartGoodsFragment\n\nexport type MOrderFinishVariables = {\n  readonly orderId: string\n  readonly customer?: Maybe<InputCustomerCreate>\n  readonly note?: Maybe<string>\n  readonly tips?: Maybe<number>\n  readonly paymentGate: PaymentGateEnum\n  readonly deliverAt?: Maybe<Date>\n  readonly agreements?: Maybe<ReadonlyArray<string>>\n}\n\nexport type MOrderFinishMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly finishOrder: MOrderFinishFinishOrder\n}\n\nexport type MOrderFinishFinishOrder = {\n  readonly __typename?: 'FinishedOrder'\n\n  readonly userErrors: ReadonlyArray<string>\n\n  readonly gopayUrl: Maybe<string>\n}\n\nexport type MOrderPromoAddVariables = {\n  readonly orderId: string\n  readonly code: string\n  readonly withGoods: boolean\n}\n\nexport type MOrderPromoAddMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly addOrderPromoCode: MOrderPromoAddAddOrderPromoCode\n}\n\nexport type MOrderPromoAddAddOrderPromoCode = {\n  readonly __typename?: 'OrderWithErrors'\n\n  readonly userErrors: ReadonlyArray<string>\n\n  readonly order: MOrderPromoAddOrder\n}\n\nexport type MOrderPromoAddOrder = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly promoCodes: ReadonlyArray<MOrderPromoAddPromoCodes>\n} & (FCartSummaryFragment & FCartGoodsFragment)\n\nexport type MOrderPromoAddPromoCodes = FPromoCodeFragment\n\nexport type MOrderPromoRemoveVariables = {\n  readonly orderId: string\n  readonly codeId: string\n  readonly withGoods: boolean\n}\n\nexport type MOrderPromoRemoveMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly removeOrderPromoCode: MOrderPromoRemoveRemoveOrderPromoCode\n}\n\nexport type MOrderPromoRemoveRemoveOrderPromoCode = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly promoCodes: ReadonlyArray<MOrderPromoRemovePromoCodes>\n} & (FCartSummaryFragment & FCartGoodsFragment)\n\nexport type MOrderPromoRemovePromoCodes = FPromoCodeFragment\n\nexport type MOrderTipUpdateVariables = {\n  readonly orderId: string\n  readonly tips: number\n  readonly withGoods: boolean\n}\n\nexport type MOrderTipUpdateMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly updateOrder: MOrderTipUpdateUpdateOrder\n}\n\nexport type MOrderTipUpdateUpdateOrder = FCartSummaryFragment &\n  FCartGoodsFragment\n\nexport type MSubmitOrderVariables = {\n  readonly orderId: string\n  readonly customer?: Maybe<InputCustomerCreate>\n  readonly note?: Maybe<string>\n  readonly tips?: Maybe<number>\n  readonly paymentGate: PaymentGateEnum\n  readonly deliverAt?: Maybe<Date>\n  readonly agreements?: Maybe<ReadonlyArray<string>>\n}\n\nexport type MSubmitOrderMutation = {\n  readonly __typename?: 'Mutation'\n\n  readonly submitOrder: MSubmitOrderSubmitOrder\n}\n\nexport type MSubmitOrderSubmitOrder = {\n  readonly __typename?: 'FinishedOrder'\n\n  readonly userErrors: ReadonlyArray<string>\n\n  readonly gopayUrl: Maybe<string>\n}\n\nexport type QOrderFormVariables = {\n  readonly orderId: string\n}\n\nexport type QOrderFormQuery = {\n  readonly __typename?: 'Query'\n\n  readonly order: QOrderFormOrder\n}\n\nexport type QOrderFormOrder = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly countWares: number\n\n  readonly orderStateCategory: OrderStateCategoryEnum\n}\n\nexport type QOrderFormAgreementsVariables = {\n  readonly input: InputVamStatus\n}\n\nexport type QOrderFormAgreementsQuery = {\n  readonly __typename?: 'Query'\n\n  readonly agreements: ReadonlyArray<QOrderFormAgreementsAgreements>\n}\n\nexport type QOrderFormAgreementsAgreements = {\n  readonly __typename?: 'VAMAgreement'\n\n  readonly id: string\n\n  readonly name: string\n\n  readonly description: string\n\n  readonly isConfirmed: boolean\n\n  readonly isMandatory: boolean\n}\n\nexport type QOrderPaymentStatusVariables = {\n  readonly orderId: string\n}\n\nexport type QOrderPaymentStatusQuery = {\n  readonly __typename?: 'Query'\n\n  readonly status: QOrderPaymentStatusStatus\n}\n\nexport type QOrderPaymentStatusStatus = {\n  readonly __typename?: 'OrderOnlinePaymentStatus'\n\n  readonly isSuccess: boolean\n\n  readonly userErrors: ReadonlyArray<string>\n}\n\nexport type QOrderPromoCodesVariables = {\n  readonly orderId: string\n}\n\nexport type QOrderPromoCodesQuery = {\n  readonly __typename?: 'Query'\n\n  readonly order: QOrderPromoCodesOrder\n}\n\nexport type QOrderPromoCodesOrder = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly promoCodes: ReadonlyArray<QOrderPromoCodesPromoCodes>\n}\n\nexport type QOrderPromoCodesPromoCodes = FPromoCodeFragment\n\nexport type QShopHeaderBranchVariables = {\n  readonly branchId: string\n}\n\nexport type QShopHeaderBranchQuery = {\n  readonly __typename?: 'Query'\n\n  readonly branch: QShopHeaderBranchBranch\n}\n\nexport type QShopHeaderBranchBranch = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n\n  readonly address: QShopHeaderBranchAddress\n} & (FShopOpeningHoursFragment & FCompanyBranchStatusFragment)\n\nexport type QShopHeaderBranchAddress = FAddressFragment\n\nexport type QShopHeaderIntroVariables = {\n  readonly brandId?: Maybe<string>\n  readonly branchId?: Maybe<string>\n}\n\nexport type QShopHeaderIntroQuery = {\n  readonly __typename?: 'Query'\n\n  readonly intro: QShopHeaderIntroIntro\n}\n\nexport type QShopHeaderIntroIntro = {\n  readonly __typename?: 'ApplicationSettings'\n\n  readonly headerText: Maybe<string>\n\n  readonly homepageUrl: Maybe<string>\n}\n\nexport type FCompanyBranchFragment = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n\n  readonly code: string\n\n  readonly brand: FCompanyBranchBrand\n\n  readonly company: FCompanyBranchCompany\n\n  readonly address: FCompanyBranchAddress\n\n  readonly phone: string\n\n  readonly supportedLanguages: ReadonlyArray<LanguageEnum>\n}\n\nexport type FCompanyBranchBrand = {\n  readonly __typename?: 'Company'\n\n  readonly id: string\n\n  readonly name: string\n\n  readonly code: string\n}\n\nexport type FCompanyBranchCompany = {\n  readonly __typename?: 'Company'\n\n  readonly id: string\n}\n\nexport type FCompanyBranchAddress = {\n  readonly __typename?: 'Address'\n\n  readonly id: string\n\n  readonly country: Maybe<FCompanyBranchCountry>\n}\n\nexport type FCompanyBranchCountry = {\n  readonly __typename?: 'Country'\n\n  readonly phonePrefix: string\n}\n\nexport type FCompanyBranchStatusFragment = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n\n  readonly isOpen: boolean\n\n  readonly willOpenAt: Maybe<Date>\n\n  readonly willCloseAt: Maybe<Date>\n\n  readonly businessHours: ReadonlyArray<FCompanyBranchStatusBusinessHours>\n\n  readonly currentInterval: Maybe<FCompanyBranchStatusCurrentInterval>\n\n  readonly defaultDeliveryTimeEnabled: boolean\n\n  readonly defaultPickupTimeEnabled: boolean\n}\n\nexport type FCompanyBranchStatusBusinessHours = {\n  readonly __typename?: 'BusinessHourInterval'\n\n  readonly openAt: Date\n\n  readonly closeAt: Date\n\n  readonly closed: boolean\n\n  readonly closedNote: Maybe<string>\n}\n\nexport type FCompanyBranchStatusCurrentInterval = {\n  readonly __typename?: 'BusinessHourInterval'\n\n  readonly closedNote: Maybe<string>\n}\n\nexport type FJsonAddressFragment = {\n  readonly __typename?: 'JsonAddress'\n\n  readonly street: Maybe<string>\n\n  readonly houseNumber: Maybe<string>\n\n  readonly city: Maybe<string>\n\n  readonly state: Maybe<string>\n}\n\nexport type FAddressFragment = {\n  readonly __typename?: 'Address'\n\n  readonly id: string\n\n  readonly location: Maybe<FAddressLocation>\n}\n\nexport type FAddressLocation = FJsonAddressFragment\n\nexport type FGeoPointFragment = {\n  readonly __typename?: 'GeoPoint'\n\n  readonly latitude: number\n\n  readonly longitude: number\n}\n\nexport type FPriceFragment = {\n  readonly __typename?: 'PriceConverted'\n\n  readonly value: number\n\n  readonly formattedValue: string\n}\n\nexport type FRecipeFragment = {\n  readonly __typename?: 'Recipe'\n\n  readonly id: string\n\n  readonly nameLabel: string\n\n  readonly sideDishCount: number\n}\n\nexport type FPromoCodeFragment = {\n  readonly __typename?: 'PromoCode'\n\n  readonly id: string\n\n  readonly code: string\n}\n\nexport type FCartGoodsFragment = {\n  readonly __typename?: 'Order'\n\n  readonly items: ReadonlyArray<FCartGoodsItems>\n\n  readonly coverPrice: FCartGoodsCoverPrice\n\n  readonly transportFee: FCartGoodsTransportFee\n\n  readonly discounts: ReadonlyArray<FCartGoodsDiscounts>\n\n  readonly totalDiscount: FCartGoodsTotalDiscount\n\n  readonly tip: FCartGoodsTip\n}\n\nexport type FCartGoodsItems = {\n  readonly __typename?: 'OrderRecipe'\n\n  readonly automatic: boolean\n\n  readonly price: FCartGoodsPrice\n\n  readonly sideDishes: ReadonlyArray<FCartGoodsSideDishes>\n} & FCartItemFragment\n\nexport type FCartGoodsPrice = FPriceFragment\n\nexport type FCartGoodsSideDishes = FCartItemFragment\n\nexport type FCartGoodsCoverPrice = FPriceFragment\n\nexport type FCartGoodsTransportFee = FPriceFragment\n\nexport type FCartGoodsDiscounts = {\n  readonly __typename?: 'PriceWithDescription'\n\n  readonly code: string\n\n  readonly description: string\n\n  readonly price: FCartGoods_Price\n}\n\nexport type FCartGoods_Price = FPriceFragment\n\nexport type FCartGoodsTotalDiscount = FPriceFragment\n\nexport type FCartGoodsTip = FPriceFragment\n\nexport type FCartItemFragment = {\n  readonly __typename?: 'OrderRecipe'\n\n  readonly id: string\n\n  readonly recipe: FCartItemRecipe\n}\n\nexport type FCartItemRecipe = FRecipeFragment\n\nexport type FCartStaticFragment = {\n  readonly __typename?: 'Order'\n\n  readonly minimalOrderPrice: Maybe<FCartStaticMinimalOrderPrice>\n\n  readonly deliveryType: Maybe<FCartStaticDeliveryType>\n}\n\nexport type FCartStaticMinimalOrderPrice = FPriceFragment\n\nexport type FCartStaticDeliveryType = {\n  readonly __typename?: 'DeliveryType'\n\n  readonly enum: DeliveryTypeEnum\n}\n\nexport type FCartSummaryFragment = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly countWares: number\n\n  readonly totalSum: FCartSummaryTotalSum\n}\n\nexport type FCartSummaryTotalSum = FPriceFragment\n\nexport type FRecipeDetailFragment = {\n  readonly __typename?: 'Recipe'\n\n  readonly id: string\n\n  readonly nameLabel: string\n\n  readonly descriptionLabel: Maybe<string>\n\n  readonly categories: ReadonlyArray<FRecipeDetailCategories>\n}\n\nexport type FRecipeDetailCategories = {\n  readonly __typename?: 'WareCategory'\n\n  readonly id: string\n\n  readonly nameLabel: string\n\n  readonly minCount: number\n\n  readonly maxCount: number\n\n  readonly maxRecipesCount: number\n\n  readonly sideDishes: ReadonlyArray<FRecipeDetailSideDishes>\n}\n\nexport type FRecipeDetailSideDishes = {\n  readonly __typename?: 'Recipe'\n\n  readonly id: string\n\n  readonly nameLabel: string\n\n  readonly price: FRecipeDetailPrice\n}\n\nexport type FRecipeDetailPrice = FPriceFragment\n\nexport type FOrderFinishedFragment = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly items: ReadonlyArray<FOrderFinishedItems>\n\n  readonly totalSum: FOrderFinishedTotalSum\n\n  readonly orderPayments: ReadonlyArray<FOrderFinishedOrderPayments>\n}\n\nexport type FOrderFinishedItems = {\n  readonly __typename?: 'OrderRecipe'\n\n  readonly sideDishes: ReadonlyArray<FOrderFinishedSideDishes>\n} & FCartItemFragment\n\nexport type FOrderFinishedSideDishes = FCartItemFragment\n\nexport type FOrderFinishedTotalSum = FPriceFragment\n\nexport type FOrderFinishedOrderPayments = {\n  readonly __typename?: 'OrderPaymentMethod'\n\n  readonly paymentMethod: FOrderFinishedPaymentMethod\n}\n\nexport type FOrderFinishedPaymentMethod = {\n  readonly __typename?: 'PaymentMethod'\n\n  readonly paymentType: FOrderFinishedPaymentType\n}\n\nexport type FOrderFinishedPaymentType = {\n  readonly __typename?: 'PaymentType'\n\n  readonly enum: PaymentTypeEnum\n}\n\nexport type FCartPresenceFragment = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly presence: ReadonlyArray<FCartPresencePresence>\n}\n\nexport type FCartPresencePresence = {\n  readonly __typename?: 'OrderRecipe'\n\n  readonly id: string\n\n  readonly recipe: FCartPresenceRecipe\n}\n\nexport type FCartPresenceRecipe = {\n  readonly __typename?: 'Recipe'\n\n  readonly id: string\n}\n\nexport type FFoodMenuCategoryFragment = {\n  readonly __typename?: 'WareCategory'\n\n  readonly id: string\n\n  readonly nameLabel: string\n\n  readonly pictogram: Maybe<string>\n}\n\nexport type FFoodMenuRecipeFragment = {\n  readonly __typename?: 'Recipe'\n\n  readonly id: string\n\n  readonly image: Maybe<string>\n\n  readonly descriptionLabel: Maybe<string>\n\n  readonly price: FFoodMenuRecipePrice\n} & FRecipeFragment\n\nexport type FFoodMenuRecipePrice = FPriceFragment\n\nexport type FOrderCreateFragment = {\n  readonly __typename?: 'Order'\n\n  readonly id: string\n\n  readonly branch: FOrderCreateBranch\n}\n\nexport type FOrderCreateBranch = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n}\n\nexport type FPickupBranchFragment = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly id: string\n\n  readonly name: string\n\n  readonly gps: FPickupBranchGps\n\n  readonly address: FPickupBranchAddress\n\n  readonly pickupEnabled: boolean\n\n  readonly defaultDeliveryTime: number\n\n  readonly defaultPickupTime: number\n} & FCompanyBranchStatusFragment\n\nexport type FPickupBranchGps = FGeoPointFragment\n\nexport type FPickupBranchAddress = FAddressFragment\n\nexport type FShopOpeningHoursFragment = {\n  readonly __typename?: 'CompanyBranch'\n\n  readonly defaultDeliveryTime: number\n\n  readonly defaultPickupTime: number\n} & FCompanyBranchStatusFragment\n\nimport * as Hooks from '@speedlo/graphql/dist/hooks'\nimport gql from 'graphql-tag'\n\n// ====================================================\n// Fragments\n// ====================================================\n\nexport const FCompanyBranchFragmentDoc = gql`\n  fragment FCompanyBranch on CompanyBranch {\n    id\n    code: wac\n    brand {\n      id\n      name\n      code: wac\n    }\n    company {\n      id\n    }\n    address {\n      id\n      country {\n        phonePrefix\n      }\n    }\n    phone\n    supportedLanguages(userSpecific: true)\n  }\n`\n\nexport const FPromoCodeFragmentDoc = gql`\n  fragment FPromoCode on PromoCode {\n    id\n    code\n  }\n`\n\nexport const FRecipeFragmentDoc = gql`\n  fragment FRecipe on Recipe {\n    id\n    nameLabel\n    sideDishCount: sideDishesWareCategoriesCount\n  }\n`\n\nexport const FCartItemFragmentDoc = gql`\n  fragment FCartItem on OrderRecipe {\n    id\n    recipe {\n      ...FRecipe\n    }\n  }\n\n  ${FRecipeFragmentDoc}\n`\n\nexport const FPriceFragmentDoc = gql`\n  fragment FPrice on PriceConverted {\n    value\n    formattedValue\n  }\n`\n\nexport const FCartGoodsFragmentDoc = gql`\n  fragment FCartGoods on Order {\n    items {\n      ...FCartItem\n      automatic\n      price: priceWithSideDishes {\n        ...FPrice\n      }\n      sideDishes {\n        ...FCartItem\n      }\n    }\n    coverPrice {\n      ...FPrice\n    }\n    transportFee {\n      ...FPrice\n    }\n    discounts {\n      code\n      description\n      price {\n        ...FPrice\n      }\n    }\n    totalDiscount {\n      ...FPrice\n    }\n    tip {\n      ...FPrice\n    }\n  }\n\n  ${FCartItemFragmentDoc}\n  ${FPriceFragmentDoc}\n`\n\nexport const FCartStaticFragmentDoc = gql`\n  fragment FCartStatic on Order {\n    minimalOrderPrice {\n      ...FPrice\n    }\n    deliveryType {\n      enum\n    }\n  }\n\n  ${FPriceFragmentDoc}\n`\n\nexport const FCartSummaryFragmentDoc = gql`\n  fragment FCartSummary on Order {\n    id\n    countWares\n    totalSum {\n      ...FPrice\n    }\n  }\n\n  ${FPriceFragmentDoc}\n`\n\nexport const FRecipeDetailFragmentDoc = gql`\n  fragment FRecipeDetail on Recipe {\n    id\n    nameLabel\n    descriptionLabel\n    categories: sideDishesWareCategories {\n      id\n      nameLabel\n      minCount\n      maxCount\n      maxRecipesCount\n      sideDishes: recipes {\n        id\n        nameLabel\n        price {\n          ...FPrice\n        }\n      }\n    }\n  }\n\n  ${FPriceFragmentDoc}\n`\n\nexport const FOrderFinishedFragmentDoc = gql`\n  fragment FOrderFinished on Order {\n    id\n    items {\n      ...FCartItem\n      sideDishes {\n        ...FCartItem\n      }\n    }\n    totalSum {\n      ...FPrice\n    }\n    orderPayments {\n      paymentMethod {\n        paymentType {\n          enum\n        }\n      }\n    }\n  }\n\n  ${FCartItemFragmentDoc}\n  ${FPriceFragmentDoc}\n`\n\nexport const FCartPresenceFragmentDoc = gql`\n  fragment FCartPresence on Order {\n    id\n    presence: items {\n      id\n      recipe {\n        id\n      }\n    }\n  }\n`\n\nexport const FFoodMenuCategoryFragmentDoc = gql`\n  fragment FFoodMenuCategory on WareCategory {\n    id\n    nameLabel\n    pictogram\n  }\n`\n\nexport const FFoodMenuRecipeFragmentDoc = gql`\n  fragment FFoodMenuRecipe on Recipe {\n    id\n    image(width: 192, height: 192)\n    descriptionLabel\n    price {\n      ...FPrice\n    }\n    ...FRecipe\n  }\n\n  ${FPriceFragmentDoc}\n  ${FRecipeFragmentDoc}\n`\n\nexport const FOrderCreateFragmentDoc = gql`\n  fragment FOrderCreate on Order {\n    id\n    branch: companyBranch {\n      id\n    }\n  }\n`\n\nexport const FGeoPointFragmentDoc = gql`\n  fragment FGeoPoint on GeoPoint {\n    latitude\n    longitude\n  }\n`\n\nexport const FJsonAddressFragmentDoc = gql`\n  fragment FJsonAddress on JsonAddress {\n    street\n    houseNumber\n    city\n    state\n  }\n`\n\nexport const FAddressFragmentDoc = gql`\n  fragment FAddress on Address {\n    id\n    location {\n      ...FJsonAddress\n    }\n  }\n\n  ${FJsonAddressFragmentDoc}\n`\n\nexport const FCompanyBranchStatusFragmentDoc = gql`\n  fragment FCompanyBranchStatus on CompanyBranch {\n    id\n    isOpen\n    willOpenAt\n    willCloseAt\n    businessHours: businessHoursIntervals {\n      openAt\n      closeAt\n      closed\n      closedNote\n    }\n    currentInterval {\n      closedNote\n    }\n    defaultDeliveryTimeEnabled\n    defaultPickupTimeEnabled\n  }\n`\n\nexport const FPickupBranchFragmentDoc = gql`\n  fragment FPickupBranch on CompanyBranch {\n    id\n    name\n    gps {\n      ...FGeoPoint\n    }\n    address {\n      ...FAddress\n    }\n    pickupEnabled\n    defaultDeliveryTime\n    defaultPickupTime\n    ...FCompanyBranchStatus\n  }\n\n  ${FGeoPointFragmentDoc}\n  ${FAddressFragmentDoc}\n  ${FCompanyBranchStatusFragmentDoc}\n`\n\nexport const FShopOpeningHoursFragmentDoc = gql`\n  fragment FShopOpeningHours on CompanyBranch {\n    defaultDeliveryTime\n    defaultPickupTime\n    ...FCompanyBranchStatus\n  }\n\n  ${FCompanyBranchStatusFragmentDoc}\n`\n\n// ====================================================\n// Hooks\n// ====================================================\n\nexport const QBusinessLookupDocument = gql`\n  query QBusinessLookup($code: String, $url: String) {\n    lookup: companyBranchLookUp(wac: $code, hostUrl: $url) {\n      branch: companyBranch {\n        ...FCompanyBranch\n      }\n      isBrand: isBrandWac\n      isMobileApp\n      knownBasePath\n      orderOrigin\n      defaultLanguage: userDefaultLanguage\n    }\n  }\n\n  ${FCompanyBranchFragmentDoc}\n`\n\nexport function useQBusinessLookup(\n  variables?: QBusinessLookupVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QBusinessLookupQuery,\n    QBusinessLookupVariables\n  >,\n) {\n  return Hooks.useQuery<QBusinessLookupQuery, QBusinessLookupVariables>(\n    QBusinessLookupDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQBusinessLookup(\n  options?: Hooks.LazyQueryHookOptions<\n    QBusinessLookupQuery,\n    QBusinessLookupVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QBusinessLookupQuery, QBusinessLookupVariables>(\n    QBusinessLookupDocument,\n    options,\n  )\n}\n\nexport const QDelayedOrderDocument = gql`\n  query QDelayedOrder($branchId: ID!) {\n    delayedOrder: companyBranch(id: $branchId) {\n      id\n      intervals: delayedDeliveryIntervals {\n        start: openAt\n        end: closeAt\n      }\n      enabled: delayedDeliveryEnabled\n    }\n  }\n`\n\nexport function useQDelayedOrder(\n  variables?: QDelayedOrderVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QDelayedOrderQuery,\n    QDelayedOrderVariables\n  >,\n) {\n  return Hooks.useQuery<QDelayedOrderQuery, QDelayedOrderVariables>(\n    QDelayedOrderDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQDelayedOrder(\n  options?: Hooks.LazyQueryHookOptions<\n    QDelayedOrderQuery,\n    QDelayedOrderVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QDelayedOrderQuery, QDelayedOrderVariables>(\n    QDelayedOrderDocument,\n    options,\n  )\n}\n\nexport const QThemeStyleDocument = gql`\n  query QThemeStyle($brandId: ID, $branchId: ID) {\n    theme: applicationSettings(brand: $brandId, companyBranch: $branchId) {\n      styles {\n        active\n        main\n        mainSecondary\n        storeLogo\n        storeLogoMobile\n        backgroundCart\n      }\n    }\n  }\n`\n\nexport function useQThemeStyle(\n  variables?: QThemeStyleVariables,\n  baseOptions?: Hooks.QueryHookOptions<QThemeStyleQuery, QThemeStyleVariables>,\n) {\n  return Hooks.useQuery<QThemeStyleQuery, QThemeStyleVariables>(\n    QThemeStyleDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQThemeStyle(\n  options?: Hooks.LazyQueryHookOptions<QThemeStyleQuery, QThemeStyleVariables>,\n) {\n  return Hooks.useLazyQuery<QThemeStyleQuery, QThemeStyleVariables>(\n    QThemeStyleDocument,\n    options,\n  )\n}\n\nexport const MAddToCartDocument = gql`\n  mutation MAddToCart(\n    $orderId: ID!\n    $recipeId: ID!\n    $sideDishes: [ID!]\n    $withGoods: Boolean!\n    $withPresence: Boolean!\n  ) {\n    add: createOrderRecipe(\n      orderRecipe: {\n        order: $orderId\n        recipe: $recipeId\n        sideDishes: $sideDishes\n      }\n    ) {\n      ...FCartSummary\n      ...FCartGoods @include(if: $withGoods)\n      ...FCartPresence @include(if: $withPresence)\n    }\n  }\n\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n  ${FCartPresenceFragmentDoc}\n`\n\nexport function useMAddToCart(\n  baseOptions?: Hooks.MutationHookOptions<\n    MAddToCartMutation,\n    MAddToCartVariables\n  >,\n) {\n  return Hooks.useMutation<MAddToCartMutation, MAddToCartVariables>(\n    MAddToCartDocument,\n    baseOptions,\n  )\n}\n\nexport const MChangeCartItemDocument = gql`\n  mutation MChangeCartItem(\n    $orderId: ID!\n    $itemId: ID!\n    $sideDishes: [ID!]\n    $withGoods: Boolean!\n  ) {\n    change: updateOrderRecipe(\n      id: $itemId\n      orderRecipe: { order: $orderId, sideDishes: $sideDishes }\n    ) {\n      ...FCartSummary\n      ...FCartGoods @include(if: $withGoods)\n    }\n  }\n\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n`\n\nexport function useMChangeCartItem(\n  baseOptions?: Hooks.MutationHookOptions<\n    MChangeCartItemMutation,\n    MChangeCartItemVariables\n  >,\n) {\n  return Hooks.useMutation<MChangeCartItemMutation, MChangeCartItemVariables>(\n    MChangeCartItemDocument,\n    baseOptions,\n  )\n}\n\nexport const MRemoveCartItemDocument = gql`\n  mutation MRemoveCartItem(\n    $itemId: ID!\n    $withGoods: Boolean!\n    $withPresence: Boolean!\n  ) {\n    remove: destroyOrderRecipe(id: $itemId) {\n      ...FCartSummary\n      ...FCartGoods @include(if: $withGoods)\n      ...FCartPresence @include(if: $withPresence)\n    }\n  }\n\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n  ${FCartPresenceFragmentDoc}\n`\n\nexport function useMRemoveCartItem(\n  baseOptions?: Hooks.MutationHookOptions<\n    MRemoveCartItemMutation,\n    MRemoveCartItemVariables\n  >,\n) {\n  return Hooks.useMutation<MRemoveCartItemMutation, MRemoveCartItemVariables>(\n    MRemoveCartItemDocument,\n    baseOptions,\n  )\n}\n\nexport const QCartDocument = gql`\n  query QCart($orderId: ID!, $withGoods: Boolean!, $withPresence: Boolean!) {\n    order(id: $orderId) {\n      ...FCartSummary\n      ...FCartGoods @include(if: $withGoods)\n      ...FCartPresence @include(if: $withPresence)\n      ...FCartStatic\n    }\n  }\n\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n  ${FCartPresenceFragmentDoc}\n  ${FCartStaticFragmentDoc}\n`\n\nexport function useQCart(\n  variables?: QCartVariables,\n  baseOptions?: Hooks.QueryHookOptions<QCartQuery, QCartVariables>,\n) {\n  return Hooks.useQuery<QCartQuery, QCartVariables>(\n    QCartDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQCart(\n  options?: Hooks.LazyQueryHookOptions<QCartQuery, QCartVariables>,\n) {\n  return Hooks.useLazyQuery<QCartQuery, QCartVariables>(QCartDocument, options)\n}\n\nexport const QCartItemDocument = gql`\n  query QCartItem($itemId: ID!) {\n    item: orderRecipe(id: $itemId) {\n      id\n      recipe {\n        ...FRecipeDetail\n      }\n      sideDishes {\n        id\n        recipe {\n          id\n        }\n      }\n    }\n  }\n\n  ${FRecipeDetailFragmentDoc}\n`\n\nexport function useQCartItem(\n  variables?: QCartItemVariables,\n  baseOptions?: Hooks.QueryHookOptions<QCartItemQuery, QCartItemVariables>,\n) {\n  return Hooks.useQuery<QCartItemQuery, QCartItemVariables>(\n    QCartItemDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQCartItem(\n  options?: Hooks.LazyQueryHookOptions<QCartItemQuery, QCartItemVariables>,\n) {\n  return Hooks.useLazyQuery<QCartItemQuery, QCartItemVariables>(\n    QCartItemDocument,\n    options,\n  )\n}\n\nexport const QCartRecipeDocument = gql`\n  query QCartRecipe($recipeId: ID!) {\n    recipe(id: $recipeId) {\n      ...FRecipeDetail\n    }\n  }\n\n  ${FRecipeDetailFragmentDoc}\n`\n\nexport function useQCartRecipe(\n  variables?: QCartRecipeVariables,\n  baseOptions?: Hooks.QueryHookOptions<QCartRecipeQuery, QCartRecipeVariables>,\n) {\n  return Hooks.useQuery<QCartRecipeQuery, QCartRecipeVariables>(\n    QCartRecipeDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQCartRecipe(\n  options?: Hooks.LazyQueryHookOptions<QCartRecipeQuery, QCartRecipeVariables>,\n) {\n  return Hooks.useLazyQuery<QCartRecipeQuery, QCartRecipeVariables>(\n    QCartRecipeDocument,\n    options,\n  )\n}\n\nexport const QOrderFinishDocument = gql`\n  query QOrderFinish($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      ...FOrderFinished\n    }\n    companyBranch(id: $branchId) {\n      id\n      phone\n      company {\n        id\n      }\n    }\n    androidApp: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: ANDROID\n    ) {\n      url\n    }\n    iosApp: mobileApplicationSettings(companyBranch: $branchId, platform: IOS) {\n      url\n    }\n  }\n\n  ${FOrderFinishedFragmentDoc}\n`\n\nexport function useQOrderFinish(\n  variables?: QOrderFinishVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QOrderFinishQuery,\n    QOrderFinishVariables\n  >,\n) {\n  return Hooks.useQuery<QOrderFinishQuery, QOrderFinishVariables>(\n    QOrderFinishDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQOrderFinish(\n  options?: Hooks.LazyQueryHookOptions<\n    QOrderFinishQuery,\n    QOrderFinishVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QOrderFinishQuery, QOrderFinishVariables>(\n    QOrderFinishDocument,\n    options,\n  )\n}\n\nexport const QFoodMenuDocument = gql`\n  query QFoodMenu($branchId: ID!) {\n    wareCategories(\n      companyBranch: $branchId\n      wareCategoryType: MAIN\n      orderOriginCategory: DOVEZE\n      enabled: true\n      isAvailable: true\n    ) {\n      ...FFoodMenuCategory\n      recipes(enabled: true, isAvailable: true) {\n        ...FFoodMenuRecipe\n      }\n    }\n  }\n\n  ${FFoodMenuCategoryFragmentDoc}\n  ${FFoodMenuRecipeFragmentDoc}\n`\n\nexport function useQFoodMenu(\n  variables?: QFoodMenuVariables,\n  baseOptions?: Hooks.QueryHookOptions<QFoodMenuQuery, QFoodMenuVariables>,\n) {\n  return Hooks.useQuery<QFoodMenuQuery, QFoodMenuVariables>(\n    QFoodMenuDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQFoodMenu(\n  options?: Hooks.LazyQueryHookOptions<QFoodMenuQuery, QFoodMenuVariables>,\n) {\n  return Hooks.useLazyQuery<QFoodMenuQuery, QFoodMenuVariables>(\n    QFoodMenuDocument,\n    options,\n  )\n}\n\nexport const QFoodMenuCartPresenceDocument = gql`\n  query QFoodMenuCartPresence($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      ...FCartPresence\n    }\n  }\n\n  ${FCartPresenceFragmentDoc}\n`\n\nexport function useQFoodMenuCartPresence(\n  variables?: QFoodMenuCartPresenceVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QFoodMenuCartPresenceQuery,\n    QFoodMenuCartPresenceVariables\n  >,\n) {\n  return Hooks.useQuery<\n    QFoodMenuCartPresenceQuery,\n    QFoodMenuCartPresenceVariables\n  >(QFoodMenuCartPresenceDocument, variables, baseOptions)\n}\n\nexport function useLazyQFoodMenuCartPresence(\n  options?: Hooks.LazyQueryHookOptions<\n    QFoodMenuCartPresenceQuery,\n    QFoodMenuCartPresenceVariables\n  >,\n) {\n  return Hooks.useLazyQuery<\n    QFoodMenuCartPresenceQuery,\n    QFoodMenuCartPresenceVariables\n  >(QFoodMenuCartPresenceDocument, options)\n}\n\nexport const MDeliveryOrderCreateDocument = gql`\n  mutation MDeliveryOrderCreate(\n    $brandId: ID\n    $branchId: ID\n    $gps: InputGeoPointCreate!\n    $orderOrigin: OrderOriginEnum!\n    $address: String\n  ) {\n    order: createDeliveryOrder(\n      order: {\n        brand: $brandId\n        companyBranch: $branchId\n        gps: $gps\n        orderOrigin: $orderOrigin\n        address: $address\n      }\n    ) {\n      ...FOrderCreate\n    }\n  }\n\n  ${FOrderCreateFragmentDoc}\n`\n\nexport function useMDeliveryOrderCreate(\n  baseOptions?: Hooks.MutationHookOptions<\n    MDeliveryOrderCreateMutation,\n    MDeliveryOrderCreateVariables\n  >,\n) {\n  return Hooks.useMutation<\n    MDeliveryOrderCreateMutation,\n    MDeliveryOrderCreateVariables\n  >(MDeliveryOrderCreateDocument, baseOptions)\n}\n\nexport const MPickupOrderCreateDocument = gql`\n  mutation MPickupOrderCreate($branchId: ID!, $orderOrigin: OrderOriginEnum!) {\n    order: createPickupOrder(\n      order: { companyBranch: $branchId, orderOrigin: $orderOrigin }\n    ) {\n      ...FOrderCreate\n    }\n  }\n\n  ${FOrderCreateFragmentDoc}\n`\n\nexport function useMPickupOrderCreate(\n  baseOptions?: Hooks.MutationHookOptions<\n    MPickupOrderCreateMutation,\n    MPickupOrderCreateVariables\n  >,\n) {\n  return Hooks.useMutation<\n    MPickupOrderCreateMutation,\n    MPickupOrderCreateVariables\n  >(MPickupOrderCreateDocument, baseOptions)\n}\n\nexport const QInitialDeliveryLocationDocument = gql`\n  query QInitialDeliveryLocation {\n    location: resolveLocation {\n      gpsCoordinates {\n        latitude\n        longitude\n      }\n    }\n  }\n`\n\nexport function useQInitialDeliveryLocation(\n  variables?: QInitialDeliveryLocationVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QInitialDeliveryLocationQuery,\n    QInitialDeliveryLocationVariables\n  >,\n) {\n  return Hooks.useQuery<\n    QInitialDeliveryLocationQuery,\n    QInitialDeliveryLocationVariables\n  >(QInitialDeliveryLocationDocument, variables, baseOptions)\n}\n\nexport function useLazyQInitialDeliveryLocation(\n  options?: Hooks.LazyQueryHookOptions<\n    QInitialDeliveryLocationQuery,\n    QInitialDeliveryLocationVariables\n  >,\n) {\n  return Hooks.useLazyQuery<\n    QInitialDeliveryLocationQuery,\n    QInitialDeliveryLocationVariables\n  >(QInitialDeliveryLocationDocument, options)\n}\n\nexport const QInitialLocationDocument = gql`\n  query QInitialLocation {\n    initialLocation: resolveLocation {\n      gpsCoordinates {\n        latitude\n        longitude\n      }\n    }\n  }\n`\n\nexport function useQInitialLocation(\n  variables?: QInitialLocationVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QInitialLocationQuery,\n    QInitialLocationVariables\n  >,\n) {\n  return Hooks.useQuery<QInitialLocationQuery, QInitialLocationVariables>(\n    QInitialLocationDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQInitialLocation(\n  options?: Hooks.LazyQueryHookOptions<\n    QInitialLocationQuery,\n    QInitialLocationVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QInitialLocationQuery, QInitialLocationVariables>(\n    QInitialLocationDocument,\n    options,\n  )\n}\n\nexport const QPickupMapDocument = gql`\n  query QPickupMap($branchSpecific: Boolean!, $brandId: ID, $branchId: ID!) {\n    brand: companyBranches(brand: $brandId) @skip(if: $branchSpecific) {\n      ...FPickupBranch\n    }\n    branch: companyBranch(id: $branchId) @include(if: $branchSpecific) {\n      ...FPickupBranch\n    }\n  }\n\n  ${FPickupBranchFragmentDoc}\n`\n\nexport function useQPickupMap(\n  variables?: QPickupMapVariables,\n  baseOptions?: Hooks.QueryHookOptions<QPickupMapQuery, QPickupMapVariables>,\n) {\n  return Hooks.useQuery<QPickupMapQuery, QPickupMapVariables>(\n    QPickupMapDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQPickupMap(\n  options?: Hooks.LazyQueryHookOptions<QPickupMapQuery, QPickupMapVariables>,\n) {\n  return Hooks.useLazyQuery<QPickupMapQuery, QPickupMapVariables>(\n    QPickupMapDocument,\n    options,\n  )\n}\n\nexport const QResolveLocationDocument = gql`\n  query QResolveLocation(\n    $brandId: ID\n    $branchId: ID\n    $address: String\n    $latitude: Float\n    $longitude: Float\n  ) {\n    resolveLocation(\n      brand: $brandId\n      companyBranch: $branchId\n      address: $address\n      latitude: $latitude\n      longitude: $longitude\n    ) {\n      finalAddress {\n        ...FJsonAddress\n      }\n      isResolved\n      isValidAddress\n      inDeliveryLocation\n      gpsCoordinates {\n        latitude\n        longitude\n      }\n      companyBranch {\n        id\n        isOpen\n      }\n      zone {\n        id\n      }\n    }\n  }\n\n  ${FJsonAddressFragmentDoc}\n`\n\nexport function useQResolveLocation(\n  variables?: QResolveLocationVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QResolveLocationQuery,\n    QResolveLocationVariables\n  >,\n) {\n  return Hooks.useQuery<QResolveLocationQuery, QResolveLocationVariables>(\n    QResolveLocationDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQResolveLocation(\n  options?: Hooks.LazyQueryHookOptions<\n    QResolveLocationQuery,\n    QResolveLocationVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QResolveLocationQuery, QResolveLocationVariables>(\n    QResolveLocationDocument,\n    options,\n  )\n}\n\nexport const QMobileShopIntroDocument = gql`\n  query QMobileShopIntro($brandId: ID, $branchId: ID) {\n    intro: applicationSettings(brand: $brandId, companyBranch: $branchId) {\n      headerText\n      homepageUrl\n    }\n  }\n`\n\nexport function useQMobileShopIntro(\n  variables?: QMobileShopIntroVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QMobileShopIntroQuery,\n    QMobileShopIntroVariables\n  >,\n) {\n  return Hooks.useQuery<QMobileShopIntroQuery, QMobileShopIntroVariables>(\n    QMobileShopIntroDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQMobileShopIntro(\n  options?: Hooks.LazyQueryHookOptions<\n    QMobileShopIntroQuery,\n    QMobileShopIntroVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QMobileShopIntroQuery, QMobileShopIntroVariables>(\n    QMobileShopIntroDocument,\n    options,\n  )\n}\n\nexport const QMobileShopStatusDocument = gql`\n  query QMobileShopStatus($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      ...FCompanyBranchStatus\n    }\n  }\n\n  ${FCompanyBranchStatusFragmentDoc}\n`\n\nexport function useQMobileShopStatus(\n  variables?: QMobileShopStatusVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QMobileShopStatusQuery,\n    QMobileShopStatusVariables\n  >,\n) {\n  return Hooks.useQuery<QMobileShopStatusQuery, QMobileShopStatusVariables>(\n    QMobileShopStatusDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQMobileShopStatus(\n  options?: Hooks.LazyQueryHookOptions<\n    QMobileShopStatusQuery,\n    QMobileShopStatusVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QMobileShopStatusQuery, QMobileShopStatusVariables>(\n    QMobileShopStatusDocument,\n    options,\n  )\n}\n\nexport const QSmartBannerDocument = gql`\n  query QSmartBanner($branchId: ID!, $platform: MobilePlatformEnum!) {\n    app: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: $platform\n    ) {\n      title\n      url\n      icon\n    }\n  }\n`\n\nexport function useQSmartBanner(\n  variables?: QSmartBannerVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QSmartBannerQuery,\n    QSmartBannerVariables\n  >,\n) {\n  return Hooks.useQuery<QSmartBannerQuery, QSmartBannerVariables>(\n    QSmartBannerDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQSmartBanner(\n  options?: Hooks.LazyQueryHookOptions<\n    QSmartBannerQuery,\n    QSmartBannerVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QSmartBannerQuery, QSmartBannerVariables>(\n    QSmartBannerDocument,\n    options,\n  )\n}\n\nexport const MOrderDeliveryTimeDocument = gql`\n  mutation MOrderDeliveryTime(\n    $orderId: ID!\n    $deliverAt: DateTime\n    $withGoods: Boolean!\n  ) {\n    updateOrder(id: $orderId, order: { deliverAt: $deliverAt }) {\n      ...FCartSummary\n      ...FCartGoods @include(if: $withGoods)\n    }\n  }\n\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n`\n\nexport function useMOrderDeliveryTime(\n  baseOptions?: Hooks.MutationHookOptions<\n    MOrderDeliveryTimeMutation,\n    MOrderDeliveryTimeVariables\n  >,\n) {\n  return Hooks.useMutation<\n    MOrderDeliveryTimeMutation,\n    MOrderDeliveryTimeVariables\n  >(MOrderDeliveryTimeDocument, baseOptions)\n}\n\nexport const MOrderFinishDocument = gql`\n  mutation MOrderFinish(\n    $orderId: ID!\n    $customer: InputCustomerCreate\n    $note: String\n    $tips: Float\n    $paymentGate: PaymentGateEnum!\n    $deliverAt: DateTime\n    $agreements: [ID!]\n  ) {\n    finishOrder(\n      id: $orderId\n      order: {\n        confirmedAgreements: $agreements\n        customer: $customer\n        paymentGate: $paymentGate\n        note: $note\n        tips: $tips\n        deliverAt: $deliverAt\n      }\n    ) {\n      userErrors\n      gopayUrl\n    }\n  }\n`\n\nexport function useMOrderFinish(\n  baseOptions?: Hooks.MutationHookOptions<\n    MOrderFinishMutation,\n    MOrderFinishVariables\n  >,\n) {\n  return Hooks.useMutation<MOrderFinishMutation, MOrderFinishVariables>(\n    MOrderFinishDocument,\n    baseOptions,\n  )\n}\n\nexport const MOrderPromoAddDocument = gql`\n  mutation MOrderPromoAdd($orderId: ID!, $code: String!, $withGoods: Boolean!) {\n    addOrderPromoCode(order: $orderId, promoCode: $code) {\n      userErrors: errors\n      order {\n        id\n        promoCodes {\n          ...FPromoCode\n        }\n        ...FCartSummary\n        ...FCartGoods @include(if: $withGoods)\n      }\n    }\n  }\n\n  ${FPromoCodeFragmentDoc}\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n`\n\nexport function useMOrderPromoAdd(\n  baseOptions?: Hooks.MutationHookOptions<\n    MOrderPromoAddMutation,\n    MOrderPromoAddVariables\n  >,\n) {\n  return Hooks.useMutation<MOrderPromoAddMutation, MOrderPromoAddVariables>(\n    MOrderPromoAddDocument,\n    baseOptions,\n  )\n}\n\nexport const MOrderPromoRemoveDocument = gql`\n  mutation MOrderPromoRemove(\n    $orderId: ID!\n    $codeId: ID!\n    $withGoods: Boolean!\n  ) {\n    removeOrderPromoCode(order: $orderId, promoCode: $codeId) {\n      id\n      promoCodes {\n        ...FPromoCode\n      }\n      ...FCartSummary\n      ...FCartGoods @include(if: $withGoods)\n    }\n  }\n\n  ${FPromoCodeFragmentDoc}\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n`\n\nexport function useMOrderPromoRemove(\n  baseOptions?: Hooks.MutationHookOptions<\n    MOrderPromoRemoveMutation,\n    MOrderPromoRemoveVariables\n  >,\n) {\n  return Hooks.useMutation<\n    MOrderPromoRemoveMutation,\n    MOrderPromoRemoveVariables\n  >(MOrderPromoRemoveDocument, baseOptions)\n}\n\nexport const MOrderTipUpdateDocument = gql`\n  mutation MOrderTipUpdate($orderId: ID!, $tips: Float!, $withGoods: Boolean!) {\n    updateOrder(id: $orderId, order: { tips: $tips }) {\n      ...FCartSummary\n      ...FCartGoods @include(if: $withGoods)\n    }\n  }\n\n  ${FCartSummaryFragmentDoc}\n  ${FCartGoodsFragmentDoc}\n`\n\nexport function useMOrderTipUpdate(\n  baseOptions?: Hooks.MutationHookOptions<\n    MOrderTipUpdateMutation,\n    MOrderTipUpdateVariables\n  >,\n) {\n  return Hooks.useMutation<MOrderTipUpdateMutation, MOrderTipUpdateVariables>(\n    MOrderTipUpdateDocument,\n    baseOptions,\n  )\n}\n\nexport const MSubmitOrderDocument = gql`\n  mutation MSubmitOrder(\n    $orderId: ID!\n    $customer: InputCustomerCreate\n    $note: String\n    $tips: Float\n    $paymentGate: PaymentGateEnum!\n    $deliverAt: DateTime\n    $agreements: [ID!]\n  ) {\n    submitOrder: finishOrder(\n      id: $orderId\n      order: {\n        confirmedAgreements: $agreements\n        customer: $customer\n        paymentGate: $paymentGate\n        note: $note\n        tips: $tips\n        deliverAt: $deliverAt\n      }\n    ) {\n      userErrors\n      gopayUrl\n    }\n  }\n`\n\nexport function useMSubmitOrder(\n  baseOptions?: Hooks.MutationHookOptions<\n    MSubmitOrderMutation,\n    MSubmitOrderVariables\n  >,\n) {\n  return Hooks.useMutation<MSubmitOrderMutation, MSubmitOrderVariables>(\n    MSubmitOrderDocument,\n    baseOptions,\n  )\n}\n\nexport const QOrderFormDocument = gql`\n  query QOrderForm($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      countWares\n      orderStateCategory\n    }\n  }\n`\n\nexport function useQOrderForm(\n  variables?: QOrderFormVariables,\n  baseOptions?: Hooks.QueryHookOptions<QOrderFormQuery, QOrderFormVariables>,\n) {\n  return Hooks.useQuery<QOrderFormQuery, QOrderFormVariables>(\n    QOrderFormDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQOrderForm(\n  options?: Hooks.LazyQueryHookOptions<QOrderFormQuery, QOrderFormVariables>,\n) {\n  return Hooks.useLazyQuery<QOrderFormQuery, QOrderFormVariables>(\n    QOrderFormDocument,\n    options,\n  )\n}\n\nexport const QOrderFormAgreementsDocument = gql`\n  query QOrderFormAgreements($input: InputVamStatus!) {\n    agreements: vamStatus(input: $input) {\n      id\n      name\n      description\n      isConfirmed\n      isMandatory\n    }\n  }\n`\n\nexport function useQOrderFormAgreements(\n  variables?: QOrderFormAgreementsVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QOrderFormAgreementsQuery,\n    QOrderFormAgreementsVariables\n  >,\n) {\n  return Hooks.useQuery<\n    QOrderFormAgreementsQuery,\n    QOrderFormAgreementsVariables\n  >(QOrderFormAgreementsDocument, variables, baseOptions)\n}\n\nexport function useLazyQOrderFormAgreements(\n  options?: Hooks.LazyQueryHookOptions<\n    QOrderFormAgreementsQuery,\n    QOrderFormAgreementsVariables\n  >,\n) {\n  return Hooks.useLazyQuery<\n    QOrderFormAgreementsQuery,\n    QOrderFormAgreementsVariables\n  >(QOrderFormAgreementsDocument, options)\n}\n\nexport const QOrderPaymentStatusDocument = gql`\n  query QOrderPaymentStatus($orderId: ID!) {\n    status: orderOnlinePaymentStatus(id: $orderId) {\n      isSuccess\n      userErrors\n    }\n  }\n`\n\nexport function useQOrderPaymentStatus(\n  variables?: QOrderPaymentStatusVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QOrderPaymentStatusQuery,\n    QOrderPaymentStatusVariables\n  >,\n) {\n  return Hooks.useQuery<QOrderPaymentStatusQuery, QOrderPaymentStatusVariables>(\n    QOrderPaymentStatusDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQOrderPaymentStatus(\n  options?: Hooks.LazyQueryHookOptions<\n    QOrderPaymentStatusQuery,\n    QOrderPaymentStatusVariables\n  >,\n) {\n  return Hooks.useLazyQuery<\n    QOrderPaymentStatusQuery,\n    QOrderPaymentStatusVariables\n  >(QOrderPaymentStatusDocument, options)\n}\n\nexport const QOrderPromoCodesDocument = gql`\n  query QOrderPromoCodes($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      promoCodes {\n        ...FPromoCode\n      }\n    }\n  }\n\n  ${FPromoCodeFragmentDoc}\n`\n\nexport function useQOrderPromoCodes(\n  variables?: QOrderPromoCodesVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QOrderPromoCodesQuery,\n    QOrderPromoCodesVariables\n  >,\n) {\n  return Hooks.useQuery<QOrderPromoCodesQuery, QOrderPromoCodesVariables>(\n    QOrderPromoCodesDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQOrderPromoCodes(\n  options?: Hooks.LazyQueryHookOptions<\n    QOrderPromoCodesQuery,\n    QOrderPromoCodesVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QOrderPromoCodesQuery, QOrderPromoCodesVariables>(\n    QOrderPromoCodesDocument,\n    options,\n  )\n}\n\nexport const QShopHeaderBranchDocument = gql`\n  query QShopHeaderBranch($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      address {\n        ...FAddress\n      }\n      ...FShopOpeningHours\n      ...FCompanyBranchStatus\n    }\n  }\n\n  ${FAddressFragmentDoc}\n  ${FShopOpeningHoursFragmentDoc}\n  ${FCompanyBranchStatusFragmentDoc}\n`\n\nexport function useQShopHeaderBranch(\n  variables?: QShopHeaderBranchVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QShopHeaderBranchQuery,\n    QShopHeaderBranchVariables\n  >,\n) {\n  return Hooks.useQuery<QShopHeaderBranchQuery, QShopHeaderBranchVariables>(\n    QShopHeaderBranchDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQShopHeaderBranch(\n  options?: Hooks.LazyQueryHookOptions<\n    QShopHeaderBranchQuery,\n    QShopHeaderBranchVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QShopHeaderBranchQuery, QShopHeaderBranchVariables>(\n    QShopHeaderBranchDocument,\n    options,\n  )\n}\n\nexport const QShopHeaderIntroDocument = gql`\n  query QShopHeaderIntro($brandId: ID, $branchId: ID) {\n    intro: applicationSettings(brand: $brandId, companyBranch: $branchId) {\n      headerText\n      homepageUrl\n    }\n  }\n`\n\nexport function useQShopHeaderIntro(\n  variables?: QShopHeaderIntroVariables,\n  baseOptions?: Hooks.QueryHookOptions<\n    QShopHeaderIntroQuery,\n    QShopHeaderIntroVariables\n  >,\n) {\n  return Hooks.useQuery<QShopHeaderIntroQuery, QShopHeaderIntroVariables>(\n    QShopHeaderIntroDocument,\n    variables,\n    baseOptions,\n  )\n}\n\nexport function useLazyQShopHeaderIntro(\n  options?: Hooks.LazyQueryHookOptions<\n    QShopHeaderIntroQuery,\n    QShopHeaderIntroVariables\n  >,\n) {\n  return Hooks.useLazyQuery<QShopHeaderIntroQuery, QShopHeaderIntroVariables>(\n    QShopHeaderIntroDocument,\n    options,\n  )\n}\n\n// Generated in 2019-11-14T08:31:23+01:00\n","var map = {\n\t\"./_lib/buildFormatLongFn/index.js\": [\n\t\t733,\n\t\t2\n\t],\n\t\"./_lib/buildLocalizeFn/index.js\": [\n\t\t732,\n\t\t3\n\t],\n\t\"./_lib/buildMatchFn/index.js\": [\n\t\t734,\n\t\t114\n\t],\n\t\"./_lib/buildMatchPatternFn/index.js\": [\n\t\t735,\n\t\t224\n\t],\n\t\"./af/_lib/formatDistance/index.js\": [\n\t\t742,\n\t\t257\n\t],\n\t\"./af/_lib/formatLong/index.js\": [\n\t\t743,\n\t\t268\n\t],\n\t\"./af/_lib/formatRelative/index.js\": [\n\t\t744,\n\t\t279\n\t],\n\t\"./af/_lib/localize/index.js\": [\n\t\t745,\n\t\t290\n\t],\n\t\"./af/_lib/match/index.js\": [\n\t\t746,\n\t\t301\n\t],\n\t\"./af/index.js\": [\n\t\t999,\n\t\t312\n\t],\n\t\"./ar-DZ/_lib/formatDistance/index.js\": [\n\t\t747,\n\t\t4\n\t],\n\t\"./ar-DZ/_lib/formatLong/index.js\": [\n\t\t748,\n\t\t15\n\t],\n\t\"./ar-DZ/_lib/formatRelative/index.js\": [\n\t\t749,\n\t\t26\n\t],\n\t\"./ar-DZ/_lib/localize/index.js\": [\n\t\t750,\n\t\t37\n\t],\n\t\"./ar-DZ/_lib/match/index.js\": [\n\t\t751,\n\t\t48\n\t],\n\t\"./ar-DZ/index.js\": [\n\t\t1000,\n\t\t59\n\t],\n\t\"./ar-SA/_lib/formatDistance/index.js\": [\n\t\t752,\n\t\t70\n\t],\n\t\"./ar-SA/_lib/formatLong/index.js\": [\n\t\t753,\n\t\t81\n\t],\n\t\"./ar-SA/_lib/formatRelative/index.js\": [\n\t\t754,\n\t\t92\n\t],\n\t\"./ar-SA/_lib/localize/index.js\": [\n\t\t755,\n\t\t103\n\t],\n\t\"./ar-SA/_lib/match/index.js\": [\n\t\t756,\n\t\t115\n\t],\n\t\"./ar-SA/index.js\": [\n\t\t1001,\n\t\t126\n\t],\n\t\"./be/_lib/formatDistance/index.js\": [\n\t\t757,\n\t\t137\n\t],\n\t\"./be/_lib/formatLong/index.js\": [\n\t\t758,\n\t\t148\n\t],\n\t\"./be/_lib/formatRelative/index.js\": [\n\t\t759,\n\t\t159\n\t],\n\t\"./be/_lib/localize/index.js\": [\n\t\t760,\n\t\t170\n\t],\n\t\"./be/_lib/match/index.js\": [\n\t\t761,\n\t\t181\n\t],\n\t\"./be/index.js\": [\n\t\t1002,\n\t\t332\n\t],\n\t\"./bn/_lib/formatDistance/index.js\": [\n\t\t762,\n\t\t202\n\t],\n\t\"./bn/_lib/formatLong/index.js\": [\n\t\t763,\n\t\t213\n\t],\n\t\"./bn/_lib/formatRelative/index.js\": [\n\t\t764,\n\t\t225\n\t],\n\t\"./bn/_lib/localize/index.js\": [\n\t\t740,\n\t\t236\n\t],\n\t\"./bn/_lib/match/index.js\": [\n\t\t765,\n\t\t247\n\t],\n\t\"./bn/index.js\": [\n\t\t1003,\n\t\t250\n\t],\n\t\"./ca/_lib/formatDistance/index.js\": [\n\t\t766,\n\t\t251\n\t],\n\t\"./ca/_lib/formatLong/index.js\": [\n\t\t767,\n\t\t252\n\t],\n\t\"./ca/_lib/formatRelative/index.js\": [\n\t\t768,\n\t\t253\n\t],\n\t\"./ca/_lib/localize/index.js\": [\n\t\t769,\n\t\t254\n\t],\n\t\"./ca/_lib/match/index.js\": [\n\t\t770,\n\t\t255\n\t],\n\t\"./ca/index.js\": [\n\t\t1004,\n\t\t256\n\t],\n\t\"./cs/_lib/formatDistance/index.js\": [\n\t\t771,\n\t\t258\n\t],\n\t\"./cs/_lib/formatLong/index.js\": [\n\t\t772,\n\t\t259\n\t],\n\t\"./cs/_lib/formatRelative/index.js\": [\n\t\t773,\n\t\t260\n\t],\n\t\"./cs/_lib/localize/index.js\": [\n\t\t774,\n\t\t261\n\t],\n\t\"./cs/_lib/match/index.js\": [\n\t\t775,\n\t\t262\n\t],\n\t\"./cs/index.js\": [\n\t\t1005,\n\t\t263\n\t],\n\t\"./cy/_lib/formatDistance/index.js\": [\n\t\t776,\n\t\t264\n\t],\n\t\"./cy/_lib/formatLong/index.js\": [\n\t\t777,\n\t\t265\n\t],\n\t\"./cy/_lib/formatRelative/index.js\": [\n\t\t778,\n\t\t266\n\t],\n\t\"./cy/_lib/localize/index.js\": [\n\t\t779,\n\t\t267\n\t],\n\t\"./cy/_lib/match/index.js\": [\n\t\t780,\n\t\t269\n\t],\n\t\"./cy/index.js\": [\n\t\t1006,\n\t\t270\n\t],\n\t\"./da/_lib/formatDistance/index.js\": [\n\t\t781,\n\t\t271\n\t],\n\t\"./da/_lib/formatLong/index.js\": [\n\t\t782,\n\t\t272\n\t],\n\t\"./da/_lib/formatRelative/index.js\": [\n\t\t783,\n\t\t273\n\t],\n\t\"./da/_lib/localize/index.js\": [\n\t\t784,\n\t\t274\n\t],\n\t\"./da/_lib/match/index.js\": [\n\t\t785,\n\t\t275\n\t],\n\t\"./da/index.js\": [\n\t\t1007,\n\t\t276\n\t],\n\t\"./de/_lib/formatDistance/index.js\": [\n\t\t786,\n\t\t277\n\t],\n\t\"./de/_lib/formatLong/index.js\": [\n\t\t787,\n\t\t278\n\t],\n\t\"./de/_lib/formatRelative/index.js\": [\n\t\t788,\n\t\t280\n\t],\n\t\"./de/_lib/localize/index.js\": [\n\t\t789,\n\t\t281\n\t],\n\t\"./de/_lib/match/index.js\": [\n\t\t790,\n\t\t282\n\t],\n\t\"./de/index.js\": [\n\t\t1008,\n\t\t283\n\t],\n\t\"./el/_lib/formatDistance/index.js\": [\n\t\t791,\n\t\t284\n\t],\n\t\"./el/_lib/formatLong/index.js\": [\n\t\t792,\n\t\t285\n\t],\n\t\"./el/_lib/formatRelative/index.js\": [\n\t\t793,\n\t\t286\n\t],\n\t\"./el/_lib/localize/index.js\": [\n\t\t794,\n\t\t287\n\t],\n\t\"./el/_lib/match/index.js\": [\n\t\t795,\n\t\t288\n\t],\n\t\"./el/index.js\": [\n\t\t1009,\n\t\t289\n\t],\n\t\"./en-CA/_lib/formatDistance/index.js\": [\n\t\t796,\n\t\t291\n\t],\n\t\"./en-CA/_lib/formatLong/index.js\": [\n\t\t797,\n\t\t292\n\t],\n\t\"./en-CA/index.js\": [\n\t\t1010,\n\t\t293\n\t],\n\t\"./en-GB/_lib/formatLong/index.js\": [\n\t\t798,\n\t\t294\n\t],\n\t\"./en-GB/index.js\": [\n\t\t1011,\n\t\t295\n\t],\n\t\"./en-US/_lib/formatDistance/index.js\": [\n\t\t741,\n\t\t296\n\t],\n\t\"./en-US/_lib/formatLong/index.js\": [\n\t\t799,\n\t\t297\n\t],\n\t\"./en-US/_lib/formatRelative/index.js\": [\n\t\t737,\n\t\t298\n\t],\n\t\"./en-US/_lib/localize/index.js\": [\n\t\t738,\n\t\t299\n\t],\n\t\"./en-US/_lib/match/index.js\": [\n\t\t739,\n\t\t300\n\t],\n\t\"./en-US/index.js\": [\n\t\t1012,\n\t\t302\n\t],\n\t\"./eo/_lib/formatDistance/index.js\": [\n\t\t800,\n\t\t303\n\t],\n\t\"./eo/_lib/formatLong/index.js\": [\n\t\t801,\n\t\t304\n\t],\n\t\"./eo/_lib/formatRelative/index.js\": [\n\t\t802,\n\t\t305\n\t],\n\t\"./eo/_lib/localize/index.js\": [\n\t\t803,\n\t\t306\n\t],\n\t\"./eo/_lib/match/index.js\": [\n\t\t804,\n\t\t307\n\t],\n\t\"./eo/index.js\": [\n\t\t1013,\n\t\t308\n\t],\n\t\"./es/_lib/formatDistance/index.js\": [\n\t\t805,\n\t\t309\n\t],\n\t\"./es/_lib/formatLong/index.js\": [\n\t\t806,\n\t\t310\n\t],\n\t\"./es/_lib/formatRelative/index.js\": [\n\t\t807,\n\t\t311\n\t],\n\t\"./es/_lib/localize/index.js\": [\n\t\t808,\n\t\t313\n\t],\n\t\"./es/_lib/match/index.js\": [\n\t\t809,\n\t\t314\n\t],\n\t\"./es/index.js\": [\n\t\t1014,\n\t\t315\n\t],\n\t\"./et/_lib/formatDistance/index.js\": [\n\t\t810,\n\t\t316\n\t],\n\t\"./et/_lib/formatLong/index.js\": [\n\t\t811,\n\t\t317\n\t],\n\t\"./et/_lib/formatRelative/index.js\": [\n\t\t812,\n\t\t318\n\t],\n\t\"./et/_lib/localize/index.js\": [\n\t\t813,\n\t\t319\n\t],\n\t\"./et/_lib/match/index.js\": [\n\t\t814,\n\t\t320\n\t],\n\t\"./et/index.js\": [\n\t\t1015,\n\t\t321\n\t],\n\t\"./fa-IR/_lib/formatDistance/index.js\": [\n\t\t815,\n\t\t322\n\t],\n\t\"./fa-IR/_lib/formatLong/index.js\": [\n\t\t816,\n\t\t5\n\t],\n\t\"./fa-IR/_lib/formatRelative/index.js\": [\n\t\t817,\n\t\t6\n\t],\n\t\"./fa-IR/_lib/localize/index.js\": [\n\t\t818,\n\t\t7\n\t],\n\t\"./fa-IR/_lib/match/index.js\": [\n\t\t819,\n\t\t8\n\t],\n\t\"./fa-IR/index.js\": [\n\t\t1016,\n\t\t9\n\t],\n\t\"./fi/_lib/formatDistance/index.js\": [\n\t\t820,\n\t\t10\n\t],\n\t\"./fi/_lib/formatLong/index.js\": [\n\t\t821,\n\t\t11\n\t],\n\t\"./fi/_lib/formatRelative/index.js\": [\n\t\t822,\n\t\t12\n\t],\n\t\"./fi/_lib/localize/index.js\": [\n\t\t823,\n\t\t13\n\t],\n\t\"./fi/_lib/match/index.js\": [\n\t\t824,\n\t\t14\n\t],\n\t\"./fi/index.js\": [\n\t\t1017,\n\t\t16\n\t],\n\t\"./fr/_lib/formatDistance/index.js\": [\n\t\t825,\n\t\t17\n\t],\n\t\"./fr/_lib/formatLong/index.js\": [\n\t\t826,\n\t\t18\n\t],\n\t\"./fr/_lib/formatRelative/index.js\": [\n\t\t827,\n\t\t19\n\t],\n\t\"./fr/_lib/formatters/index.js\": [\n\t\t1018,\n\t\t20\n\t],\n\t\"./fr/_lib/localize/index.js\": [\n\t\t828,\n\t\t21\n\t],\n\t\"./fr/_lib/match/index.js\": [\n\t\t829,\n\t\t22\n\t],\n\t\"./fr/index.js\": [\n\t\t1019,\n\t\t23\n\t],\n\t\"./gl/_lib/formatDistance/index.js\": [\n\t\t830,\n\t\t24\n\t],\n\t\"./gl/_lib/formatLong/index.js\": [\n\t\t831,\n\t\t25\n\t],\n\t\"./gl/_lib/formatRelative/index.js\": [\n\t\t832,\n\t\t27\n\t],\n\t\"./gl/_lib/localize/index.js\": [\n\t\t833,\n\t\t28\n\t],\n\t\"./gl/_lib/match/index.js\": [\n\t\t834,\n\t\t29\n\t],\n\t\"./gl/index.js\": [\n\t\t1020,\n\t\t30\n\t],\n\t\"./gu/_lib/formatDistance/index.js\": [\n\t\t835,\n\t\t31\n\t],\n\t\"./gu/_lib/formatLong/index.js\": [\n\t\t836,\n\t\t32\n\t],\n\t\"./gu/_lib/formatRelative/index.js\": [\n\t\t837,\n\t\t33\n\t],\n\t\"./gu/_lib/localize/index.js\": [\n\t\t838,\n\t\t34\n\t],\n\t\"./gu/_lib/match/index.js\": [\n\t\t839,\n\t\t35\n\t],\n\t\"./gu/index.js\": [\n\t\t1021,\n\t\t36\n\t],\n\t\"./he/_lib/formatDistance/index.js\": [\n\t\t840,\n\t\t38\n\t],\n\t\"./he/_lib/formatLong/index.js\": [\n\t\t841,\n\t\t39\n\t],\n\t\"./he/_lib/formatRelative/index.js\": [\n\t\t842,\n\t\t40\n\t],\n\t\"./he/_lib/localize/index.js\": [\n\t\t843,\n\t\t41\n\t],\n\t\"./he/_lib/match/index.js\": [\n\t\t844,\n\t\t42\n\t],\n\t\"./he/index.js\": [\n\t\t1022,\n\t\t43\n\t],\n\t\"./hi/_lib/formatDistance/index.js\": [\n\t\t845,\n\t\t44\n\t],\n\t\"./hi/_lib/formatLong/index.js\": [\n\t\t846,\n\t\t45\n\t],\n\t\"./hi/_lib/formatRelative/index.js\": [\n\t\t847,\n\t\t46\n\t],\n\t\"./hi/_lib/localize/index.js\": [\n\t\t736,\n\t\t47\n\t],\n\t\"./hi/_lib/match/index.js\": [\n\t\t848,\n\t\t49\n\t],\n\t\"./hi/index.js\": [\n\t\t1023,\n\t\t50\n\t],\n\t\"./hr/_lib/formatDistance/index.js\": [\n\t\t849,\n\t\t51\n\t],\n\t\"./hr/_lib/formatLong/index.js\": [\n\t\t850,\n\t\t52\n\t],\n\t\"./hr/_lib/formatRelative/index.js\": [\n\t\t851,\n\t\t53\n\t],\n\t\"./hr/_lib/localize/index.js\": [\n\t\t852,\n\t\t54\n\t],\n\t\"./hr/_lib/match/index.js\": [\n\t\t853,\n\t\t55\n\t],\n\t\"./hr/index.js\": [\n\t\t1024,\n\t\t56\n\t],\n\t\"./hu/_lib/formatDistance/index.js\": [\n\t\t854,\n\t\t57\n\t],\n\t\"./hu/_lib/formatLong/index.js\": [\n\t\t855,\n\t\t58\n\t],\n\t\"./hu/_lib/formatRelative/index.js\": [\n\t\t856,\n\t\t60\n\t],\n\t\"./hu/_lib/localize/index.js\": [\n\t\t857,\n\t\t61\n\t],\n\t\"./hu/_lib/match/index.js\": [\n\t\t858,\n\t\t62\n\t],\n\t\"./hu/index.js\": [\n\t\t1025,\n\t\t63\n\t],\n\t\"./hy/_lib/formatDistance/index.js\": [\n\t\t859,\n\t\t64\n\t],\n\t\"./hy/_lib/formatLong/index.js\": [\n\t\t860,\n\t\t65\n\t],\n\t\"./hy/_lib/formatRelative/index.js\": [\n\t\t861,\n\t\t66\n\t],\n\t\"./hy/_lib/localize/index.js\": [\n\t\t862,\n\t\t67\n\t],\n\t\"./hy/_lib/match/index.js\": [\n\t\t863,\n\t\t68\n\t],\n\t\"./hy/index.js\": [\n\t\t1026,\n\t\t69\n\t],\n\t\"./id/_lib/formatDistance/index.js\": [\n\t\t864,\n\t\t71\n\t],\n\t\"./id/_lib/formatLong/index.js\": [\n\t\t865,\n\t\t72\n\t],\n\t\"./id/_lib/formatRelative/index.js\": [\n\t\t866,\n\t\t73\n\t],\n\t\"./id/_lib/localize/index.js\": [\n\t\t867,\n\t\t74\n\t],\n\t\"./id/_lib/match/index.js\": [\n\t\t868,\n\t\t75\n\t],\n\t\"./id/index.js\": [\n\t\t1027,\n\t\t76\n\t],\n\t\"./is/_lib/formatDistance/index.js\": [\n\t\t869,\n\t\t77\n\t],\n\t\"./is/_lib/formatLong/index.js\": [\n\t\t870,\n\t\t78\n\t],\n\t\"./is/_lib/formatRelative/index.js\": [\n\t\t871,\n\t\t79\n\t],\n\t\"./is/_lib/localize/index.js\": [\n\t\t872,\n\t\t80\n\t],\n\t\"./is/_lib/match/index.js\": [\n\t\t873,\n\t\t82\n\t],\n\t\"./is/index.js\": [\n\t\t1028,\n\t\t83\n\t],\n\t\"./it/_lib/formatDistance/index.js\": [\n\t\t874,\n\t\t84\n\t],\n\t\"./it/_lib/formatLong/index.js\": [\n\t\t875,\n\t\t85\n\t],\n\t\"./it/_lib/formatRelative/index.js\": [\n\t\t876,\n\t\t86\n\t],\n\t\"./it/_lib/localize/index.js\": [\n\t\t877,\n\t\t87\n\t],\n\t\"./it/_lib/match/index.js\": [\n\t\t878,\n\t\t88\n\t],\n\t\"./it/index.js\": [\n\t\t1029,\n\t\t89\n\t],\n\t\"./ja/_lib/formatDistance/index.js\": [\n\t\t879,\n\t\t90\n\t],\n\t\"./ja/_lib/formatLong/index.js\": [\n\t\t880,\n\t\t91\n\t],\n\t\"./ja/_lib/formatRelative/index.js\": [\n\t\t881,\n\t\t93\n\t],\n\t\"./ja/_lib/localize/index.js\": [\n\t\t882,\n\t\t94\n\t],\n\t\"./ja/_lib/match/index.js\": [\n\t\t883,\n\t\t95\n\t],\n\t\"./ja/index.js\": [\n\t\t1030,\n\t\t96\n\t],\n\t\"./ka/_lib/formatDistance/index.js\": [\n\t\t884,\n\t\t97\n\t],\n\t\"./ka/_lib/formatLong/index.js\": [\n\t\t885,\n\t\t98\n\t],\n\t\"./ka/_lib/formatRelative/index.js\": [\n\t\t886,\n\t\t99\n\t],\n\t\"./ka/_lib/localize/index.js\": [\n\t\t887,\n\t\t100\n\t],\n\t\"./ka/_lib/match/index.js\": [\n\t\t888,\n\t\t101\n\t],\n\t\"./ka/index.js\": [\n\t\t1031,\n\t\t102\n\t],\n\t\"./ko/_lib/formatDistance/index.js\": [\n\t\t889,\n\t\t104\n\t],\n\t\"./ko/_lib/formatLong/index.js\": [\n\t\t890,\n\t\t105\n\t],\n\t\"./ko/_lib/formatRelative/index.js\": [\n\t\t891,\n\t\t106\n\t],\n\t\"./ko/_lib/localize/index.js\": [\n\t\t892,\n\t\t107\n\t],\n\t\"./ko/_lib/match/index.js\": [\n\t\t893,\n\t\t108\n\t],\n\t\"./ko/index.js\": [\n\t\t1032,\n\t\t109\n\t],\n\t\"./lt/_lib/formatDistance/index.js\": [\n\t\t894,\n\t\t110\n\t],\n\t\"./lt/_lib/formatLong/index.js\": [\n\t\t895,\n\t\t111\n\t],\n\t\"./lt/_lib/formatRelative/index.js\": [\n\t\t896,\n\t\t112\n\t],\n\t\"./lt/_lib/localize/index.js\": [\n\t\t897,\n\t\t113\n\t],\n\t\"./lt/_lib/match/index.js\": [\n\t\t898,\n\t\t116\n\t],\n\t\"./lt/index.js\": [\n\t\t1033,\n\t\t117\n\t],\n\t\"./lv/_lib/formatDistance/index.js\": [\n\t\t899,\n\t\t118\n\t],\n\t\"./lv/_lib/formatLong/index.js\": [\n\t\t900,\n\t\t119\n\t],\n\t\"./lv/_lib/formatRelative/index.js\": [\n\t\t901,\n\t\t120\n\t],\n\t\"./lv/_lib/localize/index.js\": [\n\t\t902,\n\t\t121\n\t],\n\t\"./lv/_lib/match/index.js\": [\n\t\t903,\n\t\t122\n\t],\n\t\"./lv/index.js\": [\n\t\t1034,\n\t\t123\n\t],\n\t\"./nb/_lib/formatDistance/index.js\": [\n\t\t904,\n\t\t124\n\t],\n\t\"./nb/_lib/formatLong/index.js\": [\n\t\t905,\n\t\t125\n\t],\n\t\"./nb/_lib/formatRelative/index.js\": [\n\t\t906,\n\t\t127\n\t],\n\t\"./nb/_lib/localize/index.js\": [\n\t\t907,\n\t\t128\n\t],\n\t\"./nb/_lib/match/index.js\": [\n\t\t908,\n\t\t129\n\t],\n\t\"./nb/index.js\": [\n\t\t1035,\n\t\t130\n\t],\n\t\"./nl/_lib/formatDistance/index.js\": [\n\t\t909,\n\t\t131\n\t],\n\t\"./nl/_lib/formatLong/index.js\": [\n\t\t910,\n\t\t132\n\t],\n\t\"./nl/_lib/formatRelative/index.js\": [\n\t\t911,\n\t\t133\n\t],\n\t\"./nl/_lib/localize/index.js\": [\n\t\t912,\n\t\t134\n\t],\n\t\"./nl/_lib/match/index.js\": [\n\t\t913,\n\t\t135\n\t],\n\t\"./nl/index.js\": [\n\t\t1036,\n\t\t136\n\t],\n\t\"./nn/_lib/formatDistance/index.js\": [\n\t\t914,\n\t\t138\n\t],\n\t\"./nn/_lib/formatLong/index.js\": [\n\t\t915,\n\t\t139\n\t],\n\t\"./nn/_lib/formatRelative/index.js\": [\n\t\t916,\n\t\t140\n\t],\n\t\"./nn/_lib/localize/index.js\": [\n\t\t917,\n\t\t141\n\t],\n\t\"./nn/_lib/match/index.js\": [\n\t\t918,\n\t\t142\n\t],\n\t\"./nn/index.js\": [\n\t\t1037,\n\t\t143\n\t],\n\t\"./pl/_lib/formatDistance/index.js\": [\n\t\t919,\n\t\t144\n\t],\n\t\"./pl/_lib/formatLong/index.js\": [\n\t\t920,\n\t\t145\n\t],\n\t\"./pl/_lib/formatRelative/index.js\": [\n\t\t921,\n\t\t146\n\t],\n\t\"./pl/_lib/localize/index.js\": [\n\t\t922,\n\t\t147\n\t],\n\t\"./pl/_lib/match/index.js\": [\n\t\t923,\n\t\t149\n\t],\n\t\"./pl/index.js\": [\n\t\t1038,\n\t\t150\n\t],\n\t\"./pt-BR/_lib/formatDistance/index.js\": [\n\t\t929,\n\t\t157\n\t],\n\t\"./pt-BR/_lib/formatLong/index.js\": [\n\t\t930,\n\t\t158\n\t],\n\t\"./pt-BR/_lib/formatRelative/index.js\": [\n\t\t931,\n\t\t160\n\t],\n\t\"./pt-BR/_lib/localize/index.js\": [\n\t\t932,\n\t\t161\n\t],\n\t\"./pt-BR/_lib/match/index.js\": [\n\t\t933,\n\t\t162\n\t],\n\t\"./pt-BR/index.js\": [\n\t\t1040,\n\t\t163\n\t],\n\t\"./pt/_lib/formatDistance/index.js\": [\n\t\t924,\n\t\t151\n\t],\n\t\"./pt/_lib/formatLong/index.js\": [\n\t\t925,\n\t\t152\n\t],\n\t\"./pt/_lib/formatRelative/index.js\": [\n\t\t926,\n\t\t153\n\t],\n\t\"./pt/_lib/localize/index.js\": [\n\t\t927,\n\t\t154\n\t],\n\t\"./pt/_lib/match/index.js\": [\n\t\t928,\n\t\t155\n\t],\n\t\"./pt/index.js\": [\n\t\t1039,\n\t\t156\n\t],\n\t\"./ro/_lib/formatDistance/index.js\": [\n\t\t934,\n\t\t164\n\t],\n\t\"./ro/_lib/formatLong/index.js\": [\n\t\t935,\n\t\t165\n\t],\n\t\"./ro/_lib/formatRelative/index.js\": [\n\t\t936,\n\t\t166\n\t],\n\t\"./ro/_lib/localize/index.js\": [\n\t\t937,\n\t\t167\n\t],\n\t\"./ro/_lib/match/index.js\": [\n\t\t938,\n\t\t168\n\t],\n\t\"./ro/index.js\": [\n\t\t1041,\n\t\t169\n\t],\n\t\"./ru/_lib/formatDistance/index.js\": [\n\t\t939,\n\t\t171\n\t],\n\t\"./ru/_lib/formatLong/index.js\": [\n\t\t940,\n\t\t172\n\t],\n\t\"./ru/_lib/formatRelative/index.js\": [\n\t\t941,\n\t\t173\n\t],\n\t\"./ru/_lib/localize/index.js\": [\n\t\t942,\n\t\t174\n\t],\n\t\"./ru/_lib/match/index.js\": [\n\t\t943,\n\t\t175\n\t],\n\t\"./ru/index.js\": [\n\t\t1042,\n\t\t176\n\t],\n\t\"./sk/_lib/formatDistance/index.js\": [\n\t\t944,\n\t\t177\n\t],\n\t\"./sk/_lib/formatLong/index.js\": [\n\t\t945,\n\t\t178\n\t],\n\t\"./sk/_lib/formatRelative/index.js\": [\n\t\t946,\n\t\t179\n\t],\n\t\"./sk/_lib/localize/index.js\": [\n\t\t947,\n\t\t180\n\t],\n\t\"./sk/_lib/match/index.js\": [\n\t\t948,\n\t\t182\n\t],\n\t\"./sk/index.js\": [\n\t\t1043,\n\t\t183\n\t],\n\t\"./sl/_lib/formatDistance/index.js\": [\n\t\t949,\n\t\t184\n\t],\n\t\"./sl/_lib/formatLong/index.js\": [\n\t\t950,\n\t\t185\n\t],\n\t\"./sl/_lib/formatRelative/index.js\": [\n\t\t951,\n\t\t186\n\t],\n\t\"./sl/_lib/localize/index.js\": [\n\t\t952,\n\t\t187\n\t],\n\t\"./sl/_lib/match/index.js\": [\n\t\t953,\n\t\t188\n\t],\n\t\"./sl/index.js\": [\n\t\t1044,\n\t\t189\n\t],\n\t\"./sv/_lib/formatDistance/index.js\": [\n\t\t954,\n\t\t190\n\t],\n\t\"./sv/_lib/formatLong/index.js\": [\n\t\t955,\n\t\t191\n\t],\n\t\"./sv/_lib/formatRelative/index.js\": [\n\t\t956,\n\t\t192\n\t],\n\t\"./sv/_lib/localize/index.js\": [\n\t\t957,\n\t\t193\n\t],\n\t\"./sv/_lib/match/index.js\": [\n\t\t958,\n\t\t194\n\t],\n\t\"./sv/index.js\": [\n\t\t1045,\n\t\t195\n\t],\n\t\"./ta/_lib/formatDistance/index.js\": [\n\t\t959,\n\t\t196\n\t],\n\t\"./ta/_lib/formatLong/index.js\": [\n\t\t960,\n\t\t197\n\t],\n\t\"./ta/_lib/formatRelative/index.js\": [\n\t\t961,\n\t\t198\n\t],\n\t\"./ta/_lib/localize/index.js\": [\n\t\t962,\n\t\t199\n\t],\n\t\"./ta/_lib/match/index.js\": [\n\t\t963,\n\t\t200\n\t],\n\t\"./ta/index.js\": [\n\t\t1046,\n\t\t201\n\t],\n\t\"./th/_lib/formatDistance/index.js\": [\n\t\t964,\n\t\t203\n\t],\n\t\"./th/_lib/formatLong/index.js\": [\n\t\t965,\n\t\t204\n\t],\n\t\"./th/_lib/formatRelative/index.js\": [\n\t\t966,\n\t\t205\n\t],\n\t\"./th/_lib/localize/index.js\": [\n\t\t967,\n\t\t206\n\t],\n\t\"./th/_lib/match/index.js\": [\n\t\t968,\n\t\t207\n\t],\n\t\"./th/index.js\": [\n\t\t1047,\n\t\t208\n\t],\n\t\"./tr/_lib/formatDistance/index.js\": [\n\t\t969,\n\t\t209\n\t],\n\t\"./tr/_lib/formatLong/index.js\": [\n\t\t970,\n\t\t210\n\t],\n\t\"./tr/_lib/formatRelative/index.js\": [\n\t\t971,\n\t\t211\n\t],\n\t\"./tr/_lib/localize/index.js\": [\n\t\t972,\n\t\t212\n\t],\n\t\"./tr/_lib/match/index.js\": [\n\t\t973,\n\t\t214\n\t],\n\t\"./tr/index.js\": [\n\t\t1048,\n\t\t215\n\t],\n\t\"./ug/_lib/formatDistance/index.js\": [\n\t\t974,\n\t\t216\n\t],\n\t\"./ug/_lib/formatLong/index.js\": [\n\t\t975,\n\t\t217\n\t],\n\t\"./ug/_lib/formatRelative/index.js\": [\n\t\t976,\n\t\t218\n\t],\n\t\"./ug/_lib/localize/index.js\": [\n\t\t977,\n\t\t219\n\t],\n\t\"./ug/_lib/match/index.js\": [\n\t\t978,\n\t\t220\n\t],\n\t\"./ug/index.js\": [\n\t\t1049,\n\t\t221\n\t],\n\t\"./uk/_lib/formatDistance/index.js\": [\n\t\t979,\n\t\t222\n\t],\n\t\"./uk/_lib/formatLong/index.js\": [\n\t\t980,\n\t\t223\n\t],\n\t\"./uk/_lib/formatRelative/index.js\": [\n\t\t981,\n\t\t226\n\t],\n\t\"./uk/_lib/localize/index.js\": [\n\t\t982,\n\t\t227\n\t],\n\t\"./uk/_lib/match/index.js\": [\n\t\t983,\n\t\t228\n\t],\n\t\"./uk/index.js\": [\n\t\t1050,\n\t\t229\n\t],\n\t\"./vi/_lib/formatDistance/index.js\": [\n\t\t984,\n\t\t230\n\t],\n\t\"./vi/_lib/formatLong/index.js\": [\n\t\t985,\n\t\t231\n\t],\n\t\"./vi/_lib/formatRelative/index.js\": [\n\t\t986,\n\t\t232\n\t],\n\t\"./vi/_lib/localize/index.js\": [\n\t\t987,\n\t\t233\n\t],\n\t\"./vi/_lib/match/index.js\": [\n\t\t988,\n\t\t234\n\t],\n\t\"./vi/index.js\": [\n\t\t1051,\n\t\t235\n\t],\n\t\"./zh-CN/_lib/formatDistance/index.js\": [\n\t\t989,\n\t\t237\n\t],\n\t\"./zh-CN/_lib/formatLong/index.js\": [\n\t\t990,\n\t\t238\n\t],\n\t\"./zh-CN/_lib/formatRelative/index.js\": [\n\t\t991,\n\t\t239\n\t],\n\t\"./zh-CN/_lib/localize/index.js\": [\n\t\t992,\n\t\t240\n\t],\n\t\"./zh-CN/_lib/match/index.js\": [\n\t\t993,\n\t\t241\n\t],\n\t\"./zh-CN/index.js\": [\n\t\t1052,\n\t\t242\n\t],\n\t\"./zh-TW/_lib/formatDistance/index.js\": [\n\t\t994,\n\t\t243\n\t],\n\t\"./zh-TW/_lib/formatLong/index.js\": [\n\t\t995,\n\t\t244\n\t],\n\t\"./zh-TW/_lib/formatRelative/index.js\": [\n\t\t996,\n\t\t245\n\t],\n\t\"./zh-TW/_lib/localize/index.js\": [\n\t\t997,\n\t\t246\n\t],\n\t\"./zh-TW/_lib/match/index.js\": [\n\t\t998,\n\t\t248\n\t],\n\t\"./zh-TW/index.js\": [\n\t\t1053,\n\t\t249\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 538;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./cs/messages.po\": [\n\t\t1054,\n\t\t323\n\t],\n\t\"./de/messages.po\": [\n\t\t1055,\n\t\t324\n\t],\n\t\"./en-dev/messages.po\": [\n\t\t1057,\n\t\t326\n\t],\n\t\"./en/messages.po\": [\n\t\t1056,\n\t\t325\n\t],\n\t\"./pl/messages.po\": [\n\t\t1058,\n\t\t327\n\t],\n\t\"./sk/messages.po\": [\n\t\t1059,\n\t\t328\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 539;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./cs/messages.js\": [\n\t\t1060,\n\t\t323\n\t],\n\t\"./de/messages.js\": [\n\t\t1061,\n\t\t324\n\t],\n\t\"./en-dev/messages.js\": [\n\t\t1063,\n\t\t326\n\t],\n\t\"./en/messages.js\": [\n\t\t1062,\n\t\t325\n\t],\n\t\"./pl/messages.js\": [\n\t\t1064,\n\t\t327\n\t],\n\t\"./sk/messages.js\": [\n\t\t1065,\n\t\t328\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 540;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./cs.svg\": 702,\n\t\"./de.svg\": 703,\n\t\"./en.svg\": 704,\n\t\"./pl.svg\": 705,\n\t\"./sk.svg\": 706\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 701;","var map = {\n\t\"./logo-doveze.svg\": 709,\n\t\"./logo-gopay.svg\": 710,\n\t\"./logo-mastercard.svg\": 711,\n\t\"./logo-visa.svg\": 712\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 708;","import { Trans } from '@lingui/macro'\nimport { ApolloDefender, isNetworkUnreachableError } from '@speedlo/graphql'\nimport { useRouterContext } from '@speedlo/hooks'\nimport { flushSentry, Sentry } from '@speedlo/sentry'\nimport { SillyErrorBoundary } from '@speedlo/tools'\nimport { isApolloError } from 'apollo-client'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\nimport { useAlertModal } from '../hooks/useAlertModal'\nimport { i18n } from '../i18n'\nimport { AlertModal } from './AlertModal'\nimport { PrimaryButton, SecondaryButton } from './Buttons'\n\ninterface IProps {\n  prod: boolean\n}\n\nexport type ErrorKind = 'none' | 'serviceUnreachable' | 'otherError'\n\nconst makeError = (message: string) =>\n  `${message} ${i18n.t`Our team was notified about the issue.`}`\n\nexport const ErrorContainer: React.FC<IProps> = ({\n  children,\n  prod = false,\n}) => {\n  const [errorKind, setErrorKind] = React.useState<ErrorKind>('none')\n  const [alertModal, makeAlert] = useAlertModal()\n\n  const onRetry = React.useCallback(() => {\n    setErrorKind('none')\n  }, [])\n\n  const onUnhandledError = React.useCallback((error: Error) => {\n    if (isChunkError(error)) {\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Debug)\n        Sentry.captureException(error)\n      })\n      flushSentry().then(() => window.location.reload())\n      return\n    }\n    if (isApolloError(error) && isNetworkUnreachableError(error)) {\n      setErrorKind('serviceUnreachable')\n      return\n    }\n    Sentry.captureException(error)\n    setErrorKind('otherError')\n  }, [])\n\n  const onNetworkError = React.useCallback(\n    (error: Error, isUnreachable: boolean) => {\n      if (isUnreachable) {\n        setErrorKind('serviceUnreachable')\n      } else {\n        console.error(error)\n        makeAlert(\n          i18n.t`Service problem`,\n          <div>\n            {makeError(\n              i18n.t`Unexpected error occured in communication with service.`,\n            )}\n          </div>,\n        )\n      }\n    },\n    [makeAlert],\n  )\n\n  const onOperationError = React.useCallback(\n    error => {\n      console.error(error)\n      makeAlert(\n        i18n.t`Communication problem`,\n        <div>\n          {makeError(i18n.t`Unexpected error occured while sending a request.`)}\n        </div>,\n      )\n    },\n    [makeAlert],\n  )\n\n  const onUserErrors = React.useCallback(\n    (messages: ReadonlyArray<string>) => {\n      makeAlert(\n        i18n.t`Problems encountered`,\n        <div>\n          {messages.map(msg => (\n            <div key={msg}>{msg}</div>\n          ))}\n        </div>,\n      )\n    },\n    [makeAlert],\n  )\n\n  const { history } = useRouterContext()\n  const [modalOpen, setModalOpen] = React.useState(true)\n\n  const onFeedback = React.useCallback(() => {\n    setModalOpen(false)\n    showFeedback()\n  }, [])\n\n  const { business } = useRoot()\n\n  const onRestart = React.useCallback(() => {\n    setModalOpen(false)\n    history.replace(business.routerBasePath)\n    window.location.reload()\n  }, [business.routerBasePath, history])\n\n  const render = () => {\n    switch (errorKind) {\n      case 'serviceUnreachable': {\n        return (\n          <AlertModal\n            isOpen={modalOpen}\n            headerText={i18n.t`Service is temporarily unavailable`}\n          >\n            <Trans>\n              Please try again in moment. We apologize for inconvenience.\n            </Trans>\n            <PrimaryButton onClick={onRetry}>\n              <Trans>Try now</Trans>\n            </PrimaryButton>\n          </AlertModal>\n        )\n      }\n      case 'otherError': {\n        return (\n          <AlertModal\n            isOpen={modalOpen}\n            headerText={i18n.t`Unexpected error has occurred`}\n          >\n            <Trans>\n              If you like, please fill out feedback form so we can fix the\n              problem faster. Restart the application otherwise.\n            </Trans>\n            <br />\n            <PrimaryButton onClick={onRestart}>\n              <Trans>Restart application</Trans>\n            </PrimaryButton>\n            <SecondaryButton onClick={onFeedback}>\n              <Trans>Send feedback</Trans>\n            </SecondaryButton>\n          </AlertModal>\n        )\n      }\n      default: {\n        return children\n      }\n    }\n  }\n\n  let errorGuard\n\n  if (prod) {\n    errorGuard = (\n      <SillyErrorBoundary\n        onError={error => {\n          onUnhandledError(error)\n        }}\n      >\n        {render()}\n      </SillyErrorBoundary>\n    )\n  } else {\n    const DeveloperErrorBoundary = require('react-error-guard/lib/DeveloperErrorBoundary')\n      .default\n    errorGuard = <DeveloperErrorBoundary>{render()}</DeveloperErrorBoundary>\n  }\n\n  return (\n    <ApolloDefender\n      onNetworkError={onNetworkError}\n      onOperationError={onOperationError}\n      onUserErrors={onUserErrors}\n    >\n      <>\n        {alertModal}\n        {errorGuard}\n      </>\n    </ApolloDefender>\n  )\n}\n\nfunction isChunkError(error: Error) {\n  return error.message && error.message.indexOf('Loading chunk') >= 0\n}\n\nfunction showFeedback() {\n  Sentry.showReportDialog({\n    labelClose: i18n.t`Close`,\n    title: i18n.t`Unexpected problem occurred`,\n  })\n}\n","import { autorun } from 'mobx'\nimport env from 'penv.macro'\nimport React from 'react'\n\nimport { useRoot } from '../app/useRoot'\n\nexport const PageTitle: React.FC = () => {\n  const { business } = useRoot()\n\n  const prefix = env({ dev: '[DEV]', local: '[LOCAL]' }) || ''\n  const suffix = env({ prod: getProdSuffix() }) || ''\n\n  React.useEffect(() => {\n    if (!document) {\n      return\n    }\n    return autorun(() => {\n      const { branch } = business\n      if (branch) {\n        document.title = `${prefix} ${branch.brand.name} ${suffix}`.trim()\n      } else {\n        document.title = `${prefix} ${suffix}`.trim()\n      }\n    })\n  }, [business, prefix, suffix])\n\n  return null\n}\n\nfunction getProdSuffix() {\n  const { hostname } = window.location\n  if (hostname.includes('doveze.cz')) {\n    return '- Doveze.cz'\n  } else if (hostname.includes('dovezie.sk')) {\n    return '- Dovezie.sk'\n  }\n  return ''\n}\n","import { useSentryScope } from '@speedlo/sentry'\nimport { observer } from 'mobx-react-lite'\n\nimport { useOrderModel } from '../hooks/useOrderModel'\n\nexport const AddSentryContext = observer(() => {\n  const scope = useSentryScope()\n  const orderModel = useOrderModel()\n\n  scope.setExtras({\n    orderId: orderModel.orderId,\n    orderBranchId: orderModel.branchId,\n  })\n\n  return null\n})\n","import { disableBatching } from '@speedlo/graphql'\nimport { Sentry } from '@speedlo/sentry'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { appConfig } from '../config'\nimport { useQBusinessLookup } from '../graph/generated'\nimport { useRoot } from './useRoot'\n\nexport const BusinessLoader = observer(() => {\n  const root = useRoot()\n  const { business } = useRoot()\n\n  const { getStash } = useQBusinessLookup(\n    {\n      code: business.requestedCode,\n      url: window.location.href,\n    },\n    {\n      skip: !root.initialized,\n      fetchPolicy: 'cache-first',\n      ...disableBatching,\n    },\n  )\n\n  const lookup = getStash(data => data.lookup)\n\n  React.useEffect(() => {\n    if (business.isValid || !lookup) {\n      return\n    }\n\n    if (!lookup.branch) {\n      Sentry.withScope(scope => {\n        scope.setExtras({\n          url: window.location.href,\n          requestedCode: business.requestedCode,\n        })\n        Sentry.captureMessage('No business found')\n      })\n      redirectAway()\n      return\n    }\n\n    business.updateFromLookup(lookup)\n    business.log(\n      'identified branch %s, brand %s; company %s, isBrand: %s',\n      business.branchId,\n      business.brandId,\n      business.companyId,\n      business.isBrand,\n    )\n  })\n\n  return null\n})\n\nfunction redirectAway() {\n  if (process.env.NODE_ENV === 'production') {\n    window.location.replace(appConfig.redirectOnFail)\n  } else {\n    document.write('No business identified')\n  }\n}\n","import { useRouterContext, useWhen } from '@speedlo/hooks'\nimport { when } from 'mobx'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport { GeoPoint } from '../helpers/gps'\nimport { useOrderCreate } from '../segments/map/hooks/useOrderCreate'\nimport { useRoot } from './useRoot'\n\ninterface IProps {}\n\nexport const CypressHelper: React.FC<IProps> = props => {\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n\n  /* eslint-disable react-hooks/rules-of-hooks */\n\n  const { user, business, location, order, map } = useRoot()\n  const { history } = useRouterContext()\n  const { createPickupOrder, createDeliveryOrder } = useOrderCreate(() => {\n    history.push('/order')\n  })\n\n  useWhen(\n    () => user.root.initialized,\n    () => {\n      if (window.location.search.includes('useDevLang')) {\n        user.selectLanguage('en-dev')\n      }\n    },\n  )\n\n  const businessValid = new Promise(resolve => {\n    when(() => business.isValid, resolve)\n  })\n\n  const createDeliveryOrderWithGps = (gps: GeoPoint, branchId: ID) => {\n    location.setLocation(gps)\n    order.setBranch(branchId)\n    return businessValid.then(() => createDeliveryOrder())\n  }\n\n  const createPickupOrderForBranch = (branchId: ID) => {\n    return businessValid.then(() => createPickupOrder(branchId))\n  }\n\n  const changeMapLocation = (gps: GeoPoint, zoom?: number) => {\n    map.updatePosition(gps)\n    map.updateZoom(zoom)\n  }\n\n  Object.assign(window, {\n    createPickupOrderForBranch,\n    createDeliveryOrderWithGps,\n    changeMapLocation,\n  })\n\n  return <Route path=\"/cypress\" component={() => null} />\n}\n","import { useAutorun } from '@speedlo/hooks'\nimport { Sentry } from '@speedlo/sentry'\nimport React from 'react'\n\nimport { useRoot } from './useRoot'\n\nexport const IdentifyGuest: React.FC = () => {\n  const { auth } = useRoot()\n  useAutorun(() => {\n    const id = auth.userId!\n    const token = auth.token\n    Sentry.configureScope(scope => {\n      scope.setUser({ id, username: 'GUEST' })\n      scope.setExtra('token', token)\n    })\n  })\n  return null\n}\n","import { useRouteMatch } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { useOrderModel } from '../hooks/useOrderModel'\n\nexport const ResetOrderAtRoot: React.FC = () => {\n  const match = useRouteMatch('/')\n  const orderModel = useOrderModel()\n  React.useEffect(() => {\n    if (match && match.isExact && orderModel.hasOrder) {\n      orderModel.orderCancel()\n    }\n  })\n  return null\n}\n","import localforage from 'localforage'\nimport React from 'react'\n\nimport { SecondaryButton } from '../common/Buttons'\nimport { memoryKey } from '../segments/orderForm/OrderFormMemory'\nimport { useRoot } from './useRoot'\n\ninterface IProps {}\n\nexport const ResetPersistenceButton: React.FC<IProps> = props => {\n  const root = useRoot()\n  if (process.env.REACT_APP_STAGE === 'prod') {\n    return null\n  }\n  return (\n    <SecondaryButton\n      onClick={() => {\n        root.reset()\n        localforage.removeItem(memoryKey)\n        setTimeout(() => window.location.reload(), 500)\n      }}\n    >\n      Reset uživ. dat [DEV]\n    </SecondaryButton>\n  )\n}\n","import React from 'react'\n\nimport { useSuspenseWhen } from './hooks/useSuspenseWhen'\nimport { useRoot } from './useRoot'\n\nexport const SuspendOnInit: React.FC<Required<SomeChildren>> = ({\n  children,\n}) => {\n  const { business, user } = useRoot()\n\n  const predicate = () => !(business.isValid && user.languageActivated)\n\n  useSuspenseWhen(predicate)\n\n  return <>{children}</>\n}\n","import { when } from 'mobx'\nimport React from 'react'\n\nexport function useSuspenseWhen(predicate: () => boolean) {\n  const [suspend, setSuspend] = React.useState<Maybe<Promise<any>>>(null)\n  const thrown = React.useRef(false)\n  const resolverRef = React.useRef<Maybe<AnyFunction>>()\n\n  React.useEffect(() => {\n    if (predicate() === true && suspend === null) {\n      setSuspend(\n        new Promise(resolve => {\n          resolverRef.current = resolve\n        }),\n      )\n      when(\n        () => !predicate(),\n        () => {\n          if (resolverRef.current) {\n            resolverRef.current()\n            resolverRef.current = null\n            setSuspend(null)\n          }\n        },\n      )\n    }\n  }, [predicate, suspend])\n\n  if (suspend !== null && !thrown.current) {\n    thrown.current = true\n    throw suspend\n  }\n}\n","import './App.css'\n\nimport React from 'react'\n\nimport { ErrorContainer } from '../common/ErrorContainer'\nimport Pacman from '../common/Pacman'\nimport { PageTitle } from '../common/PageTitle'\nimport { Desktop, Mobile } from '../common/Responsive'\nimport { AddSentryContext } from './AddSentryContext'\nimport { BusinessLoader } from './BusinessLoader'\nimport { CypressHelper } from './CypressHelper'\nimport { IdentifyGuest } from './IdentifyGuest'\nimport { ResetOrderAtRoot } from './ResetOrderAtRoot'\nimport { ResetPersistenceButton } from './ResetPersistenceButton'\nimport { SuspendOnInit } from './SuspendOnInit'\nimport ThemeSwitchProvider from './ThemeSwitchProvider'\n\nconst DesktopApp = React.lazy(() => import('./DesktopApp'))\nconst MobileApp = React.lazy(() => import('./MobileApp'))\n\nconst App: React.FC = () => (\n  <ErrorContainer prod={process.env.NODE_ENV === 'production'}>\n    <ThemeSwitchProvider>\n      <BusinessLoader />\n      <IdentifyGuest />\n      <PageTitle />\n      <AddSentryContext />\n      <ResetOrderAtRoot />\n      <CypressHelper />\n      <React.Suspense fallback={<Pacman />}>\n        <SuspendOnInit>\n          <Desktop>\n            <DesktopApp />\n          </Desktop>\n          <Mobile>\n            <MobileApp />\n          </Mobile>\n          <ResetPersistenceButton />\n        </SuspendOnInit>\n      </React.Suspense>\n    </ThemeSwitchProvider>\n  </ErrorContainer>\n)\n\nexport default App\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { useRoot } from './useRoot'\n\nexport const Router: React.FC = ({ children }) => {\n  const { business } = useRoot()\n  return useObserver(() => (\n    <BrowserRouter\n      basename={business.routerBasePath}\n      key={business.routerBasePath}\n    >\n      {children}\n    </BrowserRouter>\n  ))\n}\n","import React from 'react'\nimport ReactGA from 'react-ga'\n\nimport { appConfig } from '../config'\n\nconst key = appConfig.analytics\nif (key) {\n  const debug = process.env.REACT_APP_STAGE !== 'prod'\n  ReactGA.initialize(key, {\n    debug,\n    gaOptions: {\n      siteSpeedSampleRate: 50,\n    },\n  })\n  if (debug) {\n    ReactGA.ga('set', 'sendHitTask', null)\n  }\n}\n\ninterface IOptions {\n  reportPage: boolean\n}\n\nexport function useAnalytics(opts: Partial<IOptions> = {}) {\n  React.useEffect(() => {\n    if (opts.reportPage && key) {\n      ReactGA.pageview(window.location.href)\n    }\n  }, [opts.reportPage])\n  return ReactGA\n}\n","import debug from 'debug'\n\nexport const logDebug = debug('doveze:debug')\nexport const logPersist = debug('doveze:persist')\n","import { Sentry } from '@speedlo/sentry'\nimport localforage from 'localforage'\nimport {\n  applySnapshot,\n  getSnapshot,\n  getType,\n  IStateTreeNode,\n  onSnapshot,\n} from 'mobx-state-tree'\n\nimport { appConfig } from '../config'\nimport { logPersist } from './logger'\n\nconst { persistenceKey } = appConfig\n\nexport function persistModel(model: IStateTreeNode) {\n  const modelName = getType(model).name\n  const stateKey = `${persistenceKey}_${modelName}`\n\n  const writeState = snapshot => {\n    return localforage.setItem(stateKey, snapshot).catch(err => {\n      Sentry.withScope(scope => {\n        scope.setTag('persistence', stateKey)\n        scope.setExtras({\n          snapshot,\n        })\n        Sentry.captureException(err)\n      })\n    })\n  }\n\n  return localforage\n    .getItem(stateKey)\n    .catch(err => {\n      localforage.removeItem(stateKey)\n      Sentry.withScope(scope => {\n        scope.setTag('persistence', stateKey)\n        Sentry.captureException(err)\n      })\n    })\n    .then(state => {\n      if (state !== null) {\n        applySnapshot(model, state)\n        logPersist('restored state %s', stateKey)\n      } else {\n        writeState(getSnapshot(model)).then(() => {\n          logPersist('initialized state %s', stateKey)\n        })\n      }\n\n      onSnapshot(model, writeState)\n    })\n}\n","import debug from 'debug'\nimport { getPath, getRoot, getType, types } from 'mobx-state-tree'\n\nimport { TRootModel } from './RootModel'\n\nexport const BaseModel = types.model().views(self => ({\n  get log() {\n    const name = getPath(self).trim() || getType(self).name\n    // if (process.env.NODE_ENV === 'test') {\n    //   return (...args) => console.log(`model${name}`, ...args)\n    // }\n    return debug(`doveze:model${name}`)\n  },\n  get root(): TRootModel {\n    return getRoot(self)\n  },\n}))\n","import { Sentry } from '@speedlo/sentry'\nimport { Instance, SnapshotIn, types } from 'mobx-state-tree'\n\nimport { BaseModel } from './BaseModel'\n\nexport const AuthModel = BaseModel.named('Auth')\n  .props({\n    token: types.maybeNull(types.string),\n    userId: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get isValid() {\n      return self.token !== null\n    },\n  }))\n  .actions(self => ({\n    authenticate(token: string, userId: string) {\n      self.token = token\n      self.userId = userId\n      Sentry.addBreadcrumb({\n        category: 'Auth',\n        level: Sentry.Severity.Info,\n        data: {\n          userId,\n          token,\n        },\n      })\n    },\n  }))\n\nexport interface TAuthModel extends Instance<typeof AuthModel> {}\nexport interface TAuthModelProps extends SnapshotIn<typeof AuthModel> {}\n","import { differenceInDays } from 'date-fns'\nimport { Instance, SnapshotIn, types } from 'mobx-state-tree'\n\nimport { BaseModel } from './BaseModel'\n\nconst daysHidden = 15\nconst daysReminder = 90\n\nexport const BannerModel = BaseModel.named('Banner')\n  .props({\n    branchId: types.identifier,\n    closedAt: types.maybe(types.Date),\n    installedAt: types.maybe(types.Date),\n  })\n  .views(self => ({\n    get shouldBeVisible(): boolean {\n      if (self.root.business.isMobileApp) {\n        return false\n      }\n      if (\n        self.closedAt &&\n        differenceInDays(new Date(), self.closedAt) > daysHidden\n      ) {\n        return true\n      }\n      if (\n        self.installedAt &&\n        differenceInDays(new Date(), self.installedAt) > daysReminder\n      ) {\n        return true\n      }\n      // none of these has been set yet, banner should be visible\n      return !Boolean(self.closedAt || self.installedAt)\n    },\n  }))\n  .actions(self => ({\n    setInstalledNow() {\n      self.installedAt = new Date()\n    },\n    setClosedNow() {\n      self.closedAt = new Date()\n    },\n  }))\n\nexport interface TBannerModel extends Instance<typeof BannerModel> {}\nexport interface TBannerModelProps extends SnapshotIn<typeof BannerModel> {}\n","import { Instance, SnapshotIn, types } from 'mobx-state-tree'\n\nimport {\n  FCompanyBranchCountry,\n  FCompanyBranchFragment,\n  OrderOriginEnum,\n  QBusinessLookupLookup,\n} from '../graph/generated'\nimport { BannerModel, TBannerModel } from './BannerModel'\nimport { BaseModel } from './BaseModel'\n\ntype TBranch = LegacyOmit<FCompanyBranchFragment, 'address'>\n\ninterface IVolatileProps {\n  isBrand: boolean\n  isMobileApp: boolean\n  branch: Maybe<TBranch>\n  country: Maybe<FCompanyBranchCountry>\n  orderOrigin: OrderOriginEnum\n  routerBasePath: string\n  defaultLanguage: Maybe<string>\n}\n\nexport const BusinessModel = BaseModel.named('Business')\n  .props({\n    code: types.maybeNull(types.string),\n    banners: types.map(BannerModel),\n  })\n  .volatile<IVolatileProps>(() => ({\n    isBrand: false,\n    isMobileApp: false,\n    branch: null,\n    country: null,\n    orderOrigin: OrderOriginEnum.Web,\n    routerBasePath: '',\n    defaultLanguage: null,\n  }))\n  .views(self => ({\n    get branchId() {\n      return self.branch && self.branch.id\n    },\n    get companyId() {\n      return self.branch && self.branch.company.id\n    },\n    get brandId() {\n      return self.branch && self.branch.brand.id\n    },\n    get brandOrBranch() {\n      return {\n        brandId: self.isBrand ? this.brandId : undefined,\n        branchId: self.isBrand ? undefined : this.branchId,\n      }\n    },\n    get isValid() {\n      return self.branch !== null\n    },\n    get requestedCode() {\n      const urlCode = readBusinessCodeFromUrl()\n      // prefer stored code if none was specified in url\n      if (self.code && !urlCode) {\n        return self.code\n      }\n      // url code has priority with fallback to stored one or a static one from build\n      return urlCode || self.code || process.env.REACT_APP_BUSINESS_CODE\n    },\n  }))\n  .actions(self => ({\n    updateFromLookup(lookup: QBusinessLookupLookup) {\n      const {\n        isBrand,\n        isMobileApp,\n        knownBasePath,\n        orderOrigin,\n        branch,\n      } = lookup\n\n      if (!branch) {\n        // handled in BusinessLoader.tsx\n        return\n      }\n\n      self.isBrand = isBrand\n      self.isMobileApp = isMobileApp\n      self.branch = branch\n      self.country = branch.address.country || null\n      self.routerBasePath = knownBasePath\n      self.orderOrigin = orderOrigin\n      self.defaultLanguage = lookup.defaultLanguage.toLowerCase()\n\n      if (process.env.REACT_APP_STAGE !== 'prod') {\n        // for non-prod enviroments we need to remember business code\n        // because its lost on redirects followed by a reload\n        self.code = isBrand ? self.branch.brand.code : self.branch.code\n      } else {\n        self.code = null\n      }\n    },\n    ensureBannerForCurrentBranch(): TBannerModel {\n      const branchId = self.branchId!\n      if (!self.banners.has(branchId)) {\n        self.banners.set(branchId, { branchId })\n      }\n      return self.banners.get(branchId)!\n    },\n  }))\n\nconst codeParam = 'wac'\n\nfunction readBusinessCodeFromUrl() {\n  const parsedUrl = new window.URL(window.location.href)\n  return parsedUrl.searchParams.get(codeParam) || null\n}\n\nexport interface TBusinessModel extends Instance<typeof BusinessModel> {}\nexport interface TBusinessModelProps extends SnapshotIn<typeof BusinessModel> {}\n","import { Instance, SnapshotIn } from 'mobx-state-tree'\n\nimport { BaseModel } from './BaseModel'\n\nexport const CartModel = BaseModel.named('Cart')\n  .volatile(() => ({\n    withGoods: false,\n    withPresence: false,\n    orderIsSubmitting: false,\n  }))\n  .actions(self => ({\n    updateDisplay(isMobile: boolean, showGoods: boolean) {\n      self.withGoods = !isMobile || showGoods\n      self.withPresence = isMobile ? !showGoods : true\n    },\n    setOrderSubmitting(state: boolean) {\n      self.orderIsSubmitting = state\n    },\n  }))\n\nexport interface TCartModel extends Instance<typeof CartModel> {}\nexport interface TCartModelProps extends SnapshotIn<typeof CartModel> {}\n","import { Instance, SnapshotIn } from 'mobx-state-tree'\n\nimport { BaseModel } from './BaseModel'\n\nexport const ConfigModel = BaseModel.named('Config').props({\n  orderItemsMax: 50,\n})\n\nexport interface TConfigModel extends Instance<typeof ConfigModel> {}\nexport interface TConfigModelProps extends SnapshotIn<typeof ConfigModel> {}\n","import { Instance, SnapshotIn, types } from 'mobx-state-tree'\n\nimport { QResolveLocationResolveLocation } from '../graph/generated'\nimport { formatAddress } from '../helpers/formats'\nimport { GeoPoint, gpsToLatLngLit } from '../helpers/gps'\nimport { BaseModel } from '../models/BaseModel'\nimport { AddressSearchResult } from '../segments/map/hooks/useAddressSearch'\n\nexport const LocationModel = BaseModel.named('Location')\n  .props({\n    latitude: types.maybe(types.number),\n    longitude: types.maybe(types.number),\n    searchValue: types.optional(types.string, ''),\n    address: types.maybe(types.string),\n  })\n  .volatile(() => ({\n    branchId: null as MaybeID,\n    isOpen: true,\n    isResolved: false,\n    isStreetAddress: false,\n    inDeliveryLocation: false,\n    geolocationDisabled: false,\n    geolocationPoint: null as Maybe<GeoPoint>,\n    isResolving: false,\n    hasResolutionResult: false,\n    initialSearchAddress: null as Maybe<string>,\n  }))\n  .views(self => ({\n    get isGeolocationAvailable() {\n      return Boolean(navigator.geolocation && !self.geolocationDisabled)\n    },\n    get hasLocation() {\n      return self.latitude !== undefined || self.longitude !== undefined\n    },\n    get hasAddress() {\n      return Boolean(self.address && self.address.length > 0)\n    },\n    get hasSearchValue() {\n      return self.searchValue.trim().length > 0\n    },\n    get isDeliveryAddress() {\n      return self.isResolved && self.isStreetAddress && self.inDeliveryLocation\n    },\n    get geoPoint() {\n      if (this.hasLocation) {\n        return {\n          latitude: self.latitude!,\n          longitude: self.longitude!,\n        }\n      }\n      return null\n    },\n    get latLng() {\n      if (this.geoPoint) {\n        return gpsToLatLngLit(this.geoPoint)\n      }\n      return null\n    },\n  }))\n  .actions(self => ({\n    setLocation({ latitude, longitude }: GeoPoint) {\n      self.latitude = latitude\n      self.longitude = longitude\n    },\n    setIsResolving(resolving: boolean) {\n      if (resolving !== self.isResolving) {\n        self.isResolving = resolving\n        self.log(`resolving has ${resolving ? 'started' : 'ended'}`)\n      }\n    },\n    setSearchValue(search: string) {\n      self.searchValue = search\n    },\n    setInitialSearchAddress(address: string) {\n      self.searchValue = address\n      self.initialSearchAddress = address\n    },\n    setAddress(address: string) {\n      self.address = address\n      self.log(`set address to ${address}`)\n    },\n    clearAddress() {\n      self.address = undefined\n      self.log('cleared address')\n    },\n    setGeolocationPoint(point: GeoPoint) {\n      self.geolocationPoint = point\n    },\n    disableGeolocation() {\n      self.geolocationDisabled = true\n    },\n  }))\n  .actions(self => ({\n    setResolutionResult(result: QResolveLocationResolveLocation) {\n      self.branchId = result.companyBranch ? result.companyBranch.id : null\n      self.isResolved = result.isResolved\n      self.isStreetAddress = result.isValidAddress\n      self.inDeliveryLocation = result.inDeliveryLocation\n\n      if (result.finalAddress && !self.hasSearchValue) {\n        self.setAddress(formatAddress(result.finalAddress))\n      }\n\n      self.hasResolutionResult = true\n\n      if (!(result.isResolved && result.gpsCoordinates)) {\n        self.log('not resolved')\n        return\n      }\n\n      self.setLocation(result.gpsCoordinates)\n      self.log(\n        `resolved location for branch: ${self.branchId}, zone: ${\n          result.zone ? result.zone.id : null\n        }`,\n      )\n    },\n    setSearchResult(result: AddressSearchResult) {\n      self.setLocation(result.gps)\n      self.setAddress(result.address)\n      self.setIsResolving(false)\n    },\n    setAsNotResolved() {\n      self.hasResolutionResult = true\n      self.isResolved = false\n      self.setIsResolving(false)\n    },\n    setAsNotAddress() {\n      self.hasResolutionResult = true\n      self.isResolved = true\n      self.isStreetAddress = false\n      self.setIsResolving(false)\n    },\n    resetResolution() {\n      self.branchId = null\n      self.isResolved = false\n      self.isStreetAddress = false\n      self.inDeliveryLocation = false\n      self.hasResolutionResult = false\n      self.clearAddress()\n    },\n  }))\n\nexport interface TLocationModel extends Instance<typeof LocationModel> {}\nexport interface TLocationModelProps extends SnapshotIn<typeof LocationModel> {}\n","import { Instance, SnapshotIn, types } from 'mobx-state-tree'\n\nimport { GeoPoint, gpsToLatLngLit, latLngToGps } from '../helpers/gps'\nimport { BaseModel } from '../models/BaseModel'\n\nexport const GPSCzechia = {\n  latitude: 49.8037633,\n  longitude: 15.4749126,\n}\n\nexport const MapModel = BaseModel.named('Map')\n  .props({\n    zoom: types.optional(types.number, 16),\n    latitude: types.optional(types.number, GPSCzechia.latitude),\n    longitude: types.optional(types.number, GPSCzechia.longitude),\n  })\n  .volatile(() => ({\n    mapRef: null as Maybe<google.maps.Map>,\n    clickPoint: null as Maybe<GeoPoint>,\n  }))\n  .views(self => ({\n    get center() {\n      return gpsToLatLngLit(self)\n    },\n  }))\n  .actions(self => ({\n    setMapRef(ref: Maybe<google.maps.Map>) {\n      self.mapRef = ref\n    },\n    updateZoom(zoom?: number) {\n      if (zoom !== undefined) {\n        self.zoom = zoom\n      } else if (self.mapRef) {\n        self.zoom = self.mapRef.getZoom()\n      }\n    },\n    updatePosition(gps?: GeoPoint) {\n      if (gps) {\n        self.latitude = gps.latitude\n        self.longitude = gps.longitude\n      } else if (self.mapRef) {\n        const center = self.mapRef.getCenter()\n        self.latitude = center.lat()\n        self.longitude = center.lng()\n      }\n    },\n    onClick(ev: google.maps.MouseEvent) {\n      self.clickPoint = latLngToGps(ev.latLng)\n    },\n    clearClickPoint() {\n      self.clickPoint = null\n    },\n  }))\n\nexport interface TMapModel extends Instance<typeof MapModel> {}\nexport interface TMapModelProps extends SnapshotIn<typeof MapModel> {}\n","import { Instance, SnapshotIn, types } from 'mobx-state-tree'\n\nimport {\n  DeliveryTypeEnum,\n  FOrderCreateFragment,\n  PaymentGateEnum,\n} from '../graph/generated'\nimport { i18n } from '../i18n'\nimport { BaseModel } from './BaseModel'\n\nexport const OrderModel = BaseModel.named('Order')\n  .props({\n    branchId: types.maybeNull(types.string),\n    orderId: types.maybeNull(types.string),\n    orderMethod: DeliveryTypeEnum.Messenger,\n    paymentMethod: PaymentGateEnum.Gopay,\n    deliverAt: types.maybeNull(types.Date),\n    tips: 0,\n  })\n  .volatile(() => ({\n    isSubmitting: false,\n    isGoPayChecking: false,\n    hasUsedGoPay: false,\n    submitErrors: null as Maybe<RoA<string>>,\n    lastActiveRecipeId: null as MaybeID,\n    timePickerOpen: false,\n    addToCartRecipeId: null as MaybeID,\n    changeCartItemId: null as MaybeID,\n    isVamInitialized: false,\n  }))\n  .views(self => ({\n    get hasOrder() {\n      return self.orderId !== null\n    },\n    get usingDeliveryOrderMethod() {\n      return self.orderMethod === DeliveryTypeEnum.Messenger\n    },\n    get usingPickupOrderMethod() {\n      return self.orderMethod === DeliveryTypeEnum.Pickup\n    },\n    get usingPaymentMethodWithTips() {\n      return self.paymentMethod === PaymentGateEnum.Gopay\n    },\n    get hasErrors() {\n      return Boolean(self.submitErrors && self.submitErrors.length > 0)\n    },\n    get defaultPhonePrefix(): string {\n      if (self.root.business.isValid && self.root.business.country) {\n        return self.root.business.country.phonePrefix\n      }\n      return ''\n    },\n    get disableInteraction() {\n      return self.isSubmitting || self.isGoPayChecking || self.hasUsedGoPay\n    },\n    get isDelayed() {\n      return self.deliverAt !== null\n    },\n  }))\n  .actions(self => ({\n    useOrderMethod(method: DeliveryTypeEnum) {\n      self.orderMethod = method\n    },\n    setPaymentMethod(method: PaymentGateEnum) {\n      self.paymentMethod = method\n    },\n    setBranch(branchId: ID) {\n      self.branchId = branchId\n    },\n    orderCreated(result: FOrderCreateFragment) {\n      self.orderId = result.id\n      self.branchId = result.branch.id\n      self.isGoPayChecking = false\n      self.hasUsedGoPay = false\n      self.deliverAt = null\n      self.log('order %s created for branch %s', self.orderId, self.branchId)\n    },\n    orderPaid(orderId: ID) {\n      if (self.orderId !== orderId) {\n        self.orderId = orderId\n        self.log('order %s replaced by %s due to successful payment status')\n      }\n    },\n    orderCancel() {\n      if (self.branchId || self.orderId) {\n        self.log(\n          'cancel order %s, was at branch %s',\n          self.root.order.orderId,\n          self.root.order.branchId,\n        )\n      }\n      self.orderId = null\n      self.branchId = null\n    },\n    submitStarted() {\n      self.isSubmitting = true\n    },\n    submitFinished() {\n      self.isSubmitting = false\n    },\n    submitFailed(errors?: ReadonlyArray<string>) {\n      self.isSubmitting = false\n      self.submitErrors = errors || [\n        i18n.t`Error during sending order. Please try again later.`,\n      ]\n    },\n    vamFailed() {\n      self.submitErrors = [\n        i18n.t`Internal error during sending order. Order can not be finished right now. Our team was notified and is working on fix. Thank you for your understanding.`,\n      ]\n    },\n    clearErrors() {\n      self.submitErrors = null\n    },\n    goPayStatusCheck(checking: boolean) {\n      self.isGoPayChecking = checking\n      self.hasUsedGoPay = true\n    },\n    setUsedRecipeId(recipeId: ID) {\n      self.lastActiveRecipeId = recipeId\n    },\n    openTimePicker() {\n      self.timePickerOpen = true\n    },\n    closeTimePicker() {\n      self.timePickerOpen = false\n    },\n    setTips(tips: number) {\n      self.tips = tips\n    },\n    setDeliverAt(when: Maybe<Date>) {\n      self.deliverAt = when\n    },\n    addToCart(recipeId: MaybeID) {\n      self.addToCartRecipeId = recipeId\n    },\n    changeCartItem(itemId: MaybeID) {\n      self.changeCartItemId = itemId\n    },\n  }))\n  .actions(self => ({\n    initVam() {\n      self.isVamInitialized = true\n    },\n  }))\n  // for backward-compatibility with OrderFormMemory\n  .props({\n    firstname: '',\n    lastname: '',\n    email: '',\n    phone: '',\n    phonePrefix: '',\n    note: '',\n  })\n\nexport interface TOrderModel extends Instance<typeof OrderModel> {}\nexport interface TOrderModelProps extends SnapshotIn<typeof OrderModel> {}\n","import { detectLanguage } from '@speedlo/ui'\nimport { Instance, SnapshotIn, types } from 'mobx-state-tree'\n\nimport { appConfig } from '../config'\nimport { BaseModel } from './BaseModel'\n\nexport const UserModel = BaseModel.named('User')\n  .props({\n    selectedLanguage: types.maybe(types.string),\n    rememberForm: types.maybeNull(types.boolean),\n    showAppleBanner: types.optional(types.boolean, true),\n  })\n  .volatile(() => ({\n    closingTimeAlertHidden: false,\n    orderLimitAlertHidden: true,\n    languageActivated: false,\n    memoryApplied: false,\n  }))\n  .views(self => ({\n    get language(): string {\n      return (\n        self.selectedLanguage ||\n        self.root.business.defaultLanguage ||\n        detectLanguage(appConfig.supportedLanguages, appConfig.fallbackLanguage)\n      )\n    },\n    get shouldRememberForm() {\n      return self.rememberForm !== false\n    },\n  }))\n  .actions(self => ({\n    selectLanguage(lang: string) {\n      if (lang !== self.selectedLanguage) {\n        self.languageActivated = false\n      }\n      self.selectedLanguage = lang\n      self.log('selected language %s', lang)\n    },\n    activateLanguage() {\n      self.languageActivated = true\n      self.log('activated language %s', self.language)\n    },\n    showClosingTime() {\n      self.closingTimeAlertHidden = false\n    },\n    hideClosingTime() {\n      self.closingTimeAlertHidden = true\n    },\n    showOrderLimit() {\n      self.orderLimitAlertHidden = false\n    },\n    hideOrderLimit() {\n      self.orderLimitAlertHidden = true\n    },\n    setFormRememberYes() {\n      self.rememberForm = true\n    },\n    setFormRememberNo() {\n      self.rememberForm = false\n    },\n    setMemoryApplied() {\n      self.memoryApplied = true\n    },\n    hideAppleBanner() {\n      self.showAppleBanner = false\n    },\n  }))\n\nexport interface TUserModel extends Instance<typeof UserModel> {}\nexport interface TUserModelProps extends SnapshotIn<typeof UserModel> {}\n","import { observable } from 'mobx'\nimport {\n  applySnapshot,\n  getSnapshot,\n  Instance,\n  SnapshotIn,\n  types,\n} from 'mobx-state-tree'\n\nimport { persistModel } from '../helpers/persistModel'\nimport { AuthModel } from './AuthModel'\nimport { BaseModel } from './BaseModel'\nimport { BusinessModel } from './BusinessModel'\nimport { CartModel } from './CartModel'\nimport { ConfigModel } from './ConfigModel'\nimport { LocationModel } from './LocationModel'\nimport { MapModel } from './MapModel'\nimport { OrderModel } from './OrderModel'\nimport { UserModel } from './UserModel'\n\nexport const RootModel = BaseModel.named('Root')\n  .props({\n    auth: types.optional(AuthModel, {}),\n    business: types.optional(BusinessModel, {}),\n    cart: types.optional(CartModel, {}),\n    config: types.optional(ConfigModel, {}),\n    map: types.optional(MapModel, {}),\n    order: types.optional(OrderModel, {}),\n    location: types.optional(LocationModel, {}),\n    user: types.optional(UserModel, {}),\n  })\n  .views(self => ({\n    get persistedModels() {\n      return [\n        self.auth,\n        self.user,\n        self.business,\n        self.location,\n        self.order,\n        self.map,\n      ]\n    },\n  }))\n  .extend(self => {\n    let initialSnapshot\n    const initialized = observable.box(false)\n    return {\n      views: {\n        get initialized() {\n          return initialized.get()\n        },\n      },\n      actions: {\n        afterCreate() {\n          const { business, map, ...snapshot } = getSnapshot(self)\n          initialSnapshot = snapshot\n        },\n        reset() {\n          applySnapshot(self, initialSnapshot)\n        },\n        init: async () => {\n          await Promise.all(self.persistedModels.map(persistModel))\n          initialSnapshot.business = getSnapshot(self.business)\n          self.log('initialized')\n          initialized.set(true)\n        },\n      },\n    }\n  })\n\nexport interface TRootModel extends Instance<typeof RootModel> {}\nexport interface TRootModelProps extends SnapshotIn<typeof RootModel> {}\n","import './enableDebug'\n\nimport { ApolloProvider } from '@speedlo/graphql'\nimport { useSentryInit } from '@speedlo/sentry'\nimport { updateWorker } from '@speedlo/tools'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './app/App'\nimport { Router } from './app/Router'\nimport { RootProvider } from './app/useRoot'\nimport { appConfig } from './config'\nimport { createApolloClient } from './graph/createClient'\nimport { useAnalytics } from './hooks/useAnalytics'\nimport { i18n, I18nManager } from './i18n'\nimport { RootModel } from './models/RootModel'\n\nconst Main = () => {\n  useAnalytics({ reportPage: true })\n  useSentryInit(appConfig.sentryDSN)\n\n  const rootInit = React.useRef<Promise<void>>()\n  const [root] = React.useState(() => {\n    const rootInst = RootModel.create({})\n    rootInit.current = rootInst.init()\n    return rootInst\n  })\n\n  const [client] = React.useState(() => {\n    return createApolloClient(root, rootInit.current!)\n  })\n\n  return (\n    <RootProvider value={root}>\n      <ApolloProvider client={client}>\n        <I18nManager>\n          <Router>\n            <App />\n          </Router>\n        </I18nManager>\n      </ApolloProvider>\n    </RootProvider>\n  )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))\n\nupdateWorker.register({\n  autoUpdate: true,\n  onUpdate: (sw: ServiceWorker) => {\n    setTimeout(() => {\n      if (\n        window.confirm(\n          i18n.t`New version has been found. Do you want to reload application to apply it now?`,\n        )\n      ) {\n        sw.postMessage('apply-update')\n      }\n    }, 5000)\n  },\n})\n\nif (navigator.serviceWorker) {\n  navigator.serviceWorker.addEventListener('message', event => {\n    if (event.data === 'update-applied') {\n      window.location.reload()\n    }\n  })\n}\n","import {\n  createAuthLink,\n  createDateParserLink,\n  createDefaultApolloClient,\n  createLanguageLink,\n  createLogLink,\n  createNetworkLink,\n  createOfflineLink,\n  createRetryLink,\n  fetchGuestToken,\n} from '@speedlo/graphql'\n\nimport { appConfig } from '../config'\nimport { TRootModel } from '../models/RootModel'\n\nexport function createApolloClient(root: TRootModel, rootInit: Promise<void>) {\n  const getToken = async () => {\n    await rootInit\n    if (root.auth.token) {\n      return root.auth.token\n    }\n    const { token, userId } = await fetchGuestToken(appConfig.endpoint)\n    root.auth.authenticate(token, userId)\n    return token\n  }\n\n  const getLang = () => root.user.language\n\n  return createDefaultApolloClient(\n    createAuthLink({ getToken }),\n    createLanguageLink(getLang),\n    createLogLink({ enabled: process.env.REACT_APP_STAGE !== 'prod' }),\n    createRetryLink(),\n    createOfflineLink(),\n    createDateParserLink(getResolvers()),\n    createNetworkLink({ endpoint: appConfig.endpoint }),\n  )\n}\n\nfunction getResolvers() {\n  return {\n    CompanyBranch: ['willOpenAt', 'willCloseAt'],\n    BusinessHourInterval: ['start', 'end', 'openAt', 'closeAt'],\n  }\n}\n"],"sourceRoot":""}