{"version":3,"sources":["segments/orderForm/OrderFormStorageNotice.tsx","segments/orderForm/OrderFormView.graphql.ts","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderAgreements.tsx","segments/orderForm/OrderFormAutoFill.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderFormInputs.tsx","hooks/useGuardedMutation.ts","segments/orderForm/OrderFormSetup.tsx","segments/orderForm/OrderSubmitLine.tsx","common/SubmitSpinner.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/orderForm/OrderTimePicker.tsx","segments/shop/logo-commerce-01.svg","segments/shop/logo-commerce-02.svg","segments/shop/logo-doveze.svg","segments/shop/logo-gopay.png","segments/finish/FinishView.graphql.ts","segments/destination/AddressInput.tsx","segments/destination/GeolocationButton.tsx","segments/destination/ResolvedAddress.tsx","segments/destination/SearchInput.tsx","segments/map/AddressSubmit.tsx","segments/map/DeliveryMap.graphql.ts","segments/map/DeliveryMapPanning.tsx","segments/sidedishPicker/SidedishPicker.tsx","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartContents.tsx","segments/cart/CartDiscounts.tsx","segments/cart/CartItem.tsx","segments/cart/EditCartItemButton.tsx","segments/cart/RemoveCartItemButton.tsx","segments/cart/CartTotals.tsx","segments/cart/CartIsEmpty.tsx","segments/cart/ChangeCartModal.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/LinkToCart.tsx","segments/foodMenu/OrderLimitModal.tsx","common/FormInputCheckbox.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderPromoInput.tsx","segments/orderForm/OrderPromoInput.graphql.ts","segments/orderForm/OrderTimeButtons.tsx","segments/timePicker/TimePicker.tsx","segments/timePicker/createTimeSteps.ts","segments/timePicker/TimePickerButton.tsx","segments/orderForm/OrderTimePicker.graphql.ts","common/ColStyle.tsx","common/ShopAddress.tsx","common/AlertModal.tsx","common/BackgroundThemed.tsx","common/WithOrder.tsx","common/BaseMap.tsx","common/FormTextInput.tsx","common/ShopStatus.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","hooks/useShopStatus.ts","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewLoader.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","segments/destination/OrderMethod.tsx","segments/map/DeliveryMap.tsx","common/ButtonStripe.tsx","segments/map/atoms/MapPanning.tsx","segments/cart/CartView.tsx","segments/cart/AddToCartModal.tsx","segments/cart/CartModal.tsx","common/PickerButton.tsx","segments/cart/CartItemButton.tsx","segments/cart/useCartRefresh.ts","segments/foodMenu/FoodMenuView.tsx"],"names":["_react","__webpack_require__","_mobxReact","_react2","_interopRequireDefault","_reactstrap","_styledComponents","_Responsive","_WithRoot","_OrderFormView","NoticeButton","default","Button","withConfig","displayName","StorageNotice","Alert","mediaDesktop","mediaMobile","props","createElement","WithRoot","render","root","QueryOrderForm","skip","order","hasOrder","user","rememberForm","variables","orderId","renderLoading","Observer","countWares","data-testid","Trans","id","color","size","onClick","setFormRememberYes","setFormRememberNo","_graphqlTag","_graph","OrderFormQuery","buildQuery","_mobxReactLite","useRoot","useObserver","Modal","isOpen","hasErrors","toggle","clearErrors","className","ModalHeader","tag","Container","ModalBody","submitErrors","map","error","idx","key","_mobx","_interopRequireWildcard","_FormInputCheckbox","_i18n","ButtonStyled","GdprAgreementStyled","div","descOpen","useRef","observable","array","current","toggleId","useCallback","includes","remove","push","Fragment","agreements","agreement","_extends","isConfirmed","style","display","hideConfirmed","FormInputCheckbox","field","validate","checked","isMandatory","dangerouslySetInnerHTML","__html","name","description","i18n","_","toLocaleLowerCase","Collapse","onFill","_reactForm","isTooLong","value","trim","length","OrderNoteInputValidator","ingredientsDescription","Field","fieldApi","FormGroup","Input","type","placeholder","title","onChange","e","setValue","target","onBlur","setTouched","valid","invalid","Boolean","FormText","FormFeedback","values","0","MAX_LENGTH","_OrderEmailInput","_OrderNameInput","_OrderNoteInput","_OrderPhoneInput","_OrderPromoInput","_OrderTimeButtons","OrderNameInput","OrderPhoneInput","OrderEmailInput","OrderNoteInput","OrderTimeButtons","mutation","_a","onUserErrors","options","__rest","defaultMessage","handleGraphQLErrors","errors","userErrors","filter","_ramda","RM","pathEq","prop","handleError","err","hasOwnProperty","isApolloError","networkError","window","alert","graphQLErrors","_sentry","reportError","mutate","_reactApolloHooks","useMutation","__awaiter","this","result","data","_hooks","_types","_logger","orderModel","history","useRouterContext","useEffect","isVamInitialized","initVam","updateVam","formState","formApi","formValue","formAgreement","find","propEq","Object","assign","useDebounceCallback","Form","defaultValues","firstname","lastname","email","phone","phonePrefix","defaultPhonePrefix","note","payment","PaymentGateEnum","Gopay","getFormValues","validateOnMount","onSubmit","submitOrder","replace","logOrder","submitForm","_Buttons","_SubmitSpinner","_WithOrder","canSubmit","WithOrder","observe","PrimaryButton","disabled","isSubmitting","Desktop","toLocaleUpperCase","Mobile","_reactSpinkit","withTheme","theme","primary","fadeIn","_AlertModal","_Pacman","TextPadding","AlertModal","isGoPayChecking","headerText","noMargin","_tools","_dateFns","_useGuardedMutation","_TimePicker","_OrderTimePicker","OrderTimePicker","observer","loading","useQuery","OrderTimePickerQuery","branchId","suspend","updateOrder","useGuardedMutation","UpdateOrderDeliveryTimeMutation","submitFailed","selectedTime","deliverAt","header","usingDeliveryOrderMethod","timePickerOpen","closeTimePicker","autoFocus","backdrop","fade","minDate","companyBranch","willOpenAt","Date","getStartTime","maxDate","willCloseAt","nextBusinessHour","businessHours","closeAt","getEndTime","isAfter","minuteOffset","defaultDeliveryTime","defaultPickupTime","usingPickupOrderMethod","getMinuteOffset","TimePicker","minuteStep","addMinutes","initialTime","filterIntervals","bhour","start","openAt","end","getFilterIntervals","onStepChange","time","renderModalContent","isoDate","setDeliverAt","module","exports","p","_fragments","FinishViewOrderFragment","CartItemFragment","PriceFragment","FinishViewQuery","QueryFinishView","_GeolocationButton","_ResolvedAddress","_SearchInput","AddressInputStyled","AddressInputBoxStyled","location","InputGroup","address","isVisible","hasAddress","isResolving","onValidClick","clearAddress","inputProps","autoComplete","onSearch","withUserAddress","isSearching","attemptGeolocation","isGeolocationAvailable","hasFinishedSearch","isResolved","NoMouseAlert","isStreetAddress","inDeliveryLocation","renderErrorMessage","span","secondary","GeolocationButton","InputGroupAddon","addonType","ResolvedAddress","_classnames","_debounce","Component","[object Object]","state","ev","setState","onKeyPress","clear","inputRef","onInputMount","ref","setFocus","nextProps","focus","isHidden","address__input__hidden","innerRef","_ButtonStripe","AddressSubmit","enabled","onPrefetch","onMouseEnter","InitialMapLocationQuery","_MapPanning","initialLocation","useDisposable","reaction","clickPoint","withUserLocation","clearClickPoint","panToGps","useFullComputed","geoPoint","logMap","geolocationPoint","MapPanning","gps","get","_CategoryValidationMessage","_SidedishCheckbox","recipe","selection","onToggle","categories","category","nameLabel","minCount","maxCount","sideDishes","sidedish","SidedishCheckbox","isSelected","canBeSelected","_PickerButton","Name","Price","buttonProps","PickerButton","outline","width","price","formattedValue","onConfirm","isConfirming","box","set","_CartDiscounts","_CartItem","_CartTotals","items","item","CartItem","isActive","lastActiveRecipeId","onEdit","setUsedRecipeId","CartDiscounts","CartTotals","discounts","code","totalDiscount","_EditCartItemButton","_RemoveCartItemButton","EditButtonsContainerStyled","CartItemStyled","RemoveCartItemButton","itemId","automatic","EditCartItemButton","sideDishCount","join","_reactRouterDom","_CartItemButton","button","CartItemButton","icon","Link","to","clickedRef","data_testid","removeItemFromCart","_color","CartItemSummaryTotalThemed","alpha","hsl","string","coverPrice","transportFee","totalSum","CartIsEmptyThemed","_OrderModel","_CartModal","QueryCart","OrderCartForItemQuery","Route","path","match","params","renderError","CartModal","initialSelection","updateItem","onClose","goBack","isLoading","_reactScroll","_reactTruncate","CategoryNavigatorContainer","activeCategoryIndex","setActiveCategoryIndex","useState","active","onSetActive","offset","smooth","spy","pictogram","lines","_FoodCategory","_FoodMenuItem","FoodMenuStyled","FoodMenuListStyled","shouldUpdate","orderItemCount","rootModel","config","orderItemsMax","inCart","canAddToCart","orderLimitReached","recipes","showOrderLimit","prefetchFood","FoodCategoryStyled","FoodCategoryTitleStyled","children","Element","_LinkToCart","FoodMenuItemStyled","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItemCount","LinkToCart","recipeId","hasSidedish","image","src","alt","descriptionLabel","LinkStyled","pathname","isMobile","addFromRecipeMobile","addFromRecipe","orderLimitAlertHidden","hideOrderLimit","CheckboxContainerStyled","CheckboxStyled","LabelStyled","defaultValue","touched","_FormTextInput","emailRx","OrderEmailInputValidator","test","FormTextInput","showFeedback","OrderPhoneInputValidator","OrderPhonePrefixInputValidator","CodesPanel","OrderPromoInputUI","codes","onCodeAdd","onCodeRemove","autoSubmitAfterTimeout","isValidating","setValidating","addCode","then","catch","finally","onKeyDown","preventDefault","onPaste","SecondaryButton","OrderPromoCodesQuery","addCodeMutation","AddOrderPromoMutation","setCartRefresh","addOrderPromoCode","removeCodeMutation","RemoveOrderPromoMutation","promoCodes","codeId","PromoCodeFragment","SelectButtonThemed","selected","undefined","openTimePicker","formats","date0","weekday","hour","minute","_fp","_createTimeSteps","_TimePickerButton","TimePickerContainer","TimePickerDay","steps","useMemo","allSteps","createTimeSteps","step","some","isWithinInterval","days","eachDayOfInterval","stepIdx","setStepIdx","closestIndexTo","useEffectOnce","day","getDate","DateFormat","format","month","isEqual","startOfDay","TimePickerButton","getTime","startOfMinute","timeClampUp","endMinute","endOfMinute","subMinutes","timeClampDown","getMinutes","_formats","Time","formatTime","_CartView","OrderFragment","Col","sm","md","lg","xl","street","houseNumber","city","modalProps","BackgroundThemed","imageName","fallbackColor","fixed","component","otherProps","_reactRouter","redirect","Redirect","_reactGoogleMaps","MapContainerStyled","MapElement","BaseMapContainer","withGoogleMap","model","containerElement","mapElement","GoogleMap","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","streetViewControl","mapTypeControl","fullscreenControl","zoomControlOptions","position","google","maps","ControlPosition","RIGHT_TOP","getMapOptions","ShopStatus","PureComponent","timer","timedUpdate","update","forceUpdate","setTimeout","clearTimeout","status","now","openThresholdInMinutes","closeThresholdInMinutes","decision","isSoon","openingIn","differenceInMinutes","closingIn","threshold","Math","abs","defaultProps","_ShopStatus","closingTimeAlertHidden","hideClosingTime","_ColStyle","_logoCommerce","_logoCommerce2","_logoDoveze","_logoGopay","ColStyle","_useShopStatus","StatusDisplayOpen","StatusDisplayClosed","formatOpenTime","openAtDate","nowDate","isSameDay","deliveryTime","pickupTime","useShopStatus","updateInterval","SECOND","closestBH","closedNote","openSoonThresholdInMinutes","closeSoonThresholdInMinutes","getNow","useNow","useTimer","interval","CenteredButtonContainer","finish","androidApp","iosApp","href","url","PrimaryRoutedButton","textAlign","_FinishView","HeaderThemed","PriceThemed","PriceCornerThemed","orderPayments","hasMethod","Cash","getPaymentInfo","OrderItem","getPaymentPrice","PhoneNumberLinkStyled","a","branch","OrderMethodButton","orderMethod","useOrderMethod","data-testselected","DeliveryTypeEnum","Messenger","identity","Pickup","prefetchPickup","_gps","_AddressInput","_AddressSubmit","_DeliveryMap2","_DeliveryMapPanning","business","setBranch","createDeliveryOrder","when","isValid","validateUserLocation","DeliveryMapPanning","gpsCoordinates","latLng","Marker","defaultDraggable","onDragEnd","latLngToGps","AddressInput","isDeliveryAddress","prefetchFoodMenu","autorun","isReady","panToLocation","_AddToCartModal","_CartContents","_CartIsEmpty","_CartView2","_ChangeCartModal","_useCartRefresh","refetch","CartViewQuery","useCartRefresh","AddToCartModal","ChangeCartModal","CartContents","CartIsEmpty","OrderCartForRecipeQuery","Promise","resolve","_SidedishPicker","_CartOrderButton","SidedishPicker","sidedishId","CartOrderButton","Array","from","PickerButtonStyled","tertiary","tertiaryText","tertiaryHover","onSelect","CartItemButtonStyled","useColor","css","CartItemButtonIcon","onDoubleClick","onRefresh","shouldRefreshCart","_CategoryNavigator","_FoodMenu","_FoodMenuView","_OrderLimitModal","QueryFoodMenu","wareCategories","OrderLimitModal","QueryFoodMenuCartPresence","FoodMenu","reduce","getCartPresence"],"mappings":"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","file":"static/js/1.6cd4dbe9.chunk.js","sourcesContent":["import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { WithRoot } from '../../common/WithRoot'\nimport { QueryOrderForm } from './OrderFormView.graphql'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.SFC<IProps> = props => (\n  <WithRoot\n    render={root => (\n      <QueryOrderForm\n        skip={!root.order.hasOrder || root.user.rememberForm !== null}\n        variables={{ orderId: root.order.orderId! }}\n        renderLoading={() => null}\n        render={({ order }) => (\n          <Observer>\n            {() =>\n              order.countWares > 0 && root.user.rememberForm === null ? (\n                <StorageNotice data-testid=\"orderFormStorageNotice\">\n                  <p>\n                    <Trans>\n                      This app is using secure storage for keeping filled form\n                      data. It's not cookies, these are stored in your browser\n                      only.\n                    </Trans>\n                  </p>\n\n                  <NoticeButton\n                    color=\"success\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberYes}\n                    data-testid=\"orderFormStorageNotice__Yes\"\n                  >\n                    <Trans>Always remember</Trans>\n                  </NoticeButton>\n                  <NoticeButton\n                    color=\"secondary\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberNo}\n                    data-testid=\"orderFormStorageNotice__No\"\n                  >\n                    <Trans>Do not store</Trans>\n                  </NoticeButton>\n                </StorageNotice>\n              ) : null\n            }\n          </Observer>\n        )}\n      />\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderForm } from '../../graph/types'\n\nexport const OrderFormQuery = gql`\n  query GOrderForm($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      countWares\n    }\n  }\n`\n\nexport const QueryOrderForm = buildQuery<\n  GOrderForm.Query,\n  GOrderForm.Variables\n>(OrderFormQuery)\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { useRoot } from '../../common/WithRoot'\n\nexport const OrderErrorModal: React.FC = () => {\n  const { order } = useRoot()\n  return useObserver(() => (\n    <Modal\n      isOpen={order.hasErrors}\n      toggle={order.clearErrors}\n      className=\"modal__container\"\n    >\n      <ModalHeader\n        toggle={order.clearErrors}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>\n          <Trans>Order can not be completed</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {order.hasErrors &&\n            order.submitErrors!.map((error, idx) => (\n              <div key={idx}>{error}</div>\n            ))}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <Button\n            className=\"modal__body__button\"\n            color=\"primary\"\n            onClick={order.clearErrors}\n          >\n            <Trans>I understand</Trans>\n          </Button>\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  ))\n}\n","import { observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useRef } from 'react'\nimport { Button, Collapse } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../common/FormInputCheckbox'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TAgreement } from '../../models/OrderModel'\n\nconst ButtonStyled = styled(Button)`\n  padding: 0 0.5rem;\n  font-size: 0.8rem;\n  color: darkgray;\n`\n\nconst GdprAgreementStyled = styled.div`\n  font-size: 0.8rem !important;\n  color: darkgray;\n  margin: 0.5rem 0 0.5rem 0;\n  & .row {\n    margin: 0;\n  }\n`\n\nconst hideConfirmed = (agreement: TAgreement) => {\n  if (agreement.isConfirmed) {\n    // it's necessary to hide confirmed agreements like this\n    // because react-form already has validation errors stored\n    // for mandatory ones and is unable to forget it by not rendering field\n    return { style: { display: 'none' } }\n  }\n  return {}\n}\n\nexport const OrderAgreements: React.FC = () => {\n  const descOpen = useRef(observable.array<ID>([])).current\n  const toggleId = useCallback(\n    (id: ID) => () => {\n      if (descOpen.includes(id)) {\n        descOpen.remove(id)\n      } else {\n        descOpen.push(id)\n      }\n    },\n    [],\n  )\n  const { order } = useRoot()\n  return useObserver(() => (\n    <>\n      {order.agreements.map((agreement, idx) => (\n        <div key={agreement.id} {...hideConfirmed(agreement)}>\n          <FormInputCheckbox\n            field={['agreements', idx, 'isConfirmed']}\n            validate={checked =>\n              agreement.isMandatory && !(agreement.isConfirmed || checked)\n                ? 'Agreement is mandatory'\n                : null\n            }\n            data-testid={`orderAgreement__Check__${agreement.id}`}\n          >\n            <span dangerouslySetInnerHTML={{ __html: agreement.name }} />\n            {agreement.isMandatory && ' * '}\n            {agreement.description && (\n              <>\n                <ButtonStyled\n                  color=\"link\"\n                  onClick={toggleId(agreement.id)}\n                  data-testid={`orderAgreement__MoreButton__${agreement.id}`}\n                >\n                  {descOpen.includes(agreement.id)\n                    ? i18n.t`Less`.toLocaleLowerCase()\n                    : i18n.t`More...`.toLocaleLowerCase()}\n                </ButtonStyled>\n                <Collapse isOpen={descOpen.includes(agreement.id)}>\n                  <GdprAgreementStyled\n                    data-testid={`orderAgreement__Info__${agreement.id}`}\n                    dangerouslySetInnerHTML={{\n                      __html: agreement.description,\n                    }}\n                  />\n                </Collapse>\n              </>\n            )}\n          </FormInputCheckbox>\n        </div>\n      ))}\n    </>\n  ))\n}\n","import React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\nimport { IOrderFormState } from './OrderFormSetup'\nimport { MAX_LENGTH } from './OrderNoteInput'\n\ninterface IProps {\n  onFill(values: IOrderFormState): void\n}\n\nexport const OrderFormAutoFill: React.SFC<IProps> = ({ onFill }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <SecondaryButton\n      style={{ marginBottom: '0.5rem' }}\n      onClick={() => {\n        const faker: Faker.FakerStatic = require('faker')\n        faker.locale = 'cz'\n        onFill({\n          firstname: faker.name.firstName(),\n          lastname: faker.name.lastName(),\n          email: faker.internet.email(),\n          phone: faker.phone.phoneNumberFormat(0),\n          phonePrefix: '+420',\n          note: faker.lorem.sentence().slice(0, MAX_LENGTH - 1),\n          payment: PaymentGateEnum.Gopay,\n          agreements: [],\n        })\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  ) : null\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport { Field } from 'react-form'\nimport { FormFeedback, FormGroup, FormText, Input } from 'reactstrap'\n\nimport { i18n } from '../../i18n'\n\nexport const MAX_LENGTH = 50\nconst isTooLong = value => value && value.trim().length > MAX_LENGTH\n\nconst OrderNoteInputValidator = value =>\n  isTooLong(value) ? i18n.t`Note is too long` : null\n\nexport const OrderNoteInput: React.SFC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <Field\n      field=\"note\"\n      validate={OrderNoteInputValidator}\n      render={fieldApi => (\n        <FormGroup>\n          <Input\n            type=\"textarea\"\n            placeholder={i18n.t`Note`}\n            title={ingredientsDescription}\n            value={fieldApi.value}\n            onChange={e => fieldApi.setValue(e.target.value)}\n            onBlur={() => fieldApi.setTouched(true)}\n            valid={!fieldApi.error}\n            invalid={Boolean(fieldApi.error)}\n            data-testid=\"orderNoteInput\"\n          />\n          <FormText>{ingredientsDescription}</FormText>\n          {isTooLong(fieldApi.value) ? (\n            <FormFeedback>\n              <Trans>\n                Maximum length is{' '}\n                <Plural value={MAX_LENGTH} other=\"# characters\" />. Typed{' '}\n                <Plural\n                  value={fieldApi.value.length}\n                  one=\"# char\"\n                  other=\"# chars\"\n                />\n              </Trans>\n            </FormFeedback>\n          ) : null}\n        </FormGroup>\n      )}\n    />\n  )\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\nimport OrderPromoInput from './OrderPromoInput'\nimport { OrderTimeButtons } from './OrderTimeButtons'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n    <OrderTimeButtons />\n    <OrderPromoInput />\n  </>\n)\n","import { ApolloError } from 'apollo-client'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {\n  onUserErrors?(errors: string[]): void\n}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  { onUserErrors, ...options }: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(\n        RM.pathEq(['extensions', 'showToUser'], true),\n      )\n      if (onUserErrors) {\n        if (userErrors.length === 0) {\n          onUserErrors([defaultMessage])\n        } else {\n          onUserErrors(userErrors.map(RM.prop('message')))\n        }\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        window.alert(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors && result.errors.length) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      return result.data as TData\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors')\n}\n","import { useDebounceCallback, useRouterContext } from '@speedlo/hooks'\nimport React, { useCallback, useEffect } from 'react'\nimport { Form, IFormApi, IFormState } from 'react-form'\nimport { Form as StrapForm } from 'reactstrap'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { PaymentGateEnum } from '../../graph/types'\nimport { logOrder } from '../../helpers/logger'\nimport { RM } from '../../helpers/ramda'\nimport { reportError } from '../../helpers/sentry'\nimport { TAgreement, TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  render(formApi: IFormApi & IFormState<IOrderFormState>): ReactNode\n}\n\nexport interface IOrderFormState {\n  firstname: string\n  lastname: string\n  email: string\n  phonePrefix: string\n  phone: string\n  note: string\n  payment: PaymentGateEnum\n  agreements: TAgreement[]\n}\n\nfunction getFormValues(orderModel: TOrderModel): IOrderFormState {\n  return {\n    firstname: orderModel.firstname,\n    lastname: orderModel.lastname,\n    email: orderModel.email,\n    phone: orderModel.phone,\n    phonePrefix: orderModel.phonePrefix || orderModel.defaultPhonePrefix,\n    note: orderModel.note,\n    payment: PaymentGateEnum.Gopay,\n    agreements: [],\n  }\n}\n\nconst debounceInterval = 1500\n\nexport const OrderFormSetup: React.FC<IProps> = ({ render }) => {\n  const { order: orderModel } = useRoot()\n  const { history } = useRouterContext()\n\n  useEffect(() => {\n    if (!orderModel.isVamInitialized) {\n      orderModel.initVam()\n    }\n  }, [])\n\n  const updateVam = useCallback(\n    async (formState: IFormState<IOrderFormState>, formApi: IFormApi) => {\n      try {\n        await orderModel.updateVam(formState.values)\n        formApi.setValue(\n          'agreements',\n          mergeFormAgreements(\n            formState.values.agreements,\n            orderModel.agreements,\n          ),\n        )\n      } catch (err) {\n        reportError(err, {\n          formState: formState.values,\n        })\n      }\n    },\n    [],\n  )\n\n  const onChange = useDebounceCallback(updateVam, debounceInterval)\n\n  return (\n    <Form\n      defaultValues={getFormValues(orderModel)}\n      validateOnMount={true}\n      onChange={onChange}\n      onSubmit={async (formState: IOrderFormState) => {\n        try {\n          await orderModel.submitOrder(formState)\n          history.replace(`/finish`)\n        } catch (e) {\n          logOrder(e)\n        }\n      }}\n    >\n      {formApi => (\n        <StrapForm onSubmit={formApi.submitForm}>{render(formApi)}</StrapForm>\n      )}\n    </Form>\n  )\n}\n\nfunction mergeFormAgreements(\n  formValue: TAgreement[],\n  agreements: TAgreement[],\n) {\n  return agreements.map(agreement => {\n    const formAgreement = formValue.find(RM.propEq('id', agreement.id))\n    if (formAgreement) {\n      return { ...agreement, isConfirmed: formAgreement.isConfirmed }\n    }\n    return agreement\n  })\n}\n","import './OrderSubmitLine.css'\n\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  onClick(): void\n  canSubmit: boolean\n}\n\nexport const OrderSubmitLine: React.SFC<IProps> = ({\n  onClick,\n  canSubmit = false,\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <div className=\"order__form__submit__line\">\n        <div className=\"order__form__submit__line__strip\" />\n        <PrimaryButton\n          className=\"order__form__submit__line__button\"\n          color=\"primary\"\n          size=\"md\"\n          onClick={onClick}\n          disabled={!canSubmit || order.isSubmitting}\n          data-testid=\"orderSubmitButton\"\n        >\n          <Desktop>\n            {order.isSubmitting ? (\n              <SubmitSpinner />\n            ) : (\n              i18n.t`Place order`.toLocaleUpperCase()\n            )}\n          </Desktop>\n          <Mobile>{i18n.t`Place order`.toLocaleUpperCase()}</Mobile>\n        </PrimaryButton>\n      </div>\n    )}\n  />\n)\n","import React from 'react'\nimport Spinner from 'react-spinkit'\nimport { withTheme } from 'styled-components'\n\nconst SubmitSpinner = props => (\n  <Spinner name=\"three-bounce\" color={props.theme.primary} fadeIn=\"none\" />\n)\n\nexport default withTheme(SubmitSpinner)\n","import { Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\nimport { useRoot } from '../../common/WithRoot'\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <AlertModal isOpen={orderModel.isGoPayChecking} headerText=\"GoPay platba\">\n      <TextPadding>\n        <Trans>Checking your GoPay payment, please wait...</Trans>\n      </TextPadding>\n      <Pacman noMargin={true} />\n    </AlertModal>\n  ))\n}\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/react'\nimport { isoDate } from '@speedlo/tools'\nimport { addMinutes, isAfter } from 'date-fns'\nimport { observer } from 'mobx-react-lite'\nimport React, { useRef } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport { GOrderTimePicker, MUpdateOrderDeliveryTime } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { useGuardedMutation } from '../../hooks/useGuardedMutation'\nimport { i18n } from '../../i18n'\nimport { TimePicker } from '../timePicker/TimePicker'\nimport {\n  OrderTimePickerQuery,\n  UpdateOrderDeliveryTimeMutation,\n} from './OrderTimePicker.graphql'\n\nexport const OrderTimePicker = observer(() => {\n  const { order } = useRoot()\n\n  const { data, loading } = useQuery<\n    GOrderTimePicker.Query,\n    GOrderTimePicker.Variables\n  >(OrderTimePickerQuery, {\n    variables: { branchId: order.branchId! },\n    suspend: false,\n    skip: !order.hasOrder,\n  })\n\n  const updateOrder = useGuardedMutation<\n    {},\n    MUpdateOrderDeliveryTime.Variables\n  >(UpdateOrderDeliveryTimeMutation, { onUserErrors: order.submitFailed })\n\n  const selectedTime = useRef<Date | undefined>(order.deliverAt)\n  const onConfirmAndClose = () => {\n    const time = selectedTime.current\n    updateOrder({\n      orderId: order.orderId!,\n      deliverAt: time && isoDate(time),\n    })\n    order.setDeliverAt(time)\n    order.closeTimePicker()\n  }\n\n  const getStartTime = () => {\n    const { companyBranch } = data!\n    const openAt =\n      companyBranch.isOpen || !companyBranch.willOpenAt\n        ? new Date()\n        : new Date(companyBranch.willOpenAt)\n    return openAt\n  }\n\n  const getEndTime = () => {\n    const { companyBranch } = data!\n    if (companyBranch.isOpen && companyBranch.willCloseAt) {\n      return new Date(companyBranch.willCloseAt)\n    }\n    const nextBusinessHour = companyBranch.businessHours.find(\n      RM.propEq('closed', false),\n    )\n    return nextBusinessHour ? new Date(nextBusinessHour.closeAt) : null\n  }\n\n  const getFilterIntervals = (): Interval[] => {\n    const { companyBranch } = data!\n    return companyBranch.businessHours\n      .filter(RM.propEq('closed', true))\n      .map(bhour => ({\n        start: new Date(bhour.openAt),\n        end: new Date(bhour.closeAt),\n      }))\n  }\n\n  const getMinuteOffset = () => {\n    const { defaultDeliveryTime, defaultPickupTime } = data!.companyBranch\n\n    if (order.usingDeliveryOrderMethod) {\n      return defaultDeliveryTime\n    }\n    if (order.usingPickupOrderMethod) {\n      return defaultPickupTime\n    }\n\n    return 0\n  }\n\n  const renderModalContent = () => {\n    if (loading || !data) {\n      return null\n    }\n\n    const minDate = getStartTime()\n    const maxDate = getEndTime()\n    if (maxDate === null || isAfter(minDate, maxDate)) {\n      return (\n        <Trans>\n          It's not possible to pick a specific order time at this moment.\n        </Trans>\n      )\n    }\n\n    const minuteOffset = getMinuteOffset()\n\n    return (\n      <TimePicker\n        minuteStep={15}\n        minDate={addMinutes(minDate, minuteOffset)}\n        maxDate={addMinutes(maxDate, minuteOffset)}\n        initialTime={selectedTime.current}\n        filterIntervals={getFilterIntervals()}\n        onStepChange={time => (selectedTime.current = time)}\n      />\n    )\n  }\n\n  const header = order.usingDeliveryOrderMethod\n    ? i18n.t`Deliver at what time?`\n    : i18n.t`When you will pickup the order?`\n\n  return (\n    <Modal\n      isOpen={order.timePickerOpen}\n      toggle={order.closeTimePicker}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader\n        toggle={order.closeTimePicker}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>{header}</span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderModalContent()}</div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <PrimaryButton\n            onClick={onConfirmAndClose}\n            size=\"md\"\n            className=\"modal__body__button\"\n          >\n            {i18n.t`Confirm time`.toLocaleUpperCase()}\n          </PrimaryButton>\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n})\n","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-01.6d4e5108.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-02.8afb6c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-doveze.e13c0122.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-gopay.48aa4030.png\";","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { CartItemFragment, PriceFragment } from '../../graph/fragments.graphql'\nimport { GFinishView } from '../../graph/types'\n\nexport const FinishViewOrderFragment = gql`\n  fragment GFinishViewOrder on Order {\n    id\n    items {\n      ...GCartItem\n      sideDishes {\n        ...GCartItem\n      }\n    }\n    totalSum {\n      ...GPrice\n    }\n    orderPayments {\n      paymentMethod {\n        paymentType {\n          enum\n        }\n      }\n    }\n  }\n  ${CartItemFragment}\n  ${PriceFragment}\n`\n\nexport const FinishViewQuery = gql`\n  query GFinishView($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      ...GFinishViewOrder\n    }\n    companyBranch(id: $branchId) {\n      id\n      phone\n      company {\n        id\n      }\n    }\n    androidApp: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: ANDROID\n    ) {\n      url\n    }\n    iosApp: mobileApplicationSettings(companyBranch: $branchId, platform: IOS) {\n      url\n    }\n  }\n  ${FinishViewOrderFragment}\n`\n\nexport const QueryFinishView = buildQuery<\n  GFinishView.Query,\n  GFinishView.Variables\n>(FinishViewQuery)\n","import './AddressInput.css'\n\nimport { Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TLocationModel } from '../../models/LocationModel'\nimport GeolocationButton from './GeolocationButton'\nimport ResolvedAddress from './ResolvedAddress'\nimport SearchInput from './SearchInput'\n\nconst AddressInputStyled = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n`\n\nconst AddressInputBoxStyled = styled.div`\n  border-radius: 1rem;\n  border: 1px solid #d4d4d4;\n  background-color: white;\n  height: 2.3rem;\n  overflow: hidden;\n  & input {\n    margin: 0.2rem 2rem 0.5rem 0.7rem;\n    background: transparent;\n    border: none;\n  }\n`\n\nexport const AddressInput: React.FC = () => {\n  const { location } = useRoot()\n  return useObserver(() => (\n    <AddressInputStyled>\n      <AddressInputBoxStyled>\n        <InputGroup size=\"sm\">\n          <ResolvedAddress\n            address={location.address || ''}\n            isVisible={location.hasAddress}\n            isResolving={location.isResolving}\n            onValidClick={location.clearAddress}\n          />\n          <SearchInput\n            inputProps={{\n              placeholder: i18n.t`Type address or choose it from map`,\n              autoComplete: 'shipping street-address',\n            }}\n            onSearch={location.withUserAddress}\n            isVisible={!location.hasAddress}\n            isSearching={location.isResolving}\n          />\n          <GeolocationButton\n            onClick={location.attemptGeolocation}\n            isVisible={location.isGeolocationAvailable && !location.isResolving}\n          />\n        </InputGroup>\n      </AddressInputBoxStyled>\n      {location.hasFinishedSearch ? renderErrorMessage(location) : null}\n    </AddressInputStyled>\n  ))\n}\n\nconst NoMouseAlert = styled(Alert)`\n  pointer-events: none;\n`\n\nfunction renderErrorMessage(location: TLocationModel) {\n  if (location.isResolved === false) {\n    return (\n      <NoMouseAlert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </NoMouseAlert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport { InputGroupAddon } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  isVisible: boolean\n  onClick(): void\n}\n\nconst Container = styled.span`\n  color: ${({ theme }) => theme.secondary};\n  cursor: pointer;\n  position: absolute;\n  right: 0.4rem;\n  top: 0.15rem;\n`\n\nexport const GeolocationButton: React.SFC<IProps> = ({\n  onClick,\n  isVisible = false,\n}) =>\n  isVisible ? (\n    <Container>\n      <InputGroupAddon addonType=\"append\" onClick={onClick}>\n        <span className=\"flaticon-gps\" />\n      </InputGroupAddon>\n    </Container>\n  ) : null\n\nexport default GeolocationButton\n","import React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.SFC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  if (isResolving) {\n    return (\n      <div className=\"address__input__box__resolved wait\">\n        <Spinner name=\"ball-beat\" fadeIn=\"none\" />\n      </div>\n    )\n  }\n  if (!isVisible) {\n    return null\n  }\n  return (\n    <div className=\"address__input__box__resolved\" onClick={onValidClick}>\n      {address}\n    </div>\n  )\n}\n\nexport default ResolvedAddress\n","import classnames from 'classnames'\nimport debounce from 'debounce'\nimport React, { Component } from 'react'\nimport { Input } from 'reactstrap'\n\ninterface IProps {\n  onSearch(search: string): void\n  isVisible: boolean\n  isSearching: boolean\n  inputProps: Object\n}\n\ninterface IState {\n  value: string\n}\n\nclass SearchInput extends Component<IProps, IState> {\n  state = { value: '' }\n  componentDidMount() {\n    this.setFocus()\n  }\n  componentDidUpdate(nextProps: IProps) {\n    if (nextProps.isVisible !== this.props.isVisible) {\n      this.setFocus()\n    }\n  }\n  onSearch = debounce(this.props.onSearch, 2000)\n  onChange = ev => {\n    const value = ev.target.value || ''\n    this.setState({ value })\n    this.onSearch(value.trim())\n  }\n  onKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      this.onSearch.clear()\n      this.props.onSearch(this.state.value.trim())\n    }\n  }\n  inputRef: Maybe<HTMLInputElement> = null\n  onInputMount = (ref: HTMLInputElement) => {\n    this.inputRef = ref\n  }\n  isVisible() {\n    return this.props.isVisible !== false\n  }\n  isSearching() {\n    return this.props.isSearching !== false\n  }\n  setFocus() {\n    if (this.isVisible() && this.inputRef !== null) {\n      this.inputRef.focus()\n    }\n  }\n  render() {\n    const { inputProps } = this.props\n    const isHidden = !this.isVisible() || this.isSearching()\n    return (\n      <Input\n        className={classnames({ address__input__hidden: isHidden })}\n        onChange={this.onChange}\n        onKeyPress={this.onKeyPress}\n        value={this.state.value}\n        innerRef={this.onInputMount}\n        autoFocus={true}\n        {...inputProps}\n      />\n    )\n  }\n}\n\nexport default SearchInput\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n  onPrefetch(): void\n}\n\nexport const AddressSubmit: React.SFC<IProps> = ({\n  enabled,\n  onClick,\n  onPrefetch,\n}) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      onMouseEnter={() => enabled && onPrefetch()}\n    >\n      {i18n.t`Confirm address`.toLocaleUpperCase()}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import gql from 'graphql-tag'\n\nexport const InitialMapLocationQuery = gql`\n  query GInitialLocation {\n    initialLocation: resolveLocation {\n      gpsCoordinates {\n        latitude\n        longitude\n      }\n    }\n  }\n`\n","import { useFullComputed } from '@speedlo/hooks'\nimport { reaction } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GeoPoint } from '../../helpers/gps'\nimport { logMap } from '../../helpers/logger'\nimport { MapPanning } from './atoms/MapPanning'\n\ninterface IProps {\n  initialLocation: Maybe<GeoPoint>\n}\n\nexport const DeliveryMapPanning: React.SFC<IProps> = ({ initialLocation }) => {\n  const { location, map } = useRoot()\n\n  useDisposable(() =>\n    reaction(\n      () => map.clickPoint,\n      clickPoint => {\n        if (clickPoint) {\n          location.withUserLocation(clickPoint)\n          map.clearClickPoint()\n        }\n      },\n    ),\n  )\n\n  const panToGps = useFullComputed(\n    () => {\n      if (location.geoPoint) {\n        logMap('pan to user location', location.geoPoint)\n        return location.geoPoint\n      } else if (location.geolocationPoint) {\n        logMap('pan to geolocation', location.geolocationPoint)\n        return location.geolocationPoint\n      } else if (initialLocation) {\n        logMap('pan to initial location', initialLocation)\n        return initialLocation\n      }\n      logMap('no pan location available')\n      return\n    },\n    [initialLocation],\n  )\n\n  return useObserver(() => <MapPanning gps={panToGps.get()} map={map} />)\n}\n","import './SidedishPicker.css'\n\nimport { Observer } from 'mobx-react'\nimport React, { Fragment } from 'react'\n\nimport { GCartRecipe } from '../../graph/types'\n\nimport CategoryValidationMessage from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment\n  selection: ReadonlyArray<ID>\n  onToggle(item: ID): void\n}\n\nexport const SidedishPicker: React.SFC<IProps> = ({\n  recipe,\n  selection,\n  onToggle,\n}) => (\n  <Observer>\n    {() => (\n      <div className=\"food__sidedish__picker\">\n        {recipe.categories.map(category => (\n          <Fragment key={category.id}>\n            <div className=\"food__sidedish__picker__category\">\n              {category.nameLabel}{' '}\n              <CategoryValidationMessage\n                minCount={category.minCount}\n                maxCount={category.maxCount}\n              />\n            </div>\n            {category.sideDishes.map(sidedish => (\n              <SidedishCheckbox\n                key={`${sidedish.id}-${category.id}`}\n                sidedish={sidedish}\n                isSelected={selection.includes(sidedish.id)}\n                canBeSelected={true}\n                onClick={() => onToggle(sidedish.id)}\n              />\n            ))}\n          </Fragment>\n        ))}\n      </div>\n    )}\n  </Observer>\n)\n","import React from 'react'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n}\n\nconst CategoryValidationMessage: React.SFC<IProps> = ({\n  minCount,\n  maxCount,\n}) => {\n  let message = ''\n  // if (minCount === 0) {\n  //   if (maxCount > 0) {\n  //     message = `(maximálně ${maxCount})`\n  //   }\n  // }\n  // if (maxCount === 0) {\n  //   message = `(minimálně ${minCount})`\n  // } else {\n  //   message = `(minimálně ${minCount} a maximálně ${maxCount})`\n  // }\n  return <span>{message}</span>\n}\n\nexport default CategoryValidationMessage\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { GCartRecipe } from '../../graph/types'\n\ninterface IProps extends ButtonProps {\n  sidedish: GCartRecipe.SideDishes\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Name = styled.div`\n  float: left;\n  text-align: left;\n  white-space: normal;\n  max-width: 13rem;\n`\n\nconst Price = styled.div`\n  font-weight: bold;\n  float: right;\n`\n\nexport const SidedishCheckbox: React.FC<IProps> = ({\n  sidedish,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"17.5rem\"\n    data-testid={`sidedishCheckbox__${sidedish.id}`}\n    {...buttonProps}\n  >\n    <Name>{sidedish.nameLabel}</Name>\n    <Price>{sidedish.price.formattedValue}</Price>\n  </PickerButton>\n)\n","import { observable } from 'mobx'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ID[]\n  onConfirm(): Promise<void>\n  enabled: boolean\n}\n\nexport const CartOrderButton: React.SFC<IProps> = ({\n  selection,\n  onConfirm,\n}) => {\n  const isConfirming = observable.box(false)\n\n  return (\n    <Observer>\n      {() => (\n        <PrimaryButton\n          className=\"modal__body__button\"\n          disabled={isConfirming.get()} /*!cartFood.isValid*/\n          data-testid=\"cartOrderButton\"\n          onClick={async () => {\n            isConfirming.set(true)\n            await onConfirm()\n            isConfirming.set(false)\n          }}\n        >\n          {i18n\n            .plural({\n              value: selection.length,\n              0: 'Order without sidedish',\n              one: 'Order with this sidedish',\n              other: 'Order with # sidedishes',\n            })\n            .toLocaleUpperCase()}\n        </PrimaryButton>\n      )}\n    </Observer>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GCartView } from '../../graph/types'\nimport { CartDiscounts } from './CartDiscounts'\nimport { CartItem } from './CartItem'\nimport { CartTotals } from './CartTotals'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nexport const CartContents: React.FC<IProps> = ({ order }) => {\n  const { order: orderModel } = useRoot()\n\n  return useObserver(() => (\n    <div className=\"cart__items__container\">\n      <div className=\"cart__items__container__content\">\n        {order.items.map(item => (\n          <CartItem\n            key={item.id}\n            item={item}\n            isActive={orderModel.lastActiveRecipeId === item.recipe.id}\n            onEdit={() => orderModel.setUsedRecipeId(item.recipe.id)}\n          />\n        ))}\n        <CartDiscounts order={order} />\n        <CartTotals order={order} />\n      </div>\n    </div>\n  ))\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { GCartView } from '../../graph/types'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nexport const CartDiscounts: React.SFC<IProps> = ({ order }) =>\n  order.discounts && order.discounts.length > 0 ? (\n    <div>\n      {order.discounts.map(\n        ({ code, description, price: { formattedValue } }) => (\n          <div key={code} className=\"cart__item__summary\">\n            <div className=\"cart__item__summary__label\">{description}</div>\n            <div className=\"cart__item__summary__price\">{formattedValue}</div>\n          </div>\n        ),\n      )}\n      <div className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">\n          <Trans>Total discount</Trans>\n        </div>\n        <div className=\"cart__item__summary__price\">\n          {order.totalDiscount.formattedValue}\n        </div>\n      </div>\n    </div>\n  ) : null\n","import './CartItem.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Desktop } from '../../common/Responsive'\nimport { GOrder } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { EditCartItemButton } from './EditCartItemButton'\nimport { RemoveCartItemButton } from './RemoveCartItemButton'\n\ninterface IProps {\n  item: GOrder.Items\n  isActive: boolean\n  onEdit(): void\n}\n\nconst EditButtonsContainerStyled = styled.div`\n  flex: 0 0 auto;\n`\n\nconst CartItemStyled = styled.div`\n  width: 100%;\n  min-height: 3rem;\n  color: #1d1d1d;\n  margin: 0 0 0.4rem 0;\n  padding: 0.2rem;\n  background: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'rgba(255, 255, 255, 0.8)'};\n  text-align: left;\n  display: flex;\n`\n\nexport const CartItem: React.SFC<IProps> = ({ item, isActive, onEdit }) => (\n  <CartItemStyled isActive={isActive}>\n    <EditButtonsContainerStyled>\n      <RemoveCartItemButton itemId={item.id} enabled={!item.automatic} />\n\n      <Desktop>\n        <EditCartItemButton\n          itemId={item.id}\n          enabled={item.recipe.sideDishCount !== 0 && !item.automatic}\n          onClick={onEdit}\n        />\n      </Desktop>\n    </EditButtonsContainerStyled>\n\n    <div className=\"cart__item__description\">\n      <div\n        className=\"cart__item__item__name\"\n        data-testid={`cardItem__Name__${item.recipe.id}`}\n      >\n        {item.recipe.nameLabel}\n      </div>\n      <div\n        className=\"cart__item__item__side__dish\"\n        data-testid={`cardItem__SideDish__${item.recipe.id}`}\n      >\n        {item.sideDishes.length > 0\n          ? `+ ${item.sideDishes\n              .map(({ recipe }) => recipe.nameLabel)\n              .join(',')}`\n          : item.recipe.sideDishCount > 0 && (\n              <span>{i18n.t`Without sidedish`.toLocaleLowerCase()}</span>\n            )}\n      </div>\n    </div>\n\n    <div\n      className=\"cart__item__item__price\"\n      data-testid={`cardItem__Price__${item.id}`}\n    >\n      {item.automatic ? i18n.t`For free` : item.price.formattedValue}\n    </div>\n  </CartItemStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n  onClick(): void\n}\n\nexport const EditCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  onClick,\n  ...props\n}) => {\n  const button = <CartItemButton icon=\"edit\" color=\"#d9a700\" {...props} />\n  return props.enabled ? (\n    <Link\n      to={`/order/change/${itemId}`}\n      onClick={onClick}\n      data-testid={`editCartItemButton__${itemId}`}\n    >\n      {button}\n    </Link>\n  ) : (\n    button\n  )\n}\n","import React, { useRef } from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n}\n\nexport const RemoveCartItemButton: React.FC<IProps> = ({ itemId, enabled }) => {\n  const { order: orderModel } = useRoot()\n  const clickedRef = useRef(false)\n  return (\n    <CartItemButton\n      icon=\"delete\"\n      color=\"#99230e\"\n      enabled={enabled && !clickedRef.current}\n      data_testid={`removeCartItemButton`}\n      onClick={() => {\n        if (!clickedRef.current) {\n          orderModel.removeItemFromCart(itemId)\n        }\n        clickedRef.current = true\n      }}\n    />\n  )\n}\n","import Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GCartView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nconst CartItemSummaryTotalThemed = styled.div`\n  background: ${({ theme }) =>\n    Color(theme.primary)\n      .alpha(0.7)\n      .hsl()\n      .string()} !important;\n`\n\nexport const CartTotals: React.SFC<IProps> = ({ order }) => (\n  <div>\n    {order.coverPrice && order.coverPrice.value ? (\n      <div key=\"casePrice\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Covers`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.coverPrice.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    {order.transportFee && order.transportFee.value ? (\n      <div key=\"transportFee\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Delivery`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.transportFee.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    <CartItemSummaryTotalThemed\n      key=\"totalPrice\"\n      className=\"cart__item__summary cart__item__summary__total\"\n    >\n      <div className=\"cart__item__summary__label\">{i18n.t`Total`}</div>\n      <div\n        className=\"cart__item__summary__price\"\n        data-testid={`cardItemSummary__Price`}\n      >\n        {order.totalSum.formattedValue}\n      </div>\n    </CartItemSummaryTotalThemed>\n  </div>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { i18n } from '../../i18n'\n\nconst CartIsEmptyThemed = styled.span`\n  color: ${({ theme }) => theme.secondary};\n`\n\nexport const CartIsEmpty = () => (\n  <CartIsEmptyThemed\n    className=\"cart__column__cart__empty__label\"\n    data-testid=\"cartIsEmpty\"\n  >\n    {`${i18n.t`Cart is empty`}...`}\n  </CartIsEmptyThemed>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForItem } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { OrderCartForItemQuery } from '../../models/OrderModel.graphql'\nimport { CartModal } from './CartModal'\n\nconst QueryCart = buildQuery<\n  GOrderCartForItem.Query,\n  GOrderCartForItem.Variables\n>(OrderCartForItemQuery)\n\nexport const ChangeCartModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return (\n    <Route\n      path=\"/order/change/:itemId\"\n      render={({ match, history }) => (\n        <QueryCart\n          variables={{ itemId: match.params.itemId }}\n          renderLoading={false}\n          renderError={() => (\n            <Alert color=\"warning\">\n              <Trans>Error in loading cart item. Issue was reported.</Trans>\n            </Alert>\n          )}\n          render={(data, { loading }) => (\n            <CartModal\n              recipe={data.item && data.item.recipe}\n              initialSelection={\n                data.item\n                  ? (data.item.sideDishes.map(\n                      RM.path(['recipe', 'id']),\n                    ) as string[])\n                  : []\n              }\n              onConfirm={sideDishes =>\n                orderModel.updateItem(match.params.itemId, sideDishes)\n              }\n              onClose={() => history.goBack()}\n              isLoading={loading}\n            />\n          )}\n        />\n      )}\n    />\n  )\n}\n","import './CategoryNavigator.css'\n\nimport classNames from 'classnames'\nimport React, { useState } from 'react'\nimport Scroll from 'react-scroll'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenuCategory.Fragment>\n}\n\nconst CategoryNavigatorContainer = styled.div`\n  background-color: #d4d4d4;\n  border-top-left-radius: 0.6rem;\n  padding: 0.7rem 0.5rem 0 0.2rem;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  user-select: none;\n  display: flex;\n  ${mediaDesktop`\n    flex-wrap: wrap;\n  `}\n  ${mediaMobile`\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n    box-shadow: inset -15px -5px 15px -14px rgba(0, 0, 0, 0.6);\n    margin: 0;\n    border-top-left-radius: 0;\n    background-color: #f3f3f3;\n    opacity: 0.94;\n  `}\n`\n\nconst CategoryNavigator: React.FC<IProps> = ({ categories }) => {\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0)\n  return (\n    <CategoryNavigatorContainer>\n      {categories.length === 0\n        ? null\n        : categories.map((category, idx) => (\n            <Scroll.Link\n              to={category.nameLabel}\n              key={category.id}\n              className={classNames('category__navigator__scroll__link', {\n                active: activeCategoryIndex === idx,\n              })}\n              onSetActive={() => setActiveCategoryIndex(idx)}\n              offset={-168}\n              smooth={true}\n              spy={true}\n              data-testid={`categoryNavigatorScrollLink__${category.id}`}\n            >\n              <div className=\"category__navigator__scroll__link__circle\">\n                <span className={`flaticon-${category.pictogram}`} />\n              </div>\n              <div className=\"category__navigator__scroll__link__description\">\n                <Truncate lines={2}>{category.nameLabel}</Truncate>\n              </div>\n            </Scroll.Link>\n          ))}\n    </CategoryNavigatorContainer>\n  )\n}\n\nexport default CategoryNavigator\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenu } from '../../graph/types'\nimport { TRootModel } from '../../models/RootModel'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenu.WareCategories>\n  inCart: { [recipeId: string]: number }\n  orderItemCount: number\n  shouldUpdate: boolean\n  rootModel: TRootModel\n}\n\nconst FoodMenuStyled = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n`\n\nconst FoodMenuListStyled = styled.div`\n  ${mediaDesktop`\n    margin: 0 1.4rem 1rem 1.6rem;\n    padding: 2rem 0 2rem 0;\n  `};\n  ${mediaMobile`\n    margin: 0 0.7rem 1rem 0.7rem;\n    padding: 0 0 4rem 0;\n  `};\n`\n\nexport class FoodMenu extends React.Component<IProps> {\n  shouldComponentUpdate({ shouldUpdate }: IProps) {\n    return shouldUpdate\n  }\n  orderLimitReached() {\n    const {\n      orderItemCount,\n      rootModel: { config },\n    } = this.props\n    return orderItemCount >= config.orderItemsMax\n  }\n  render() {\n    const {\n      categories,\n      inCart,\n      rootModel: { order, user },\n    } = this.props\n    const canAddToCart = !this.orderLimitReached()\n    return (\n      <FoodMenuStyled>\n        <FoodMenuListStyled>\n          {categories.length === 0 ? (\n            <h3>\n              <Trans>Food menu is empty. We are sorry.</Trans>\n            </h3>\n          ) : (\n            <Observer>\n              {() =>\n                categories.map(category => (\n                  <FoodCategory key={category.id} category={category}>\n                    {category.recipes.map(recipe => (\n                      <FoodMenuItem\n                        key={recipe.id}\n                        recipe={recipe}\n                        inCart={inCart[recipe.id] || 0}\n                        isActive={order.lastActiveRecipeId === recipe.id}\n                        canAddToCart={canAddToCart}\n                        onClick={() => {\n                          if (canAddToCart) {\n                            order.setUsedRecipeId(recipe.id)\n                          } else {\n                            user.showOrderLimit()\n                          }\n                        }}\n                        onPrefetch={() => {\n                          if (recipe.sideDishCount > 0) {\n                            order.prefetchFood(recipe.id)\n                          }\n                        }}\n                      />\n                    ))}\n                  </FoodCategory>\n                ))\n              }\n            </Observer>\n          )}\n        </FoodMenuListStyled>\n      </FoodMenuStyled>\n    )\n  }\n}\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\nimport { FoodInCart } from './types'\n\ninterface IProps {\n  category: GFoodMenuCategory.Fragment\n  foodInCart?: FoodInCart\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.SFC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default FoodCategory\n","import './FoodMenuItem.css'\n\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { GFoodMenuRecipe } from '../../graph/types'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { LinkToCart } from './LinkToCart'\n\ninterface IProps {\n  recipe: GFoodMenuRecipe.Fragment\n  inCart: number\n  isActive: boolean\n  onClick(): void\n  onPrefetch(): void\n  canAddToCart: boolean\n}\n\nconst FoodMenuItemStyled = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  position: relative;\n  min-height: 6rem;\n  &:hover {\n    background-color: #c9e8d7;\n  }\n  background-color: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'white'};\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItemCount = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n  float: left;\n  position: absolute;\n  left: -1.2rem;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  border-radius: 1.8rem;\n  font-size: 0.9rem;\n  ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n`\n\nconst FoodMenuItem: React.SFC<IProps> = ({\n  recipe,\n  inCart,\n  onPrefetch,\n  isActive,\n  onClick,\n  canAddToCart,\n}) => (\n  <LinkToCart\n    recipeId={recipe.id}\n    hasSidedish={recipe.sideDishCount > 0}\n    canAddToCart={canAddToCart}\n    onClick={onClick}\n    data-testid={`foodMenuItem__${recipe.id}`}\n  >\n    <FoodMenuItemStyled onMouseEnter={onPrefetch} isActive={isActive}>\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {inCart > 0 ? <FoodMenuItemCount>{`${inCart}x`}</FoodMenuItemCount> : ''}\n      <h4>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </FoodMenuItemStyled>\n  </LinkToCart>\n)\n\nexport default FoodMenuItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { WithRoot } from '../../common/WithRoot'\n\nimport { Mobile } from '../../common/Responsive'\n\ninterface IProps {\n  recipeId: string\n  canAddToCart: boolean\n  hasSidedish: boolean\n  onClick(): void\n}\n\nconst LinkStyled = styled(Link)`\n  color: inherit;\n  &:visited div {\n    border: inherit;\n  }\n`\n\nexport const LinkToCart: React.SFC<IProps> = ({\n  recipeId,\n  hasSidedish,\n  canAddToCart,\n  onClick,\n  children,\n}) => {\n  if (!canAddToCart) {\n    return <div onClick={onClick}>{children}</div>\n  }\n  if (hasSidedish) {\n    return (\n      <LinkStyled to={{ pathname: `/order/add/${recipeId}` }} onClick={onClick}>\n        {children}\n      </LinkStyled>\n    )\n  }\n  return (\n    <WithRoot\n      render={({ order }) => (\n        <Mobile>\n          {isMobile => (\n            <div\n              onClick={() => {\n                onClick()\n                isMobile\n                  ? order.addFromRecipeMobile(recipeId)\n                  : order.addFromRecipe(recipeId)\n              }}\n            >\n              {children}\n            </div>\n          )}\n        </Mobile>\n      )}\n    />\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  field: FieldType\n  defaultValue?: boolean\n  validate?(value: boolean): string | null\n}\n\nconst CheckboxContainerStyled = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n`\n\nconst CheckboxStyled = styled(Input)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: white;\n  border: 1px solid;\n  border-color: ${({ invalid }: { invalid: boolean }) =>\n    invalid ? 'red' : '#c5c5c5'};\n  width: 2rem;\n  height: 2rem;\n  min-width: 2rem;\n  border-radius: 0.25rem;\n  position: relative;\n  margin: 0;\n  outline: none;\n  &:checked {\n    background-color: white;\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: #1d1d1d;\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  margin: 0 0 0 0.8rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.SFC<IProps> = ({\n  field,\n  defaultValue = false,\n  validate,\n  children,\n  ...props\n}) => (\n  <Field field={field} defaultValue={defaultValue} validate={validate}>\n    {fieldApi => (\n      <CheckboxContainerStyled>\n        <CheckboxStyled\n          type=\"checkbox\"\n          value={fieldApi.value}\n          onChange={checked => fieldApi.setValue(checked.target.checked)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n          {...props}\n        />\n        <LabelStyled>{children}</LabelStyled>\n      </CheckboxContainerStyled>\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nconst emailRx = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\nexport const OrderEmailInputValidator = value => {\n  const email = value.trim()\n  if (email === '') {\n    return i18n.t`E-mail is mandatory`\n  }\n  if (!emailRx.test(email)) {\n    return i18n.t`E-mail format is not valid`\n  }\n  return null\n}\n\nexport const OrderEmailInput: React.SFC = () => (\n  <FormGroup>\n    <FormTextInput\n      field=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder=\"E-mail\"\n      showFeedback={true}\n      validate={OrderEmailInputValidator}\n      data-testid=\"orderEmailInput\"\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n        validate={value =>\n          value.trim() === '' ? i18n.t`First name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__FirstName\"\n      />\n      <FormTextInput\n        field=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n        validate={value =>\n          value.trim() === '' ? i18n.t`Last name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__LastName\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone is mandatory` : null\n\nexport const OrderPhonePrefixInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone prefix is mandatory` : null\n\nexport const OrderPhoneInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"phonePrefix\"\n        autoComplete=\"tel-country-code\"\n        placeholder=\"+\"\n        validate={OrderPhonePrefixInputValidator}\n      />\n      <FormTextInput\n        field=\"phone\"\n        type=\"tel\"\n        autoComplete=\"tel-national\"\n        placeholder={i18n.t`Phone`}\n        validate={OrderPhoneInputValidator}\n        style={{ width: '55%' }}\n        data-testid=\"orderPhoneInput__Phone\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { KeyboardEvent, useCallback, useRef, useState } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport {\n  GOrderPromoCodes,\n  GPromoCode,\n  MAddOrderPromo,\n  MRemoveOrderPromo,\n} from '../../graph/types'\nimport { useGuardedMutation } from '../../hooks/useGuardedMutation'\nimport { i18n } from '../../i18n'\nimport {\n  AddOrderPromoMutation,\n  OrderPromoCodesQuery,\n  RemoveOrderPromoMutation,\n} from './OrderPromoInput.graphql'\n\ntype TPromoCode = GPromoCode.Fragment\n\ninterface IProps {\n  codes: ReadonlyArray<TPromoCode>\n  onCodeAdd(codeInput: string): Promise<void>\n  onCodeRemove(codeId: ID): void\n  autoSubmitAfterTimeout?: number\n}\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport function OrderPromoInputUI({\n  codes,\n  onCodeAdd,\n  onCodeRemove,\n  autoSubmitAfterTimeout = 2000,\n}: IProps) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isValidating, setValidating] = useState(false)\n\n  const addCode = useCallback(\n    () => {\n      if (inputRef.current && !inputRef.current.disabled) {\n        const code = inputRef.current.value.trim()\n        if (code.length > 0) {\n          setValidating(true)\n          inputRef.current.disabled = true\n          inputRef.current.value = i18n.t`Validating promo code ${code}...`\n          onCodeAdd(code)\n            .then(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.value = ''\n              }\n            })\n            .catch(() => {\n              if (inputRef.current) {\n                inputRef.current.value = code\n              }\n            })\n            .finally(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.disabled = false\n                inputRef.current.focus()\n              }\n            })\n        }\n      }\n    },\n    [onCodeAdd],\n  )\n\n  const onChange = useDebounceCallback(addCode, autoSubmitAfterTimeout)\n\n  const onKeyDown = useCallback((ev: KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === 'Enter') {\n      addCode()\n      ev.preventDefault()\n    }\n  }, [])\n\n  return (\n    <FormGroup>\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          disabled={isValidating}\n          placeholder={i18n.t`Promo codes`}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          onBlur={addCode}\n          onPaste={addCode}\n        />\n      </InputGroup>\n      <CodesPanel>\n        {codes.map(({ id, code }) => (\n          <SecondaryButton key={id} onClick={() => onCodeRemove(id)}>\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  )\n}\n\nconst OrderPromoInput: React.FC = () => {\n  const { order } = useRoot()\n\n  const { data } = useQuery<GOrderPromoCodes.Query, GOrderPromoCodes.Variables>(\n    OrderPromoCodesQuery,\n    {\n      suspend: false,\n      variables: { orderId: order.orderId! },\n    },\n  )\n\n  const addCodeMutation = useGuardedMutation<\n    MAddOrderPromo.Mutation,\n    MAddOrderPromo.Variables\n  >(AddOrderPromoMutation, { onUserErrors: order.submitFailed })\n\n  const onCodeAdd = useCallback(async (code: string) => {\n    if (!order.orderId) {\n      return\n    }\n    const result = await addCodeMutation({\n      orderId: order.orderId!,\n      code: code,\n    })\n    order.setCartRefresh(true)\n    if (result && result.addOrderPromoCode.userErrors.length) {\n      order.submitFailed(result.addOrderPromoCode.userErrors)\n    }\n  }, [])\n\n  const removeCodeMutation = useGuardedMutation<\n    MRemoveOrderPromo.Mutation,\n    MRemoveOrderPromo.Variables\n  >(RemoveOrderPromoMutation, { onUserErrors: order.submitFailed })\n\n  const onCodeRemove = (codeId: ID) => {\n    if (order.orderId) {\n      order.setCartRefresh(true)\n      removeCodeMutation({ codeId, orderId: order.orderId })\n    }\n  }\n\n  return (\n    <OrderPromoInputUI\n      codes={data && data.order ? data.order.promoCodes : []}\n      onCodeAdd={onCodeAdd}\n      onCodeRemove={onCodeRemove}\n    />\n  )\n}\n\nexport default OrderPromoInput\n","import gql from 'graphql-tag'\n\nimport { PromoCodeFragment } from '../../graph/fragments.graphql'\n\nexport const OrderPromoCodesQuery = gql`\n  query GOrderPromoCodes($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const AddOrderPromoMutation = gql`\n  mutation MAddOrderPromo($orderId: ID!, $code: String!) {\n    addOrderPromoCode(order: $orderId, promoCode: $code) {\n      userErrors: errors\n      order {\n        id\n        promoCodes {\n          ...GPromoCode\n        }\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const RemoveOrderPromoMutation = gql`\n  mutation MRemoveOrderPromo($orderId: ID!, $codeId: ID!) {\n    removeOrderPromoCode(order: $orderId, promoCode: $codeId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n","import './OrderPaymentMethod.css'\n\nimport { DateFormat, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\n\nexport const OrderTimeButtons: React.FC = () => {\n  const { order } = useRoot()\n\n  return useObserver(() => (\n    <div className=\"order__payment__method\">\n      <SelectButtonThemed\n        data-testid=\"orderTimeButtonNow\"\n        selected={order.deliverAt === undefined}\n        onClick={() => order.setDeliverAt(undefined)}\n      >\n        {i18n.t`When possible`}\n      </SelectButtonThemed>\n      <SelectButtonThemed\n        data-testid=\"orderTimeButtonLater\"\n        selected={order.deliverAt !== undefined}\n        onClick={order.openTimePicker}\n      >\n        {order.deliverAt ? (\n          <Trans>\n            at{' '}\n            <DateFormat\n              value={order.deliverAt}\n              format={{ weekday: 'long', hour: 'numeric', minute: 'numeric' }}\n            />\n          </Trans>\n        ) : (\n          i18n.t`Choose time`\n        )}\n      </SelectButtonThemed>\n    </div>\n  ))\n}\n","import { DateFormat } from '@lingui/react'\nimport { useEffectOnce } from '@speedlo/hooks'\nimport {\n  closestIndexTo,\n  eachDayOfInterval,\n  isEqual,\n  startOfDay,\n} from 'date-fns'\nimport { isWithinInterval } from 'date-fns/fp'\nimport React, { Fragment, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { createTimeSteps } from './createTimeSteps'\nimport { TimePickerButton } from './TimePickerButton'\n\ninterface IProps {\n  minDate: Date\n  maxDate: Date\n  minuteStep: number\n  onStepChange(step: Date): void\n  initialTime?: Date\n  filterIntervals?: Interval[]\n}\n\nconst TimePickerContainer = styled.div`\n  margin-top: 1rem;\n`\n\nconst TimePickerDay = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: left;\n  margin: 0 0 0.2rem 0.2rem;\n`\n\nexport const TimePicker: React.FC<IProps> = ({\n  minDate,\n  maxDate,\n  minuteStep,\n  onStepChange,\n  initialTime,\n  filterIntervals = [],\n}) => {\n  const steps = useMemo(\n    () => {\n      const allSteps = createTimeSteps(minDate, maxDate, minuteStep)\n      if (filterIntervals.length) {\n        return allSteps.filter(step =>\n          filterIntervals.some(isWithinInterval(step)),\n        )\n      }\n      return allSteps\n    },\n    [minDate, maxDate, minuteStep, filterIntervals],\n  )\n\n  const days = useMemo(\n    () => {\n      return eachDayOfInterval({ start: minDate, end: maxDate })\n    },\n    [minDate, maxDate],\n  )\n\n  const [stepIdx, setStepIdx] = useState(0)\n\n  useEffect(\n    () => {\n      if (initialTime) {\n        setStepIdx(closestIndexTo(initialTime, steps))\n      }\n    },\n    [initialTime],\n  )\n\n  useEffectOnce(() => {\n    onStepChange(steps[stepIdx])\n  })\n\n  return (\n    <TimePickerContainer>\n      {days.map(day => (\n        <Fragment key={day.getDate()}>\n          <TimePickerDay>\n            <DateFormat\n              value={day}\n              format={{ month: 'long', day: 'numeric', weekday: 'long' }}\n            />\n          </TimePickerDay>\n          {steps.map((step, idx) =>\n            isEqual(day, startOfDay(step)) ? (\n              <TimePickerButton\n                key={step.getTime()}\n                time={step}\n                isSelected={idx === stepIdx}\n                canBeSelected={true}\n                onClick={() => {\n                  setStepIdx(idx)\n                  onStepChange(step)\n                }}\n              />\n            ) : null,\n          )}\n        </Fragment>\n      ))}\n    </TimePickerContainer>\n  )\n}\n","import {\n  addMinutes,\n  endOfMinute,\n  getMinutes,\n  startOfMinute,\n  subMinutes,\n} from 'date-fns'\n\nexport function createTimeSteps(start: Date, end: Date, minuteStep: number) {\n  let current = startOfMinute(timeClampUp(start, minuteStep))\n  const steps: Date[] = []\n  const endMinute = endOfMinute(subMinutes(end, 1))\n  do {\n    steps.push(current)\n    current = addMinutes(current, minuteStep)\n  } while (current <= endMinute)\n  return steps\n}\n\nexport function timeClampUp(time: Date, minuteStep: number) {\n  return addMinutes(timeClampDown(time, minuteStep), minuteStep)\n}\n\nexport function timeClampDown(time: Date, minuteStep: number) {\n  return subMinutes(time, getMinutes(time) % minuteStep)\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { formatTime } from '../../helpers/formats'\n\ninterface IProps extends ButtonProps {\n  time: Date\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Time = styled.div`\n  font-size: 1.2rem;\n`\n\nexport const TimePickerButton: React.FC<IProps> = ({\n  time,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"10rem\"\n    data-testid={`timePickerButton__${time.getTime()}`}\n    {...buttonProps}\n  >\n    <Time>{formatTime(time)}</Time>\n  </PickerButton>\n)\n","import gql from 'graphql-tag'\n\nimport { OrderFragment } from '../cart/CartView.graphql'\n\nexport const OrderTimePickerQuery = gql`\n  query GOrderTimePicker($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      isOpen\n      businessHours: businessHoursIntervals {\n        openAt\n        closeAt\n        closed\n      }\n      defaultDeliveryTime\n      defaultPickupTime\n      willOpenAt\n      willCloseAt\n    }\n  }\n`\n\nexport const UpdateOrderDeliveryTimeMutation = gql`\n  mutation MUpdateOrderDeliveryTime($orderId: ID!, $deliverAt: DateTime) {\n    updateOrder(id: $orderId, order: { deliverAt: $deliverAt }) {\n      ...GOrder\n    }\n  }\n  ${OrderFragment}\n`\n","import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import React from 'react'\n\nimport { GAddress } from '../graph/types'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address?: GAddress.Fragment\n}\n\nexport const ShopAddress: React.SFC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import './Modal.css'\n\nimport React from 'react'\nimport {\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalProps,\n} from 'reactstrap'\n\ninterface IProps extends ModalProps {\n  isOpen: boolean\n  headerText: string\n  onClose?(): void\n}\n\nexport const AlertModal: React.SFC<IProps> = ({\n  isOpen,\n  headerText,\n  onClose,\n  children,\n  ...modalProps\n}) => (\n  <Modal\n    isOpen={isOpen}\n    toggle={onClose}\n    className=\"modal__container\"\n    {...modalProps}\n    data-testid=\"alertModal\"\n  >\n    <ModalHeader tag={Container} toggle={onClose} className=\"modal__header\">\n      <span>{headerText}</span>\n    </ModalHeader>\n    <ModalBody className=\"modal__body\">\n      <div className=\"modal__body__content\">{children}</div>\n    </ModalBody>\n  </Modal>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  className: string\n  imageName: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.SFC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import React from 'react'\nimport { Redirect } from 'react-router'\n\nimport { TOrderModel } from '../models/OrderModel'\nimport { WithRoot } from './WithRoot'\n\ninterface IProps {\n  render(root: TOrderModel): ReactNode\n  observe?: boolean\n  redirect?: boolean\n}\n\nexport const WithOrder: React.SFC<IProps> = ({\n  render,\n  observe,\n  redirect = false,\n}) => (\n  <WithRoot\n    observe={observe}\n    render={({ order }) => {\n      return order.hasOrder ? (\n        render(order)\n      ) : redirect ? (\n        <Redirect to=\"/\" />\n      ) : null\n    }}\n  />\n)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from '../models/MapModel'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n}\n\nconst MapContainerStyled = styled.div`\n  border-radius: 0 0 0.5rem 0.5rem;\n  overflow: hidden;\n  height: calc(100% - 3.75rem);\n`\n\nconst MapElement = styled.div`\n  height: 100%;\n  position: relative;\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nconst getMapOptions = (): google.maps.MapOptions => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    zoomControlOptions: {\n      position: google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nexport const BaseMap: React.FC<IBaseMapProps> = ({ model, children }) => {\n  return useObserver(() => (\n    <BaseMapContainer\n      containerElement={\n        <MapContainerStyled\n          className=\"map__container\"\n          data-testid=\"googleMap\"\n        />\n      }\n      mapElement={<MapElement />}\n    >\n      <GoogleMap\n        ref={model.setMapRef}\n        zoom={model.zoom}\n        center={model.center}\n        onCenterChanged={model.updatePosition}\n        onZoomChanged={model.updateZoom}\n        onClick={model.onClick}\n        options={getMapOptions()}\n      >\n        {children}\n      </GoogleMap>\n    </BaseMapContainer>\n  ))\n}\n","import React from 'react'\nimport { Field, FieldProps } from 'react-form'\nimport { FormFeedback, Input, InputProps } from 'reactstrap'\n\ninterface IProps\n  extends Omit<FieldProps<string>, 'render' | 'children'>,\n    Omit<InputProps, 'defaultValue'> {\n  showFeedback?: boolean\n}\n\nexport const FormTextInput: React.SFC<IProps> = ({\n  field,\n  validate,\n  showFeedback = false,\n  ...inputProps\n}) => (\n  <Field\n    field={field}\n    validate={validate}\n    render={fieldApi => (\n      <>\n        <Input\n          {...inputProps}\n          value={fieldApi.value}\n          onChange={e => fieldApi.setValue(e.target.value)}\n          onBlur={() => fieldApi.setTouched(true)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n        />\n        {showFeedback && <FormFeedback>{fieldApi.error}</FormFeedback>}\n      </>\n    )}\n  />\n)\n","import { differenceInMinutes } from 'date-fns'\nimport { PureComponent } from 'react'\n\nimport { GCompanyBranchStatus } from '../graph/types'\n\nexport type TStatus = GCompanyBranchStatus.Fragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\nexport interface IShopStatusRender {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\ninterface IProps {\n  status: TStatus\n  render(opts: IShopStatusRender): ReactNode\n  openThresholdInMinutes?: number\n  closeThresholdInMinutes?: number\n  timedUpdate?: boolean\n  now?: Date\n}\n\nexport class ShopStatus extends PureComponent<IProps> {\n  static defaultProps = {\n    openThresholdInMinutes: 30,\n    closeThresholdInMinutes: 30,\n  }\n  timer: Maybe<NodeJS.Timer> = null\n  componentDidMount() {\n    if (!this.props.timedUpdate) {\n      return\n    }\n    const update = () => {\n      this.forceUpdate()\n      this.timer = setTimeout(update, 30 * 1000)\n    }\n    update()\n  }\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  }\n  render() {\n    const {\n      status,\n      render,\n      now = new Date(),\n      openThresholdInMinutes,\n      closeThresholdInMinutes,\n    } = this.props\n\n    const { isOpen, willCloseAt, willOpenAt } = status\n\n    let decision: TStatusDecision\n\n    if (isOpen) {\n      decision = isSoon(willCloseAt, closeThresholdInMinutes!, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openThresholdInMinutes!, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n\n    return render({\n      decision,\n      get openingIn() {\n        return willOpenAt ? differenceInMinutes(willOpenAt, new Date()) : 0\n      },\n      get closingIn() {\n        return willCloseAt ? differenceInMinutes(willCloseAt, new Date()) : 0\n      },\n    })\n  }\n}\n\nfunction isSoon(time: Maybe<string>, threshold: number, now: Date) {\n  return time ? Math.abs(differenceInMinutes(time, now)) <= threshold : false\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { useRoot } from '../../common/WithRoot'\nimport { GCompanyBranchStatus } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nexport const ShopClosingTimeModal: React.FC<IProps> = ({ status }) => {\n  const { user } = useRoot()\n  if (!status) {\n    return null\n  }\n  return (\n    <ShopStatus\n      status={status}\n      render={({ decision, openingIn }) => (\n        <Observer>\n          {() => (\n            <AlertModal\n              isOpen={\n                (decision === 'Closed' || decision === 'OpeningSoon') &&\n                !user.closingTimeAlertHidden\n              }\n              onClose={user.hideClosingTime}\n              headerText={i18n.t`We are closed right now`}\n            >\n              {i18n.t`We're sorry, but we do not accept new orders at this time.`}\n              {decision === 'OpeningSoon' && (\n                <Trans>\n                  You can prepare your order because we are{' '}\n                  <Plural\n                    value={openingIn}\n                    one=\"opening in 1 minute\"\n                    other=\"opening in # minutes\"\n                  />\n                  !\n                </Trans>\n              )}\n            </AlertModal>\n          )}\n        </Observer>\n      )}\n    />\n  )\n}\n","import './ShopHeaderIcons.css'\n\nimport React from 'react'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport logoCommerce01 from './logo-commerce-01.svg'\nimport logoCommerce02 from './logo-commerce-02.svg'\nimport logoDoveze from './logo-doveze.svg'\nimport logoGoPay from './logo-gopay.png'\n\nexport const ShopHeaderIcons = () => (\n  <ColStyle>\n    <img\n      src={logoDoveze}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={logoCommerce02}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={logoCommerce01}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={logoGoPay}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </ColStyle>\n)\n","import { DateFormat, Plural, Trans } from '@lingui/react'\nimport { SECOND } from '@speedlo/hooks'\nimport { isSameDay } from 'date-fns'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GCompanyBranchStatus } from '../../graph/types'\nimport { useShopStatus } from '../../hooks/useShopStatus'\n\ninterface IProps {\n  status: GCompanyBranchStatus.Fragment\n  deliveryTime: number\n  pickupTime: number\n}\n\nexport const StatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nexport const StatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.FC<IProps> = ({\n  status,\n  deliveryTime,\n  pickupTime,\n}) => {\n  const { order } = useRoot()\n  if (!status) {\n    return null\n  }\n  const { decision, openingIn, closingIn } = useShopStatus({\n    status,\n    updateInterval: 30 * SECOND,\n  })\n\n  if (status.isOpen === false) {\n    if (!status.willOpenAt) {\n      return (\n        <StatusDisplayClosed>\n          <Trans>We are closed until further notice</Trans>\n        </StatusDisplayClosed>\n      )\n    }\n    const closestBH = status.businessHours[0]\n    if (closestBH && closestBH.closedNote) {\n      return <StatusDisplayClosed>{closestBH.closedNote}</StatusDisplayClosed>\n    }\n  }\n\n  switch (decision) {\n    case 'Open':\n      return (\n        <StatusDisplayOpen data-testid=\"statusDisplayOpen\">\n          {order.usingDeliveryOrderMethod ? (\n            <Trans>We are delivering in {deliveryTime} minutes</Trans>\n          ) : (\n            <Trans>We can prepare your order in {pickupTime} minutes</Trans>\n          )}\n        </StatusDisplayOpen>\n      )\n    case 'OpeningSoon':\n      return (\n        <StatusDisplayClosed>\n          <Plural\n            value={openingIn}\n            one=\"Opening in 1 minute\"\n            other=\"Opening in # minutes\"\n          />\n        </StatusDisplayClosed>\n      )\n    case 'ClosingSoon':\n      return (\n        <StatusDisplayOpen>\n          <Plural\n            value={closingIn}\n            one=\"Closing in 1 minute\"\n            other=\"Closing in # minutes\"\n          />\n        </StatusDisplayOpen>\n      )\n    case 'Closed':\n      return (\n        <StatusDisplayClosed>\n          {status.willOpenAt ? (\n            <Trans>We will open at {formatOpenTime(status.willOpenAt)}</Trans>\n          ) : (\n            <Trans>Closed</Trans>\n          )}\n        </StatusDisplayClosed>\n      )\n  }\n}\n\nexport function formatOpenTime(openAt: string) {\n  const openAtDate = new Date(openAt)\n  const nowDate = new Date()\n  let format: Intl.DateTimeFormatOptions = {\n    hour: 'numeric',\n    minute: 'numeric',\n  }\n  if (!isSameDay(openAtDate, nowDate)) {\n    format = {\n      ...format,\n      weekday: 'long',\n    }\n  }\n  return <DateFormat value={openAtDate} format={format} />\n}\n","import { useNow, useTimer } from '@speedlo/hooks'\nimport { differenceInMinutes } from 'date-fns'\n\nimport { GCompanyBranchStatus } from '../graph/types'\n\nexport type TStatus = GCompanyBranchStatus.Fragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\nexport interface IShopStatusRender {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\ninterface IProps {\n  status: TStatus\n  updateInterval?: number\n  openSoonThresholdInMinutes?: number\n  closeSoonThresholdInMinutes?: number\n}\n\nexport function useShopStatus({\n  status,\n  updateInterval,\n  openSoonThresholdInMinutes = 30,\n  closeSoonThresholdInMinutes = 30,\n}: IProps) {\n  const getNow = useNow()\n  useTimer({\n    interval: updateInterval || 0,\n    enabled: Boolean(updateInterval),\n  })\n\n  const now = getNow()\n  const { isOpen, willCloseAt, willOpenAt } = status\n\n  let decision: TStatusDecision\n\n  if (isOpen) {\n    decision = isSoon(willCloseAt, closeSoonThresholdInMinutes, now)\n      ? 'ClosingSoon'\n      : 'Open'\n  } else {\n    decision = isSoon(willOpenAt, openSoonThresholdInMinutes, now)\n      ? 'OpeningSoon'\n      : 'Closed'\n  }\n\n  return {\n    decision,\n    get openingIn() {\n      return willOpenAt ? differenceInMinutes(willOpenAt, now) : 0\n    },\n    get closingIn() {\n      return willCloseAt ? differenceInMinutes(willCloseAt, now) : 0\n    },\n  }\n}\n\nfunction isSoon(time: Maybe<string>, threshold: number, now: Date) {\n  return time ? Math.abs(differenceInMinutes(time, now)) <= threshold : false\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PrimaryRoutedButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFinishView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  finish: GFinishView.Query\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.SFC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => (\n  <>\n    <Desktop>\n      {(androidApp || iosApp) && (\n        <div className=\"finish__view__apps__propagation\">\n          <div className=\"finish__view__apps__propagation__header\">\n            <Trans>What about mobile app?</Trans>\n          </div>\n          <div className=\"finish__view__apps__propagation__description\">\n            <Trans>\n              We have prepared mobile app, so you could order from anywhere!\n            </Trans>\n          </div>\n\n          {androidApp && (\n            <a href={androidApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                Google Play\n              </Button>\n            </a>\n          )}\n\n          {iosApp && (\n            <a href={iosApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                App Store\n              </Button>\n            </a>\n          )}\n        </div>\n      )}\n      <CenteredButtonContainer>\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </CenteredButtonContainer>\n    </Desktop>\n\n    <Mobile>\n      <div\n        className=\"finish__view__submit__line\"\n        style={{ textAlign: 'center' }}\n      >\n        <div className=\"finish__view__submit__line__strip\" />\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </div>\n    </Mobile>\n  </>\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GFinishView } from '../../graph/types'\n\nimport { QueryFinishView } from './FinishView.graphql'\n\ninterface IProps {\n  render(result: GFinishView.Query): ReactNode\n}\n\nexport const FinishViewLoader: React.SFC<IProps> = ({ render }) => (\n  <WithOrder\n    redirect={true}\n    render={order => (\n      <QueryFinishView\n        variables={{\n          branchId: order.branchId!,\n          orderId: order.orderId!,\n        }}\n        render={data => render(data)}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishViewOrder, PaymentGateEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GFinishViewOrder.Fragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.SFC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = RM.pathEq(['paymentMethod', 'paymentType', 'enum'])\n\nfunction getPaymentInfo({ orderPayments }: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({\n  orderPayments,\n  totalSum,\n}: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: GFinishViewOrder.Items) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishView } from '../../graph/types'\n\ninterface IProps {\n  branch: GFinishView.CompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.SFC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './OrderMethod.css'\n\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { WithRoot } from '../../common/WithRoot'\nimport { DeliveryTypeEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\ninterface IButtonProps {\n  orderModel: TOrderModel\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n  onPrefetch?(): void\n}\n\nconst OrderMethodButton: React.SFC<IButtonProps> = ({\n  orderModel,\n  orderMethod,\n  onChange,\n  onPrefetch,\n  children,\n}) => (\n  <Observer>\n    {() => (\n      <SelectButtonThemed\n        selected={orderModel.orderMethod === orderMethod}\n        onMouseEnter={onPrefetch}\n        onClick={() => {\n          orderModel.useOrderMethod(orderMethod)\n          onChange(orderModel)\n        }}\n        data-testid={`orderMethod-${orderMethod}`}\n        data-testselected={orderModel.orderMethod === orderMethod}\n      >\n        {children}\n      </SelectButtonThemed>\n    )}\n  </Observer>\n)\n\nexport const OrderMethod: React.SFC<IProps> = ({ onChange }) => (\n  <WithRoot\n    observe={false}\n    render={({ order }) => (\n      <div className=\"order__method\">\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Messenger}\n          onChange={onChange || RM.identity}\n        >\n          <span className=\"flaticon-transport\" />\n          {i18n.t`I want to deliver`.toLocaleUpperCase()}\n        </OrderMethodButton>\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Pickup}\n          onChange={onChange || RM.identity}\n          onPrefetch={order.prefetchPickup}\n        >\n          <span className=\"flaticon-restaurant\" />\n          {i18n.t`I'll pick up`.toLocaleUpperCase()}\n        </OrderMethodButton>\n      </div>\n    )}\n  />\n)\n","import './DeliveryMap.css'\n\nimport { when } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { Marker } from 'react-google-maps'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GInitialLocation } from '../../graph/types'\nimport { latLngToGps } from '../../helpers/gps'\nimport { AddressInput } from '../destination/AddressInput'\nimport { AddressSubmit } from './AddressSubmit'\nimport { InitialMapLocationQuery } from './DeliveryMap.graphql'\nimport { DeliveryMapPanning } from './DeliveryMapPanning'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const DeliveryMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { business, order, location } = useRoot()\n  const { data } = useQuery<GInitialLocation.Query>(InitialMapLocationQuery)\n\n  const onSubmit = useCallback(\n    async () => {\n      if (location.branchId) {\n        order.setBranch(location.branchId)\n      }\n      await order.createDeliveryOrder()\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  useDisposable(() =>\n    when(() => business.isValid, location.validateUserLocation),\n  )\n\n  return useObserver(() => (\n    <>\n      <DeliveryMapPanning\n        initialLocation={data ? data.initialLocation.gpsCoordinates : null}\n      />\n      {location.latLng ? (\n        <Marker\n          position={location.latLng}\n          defaultDraggable={true}\n          onDragEnd={({ latLng }) => {\n            location.withUserLocation(latLngToGps(latLng))\n          }}\n        />\n      ) : null}\n      <div className=\"delivery__map__address\">\n        <AddressInput />\n      </div>\n      <div className=\"delivery__map__submit\">\n        <AddressSubmit\n          enabled={location.isDeliveryAddress}\n          onClick={onSubmit}\n          onPrefetch={() => {\n            if (location.branchId) {\n              order.prefetchFoodMenu(location.branchId)\n            }\n          }}\n        />\n      </div>\n    </>\n  ))\n}\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.SFC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { autorun } from 'mobx'\nimport { useDisposable } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { GeoPoint } from '../../../helpers/gps'\nimport { TMapModel } from '../../../models/MapModel'\n\ninterface IProps {\n  gps: GeoPoint | undefined\n  map: TMapModel\n}\n\nexport const MapPanning: React.FC<IProps> = ({ map, gps }) => {\n  useDisposable(\n    () =>\n      autorun(() => {\n        if (map.isReady && gps) {\n          map.panToLocation(gps)\n        }\n      }),\n    [gps],\n  )\n  return null\n}\n","import './CartView.css'\n\nimport React from 'react'\nimport { useQuery } from 'react-apollo-hooks'\n\nimport { GCartView } from '../../graph/types'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartContents } from './CartContents'\nimport { CartIsEmpty } from './CartIsEmpty'\nimport { CartViewQuery } from './CartView.graphql'\nimport { ChangeCartModal } from './ChangeCartModal'\nimport { useCartRefresh } from './useCartRefresh'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const CartView: React.FC<IProps> = ({ orderId }) => {\n  const { data, refetch } = useQuery<GCartView.Query, GCartView.Variables>(\n    CartViewQuery,\n    { suspend: false, skip: !orderId, variables: { orderId: orderId! } },\n  )\n\n  useCartRefresh(refetch)\n\n  return (\n    <>\n      <AddToCartModal />\n      <ChangeCartModal />\n      {!data || !data.order || data.order.countWares === 0 ? (\n        <CartIsEmpty />\n      ) : (\n        <CartContents order={data.order} />\n      )}\n    </>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { Mobile } from '../../common/Responsive'\nimport { useRoot } from '../../common/WithRoot'\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForRecipe } from '../../graph/types'\nimport { OrderCartForRecipeQuery } from '../../models/OrderModel.graphql'\nimport { CartModal } from './CartModal'\n\nconst QueryCart = buildQuery<\n  GOrderCartForRecipe.Query,\n  GOrderCartForRecipe.Variables\n>(OrderCartForRecipeQuery)\n\nexport const AddToCartModal: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return (\n    <Route\n      path=\"/order/add/:recipeId\"\n      render={({ match, history }) => (\n        <QueryCart\n          variables={{ recipeId: match.params.recipeId }}\n          renderLoading={false}\n          renderError={() => (\n            <Alert color=\"warning\">\n              <Trans>Error in loading cart item. Issue was reported.</Trans>\n            </Alert>\n          )}\n          render={(data, { loading }) => (\n            <Mobile>\n              {isMobile => (\n                <CartModal\n                  recipe={data.recipe}\n                  onConfirm={sideDishes => {\n                    if (isMobile) {\n                      orderModel.addFromRecipeMobile(\n                        match.params.recipeId,\n                        sideDishes,\n                      )\n                      // let the optimistic response happen in this case\n                      return Promise.resolve()\n                    }\n                    return orderModel.addFromRecipe(\n                      match.params.recipeId,\n                      sideDishes,\n                    )\n                  }}\n                  onClose={() => history.goBack()}\n                  isLoading={loading}\n                />\n              )}\n            </Mobile>\n          )}\n        />\n      )}\n    />\n  )\n}\n","import { Trans } from '@lingui/react'\nimport { observable } from 'mobx'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport '../../common/Modal.css'\nimport { GCartRecipe } from '../../graph/types'\n\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment | undefined\n  initialSelection?: ID[]\n  isLoading: boolean\n  onConfirm(selection: ID[]): Promise<void>\n  onClose(): void\n}\n\nexport const CartModal: React.SFC<IProps> = ({\n  recipe,\n  initialSelection = [],\n  onConfirm,\n  onClose,\n  isLoading,\n}) => {\n  const selection = observable.array<ID>(initialSelection)\n\n  const onConfirmAndClose = async () => {\n    await onConfirm(Array.from(selection))\n    onClose()\n  }\n\n  const onToggleSidedish = (sidedishId: ID) => {\n    if (selection.includes(sidedishId)) {\n      selection.remove(sidedishId)\n    } else {\n      selection.push(sidedishId)\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={true}\n      toggle={onClose}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader toggle={onClose} tag={Container} className=\"modal__header\">\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {isLoading || !recipe ? null : (\n            <>\n              <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n              <span className=\"modal__body__food_description\">\n                {recipe.descriptionLabel}\n              </span>\n              <SidedishPicker\n                recipe={recipe}\n                selection={selection}\n                onToggle={onToggleSidedish}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n            enabled={!isLoading}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps extends ButtonProps {\n  isSelected: boolean\n  canBeSelected: boolean\n  width: string\n}\n\nconst PickerButtonStyled = styled(\n  ({ isSelected, canBeSelected, width, ...props }) => <Button {...props} />,\n)`\n  border-radius: 0.6rem;\n  margin: 0.5rem;\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n  width: ${props => props.width};\n  @media (max-width: 370px) {\n    width: 100%;\n  }\n  &.btn-outline-secondary {\n    color: #2e2e2e;\n    border-color: #d4d4d4;\n  }\n  &.btn-outline-secondary.active {\n    color: white;\n  }\n`\n\nexport const PickerButton: React.FC<IProps> = ({\n  isSelected,\n  canBeSelected,\n  onSelect,\n  children,\n  ...buttonProps\n}) => {\n  return (\n    <PickerButtonStyled\n      disabled={!canBeSelected && !isSelected}\n      isSelected={isSelected}\n      {...buttonProps}\n    >\n      {children}\n    </PickerButtonStyled>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface IButtonProps {\n  color: string\n  enabled?: boolean\n  data_testid?: string\n}\n\ninterface IIconProps {\n  icon: string\n}\n\ninterface IProps extends IButtonProps, IIconProps {\n  onClick?(): void\n}\n\nconst CartItemButtonStyled = styled.div<IButtonProps>`\n  display: inline-block;\n  border-radius: 3rem;\n  background: white;\n  width: 1.8rem;\n  height: 1.8rem;\n  text-align: left;\n  vertical-align: top;\n  padding: 0 0 0 0rem;\n  margin: 0.3rem 0.1rem 0 0.1rem;\n  ${getButtonColor};\n  ${getHoverStyle};\n`\n\nfunction getButtonColor({ color, enabled }: IButtonProps) {\n  const useColor = enabled ? color : '#8d8d8d'\n  return css`\n    color: ${useColor};\n    border: 2px solid ${useColor};\n  `\n}\n\nfunction getHoverStyle({ enabled }: IButtonProps) {\n  return enabled\n    ? css`\n        cursor: pointer;\n        &:hover {\n          background: #c9e8d7;\n          color: #1d1d1d;\n          border-color: #1d1d1d;\n        }\n      `\n    : css`\n        cursor: default;\n      `\n}\n\nconst CartItemButtonIcon = styled.span<IIconProps>`\n  &:before {\n    font-size: 0.8rem;\n    margin-left: 0.36rem;\n  }\n`\n\nexport const CartItemButton: React.SFC<IProps> = ({\n  color,\n  icon,\n  onClick,\n  enabled = true,\n  data_testid,\n}) => {\n  return (\n    <CartItemButtonStyled\n      color={color}\n      enabled={enabled}\n      onClick={onClick}\n      onDoubleClick={ev => ev.preventDefault()}\n      data-testid={data_testid}\n    >\n      <CartItemButtonIcon icon={icon} className={`flaticon-${icon}`} />\n    </CartItemButtonStyled>\n  )\n}\n","import { reaction } from 'mobx'\nimport { useDisposable } from 'mobx-react-lite'\n\nimport { useRoot } from '../../common/WithRoot'\n\nexport function useCartRefresh(onRefresh: () => void) {\n  const { order: orderModel } = useRoot()\n  return useDisposable(() =>\n    reaction(\n      () => orderModel.shouldRefreshCart,\n      () => {\n        orderModel.setCartRefresh(false)\n        onRefresh()\n      },\n    ),\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GCartPresence } from '../../graph/types'\nimport CategoryNavigator from './CategoryNavigator'\nimport { FoodMenu } from './FoodMenu'\nimport {\n  QueryFoodMenu,\n  QueryFoodMenuCartPresence,\n} from './FoodMenuView.graphql'\nimport { OrderLimitModal } from './OrderLimitModal'\n\nexport const FoodMenuView: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <QueryFoodMenu\n      skip={!orderModel.branchId}\n      variables={{\n        branchId: orderModel.branchId!,\n      }}\n      render={({ wareCategories }) => (\n        <>\n          <OrderLimitModal />\n          <CategoryNavigator categories={wareCategories} />\n          <QueryFoodMenuCartPresence\n            variables={{ orderId: orderModel.orderId! }}\n            renderLoading={false}\n            render={({ order }, { loading }) => (\n              <FoodMenu\n                categories={wareCategories}\n                rootModel={orderModel.root}\n                inCart={getCartPresence(order && order.items)}\n                orderItemCount={order ? order.items.length : 0}\n                shouldUpdate={Boolean(order && !loading)}\n              />\n            )}\n          />\n        </>\n      )}\n    />\n  ))\n}\n\nfunction getCartPresence(items: ReadonlyArray<GCartPresence.Items>) {\n  if (!items) {\n    return {}\n  }\n  return items.reduce((result, item) => {\n    const recipeId = item.recipe.id\n    if (!result[recipeId]) {\n      result[recipeId] = 0\n    }\n    result[recipeId] += 1\n    return result\n  }, {})\n}\n"],"sourceRoot":""}