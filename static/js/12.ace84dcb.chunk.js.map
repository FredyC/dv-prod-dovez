{"version":3,"sources":["segments/shop/OrderAddress.tsx","segments/shop/ShopCloseAlert.tsx","segments/shop/ShopIntro.tsx","segments/shop/ShopLogo.tsx","segments/shop/ShopOpeningHours.tsx","segments/shop/Sticker.tsx","segments/shop/ShopHeader.tsx","segments/shop/ShopHeaderView.tsx","segments/finish/FinishView.tsx","segments/map/PickupMapBranch.tsx","segments/map/PickupMap.tsx","segments/map/OrderMap.tsx","segments/map/views/MapView.tsx","segments/orderForm/OrderPaymentMethod.tsx","segments/orderForm/OrderForm.tsx","segments/orderForm/OrderFormView.tsx","segments/shop/ShopOverview.tsx","app/DesktopApp.tsx"],"names":["OrderAddress","_ref","address","_useRoot","useRoot","order","location","useObserver","orderMethod","DeliveryTypeEnum","Messenger","react_default","a","createElement","i18n","_","Pickup","ShopAddress","ShopCloseAlert","status","_useShopStatus","useShopStatus","decision","closingIn","closingInPlural","reactstrap_es","className","ShopIntroStyled","styled","div","withConfig","displayName","componentId","ShopIntro","intro","data-testid","headerText","LogoLink","url","children","href","react_router_dom","to","LogoContainerStyled","ShopLogo","props","ShopLogo_LogoLink","BackgroundThemed","imageName","size","ShopOpeningHoursContainer","Container","ShopOpeningHoursTimes","ShopOpeningHoursStatus","ShopOpeningHoursIcon","ShopOpeningHours","branch","openingHours","businessHours","filter","RM","propEq","fluid","length","map","businessHour","idx","key","concat","formatTime","openAt","closeAt","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","StickerThemed","theme","primary","IconStyled","span","Sticker","_ref2","_ref2$success","success","classNames","order-method-unselected","order-method-selected","ShopHeaderStyled","ShopHeaderInfoStyled","ShopHeader","isLoading","ShopHeaderIcons","ColStyle","Fragment","ShopLogo_ShopLogo","homepageUrl","react_router","exact","path","render","Sticker_Sticker","_lingui_react","id","ShopIntro_ShopIntro","ShopClosingTimeModal","OrderAddress_OrderAddress","ShopOpeningHours_ShopOpeningHours","ShopCloseAlert_ShopCloseAlert","ShopHeaderView","observer","business","_useQShopHeader","useQShopHeader","Object","objectSpread","brandOrBranch","branchId","skip","isValid","data","loading","ShopHeader_ShopHeader","FinishView","objectDestructuringEmpty","shop_ShopHeaderView","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","companyBranch","FinishViewFooter","finish","PickupMapContainerStyled","PickupMapHeaderStyled","tertiaryText","PickupMapInfoStyled","PickupButtonStyled","PrimaryButton","PickupMapBranch","_ref3","onConfirm","shopStatus","name","color","disabled","pickupEnabled","onClick","_ref4","openingIn","values","toLocaleUpperCase","getButtonText","mapByOrderMethod","_mapByOrderMethod","defineProperty","createFactory","DeliveryMap","_useState","useState","_useState2","slicedToArray","activeBranch","setActiveBranch","useDisposable","when","useEffect","prefetchFoodMenu","onConfirmPickup","useCallback","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setBranch","createPickupOrder","stop","this","_x","apply","arguments","renderSite","lib","position","gpsToLatLng","gps","onCloseClick","defaultOptions","maxWidth","PickupMapBranch_PickupMapBranch","isBrand","PickupMap_graphql","variables","brandId","renderLoading","branches","find","MapPanning","OrderMap","BaseMap","model","MapView","history","useRouterContext","OrderMethod","OrderMap_OrderMap","push","OrderPaymentMethod","OrderPaymentButton","method","PaymentGateEnum","Gopay","Cash","OrderFormTipInput","OrderForm","orderModel","OrderFormSetup","form","OrderFormAutoFill","onFill","setAllValues","OrderFormInputs","OrderPaymentMethod_OrderPaymentMethod","OrderAgreements","OrderSubmitLine","submitForm","canSubmit","isVamInitialized","OrderFormView","orderId","_useQOrderForm","useQOrderForm","countWares","OrderForm_OrderForm","OrderGoPayModal","OrderErrorModal","OrderTimePicker","ShopOverview","hasOrder","ThemeSwitchProvider","FoodMenuView","CartView","OrderFormView_OrderFormView","OrderFormStorageNotice","DesktopApp","useReleaseCabinet","version","date","alert","formatDateTime","component"],"mappings":"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","file":"static/js/12.ace84dcb.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { DeliveryTypeEnum, FAddressFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  address: FAddressFragment\n}\n\nexport const OrderAddress: React.FC<IProps> = ({ address }) => {\n  const { order, location } = useRoot()\n  return useObserver(() => {\n    switch (order.orderMethod) {\n      case DeliveryTypeEnum.Messenger:\n        return (\n          <span>\n            {i18n.t`Order to address`}: <b>{location.address}</b>\n          </span>\n        )\n      case DeliveryTypeEnum.Pickup:\n        return (\n          <span>\n            {i18n.t`Pickup at address`}:{' '}\n            <b>\n              <ShopAddress address={address} />\n            </b>\n          </span>\n        )\n      default:\n        return null\n    }\n  })\n}\n","import './ShopCloseAlert.css'\n\nimport React from 'react'\nimport { Alert } from 'reactstrap'\n\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n}\n\nexport const ShopCloseAlert: React.FC<IProps> = ({ status }) => {\n  const { decision, closingIn } = useShopStatus({\n    status,\n  })\n  if (decision === 'ClosingSoon') {\n    const closingInPlural = i18n.plural({\n      value: closingIn,\n      one: 'closing in 1 minute',\n      few: 'closing in # minutes',\n      other: 'closing in # minutes',\n    })\n    return (\n      <Alert className=\"shop__header__alert\">\n        {i18n.t`Beware! We are ${closingInPlural}. Finish your order quickly.`}\n      </Alert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { QShopHeaderIntro } from '../../graph/generated'\n\ninterface IProps {\n  intro?: Maybe<QShopHeaderIntro>\n}\n\nconst ShopIntroStyled = styled.div`\n  margin: 0.8rem 1rem 1rem 1.3rem;\n`\n\nexport const ShopIntro: React.FC<IProps> = ({ intro }) => (\n  <ShopIntroStyled data-testid=\"headerText\">\n    {intro ? intro.headerText : ''}\n  </ShopIntroStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { BackgroundThemed } from '../../common/BackgroundThemed'\n\ninterface IProps {\n  url: Maybe<string>\n}\n\nconst LogoLink: React.FC<IProps> = ({ url, children }) =>\n  url ? <a href={url}>{children}</a> : <Link to=\"/\">{children}</Link>\n\nconst LogoContainerStyled = styled.div`\n  height: 200px;\n  width: 400px;\n  flex: 0 0 400px;\n  & .shop__header__logo {\n    height: 100%;\n  }\n`\n\nexport const ShopLogo: React.FC<IProps> = props => (\n  <LogoContainerStyled>\n    <LogoLink {...props}>\n      <BackgroundThemed\n        className=\"shop__header__logo\"\n        imageName=\"storeLogo\"\n        size=\"cover\"\n      />\n    </LogoLink>\n  </LogoContainerStyled>\n)\n","import React from 'react'\nimport { Container } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FShopOpeningHours } from '../../graph/types'\nimport { formatTime } from '../../helpers/formats'\nimport { RM } from '../../helpers/ramda'\nimport { ShopStatusDisplay } from './ShopStatusDisplay'\n\ninterface IProps {\n  branch: FShopOpeningHours.Fragment\n}\n\nconst ShopOpeningHoursContainer = styled(Container)`\n  margin: 0.4rem 0 0 0.1rem;\n  display: flex;\n`\n\nconst ShopOpeningHoursTimes = styled.div`\n  padding-left: 2rem;\n`\n\nconst ShopOpeningHoursStatus = styled.div`\n  padding-left: 2rem;\n`\n\nconst ShopOpeningHoursIcon = styled.div`\n  margin: -0.2rem 0 0 -1rem;\n  position: absolute;\n`\n\nexport const ShopOpeningHours: React.FC<IProps> = ({ branch }) => {\n  const openingHours = branch.businessHours.filter(RM.propEq('closed', false))\n  return (\n    <ShopOpeningHoursContainer fluid={true}>\n      <ShopOpeningHoursIcon className=\"flaticon-clock\" />\n      {openingHours.length > 0 && (\n        <ShopOpeningHoursTimes>\n          {openingHours.map((businessHour, idx) => (\n            <div data-testid=\"openingHours\" key={idx}>\n              {`${formatTime(businessHour.openAt)} - ${formatTime(\n                businessHour.closeAt,\n              )}`}\n            </div>\n          ))}\n        </ShopOpeningHoursTimes>\n      )}\n      <ShopOpeningHoursStatus>\n        <ShopStatusDisplay\n          status={branch}\n          deliveryTime={branch.defaultDeliveryTime}\n          pickupTime={branch.defaultPickupTime}\n        />\n      </ShopOpeningHoursStatus>\n    </ShopOpeningHoursContainer>\n  )\n}\n","import classNames from 'classnames'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StickerThemed = styled.div`\n  background: ${({ theme }) => theme.primary};\n  color: white;\n  margin-top: 1rem;\n  padding: 0;\n  border-radius: 0 0.7rem 0.7rem 0;\n  white-space: nowrap;\n  flex: none;\n\n  & p {\n    display: inline-block;\n    margin: 0.6rem 1rem 0 0;\n    vertical-align: top;\n    white-space: nowrap;\n  }\n`\n\nconst IconStyled = styled.span`\n  margin: 0.5rem 1rem 0 0.1rem;\n  &:before,\n  :after {\n    font-size: 1.8rem;\n    margin: 0 0 0 1rem;\n  }\n`\n\ninterface IProps {\n  success?: boolean\n}\n\nexport const Sticker: React.FC<IProps> = ({ success = false, children }) => (\n  <StickerThemed\n    className={classNames('right__sticker', {\n      'order-method-unselected': !success,\n      'order-method-selected': success,\n    })}\n  >\n    <IconStyled className=\"flaticon-transport\" />\n    <p>{children}</p>\n  </StickerThemed>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Row } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport { QShopHeaderBranch, QShopHeaderIntro } from '../../graph/generated'\nimport { OrderAddress } from './OrderAddress'\nimport { ShopCloseAlert } from './ShopCloseAlert'\nimport { ShopClosingTimeModal } from './ShopClosingTimeModal'\nimport { ShopHeaderIcons } from './ShopHeaderIcons'\nimport { ShopIntro } from './ShopIntro'\nimport { ShopLogo } from './ShopLogo'\nimport { ShopOpeningHours } from './ShopOpeningHours'\nimport { Sticker } from './Sticker'\n\ninterface IProps {\n  branch?: QShopHeaderBranch\n  intro?: QShopHeaderIntro\n  isLoading: boolean\n}\n\nconst ShopHeaderStyled = styled.div`\n  display: flex;\n  min-height: 200px;\n`\n\nconst ShopHeaderInfoStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`\n\nexport const ShopHeader: React.FC<IProps> = ({ branch, intro, isLoading }) => (\n  <div>\n    <Row className=\"justify-content-md-center\">\n      <ShopHeaderIcons />\n    </Row>\n\n    <Row className=\"row-white justify-content-md-center\">\n      <ColStyle>\n        <ShopHeaderStyled data-testid=\"shopHeader\">\n          {isLoading || !branch ? null : (\n            <>\n              <ShopLogo url={intro ? intro.homepageUrl : null} />\n\n              <ShopHeaderInfoStyled>\n                <Route\n                  exact={true}\n                  path=\"/\"\n                  render={() => (\n                    <>\n                      <Sticker>\n                        <Trans>Choose your delivery option below</Trans>\n                      </Sticker>\n                      <ShopIntro intro={intro} />\n                    </>\n                  )}\n                />\n                <Route\n                  path=\"/order\"\n                  render={() => (\n                    <>\n                      <ShopClosingTimeModal status={branch} />\n                      <Sticker success={true}>\n                        <OrderAddress address={branch.address} />\n                      </Sticker>\n                      <ShopOpeningHours branch={branch} />\n                      <ShopCloseAlert status={branch} />\n                      <ShopIntro intro={intro} />\n                    </>\n                  )}\n                />\n                <Route\n                  path=\"/finish\"\n                  render={() => (\n                    <>\n                      <Sticker success={true}>\n                        <Trans>Order was send</Trans>\n                      </Sticker>\n                      <ShopOpeningHours branch={branch} />\n                      <ShopIntro intro={intro} />\n                    </>\n                  )}\n                />\n              </ShopHeaderInfoStyled>\n            </>\n          )}\n        </ShopHeaderStyled>\n      </ColStyle>\n    </Row>\n  </div>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { useQShopHeader } from '../../graph/generated'\nimport { ShopHeader } from './ShopHeader'\n\nexport const ShopHeaderView = observer(() => {\n  const { order, business } = useRoot()\n  const { data, loading } = useQShopHeader(\n    {\n      ...business.brandOrBranch,\n      // need to use branchId from order first as it reflects branch for which\n      // order is being made and it might have different eg. business hours\n      // then the one obtained through business code\n      branchId: order.branchId || business.branchId!,\n    },\n    { skip: !business.isValid },\n  )\n\n  return (\n    <ShopHeader branch={data.branch} intro={data.intro} isLoading={loading} />\n  )\n})\n\nexport default ShopHeaderView\n","import './FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport ShopHeaderView from '../shop/ShopHeaderView'\nimport { FinishViewFooter } from './FinishViewFooter'\nimport { FinishViewLoader } from './FinishViewLoader'\nimport { FinishViewOrder } from './FinishViewOrder'\nimport { FinishViewSupport } from './FinishViewSupport'\n\ninterface IProps {}\n\nexport const FinishView: React.FC<IProps> = ({}) => (\n  <>\n    <ShopHeaderView />\n    <Row className=\"justify-content-md-center\">\n      <ColStyle>\n        <div className=\"finish__view\">\n          <FinishViewLoader\n            render={result => (\n              <>\n                <FinishViewOrder order={result.order} />\n                <FinishViewSupport branch={result.companyBranch} />\n                <FinishViewFooter finish={result} />\n              </>\n            )}\n          />\n        </div>\n      </ColStyle>\n    </Row>\n  </>\n)\n","import { Plural, Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { GPickupBranch } from '../../graph/types'\nimport { IShopStatus, useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  branch: GPickupBranch.Fragment\n  onConfirm(): void\n}\n\nconst PickupMapContainerStyled = styled.div`\n  font-size: 1rem;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  bottom: 0.3rem;\n  width: 100%;\n`\nconst PickupMapHeaderStyled = styled.div`\n  flex: 0 0 auto;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.tertiaryText};\n  text-align: center;\n  padding: 0.4rem;\n  vertical-align: middle;\n`\nconst PickupMapInfoStyled = styled.div`\n  flex: 1 1 0;\n  margin: 0.3rem;\n  width: 100%;\n`\nconst PickupButtonStyled = styled(PrimaryButton)`\n  flex: 0 0 auto;\n  width: 90%;\n  margin: 0 auto;\n`\n\nexport const PickupMapBranch: React.FC<IProps> = ({ branch, onConfirm }) => {\n  const shopStatus = useShopStatus({\n    status: branch,\n  })\n  return (\n    <PickupMapContainerStyled>\n      <PickupMapHeaderStyled>{branch.name}</PickupMapHeaderStyled>\n      <PickupMapInfoStyled>\n        <ShopAddress address={branch.address} />\n      </PickupMapInfoStyled>\n      <PickupButtonStyled\n        color=\"primary\"\n        data-testid=\"submitPickupBranch\"\n        disabled={!branch.pickupEnabled}\n        onClick={onConfirm}\n      >\n        {branch.pickupEnabled ? (\n          getButtonText(shopStatus)\n        ) : (\n          <Trans>Delivery only</Trans>\n        )}\n      </PickupButtonStyled>\n    </PickupMapContainerStyled>\n  )\n}\n\nfunction getButtonText({ decision, openingIn, closingIn }: IShopStatus) {\n  switch (decision) {\n    case 'Closed':\n      return <Trans>Closed</Trans>\n    case 'ClosingSoon':\n      return (\n        <Plural\n          value={closingIn}\n          one=\"Closing in 1 minute\"\n          other=\"Closing in # minutes\"\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <Plural\n          value={openingIn}\n          one=\"Opening in 1 minute\"\n          other=\"Opening in # minutes\"\n        />\n      )\n    default:\n      return i18n.t`Pickup here`.toLocaleUpperCase()\n  }\n}\n","import './PickupMap.css'\n\nimport { when } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { InfoWindow, Marker } from 'react-google-maps'\n\nimport { useRoot } from '../../app/useRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { RM } from '../../helpers/ramda'\nimport { MapPanning } from './atoms/MapPanning'\nimport { QueryPickupMapBranch, QueryPickupMapBrand } from './PickupMap.graphql'\nimport { PickupMapBranch } from './PickupMapBranch'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const PickupMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, business, map } = useRoot()\n  const [activeBranch, setActiveBranch] = useState<MaybeID>(null)\n\n  useDisposable(() =>\n    when(\n      () => business.branchId !== null && activeBranch === null,\n      () => {\n        setActiveBranch(business.branchId)\n      },\n    ),\n  )\n\n  useEffect(\n    () => {\n      if (activeBranch) {\n        order.prefetchFoodMenu(activeBranch)\n      }\n    },\n    [activeBranch],\n  )\n\n  const onConfirmPickup = useCallback(\n    async (branchId: ID) => {\n      // it's necessary to set asap so correct data are displayed further\n      order.setBranch(branchId)\n      await order.createPickupOrder(branchId)\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  const renderSite = (branch: GPickupBranch.Fragment) => (\n    <Marker\n      key={branch.id}\n      position={gpsToLatLng(branch.gps)}\n      onClick={() => setActiveBranch(branch.id)}\n    >\n      {activeBranch === branch.id ? (\n        <InfoWindow\n          onCloseClick={() => setActiveBranch(null)}\n          defaultOptions={{ maxWidth: 200 }}\n        >\n          <PickupMapBranch\n            branch={branch}\n            onConfirm={() => {\n              onConfirmPickup(branch.id)\n            }}\n          />\n        </InfoWindow>\n      ) : null}\n    </Marker>\n  )\n\n  return useObserver(() => {\n    if (business.isBrand) {\n      return (\n        <QueryPickupMapBrand\n          variables={{ brandId: business.brandId! }}\n          renderLoading={false}\n          render={({ branches }) => {\n            const branch =\n              branches && branches.find(RM.propEq('id', business.branchId))\n            return (\n              <>\n                <MapPanning map={map} gps={branch && branch.gps} />\n                {branches && branches.map(renderSite)}\n              </>\n            )\n          }}\n        />\n      )\n    }\n    return (\n      <QueryPickupMapBranch\n        variables={{ branchId: business.branchId! }}\n        renderLoading={false}\n        render={({ branch }) => (\n          <>\n            <MapPanning map={map} gps={branch && branch.gps} />\n            {branch && renderSite(branch)}\n          </>\n        )}\n      />\n    )\n  })\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React, { createFactory } from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { DeliveryTypeEnum } from '../../graph/generated'\nimport { DeliveryMap } from './DeliveryMap'\nimport { PickupMap } from './PickupMap'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst mapByOrderMethod = {\n  [DeliveryTypeEnum.Messenger]: createFactory<IProps>(DeliveryMap),\n  [DeliveryTypeEnum.Pickup]: createFactory<IProps>(PickupMap),\n}\n\nexport const OrderMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, map } = useRoot()\n  return useObserver(() => (\n    <BaseMap model={map}>\n      {mapByOrderMethod[order.orderMethod]({ onConfirm })}\n    </BaseMap>\n  ))\n}\n","import './MapView.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../../common/ColStyle'\nimport { OrderMethod } from '../../destination/OrderMethod'\nimport ShopHeaderView from '../../shop/ShopHeaderView'\nimport { OrderMap } from '../OrderMap'\n\nexport const MapView = () => {\n  const { history } = useRouterContext()\n  return (\n    <>\n      <ShopHeaderView />\n      <Row className=\"justify-content-md-center\">\n        <ColStyle>\n          <div className=\"map__view\">\n            <div className=\"map__view__header\">\n              <OrderMethod />\n            </div>\n            <OrderMap onConfirm={() => history.push(`/order`)} />\n          </div>\n        </ColStyle>\n      </Row>\n    </>\n  )\n}\n","import './OrderPaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { OrderFormTipInput } from './OrderFormTipInput'\nimport { OrderPaymentButton } from './OrderPaymentButton'\n\nexport const OrderPaymentMethod: React.FC = () => (\n  <div className=\"order__payment__method\">\n    <OrderPaymentButton\n      method={PaymentGateEnum.Gopay}\n      data-testid=\"orderPaymentMethod__GoPay\"\n    >\n      {i18n.t`Pay by card`.toLocaleUpperCase()}\n    </OrderPaymentButton>\n    <OrderPaymentButton\n      method={PaymentGateEnum.Cash}\n      data-testid=\"orderPaymentMethod__Cash\"\n    >\n      {i18n.t`Pay by cash`.toLocaleUpperCase()}\n    </OrderPaymentButton>\n\n    <OrderFormTipInput />\n  </div>\n)\n","import React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { OrderAgreements } from './OrderAgreements'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\nimport { OrderFormInputs } from './OrderFormInputs'\nimport { OrderFormSetup } from './OrderFormSetup'\nimport { OrderPaymentMethod } from './OrderPaymentMethod'\nimport { OrderSubmitLine } from './OrderSubmitLine'\n\nexport const OrderForm: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  return (\n    <OrderFormSetup\n      render={form => (\n        <div className=\"order__form\">\n          <div className=\"order__form__inner\">\n            <OrderFormAutoFill onFill={values => form.setAllValues(values)} />\n            <OrderFormInputs />\n            <OrderPaymentMethod />\n            <OrderAgreements />\n          </div>\n          <OrderSubmitLine\n            onClick={form.submitForm}\n            canSubmit={orderModel.isVamInitialized}\n          />\n        </div>\n      )}\n    />\n  )\n}\n","import './OrderFormView.css'\n\nimport React from 'react'\n\nimport { useQOrderForm } from '../../graph/generated'\nimport { OrderErrorModal } from './OrderErrorModal'\nimport { OrderForm } from './OrderForm'\nimport { OrderGoPayModal } from './OrderGoPayModal'\nimport { OrderTimePicker } from './OrderTimePicker'\n\ninterface IProps {\n  orderId: MaybeID\n}\n\nexport const OrderFormView: React.FC<IProps> = ({ orderId }) => {\n  const { data, loading } = useQOrderForm(\n    { orderId: orderId! },\n    { skip: !orderId },\n  )\n\n  if (loading || data.order.countWares === 0) {\n    return null\n  }\n\n  return (\n    <>\n      <OrderForm />\n      <OrderGoPayModal />\n      <OrderErrorModal />\n      <OrderTimePicker />\n    </>\n  )\n}\n","import './ShopOverview.css'\n\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Row } from 'reactstrap'\n\nimport { useRoot } from '../../app/useRoot'\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { ColStyleLeft, ColStyleRight } from '../../common/ColStyle'\nimport ThemeSwitchProvider from '../../common/ThemeSwitchProvider'\nimport { i18n } from '../../i18n'\nimport { CartView } from '../cart/CartView'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderFormView } from '../orderForm/OrderFormView'\nimport ShopHeaderView from './ShopHeaderView'\n\nexport const ShopOverview: React.FC = () => {\n  const { order: orderModel } = useRoot()\n  if (!orderModel.hasOrder) {\n    return <Redirect to=\"/\" />\n  }\n  return (\n    <ThemeSwitchProvider branchId={orderModel.branchId}>\n      <>\n        <ShopHeaderView />\n        <Row className=\"justify-content-md-center\">\n          <ColStyleLeft>\n            <div className=\"shop__overview__column\">\n              <FoodMenuView />\n            </div>\n          </ColStyleLeft>\n\n          <ColStyleRight>\n            <div className=\"shop__overview__column cart__column\">\n              <div className=\"cart__column__header\">\n                <span className=\"flaticon-cart cart__column__header__icon\" />\n                <h4>{i18n.t`Your order`}</h4>\n              </div>\n\n              <BackgroundThemed\n                className=\"cart__column__cart\"\n                imageName=\"backgroundCart\"\n              >\n                <CartView orderId={orderModel.orderId} />\n              </BackgroundThemed>\n\n              <OrderFormView orderId={orderModel.orderId} />\n            </div>\n          </ColStyleRight>\n          <OrderFormStorageNotice />\n        </Row>\n      </>\n    </ThemeSwitchProvider>\n  )\n}\n","import { useReleaseCabinet } from '@speedlo/tools'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { formatDateTime } from '../helpers/formats'\nimport { FinishView } from '../segments/finish/FinishView'\nimport { MapView } from '../segments/map/views/MapView'\nimport { ShopOverview } from '../segments/shop/ShopOverview'\n\nconst DesktopApp = () => {\n  useReleaseCabinet(({ version, date }) => {\n    alert(`verze: ${version}, datum: ${formatDateTime(date)}`)\n  })\n  return (\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MapView} />\n      <Route path=\"/order\" component={ShopOverview} />\n      <Route path=\"/finish\" component={FinishView} />\n    </Container>\n  )\n}\n\nexport default DesktopApp\n"],"sourceRoot":""}