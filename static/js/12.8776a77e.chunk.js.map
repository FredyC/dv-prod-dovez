{"version":3,"sources":["segments/shop/OrderAddress.tsx","segments/shop/ShopCloseAlert.tsx","segments/shop/ShopIntro.tsx","segments/shop/ShopLogo.tsx","segments/shop/ShopOpeningHours.tsx","segments/shop/Sticker.tsx","segments/shop/ShopHeader.tsx","segments/shop/ShopHeaderView.tsx","segments/finish/FinishView.tsx","segments/map/PickupMapBranch.tsx","segments/map/PickupMap.tsx","segments/map/OrderMap.tsx","segments/map/MapView.tsx","segments/orderForm/OrderForm.tsx","segments/shop/ShopOverview.tsx","app/DesktopApp.tsx"],"names":["OrderAddress","address","useRoot","order","location","useObserver","orderMethod","DeliveryTypeEnum","Messenger","i18n","Pickup","ShopAddress","StyledShopCloseAlert","styled","Alert","theme","primary","ShopCloseAlert","status","useShopStatus","decision","closingIn","closingInPlural","ShopIntroStyled","div","ShopIntro","intro","data-testid","headerText","LogoLink","url","children","href","to","LogoContainerStyled","ShopLogo","props","BackgroundThemed","className","imageName","size","StyledShopOpeningHours","Container","ShopOpeningHours","branch","openingHours","businessHours","filter","RM","propEq","fluid","length","map","businessHour","idx","key","formatTime","openAt","closeAt","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","StickerThemed","IconStyled","span","Sticker","success","cn","StyledShopHeader","StyledLanguagePicker","LanguagePicker","ShopHeader","Row","ColStyle","ShopHeaderIcons","homepageUrl","exact","path","render","ShopClosingTimeModal","ShopHeaderView","observer","business","useQShopHeaderIntro","brandId","isBrand","hasOrder","undefined","branchId","skip","isValid","fetchPolicy","dataIntro","data","loadingIntro","loading","useQShopHeaderBranch","dataBranch","loadingBranch","FinishView","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","companyBranch","FinishViewFooter","finish","StyledPickupMapBranch","tertiaryText","Color","lighten","toString","PickupMapBranch","onConfirm","onClose","shopStatus","onClick","name","color","disabled","pickupEnabled","openingIn","getButtonText","PickupMap","store","useLocalStore","activeBranchId","useFoodMenuQuery","usePickupMapQuery","useWhen","createPickupOrder","useOrderCreate","renderBranchMarker","MapBranchMarker","id","renderBranchInfo","position","gpsToLatLng","gps","getPixelPositionOffset","width","x","y","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","panToGps","useMapPanning","brand","branches","activeBranch","find","idPropEq","mapByOrderMethod","createFactory","DeliveryMap","OrderMap","BaseMap","model","StyledMapView","MapView","history","useRouterContext","OrderMethod","push","StyledOrderForm","OrderForm","OrderFormSetup","OrderFormAutoFill","OrderFormInputs","OrderTimeButtons","OrderPromoInput","OrderPaymentMethod","OrderFormTipInput","OrderAgreements","ButtonStrip","OrderSubmitButton","ShopOverview","useEmptyOrderRedirect","FoodMenuView","CartView","OrderFormStorageNotice","DesktopApp","useReleaseCabinet","alert","component"],"mappings":"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","file":"static/js/12.8776a77e.chunk.js","sourcesContent":["import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { DeliveryTypeEnum, FAddressFragment } from '../../graph/generated'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  address: Maybe<FAddressFragment>\n}\n\nexport const OrderAddress: React.FC<IProps> = ({ address }) => {\n  const { order, location } = useRoot()\n\n  return useObserver(() => {\n    switch (order.orderMethod) {\n      case DeliveryTypeEnum.Messenger:\n        return (\n          <span>\n            {i18n.t`Order to address`}: <b>{location.address}</b>\n          </span>\n        )\n      case DeliveryTypeEnum.Pickup:\n        return (\n          <span>\n            {i18n.t`Pickup at address`}:{' '}\n            <b>\n              <ShopAddress address={address} />\n            </b>\n          </span>\n        )\n      default:\n        return null\n    }\n  })\n}\n","import React from 'react'\nimport { Alert } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FCompanyBranchStatusFragment } from '../../graph/generated'\nimport { useShopStatus } from '../../hooks/useShopStatus'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status: FCompanyBranchStatusFragment\n}\n\nconst StyledShopCloseAlert = styled(Alert)`\n  background: ${({ theme }) => theme.primary};\n  color: white;\n  text-align: center;\n  border-radius: 0.7rem;\n  position: fixed;\n  top: 0.1rem;\n  z-index: 3;\n  padding: 0.4rem 1rem;\n`\n\nexport const ShopCloseAlert: React.FC<IProps> = ({ status }) => {\n  const { decision, closingIn } = useShopStatus({\n    status,\n  })\n  if (decision === 'ClosingSoon') {\n    const closingInPlural = i18n.plural({\n      value: closingIn,\n      one: 'closing in 1 minute',\n      few: 'closing in # minutes',\n      other: 'closing in # minutes',\n    })\n    return (\n      <StyledShopCloseAlert>\n        {i18n.t`Beware! We are ${closingInPlural}. Finish your order quickly.`}\n      </StyledShopCloseAlert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { QShopHeaderIntroIntro } from '../../graph/generated'\n\ninterface IProps {\n  intro?: Maybe<QShopHeaderIntroIntro>\n}\n\nconst ShopIntroStyled = styled.div`\n  margin: 0.8rem 1rem 1rem 1.3rem;\n`\n\nexport const ShopIntro: React.FC<IProps> = ({ intro }) => (\n  <ShopIntroStyled data-testid=\"headerText\">\n    {intro ? intro.headerText : ''}\n  </ShopIntroStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { BackgroundThemed } from '../../common/BackgroundThemed'\n\ninterface IProps {\n  url: Maybe<string>\n}\n\nconst LogoLink: React.FC<IProps> = ({ url, children }) =>\n  url ? <a href={url}>{children}</a> : <Link to=\"/\">{children}</Link>\n\nconst LogoContainerStyled = styled.div`\n  height: 200px;\n  width: 400px;\n  flex: 0 0 400px;\n  & .shop__header__logo {\n    height: 100%;\n  }\n`\n\nexport const ShopLogo: React.FC<IProps> = props => (\n  <LogoContainerStyled>\n    <LogoLink {...props}>\n      <BackgroundThemed\n        className=\"shop__header__logo\"\n        imageName=\"storeLogo\"\n        size=\"cover\"\n      />\n    </LogoLink>\n  </LogoContainerStyled>\n)\n","import { RM } from '@speedlo/tools'\nimport React from 'react'\nimport { Container } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { FShopOpeningHoursFragment } from '../../graph/generated'\nimport { formatTime } from '../../helpers/formats'\nimport { ShopStatusDisplay } from './ShopStatusDisplay'\n\ninterface IProps {\n  branch: Maybe<FShopOpeningHoursFragment>\n}\n\nconst StyledShopOpeningHours = styled(Container)`\n  margin: 0.4rem 0 0 0.1rem;\n  display: flex;\n\n  & div.times,\n  & div.status {\n    padding-left: 2rem;\n  }\n\n  & div.icon {\n    margin: -0.2rem 0 0 -1rem;\n    position: absolute;\n  }\n`\n\nexport const ShopOpeningHours: React.FC<IProps> = ({ branch }) => {\n  if (!branch) {\n    return null\n  }\n  const openingHours = branch.businessHours.filter(RM.propEq('closed', false))\n  return (\n    <StyledShopOpeningHours fluid={true}>\n      <div className=\"icon flaticon-clock\" />\n      {openingHours.length > 0 && (\n        <div className=\"times\">\n          {openingHours.map((businessHour, idx) => (\n            <div data-testid=\"openingHours\" key={idx}>\n              {`${formatTime(businessHour.openAt)} - ${formatTime(\n                businessHour.closeAt,\n              )}`}\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"status\">\n        {branch && (\n          <ShopStatusDisplay\n            status={branch}\n            deliveryTime={branch.defaultDeliveryTime}\n            pickupTime={branch.defaultPickupTime}\n          />\n        )}\n      </div>\n    </StyledShopOpeningHours>\n  )\n}\n","import { cn } from '@speedlo/ui'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nconst StickerThemed = styled.div`\n  background: ${({ theme }) => theme.primary};\n  color: white;\n  margin-top: 1rem;\n  padding: 0;\n  border-radius: 0 0.7rem 0.7rem 0;\n  white-space: nowrap;\n  flex: none;\n\n  & p {\n    display: inline-block;\n    margin: 0.6rem 1rem 0 0;\n    vertical-align: top;\n    white-space: nowrap;\n  }\n`\n\nconst IconStyled = styled.span`\n  margin: 0.5rem 1rem 0 0.1rem;\n  &:before,\n  :after {\n    font-size: 1.8rem;\n    margin: 0 0 0 1rem;\n  }\n`\n\ninterface IProps {\n  success?: boolean\n}\n\nexport const Sticker: React.FC<IProps> = ({ success = false, children }) => (\n  <StickerThemed\n    className={cn('right__sticker', {\n      'order-method-unselected': !success,\n      'order-method-selected': success,\n    })}\n  >\n    <IconStyled className=\"flaticon-transport\" />\n    <p>{children}</p>\n  </StickerThemed>\n)\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Row } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport { LanguagePicker } from '../../common/LanguagePicker'\nimport {\n  QShopHeaderBranchBranch,\n  QShopHeaderIntroIntro,\n} from '../../graph/generated'\nimport { OrderAddress } from './OrderAddress'\nimport { ShopCloseAlert } from './ShopCloseAlert'\nimport { ShopClosingTimeModal } from './ShopClosingTimeModal'\nimport { ShopHeaderIcons } from './ShopHeaderIcons'\nimport { ShopIntro } from './ShopIntro'\nimport { ShopLogo } from './ShopLogo'\nimport { ShopOpeningHours } from './ShopOpeningHours'\nimport { Sticker } from './Sticker'\n\ninterface IProps {\n  branch: QShopHeaderBranchBranch | null\n  intro: QShopHeaderIntroIntro | null\n}\n\nconst StyledShopHeader = styled.div`\n  display: flex;\n  min-height: 200px;\n  & div.info {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`\n\nconst StyledLanguagePicker = styled(LanguagePicker)`\n  position: absolute;\n  z-index: 1;\n  right: 1rem;\n  top: 2.5rem;\n`\n\nexport const ShopHeader: React.FC<IProps> = ({ branch, intro }) => (\n  <div>\n    <Row className=\"justify-content-md-center\">\n      <ColStyle>\n        <ShopHeaderIcons />\n        <StyledLanguagePicker />\n      </ColStyle>\n      {branch && <ShopCloseAlert status={branch} />}\n    </Row>\n\n    <Row className=\"row-white justify-content-md-center\">\n      <ColStyle>\n        <StyledShopHeader data-testid=\"shopHeader\">\n          <>\n            <ShopLogo url={intro ? intro.homepageUrl : null} />\n\n            <div className=\"info\">\n              <Route\n                exact={true}\n                path=\"/\"\n                render={() => (\n                  <>\n                    <Sticker>\n                      <Trans>Choose your delivery option below</Trans>\n                    </Sticker>\n                    <ShopIntro intro={intro} />\n                  </>\n                )}\n              />\n              <Route\n                path=\"/order\"\n                render={() => (\n                  <>\n                    {branch && <ShopClosingTimeModal status={branch} />}\n                    <Sticker success={true}>\n                      <OrderAddress address={branch ? branch.address : null} />\n                    </Sticker>\n                    <ShopOpeningHours branch={branch} />\n\n                    <ShopIntro intro={intro} />\n                  </>\n                )}\n              />\n              <Route\n                path=\"/finish\"\n                render={() => (\n                  <>\n                    <Sticker success={true}>\n                      <Trans>Order was send</Trans>\n                    </Sticker>\n                    <ShopOpeningHours branch={branch} />\n                    <ShopIntro intro={intro} />\n                  </>\n                )}\n              />\n            </div>\n          </>\n        </StyledShopHeader>\n      </ColStyle>\n    </Row>\n  </div>\n)\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport {\n  useQShopHeaderBranch,\n  useQShopHeaderIntro,\n} from '../../graph/generated'\nimport { ShopHeader } from './ShopHeader'\n\nexport const ShopHeaderView = observer(() => {\n  const { order, business } = useRoot()\n\n  const { data: dataIntro, loading: loadingIntro } = useQShopHeaderIntro(\n    {\n      brandId:\n        business.isBrand && !order.hasOrder ? business.brandId : undefined,\n      // need to use branchId from order first as it reflects branch for which\n      // order is being made and it might have different eg. business hours\n      // then the one obtained through business code\n      branchId:\n        business.isBrand && !order.hasOrder\n          ? undefined\n          : order.branchId || business.branchId!,\n    },\n    {\n      skip: !business.isValid,\n      fetchPolicy: 'cache-first',\n    },\n  )\n\n  const { data: dataBranch, loading: loadingBranch } = useQShopHeaderBranch(\n    {\n      branchId: order.branchId!,\n    },\n    {\n      skip: !order.branchId,\n      fetchPolicy: 'cache-first',\n    },\n  )\n\n  return (\n    <ShopHeader\n      branch={loadingBranch ? null : dataBranch.branch}\n      intro={loadingIntro ? null : dataIntro.intro}\n    />\n  )\n})\n\nexport default ShopHeaderView\n","import './FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport ShopHeaderView from '../shop/ShopHeaderView'\nimport { FinishViewFooter } from './FinishViewFooter'\nimport { FinishViewLoader } from './FinishViewLoader'\nimport { FinishViewOrder } from './FinishViewOrder'\nimport { FinishViewSupport } from './FinishViewSupport'\n\ninterface IProps {}\n\nexport const FinishView: React.FC<IProps> = () => (\n  <>\n    <ShopHeaderView />\n    <Row className=\"justify-content-md-center\">\n      <ColStyle>\n        <div className=\"finish__view\">\n          <FinishViewLoader\n            render={result => (\n              <>\n                <FinishViewOrder order={result.order} />\n                <FinishViewSupport branch={result.companyBranch} />\n                <FinishViewFooter finish={result} />\n              </>\n            )}\n          />\n        </div>\n      </ColStyle>\n    </Row>\n  </>\n)\n","import { Plural, Trans } from '@lingui/macro'\nimport Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { IShopStatus, useShopStatus } from '../../hooks/useShopStatus'\n\ninterface IProps {\n  branch: FPickupBranchFragment\n  onConfirm(): void\n  onClose(): void\n}\n\nconst StyledPickupMapBranch = styled.div`\n  font-size: 1rem;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  max-width: 18rem;\n  min-width: 13rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 7px 1px rgba(0, 0, 0, 0.3);\n\n  > header {\n    flex: 0 0 auto;\n    background-color: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.tertiaryText};\n    padding: 0.4rem;\n    padding-right: 1.3rem;\n    border-radius: 8px 8px 0 0;\n  }\n\n  > p {\n    flex: 1 1 0;\n    margin: 0.5rem;\n  }\n\n  > button {\n    flex: 1 0 auto;\n    margin: 0 0.3rem 0.3rem 0.3rem;\n    font-size: 1rem;\n    line-height: 1.5rem;\n    text-transform: uppercase;\n    font-variant-caps: inherit;\n  }\n\n  > .close {\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 0.5rem;\n    font-size: 0.9rem;\n    cursor: pointer;\n\n    &:hover {\n      border-radius: 0 8px 0 0;\n      background-color: ${({ theme }) =>\n        Color(theme.primary)\n          .lighten(0.5)\n          .toString()};\n    }\n  }\n`\n\nexport const PickupMapBranch: React.FC<IProps> = ({\n  branch,\n  onConfirm,\n  onClose,\n}) => {\n  const shopStatus = useShopStatus({\n    status: branch,\n  })\n  return (\n    <StyledPickupMapBranch data-testid=\"PickupMapBranch\">\n      <div className=\"close\" onClick={onClose}>\n        🗙\n      </div>\n      <header>{branch.name}</header>\n      <p>\n        <ShopAddress address={branch.address} />\n      </p>\n      <PrimaryButton\n        color=\"primary\"\n        data-testid=\"submitPickupBranch\"\n        disabled={!branch.pickupEnabled}\n        onClick={onConfirm}\n      >\n        {branch.pickupEnabled ? (\n          getButtonText(shopStatus)\n        ) : (\n          <Trans>Delivery only</Trans>\n        )}\n      </PrimaryButton>\n    </StyledPickupMapBranch>\n  )\n}\n\nfunction getButtonText({ decision, openingIn, closingIn }: IShopStatus) {\n  switch (decision) {\n    case 'Closed':\n      return <Trans>Closed</Trans>\n    case 'ClosingSoon':\n      return (\n        <Plural\n          value={closingIn}\n          one=\"Closing in 1 minute\"\n          other=\"Closing in # minutes\"\n        />\n      )\n    case 'OpeningSoon':\n      return (\n        <Plural\n          value={openingIn}\n          one=\"Opening in 1 minute\"\n          other=\"Opening in # minutes\"\n        />\n      )\n    default:\n      return <Trans>Pickup here</Trans>\n  }\n}\n","import './PickupMap.css'\n\nimport { OverlayView } from '@react-google-maps/api'\nimport { useWhen } from '@speedlo/hooks'\nimport { idPropEq } from '@speedlo/tools'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { MapBranchMarker } from '../../common/MapBranchMarker'\nimport { FPickupBranchFragment } from '../../graph/generated'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { useFoodMenuQuery } from '../foodMenu/hooks/useFoodMenuQuery'\nimport { useMapPanning } from './hooks/useMapPanning'\nimport { useOrderCreate } from './hooks/useOrderCreate'\nimport { usePickupMapQuery } from './hooks/usePickupMapQuery'\nimport { PickupMapBranch } from './PickupMapBranch'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const PickupMap = observer<IProps>(({ onConfirm }) => {\n  const { business } = useRoot()\n\n  const store = useLocalStore(() => ({\n    activeBranchId: null as Maybe<ID>,\n  }))\n\n  // prefetch food menu for active branch\n  useFoodMenuQuery(store.activeBranchId)\n\n  const { data, loading } = usePickupMapQuery()\n\n  // select business branchId by default\n  useWhen(\n    () => business.branchId !== null && store.activeBranchId === null,\n    () => {\n      store.activeBranchId = business.branchId\n    },\n  )\n\n  const { createPickupOrder } = useOrderCreate(onConfirm)\n\n  const renderBranchMarker = (branch: FPickupBranchFragment) => (\n    <MapBranchMarker\n      key={`${branch.id}-marker`}\n      branch={branch}\n      onClick={() => {\n        store.activeBranchId = branch.id\n      }}\n    />\n  )\n\n  const renderBranchInfo = (branch: FPickupBranchFragment) => (\n    <OverlayView\n      key={branch.id}\n      position={gpsToLatLng(branch.gps)}\n      getPixelPositionOffset={width => ({\n        // some measurement hickup, width is 0 initially, use average center\n        x: width === 0 ? -131 : -(width / 2),\n        y: 25,\n      })}\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n    >\n      <PickupMapBranch\n        branch={branch}\n        onClose={() => {\n          store.activeBranchId = null\n        }}\n        onConfirm={() => {\n          createPickupOrder(branch.id)\n        }}\n      />\n    </OverlayView>\n  )\n\n  const panToGps = useMapPanning()\n\n  if (loading) {\n    return null\n  }\n\n  if (business.isBrand && data.brand) {\n    const branches = data.brand\n\n    const activeBranch =\n      store.activeBranchId !== null &&\n      branches.find(idPropEq(store.activeBranchId))\n\n    // const businessBranch = branches.find(idPropEq(business.branchId))\n\n    if (activeBranch) {\n      panToGps(activeBranch.gps)\n    }\n\n    return (\n      <div data-testid=\"PickupMap\">\n        {branches && branches.map(renderBranchMarker)}\n        {activeBranch && renderBranchInfo(activeBranch)}\n      </div>\n    )\n  } else if (data.branch) {\n    const branch = data.branch\n    panToGps(branch.gps)\n    return (\n      <div data-testid=\"PickupMap\">\n        {renderBranchMarker(branch)}\n        {renderBranchInfo(branch)}\n      </div>\n    )\n  }\n\n  return null\n})\n","import { useObserver } from 'mobx-react-lite'\nimport React, { createFactory } from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { DeliveryTypeEnum } from '../../graph/generated'\nimport { DeliveryMap } from './DeliveryMap'\nimport { PickupMap } from './PickupMap'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nconst mapByOrderMethod = {\n  [DeliveryTypeEnum.Messenger]: createFactory<IProps>(DeliveryMap),\n  [DeliveryTypeEnum.Pickup]: createFactory<IProps>(PickupMap),\n}\n\nexport const OrderMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { order, map } = useRoot()\n  return useObserver(() => (\n    <BaseMap model={map}>\n      {mapByOrderMethod[order.orderMethod]({ onConfirm })}\n    </BaseMap>\n  ))\n}\n","import { useRouterContext } from '@speedlo/hooks'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Row } from 'reactstrap'\nimport styled from 'styled-components/macro'\n\nimport { ColStyle } from '../../common/ColStyle'\nimport ShopHeaderView from '../shop/ShopHeaderView'\nimport { OrderMethod } from './destination/OrderMethod'\nimport { usePickupMapQuery } from './hooks/usePickupMapQuery'\nimport { OrderMap } from './OrderMap'\n\nconst StyledMapView = styled.div`\n  background-color: #e8e0d5;\n  border-radius: 0.6rem;\n  border: 1px solid #5a5a5a;\n  min-height: 29rem;\n  height: calc(100vh - 25rem);\n  margin: 1.6rem 0 0 0;\n  text-align: center;\n  position: relative;\n\n  .header {\n    background-color: #5a5a5a;\n    border-radius: 0.5rem 0.5rem 0 0;\n    height: 3.75rem;\n  }\n`\n\nexport const MapView = observer(() => {\n  const { history } = useRouterContext()\n\n  // prefetch pickup branches\n  usePickupMapQuery()\n\n  return (\n    <>\n      <ShopHeaderView />\n      <Row className=\"justify-content-md-center\">\n        <ColStyle>\n          <StyledMapView>\n            <div className=\"header\">\n              <OrderMethod />\n            </div>\n            <OrderMap onConfirm={() => history.push(`/order`)} />\n          </StyledMapView>\n        </ColStyle>\n      </Row>\n    </>\n  )\n})\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components/macro'\n\nimport { ButtonStrip } from '../../common/ButtonStrip'\nimport { OrderAgreements } from './OrderAgreements'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\nimport { OrderFormInputs } from './OrderFormInputs'\nimport { OrderFormSetup } from './OrderFormSetup'\nimport { OrderFormTipInput } from './OrderFormTipInput'\nimport { OrderPaymentMethod } from './OrderPaymentMethod'\nimport { OrderPromoInput } from './OrderPromoInput'\nimport { OrderSubmitButton } from './OrderSubmitButton'\nimport { OrderTimeButtons } from './OrderTimeButtons'\n\nconst StyledOrderForm = styled.div`\n  .inner {\n    padding: 1rem;\n  }\n`\n\nexport const OrderForm: React.FC = () => {\n  return (\n    <StyledOrderForm>\n      <OrderFormSetup>\n        <div className=\"inner\">\n          <OrderFormAutoFill />\n          <OrderFormInputs />\n          <OrderTimeButtons />\n          <OrderPromoInput />\n          <OrderPaymentMethod />\n          <OrderFormTipInput />\n          <OrderAgreements />\n        </div>\n        <ButtonStrip>\n          <OrderSubmitButton>\n            <Trans>Place order</Trans>\n          </OrderSubmitButton>\n        </ButtonStrip>\n      </OrderFormSetup>\n    </StyledOrderForm>\n  )\n}\n","import './ShopOverview.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { ColStyleLeft, ColStyleRight } from '../../common/ColStyle'\nimport { useEmptyOrderRedirect } from '../../hooks/useEmptyOrderRedirect'\nimport { i18n } from '../../i18n'\nimport { CartView } from '../cart/CartView'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { OrderForm } from '../orderForm/OrderForm'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport ShopHeaderView from './ShopHeaderView'\n\nexport const ShopOverview: React.FC = () => {\n  useEmptyOrderRedirect()\n  return (\n    <>\n      <ShopHeaderView />\n      <Row className=\"justify-content-md-center\">\n        <ColStyleLeft>\n          <div className=\"shop__overview__column\">\n            <FoodMenuView />\n          </div>\n        </ColStyleLeft>\n\n        <ColStyleRight>\n          <div\n            className=\"shop__overview__column cart__column\"\n            data-testid=\"CartColumn\"\n          >\n            <div className=\"cart__column__header\">\n              <span className=\"flaticon-cart cart__column__header__icon\" />\n              <h4>{i18n.t`Your order`}</h4>\n            </div>\n\n            <BackgroundThemed\n              className=\"cart__column__cart\"\n              imageName=\"backgroundCart\"\n            >\n              <CartView />\n            </BackgroundThemed>\n\n            <OrderForm />\n          </div>\n        </ColStyleRight>\n        <OrderFormStorageNotice />\n      </Row>\n    </>\n  )\n}\n","import { useReleaseCabinet } from '@speedlo/tools'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { FinishView } from '../segments/finish/FinishView'\nimport { MapView } from '../segments/map/MapView'\nimport { ShopOverview } from '../segments/shop/ShopOverview'\n\nconst DesktopApp = () => {\n  useReleaseCabinet(alert)\n  return (\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MapView} />\n      <Route path={['/order', '/confirm']} component={ShopOverview} />\n      <Route path=\"/finish\" component={FinishView} />\n    </Container>\n  )\n}\n\nexport default DesktopApp\n"],"sourceRoot":""}