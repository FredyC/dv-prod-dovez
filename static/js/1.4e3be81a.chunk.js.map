{"version":3,"sources":["common/Buttons.tsx","common/RouteButton.tsx","common/WithOrder.tsx","common/ColStyle.tsx","common/ShopStatus.tsx","common/BaseMap.tsx","common/ShopAddress.tsx","common/AlertModal.tsx","common/BackgroundThemed.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","segments/destination/OrderMethod.tsx","common/ButtonStripe.tsx","segments/shop/ShopClosingTimeModal.tsx","common/WithUser.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","segments/cart/AddToCartModal.tsx","segments/orderForm/OrderFormStorageNotice.tsx","segments/orderForm/OrderFormView.graphql.ts","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderSubmitLine.tsx","common/SubmitSpinner.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/cart/CartDiscounts.tsx","segments/cart/CartItemButton.tsx","segments/cart/EditCartItemButton.tsx","segments/cart/RemoveCartItemButton.tsx","segments/cart/CartItem.tsx","segments/cart/CartTotals.tsx","segments/cart/CartContents.tsx","segments/cart/CartIsEmpty.tsx","segments/cart/ChangeCartModal.tsx","segments/cart/CartView.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/LinkToCart.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/OrderLimitModal.tsx","segments/foodMenu/FoodMenuView.tsx","segments/destination/GeolocationButton.tsx","segments/destination/ResolvedAddress.tsx","segments/destination/SearchInput.tsx","segments/destination/AddressInput.tsx","segments/map/AddressSubmit.tsx","segments/map/DeliveryMap.tsx","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/sidedishPicker/SidedishPicker.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartModal.tsx","common/FormTextInput.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderFormInputs.tsx","common/FormInputCheckbox.tsx","segments/orderForm/OrderAgreements.tsx","segments/orderForm/OrderFormAutoFill.tsx","segments/orderForm/OrderFormSetup.tsx","segments/finish/FinishView.graphql.ts","segments/finish/FinishViewLoader.tsx","segments/shop/logo-commerce-01.svg","segments/shop/logo-commerce-02.svg","segments/shop/logo-doveze.svg","segments/shop/logo-gopay.png"],"names":["__webpack_require__","d","__webpack_exports__","PrimaryButton","SecondaryButton","PrimaryRoutedButton","MobileHeaderButton","SelectButtonThemed","Object","styled","reactstrap_es","withConfig","displayName","themeProp","_a","to","replace","children","buttonProps","__rest","react_default","a","createElement","react_router_dom","isConfirm","theme","primary","selected","Responsive","tertiary","unselected","tertiaryText","unselectedText","tertiaryHover","unselectedHover","name","WithOrder","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router__WEBPACK_IMPORTED_MODULE_1__","_WithRoot__WEBPACK_IMPORTED_MODULE_2__","render","observe","redirect","order","hasOrder","ColStyle","ColStyleLeft","ColStyleRight","reactstrap__WEBPACK_IMPORTED_MODULE_1__","className","sm","md","lg","xl","ShopStatus","date_fns__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","[object Object]","this","timer","props","timedUpdate","update","forceUpdate","setTimeout","clearTimeout","status","now","Date","openThresholdInMinutes","closeThresholdInMinutes","isOpen","willCloseAt","willOpenAt","decision","isSoon","openingIn","closingIn","time","threshold","Boolean","Math","abs","defaultProps","BaseMap","mobx_react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react_google_maps__WEBPACK_IMPORTED_MODULE_2__","MapContainerStyled","div","BaseMapContainer","Fragment","model","containerElement","data-testid","mapElement","style","height","position","ref","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","onClick","options","streetViewControl","mapTypeControl","fullscreenControl","zoomControlOptions","google","maps","ControlPosition","RIGHT_TOP","getMapOptions","ShopAddress","i18n__WEBPACK_IMPORTED_MODULE_0__","address","location","_","street","houseNumber","city","AlertModal","headerText","onClose","modalProps","_extends","toggle","tag","BackgroundThemed","imageName","fallbackColor","fixed","size","component","otherProps","styled_components__WEBPACK_IMPORTED_MODULE_1__","FinishViewFooter","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","common_Buttons__WEBPACK_IMPORTED_MODULE_4__","common_Responsive__WEBPACK_IMPORTED_MODULE_5__","_i18n__WEBPACK_IMPORTED_MODULE_6__","CenteredButtonContainer","finish","androidApp","iosApp","id","href","url","color","toLocaleUpperCase","textAlign","HeaderThemed","styled__WEBPACK_IMPORTED_MODULE_3__","PriceThemed","PriceCornerThemed","FinishViewOrder","react__WEBPACK_IMPORTED_MODULE_2___default","orderPayments","some","hasMethod","graph_types__WEBPACK_IMPORTED_MODULE_4__","CASH","i18n__WEBPACK_IMPORTED_MODULE_1__","GOPAY","getPaymentInfo","items","map","item","OrderItem","key","totalSum","getPaymentPrice","formattedValue","helpers_ramda__WEBPACK_IMPORTED_MODULE_5__","pathEq","recipe","sideDishes","nameLabel","length","path","join","FinishViewSupport","PhoneNumberLinkStyled","branch","phone","OrderMethod","mobx_react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","common_Buttons__WEBPACK_IMPORTED_MODULE_3__","_common_WithRoot__WEBPACK_IMPORTED_MODULE_5__","_helpers_ramda__WEBPACK_IMPORTED_MODULE_6__","_i18n__WEBPACK_IMPORTED_MODULE_7__","OrderMethodButton","orderModel","orderMethod","onChange","onPrefetch","onMouseEnter","useOrderMethod","data-testselected","MESSENGER","identity","PICKUP","prefetchPickup","ShopClosingTimeModal","_common_AlertModal__WEBPACK_IMPORTED_MODULE_3__","_common_ShopStatus__WEBPACK_IMPORTED_MODULE_4__","_common_WithUser__WEBPACK_IMPORTED_MODULE_5__","user","closingTimeAlertHidden","hideClosingTime","values","WithUser","_WithRoot__WEBPACK_IMPORTED_MODULE_1__","initialized","ShopHeaderIcons","common_ColStyle__WEBPACK_IMPORTED_MODULE_2__","_logo_commerce_01_svg__WEBPACK_IMPORTED_MODULE_3__","_logo_commerce_01_svg__WEBPACK_IMPORTED_MODULE_3___default","_logo_commerce_02_svg__WEBPACK_IMPORTED_MODULE_4__","_logo_commerce_02_svg__WEBPACK_IMPORTED_MODULE_4___default","_logo_doveze_svg__WEBPACK_IMPORTED_MODULE_5__","_logo_doveze_svg__WEBPACK_IMPORTED_MODULE_5___default","_logo_gopay_png__WEBPACK_IMPORTED_MODULE_6__","_logo_gopay_png__WEBPACK_IMPORTED_MODULE_6___default","src","alt","ShopStatusDisplay","styled_components__WEBPACK_IMPORTED_MODULE_2__","_common_ShopStatus__WEBPACK_IMPORTED_MODULE_3__","StatusDisplayOpen","span","StatusDisplayClosed","s","0","AddToCartModal","graph__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","models_OrderModel_graphql__WEBPACK_IMPORTED_MODULE_5__","_common_Responsive__WEBPACK_IMPORTED_MODULE_6__","_CartModal__WEBPACK_IMPORTED_MODULE_7__","QueryCart","match","history","variables","recipeId","params","renderLoading","renderError","data","loading","isMobile","onConfirm","addFromRecipeMobile","Promise","resolve","addFromRecipe","goBack","isLoading","OrderFormStorageNotice","reactstrap__WEBPACK_IMPORTED_MODULE_3__","styled_components__WEBPACK_IMPORTED_MODULE_4__","_common_Responsive__WEBPACK_IMPORTED_MODULE_5__","_common_WithRoot__WEBPACK_IMPORTED_MODULE_6__","_OrderFormView_graphql__WEBPACK_IMPORTED_MODULE_7__","NoticeButton","StorageNotice","root","skip","rememberForm","orderId","countWares","setFormRememberYes","setFormRememberNo","QueryOrderForm","graph__WEBPACK_IMPORTED_MODULE_0__","OrderFormQuery","OrderErrorModal","common_WithOrder__WEBPACK_IMPORTED_MODULE_4__","hasErrors","clearErrors","submitErrors","error","idx","OrderNoteInput","react_form__WEBPACK_IMPORTED_MODULE_3__","isTooLong","value","trim","OrderNoteInputValidator","ingredientsDescription","field","validate","fieldApi","type","placeholder","title","e","setValue","target","onBlur","setTouched","valid","invalid","MAX_LENGTH","OrderSubmitLine","common_Responsive__WEBPACK_IMPORTED_MODULE_4__","common_SubmitSpinner__WEBPACK_IMPORTED_MODULE_5__","common_WithOrder__WEBPACK_IMPORTED_MODULE_6__","canSubmit","disabled","isSubmitting","react_spinkit__WEBPACK_IMPORTED_MODULE_1__","react_spinkit__WEBPACK_IMPORTED_MODULE_1___default","fadeIn","OrderGoPayModal","_common_AlertModal__WEBPACK_IMPORTED_MODULE_4__","_common_Pacman__WEBPACK_IMPORTED_MODULE_5__","TextPadding","isGoPayChecking","noMargin","CartDiscounts","discounts","code","description","price","_lingui_react","totalDiscount","CartItemButtonStyled","enabled","useColor","CartItemButtonIcon","CartItemButton","icon","data_testid","EditCartItemButton","itemId","button","RemoveCartItemButton","WithRoot","removeItemFromCart","EditButtonsContainerStyled","styled_components_browser_esm","CartItemStyled","isActive","CartItem_CartItem","onEdit","sideDishCount","i18n","toLocaleLowerCase","CartItemSummaryTotalThemed","color_default","alpha","hsl","string","CartTotals","coverPrice","transportFee","CartContents","rootModel","index_module","lastActiveRecipeId","setUsedRecipeId","CartIsEmptyThemed","secondary","CartIsEmpty","graph","OrderModel_graphql","ChangeCartModal","react_router","CartModal","initialSelection","ramda","updateItem","CartView_CartView","CartView_graphql","CategoryNavigator_ContainerByPlatform","react","state","scroll","onMounted","onSwiping","ev","deltaX","scrollLeft","onSwiped","setState","isDesktop","Swipeable_default","innerRef","foodMenu_CategoryNavigator","Recompose_esm","categories","setActiveCategoryIndex","activeCategoryIndex","category","modules_default","Link","classnames_default","active","onSetActive","offset","smooth","spy","pictogram","Truncate","lines","FoodCategoryStyled","FoodCategoryTitleStyled","foodMenu_FoodCategory","Element","LinkStyled","LinkToCart","hasSidedish","canAddToCart","pathname","FoodMenuItemStyled","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItemCount","foodMenu_FoodMenuItem","inCart","image","descriptionLabel","FoodMenuStyled","FoodMenuListStyled","FoodMenu_FoodMenu","Component","shouldUpdate","orderItemCount","config","orderItemsMax","orderLimitReached","recipes","showOrderLimit","prefetchFood","OrderLimitModal","orderLimitAlertHidden","hideOrderLimit","FoodMenuView","FoodMenuView_graphql","branchId","wareCategories","reduce","result","getCartPresence","Container","destination_GeolocationButton","isVisible","addonType","destination_ResolvedAddress","isResolving","onValidClick","dist_default","destination_SearchInput","onSearch","debounce_default","onKeyPress","clear","inputRef","onInputMount","setFocus","nextProps","isSearching","focus","inputProps","isHidden","address__input__hidden","autoFocus","AddressInputStyled","AddressInputBoxStyled","AddressInput_AddressInput","hasAddress","clearAddress","autoComplete","withUserAddress","attemptGeolocation","isGeolocationAvailable","hasFinishedSearch","isResolved","NoMouseAlert","isStreetAddress","inDeliveryLocation","renderErrorMessage","AddressSubmit","ButtonStripe","Buttons","DeliveryMap_DeliveryMap","disposers","mobx_module","clickPoint","withUserLocation","panToLocation","isReady","hasLocation","geoPoint","forEach","dis","lib","latLng","defaultDraggable","onDragEnd","gps","isDeliveryAddress","setBranch","createDeliveryOrder","prefetchFoodMenu","sidedishPicker_CategoryValidationMessage","minCount","maxCount","node_modules_react_default","SidedishCheckboxThemed","isSelected","canBeSelected","SidedishCheckbox_SidedishCheckbox","outline","sidedish","SidedishPicker_SidedishPicker","selection","onToggle","node_modules_react","includes","CartOrderButton","isConfirming","box","get","__awaiter","undefined","set","array","backdrop","fade","sidedishId","remove","push","CartModal_awaiter","Array","from","FormTextInput","showFeedback","es","touched","emailRx","OrderEmailInputValidator","email","test","OrderEmailInput","OrderNameInput","OrderPhoneInputValidator","OrderPhonePrefixInputValidator","OrderPhoneInput","width","OrderFormInputs","CheckboxContainerStyled","CheckboxStyled","LabelStyled","FormInputCheckbox","defaultValue","checked","Consumer","createContext","ButtonStyled","GdprAgreementStyled","OrderAgreements","descOpen","agreements","agreement","OrderAgreements_extends","isConfirmed","display","hideConfirmed","isMandatory","dangerouslySetInnerHTML","__html","toggleId","OrderFormAutoFill","onFill","debounceInterval","OrderFormSetup_OrderFormSetup","PureComponent","updateVam","formState","formApi","formValue","formAgreement","find","propEq","assign","err","sentry","isVamInitialized","initVam","defaultValues","firstname","lastname","phonePrefix","defaultPhonePrefix","note","payment","types","getFormValues","validateOnMount","onSubmit","submitOrder","logger","submitForm","setAllValues","FinishViewOrderFragment","fragments_graphql","FinishViewQuery","QueryFinishView","FinishViewLoader","module","exports","p"],"mappings":"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","file":"static/js/1.4e3be81a.chunk.js","sourcesContent":["import { Button, ButtonProps } from 'reactstrap'\n\nimport { mediaDesktop, mediaMobile } from 'common/Responsive'\nimport { TThemeModel, TThemeModelProps } from 'models/ThemeModel'\n\nimport { css, styled } from '../styled'\nimport { IButtonProps, RouteButton } from './RouteButton'\n\nexport const PrimaryButton = styled<ButtonProps>(Button)`\n  background-color: ${themeProp('secondary')};\n  border-color: ${themeProp('secondary')};\n  &:hover {\n    background-color: ${themeProp('secondaryHover')};\n    border-color: ${themeProp('secondaryHover')};\n  }\n  &:active {\n    background-color: #262626 !important;\n  }\n`\n\nPrimaryButton.displayName = 'PrimaryButton'\n\nexport const SecondaryButton = styled(Button)`\n  background-color: ${themeProp('tertiary')};\n  border-color: ${themeProp('tertiary')};\n  &:hover {\n    background-color: ${themeProp('tertiaryHover')};\n    border-color: ${themeProp('tertiaryHover')};\n  }\n`\n\nSecondaryButton.displayName = 'SecondaryButton'\n\nexport const PrimaryRoutedButton = styled<IButtonProps>(RouteButton)`\n  background-color: ${themeProp('secondary')};\n  border-color: ${themeProp('secondary')};\n  &:hover {\n    background-color: ${themeProp('secondaryHover')};\n    border-color: ${themeProp('secondaryHover')};\n  }\n`\n\nPrimaryRoutedButton.displayName = 'PrimaryRoutedButton'\n\ninterface IMobileHeaderProps {\n  isConfirm?: boolean\n}\n\nexport const MobileHeaderButton = styled<IMobileHeaderProps>(Button)`\n  background-color: ${({ isConfirm, theme }) =>\n    isConfirm ? theme.primary : 'white'};\n  color: ${({ isConfirm, theme }) => (isConfirm ? 'white' : theme.primary)};\n`\n\nMobileHeaderButton.displayName = 'MobileHeaderButton'\n\nexport const SelectButtonThemed = styled<ButtonProps>(Button)`\n  ${({ theme, selected }) => css`\n    ${mediaDesktop`background-color: ${\n      selected ? theme.tertiary : theme.unselected\n    }\n    `}\n    ${mediaMobile`background-color: ${selected ? theme.tertiary : 'white'}`}\n    border-color: ${selected ? theme.tertiary : theme.unselected};\n    color: ${selected ? theme.tertiaryText : theme.unselectedText};\n    height: 3.7rem;\n    &:hover {\n      background-color: ${\n        selected ? theme.tertiaryHover : theme.unselectedHover\n      };\n      border-color: ${selected ? theme.tertiaryHover : theme.unselectedHover};\n      color: ${selected ? theme.tertiaryText : theme.unselectedText};\n    }\n  `};\n`\n\nSelectButtonThemed.displayName = 'SelectButtonThemed'\n\nfunction themeProp(name: keyof TThemeModelProps) {\n  return ({ theme }: { theme?: TThemeModel }) => theme![name]\n}\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, ButtonProps } from 'reactstrap'\n\ninterface IProps {\n  to: LocationDescriptor\n  replace?: boolean\n}\n\nexport interface IButtonProps extends IProps, ButtonProps {}\n\nexport const RouteButton: React.SFC<IProps> = ({\n  to,\n  replace,\n  children,\n  ...buttonProps\n}) => (\n  <Link to={to} replace={replace}>\n    <Button {...buttonProps}>{children}</Button>\n  </Link>\n)\n","import React from 'react'\nimport { Redirect } from 'react-router'\n\nimport { TOrderModel } from 'models/OrderModel'\n\nimport { WithRoot } from './WithRoot'\n\ninterface IProps {\n  render(root: TOrderModel): ReactNode | ReactNode[]\n  observe?: boolean\n  redirect?: boolean\n}\n\nexport const WithOrder: React.SFC<IProps> = ({\n  render,\n  observe,\n  redirect = false,\n}) => (\n  <WithRoot\n    observe={observe}\n    render={({ order }) => {\n      return order.hasOrder ? (\n        render(order)\n      ) : redirect ? (\n        <Redirect to=\"/\" />\n      ) : null\n    }}\n  />\n)\n","import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import { differenceInMinutes } from 'date-fns'\nimport { PureComponent } from 'react'\n\nimport { GCompanyBranchStatus } from 'graph/types'\n\nexport type TStatus = GCompanyBranchStatus.Fragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\nexport interface IShopStatusRender {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\ninterface IProps {\n  status: TStatus\n  render(opts: IShopStatusRender): ReactNode\n  openThresholdInMinutes?: number\n  closeThresholdInMinutes?: number\n  timedUpdate?: boolean\n  now?: Date\n}\n\nexport class ShopStatus extends PureComponent<IProps> {\n  static defaultProps = {\n    openThresholdInMinutes: 30,\n    closeThresholdInMinutes: 30,\n  }\n  timer: Maybe<NodeJS.Timer> = null\n  componentDidMount() {\n    if (!this.props.timedUpdate) {\n      return\n    }\n    const update = () => {\n      this.forceUpdate()\n      this.timer = setTimeout(update, 30 * 1000)\n    }\n    update()\n  }\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  }\n  render() {\n    const {\n      status,\n      render,\n      now = new Date(),\n      openThresholdInMinutes,\n      closeThresholdInMinutes,\n    } = this.props\n\n    const { isOpen, willCloseAt, willOpenAt } = status\n\n    let decision: TStatusDecision\n\n    if (isOpen) {\n      decision = isSoon(willCloseAt, closeThresholdInMinutes!, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openThresholdInMinutes!, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n\n    return render({\n      decision,\n      get openingIn() {\n        return willOpenAt && differenceInMinutes(willOpenAt, new Date())\n      },\n      get closingIn() {\n        return willCloseAt && differenceInMinutes(willCloseAt, new Date())\n      },\n    })\n  }\n}\n\nfunction isSoon(time: Maybe<Date>, threshold: number, now: Date) {\n  return Boolean(time) && Math.abs(differenceInMinutes(time!, now)) <= threshold\n}\n","import { Observer } from 'mobx-react'\nimport React from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from 'models/MapModel'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n  render(control: IMapControl): ReactNode\n}\n\ninterface IMapControl {}\n\nconst MapContainerStyled = styled.div`\n  border-radius: 0 0 0.5rem 0.5rem;\n  overflow: hidden;\n  height: calc(100% - 3.75rem);\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nconst getMapOptions = () => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    zoomControlOptions: {\n      position: google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nexport const BaseMap: React.SFC<IBaseMapProps> = ({ render, model }) => (\n  <BaseMapContainer\n    containerElement={\n      <MapContainerStyled className=\"map__container\" data-testid=\"googleMap\" />\n    }\n    mapElement={<div style={{ height: '100%', position: 'relative' }} />}\n  >\n    <Observer>\n      {() => (\n        <GoogleMap\n          ref={model.setMapRef}\n          zoom={model.zoom}\n          center={model.center}\n          onCenterChanged={model.updatePosition}\n          onZoomChanged={model.updateZoom}\n          onClick={model.onClick}\n          options={getMapOptions()}\n        >\n          {render({})}\n        </GoogleMap>\n      )}\n    </Observer>\n  </BaseMapContainer>\n)\n","import { i18n } from 'i18n'\nimport React from 'react'\n\nimport { GAddress } from 'graph/types'\n\ninterface IProps {\n  address?: GAddress.Fragment\n}\n\nexport const ShopAddress: React.SFC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import React from 'react'\nimport {\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalProps,\n} from 'reactstrap'\n\nimport 'common/Modal.css'\n\ninterface IProps extends ModalProps {\n  isOpen: boolean\n  headerText: string\n  onClose?(): void\n}\n\nexport const AlertModal: React.SFC<IProps> = ({\n  isOpen,\n  headerText,\n  onClose,\n  children,\n  ...modalProps\n}) => (\n  <Modal\n    isOpen={isOpen}\n    toggle={onClose}\n    className=\"modal__container\"\n    {...modalProps}\n    data-testid=\"alertModal\"\n  >\n    <ModalHeader tag={Container} toggle={onClose} className=\"modal__header\">\n      <span>{headerText}</span>\n    </ModalHeader>\n    <ModalBody className=\"modal__body\">\n      <div className=\"modal__body__content\">{children}</div>\n    </ModalBody>\n  </Modal>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  className: string\n  imageName: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.SFC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PrimaryRoutedButton } from 'common/Buttons'\nimport { Desktop, Mobile } from 'common/Responsive'\nimport { GFinishView } from 'graph/types'\n\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  finish: GFinishView.Query\n}\nconst CenteredButtonContainer = styled('div')`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.SFC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => (\n  <>\n    <Desktop>\n      {(androidApp || iosApp) && (\n        <div className=\"finish__view__apps__propagation\">\n          <div className=\"finish__view__apps__propagation__header\">\n            <Trans>What about mobile app?</Trans>\n          </div>\n          <div className=\"finish__view__apps__propagation__description\">\n            <Trans>\n              We have prepared mobile app, so you could order from anywhere!\n            </Trans>\n          </div>\n\n          {androidApp && (\n            <a href={androidApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                Google Play\n              </Button>\n            </a>\n          )}\n\n          {iosApp && (\n            <a href={iosApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                App Store\n              </Button>\n            </a>\n          )}\n        </div>\n      )}\n      <CenteredButtonContainer>\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </CenteredButtonContainer>\n    </Desktop>\n\n    <Mobile>\n      <div\n        className=\"finish__view__submit__line\"\n        style={{ textAlign: 'center' }}\n      >\n        <div className=\"finish__view__submit__line__strip\" />\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </div>\n    </Mobile>\n  </>\n)\n","import { Trans } from '@lingui/react'\nimport { i18n } from 'i18n'\nimport React from 'react'\nimport { styled } from 'styled'\n\nimport { GFinishViewOrder, PaymentGateEnum } from 'graph/types'\nimport { RM } from 'helpers/ramda'\n\ninterface IProps {\n  order: GFinishViewOrder.Fragment\n}\n\nconst HeaderThemed = styled('div')`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled('div')`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled('div')`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.SFC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => <OrderItem key={item.id} {...item} />)}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = RM.pathEq(['paymentMethod', 'paymentType', 'enum'])\n\nfunction getPaymentInfo({ orderPayments }: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.CASH))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.GOPAY))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({\n  orderPayments,\n  totalSum,\n}: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.CASH))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.GOPAY))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: GFinishViewOrder.Items) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishView } from 'graph/types'\n\ninterface IProps {\n  branch: GFinishView.CompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.SFC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './OrderMethod.css'\n\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { SelectButtonThemed } from 'common/Buttons'\nimport { DeliveryTypeEnum } from 'graph/types'\nimport { TOrderModel } from 'models/OrderModel'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\ninterface IButtonProps {\n  orderModel: TOrderModel\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n  onPrefetch?(): void\n}\n\nconst OrderMethodButton: React.SFC<IButtonProps> = ({\n  orderModel,\n  orderMethod,\n  onChange,\n  onPrefetch,\n  children,\n}) => (\n  <Observer>\n    {() => (\n      <SelectButtonThemed\n        selected={orderModel.orderMethod === orderMethod}\n        onMouseEnter={onPrefetch}\n        onClick={() => {\n          orderModel.useOrderMethod(orderMethod)\n          onChange(orderModel)\n        }}\n        data-testid={`orderMethod-${orderMethod}`}\n        data-testselected={orderModel.orderMethod === orderMethod}\n      >\n        {children}\n      </SelectButtonThemed>\n    )}\n  </Observer>\n)\n\nexport const OrderMethod: React.SFC<IProps> = ({ onChange }) => (\n  <WithRoot\n    observe={false}\n    render={({ order }) => (\n      <div className=\"order__method\">\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.MESSENGER}\n          onChange={onChange || RM.identity}\n        >\n          <span className=\"flaticon-transport\" />\n          {i18n.t`I want to deliver`.toLocaleUpperCase()}\n        </OrderMethodButton>\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.PICKUP}\n          onChange={onChange || RM.identity}\n          onPrefetch={order.prefetchPickup}\n        >\n          <span className=\"flaticon-restaurant\" />\n          {i18n.t`I'll pick up`.toLocaleUpperCase()}\n        </OrderMethodButton>\n      </div>\n    )}\n  />\n)\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.SFC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { Plural, Trans } from '@lingui/react'\nimport { i18n } from 'i18n'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { WithUser } from '../../common/WithUser'\nimport { GCompanyBranchStatus } from '../../graph/types'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nexport const ShopClosingTimeModal: React.SFC<IProps> = ({ status }) =>\n  status ? (\n    <ShopStatus\n      status={status}\n      render={({ decision, openingIn }) => (\n        <WithUser\n          render={user => (\n            <AlertModal\n              isOpen={\n                (decision === 'Closed' || decision === 'OpeningSoon') &&\n                !user.closingTimeAlertHidden\n              }\n              onClose={user.hideClosingTime}\n              headerText={i18n.t`We are closed right now`}\n            >\n              {i18n.t`We're sorry, but we do not accept new orders at this time.`}\n              {decision === 'OpeningSoon' && (\n                <Trans>\n                  You can prepare your order because we are{' '}\n                  <Plural\n                    value={openingIn}\n                    one=\"opening in 1 minute\"\n                    other=\"opening in # minutes\"\n                  />!\n                </Trans>\n              )}\n            </AlertModal>\n          )}\n        />\n      )}\n    />\n  ) : null\n","import React from 'react'\n\nimport { TUserModel } from '../models/UserModel'\nimport { WithRoot } from './WithRoot'\n\ninterface IProps {\n  render(root: TUserModel): ReactNode\n  observe?: boolean\n}\n\nexport const WithUser: React.SFC<IProps> = ({ render, observe = true }) => (\n  <WithRoot\n    observe={observe}\n    render={({ initialized, user }) => (initialized ? render(user) : null)}\n  />\n)\n","import './ShopHeaderIcons.css'\n\nimport React from 'react'\n\nimport { ColStyle } from 'common/ColStyle'\n\nimport logoCommerce01 from './logo-commerce-01.svg'\nimport logoCommerce02 from './logo-commerce-02.svg'\nimport logoDoveze from './logo-doveze.svg'\nimport logoGoPay from './logo-gopay.png'\n\nexport const ShopHeaderIcons = () => (\n  <ColStyle>\n    <img\n      src={logoDoveze}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={logoCommerce02}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={logoCommerce01}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={logoGoPay}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </ColStyle>\n)\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { GCompanyBranchStatus } from '../../graph/types'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nconst StatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nconst StatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.SFC<IProps> = ({ status }) =>\n  status ? (\n    <ShopStatus\n      status={status}\n      render={s => {\n        switch (s.decision) {\n          case 'Open':\n            return (\n              <StatusDisplayOpen data-testid=\"statusDisplayOpen\">\n                <Trans>We are open</Trans>\n              </StatusDisplayOpen>\n            )\n          case 'OpeningSoon':\n            return (\n              <StatusDisplayClosed>\n                <Plural\n                  value={s.openingIn}\n                  one=\"Opening in 1 minute\"\n                  other=\"Opening in # minutes\"\n                />\n              </StatusDisplayClosed>\n            )\n          case 'ClosingSoon':\n            return (\n              <StatusDisplayOpen>\n                <Plural\n                  value={s.closingIn}\n                  one=\"Closing in 1 minute\"\n                  other=\"Closing in # minutes\"\n                />\n              </StatusDisplayOpen>\n            )\n          case 'Closed':\n            return (\n              <StatusDisplayClosed>\n                <Trans>Closed</Trans>\n              </StatusDisplayClosed>\n            )\n        }\n      }}\n    />\n  ) : null\n","import { Trans } from '@lingui/react'\nimport { buildQuery } from 'graph'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { GOrderCartForRecipe } from 'graph/types'\nimport { OrderCartForRecipeQuery } from 'models/OrderModel.graphql'\n\nimport { Mobile } from '../../common/Responsive'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForRecipe.Query,\n  GOrderCartForRecipe.Variables\n>(OrderCartForRecipeQuery)\n\nexport const AddToCartModal: React.SFC<IProps> = ({ order }) => (\n  <Route\n    path=\"/order/add/:recipeId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ recipeId: match.params.recipeId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <Mobile>\n            {isMobile => (\n              <CartModal\n                recipe={data.recipe}\n                onConfirm={sideDishes => {\n                  if (isMobile) {\n                    order.addFromRecipeMobile(match.params.recipeId, sideDishes)\n                    // let the optimistic response happen in this case\n                    return Promise.resolve()\n                  }\n                  return order.addFromRecipe(match.params.recipeId, sideDishes)\n                }}\n                onClose={() => history.goBack()}\n                isLoading={loading}\n              />\n            )}\n          </Mobile>\n        )}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { WithRoot } from '../../common/WithRoot'\nimport { QueryOrderForm } from './OrderFormView.graphql'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `} ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `}\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.SFC<IProps> = props => (\n  <WithRoot\n    render={root => (\n      <QueryOrderForm\n        skip={!root.order.hasOrder || root.user.rememberForm !== null}\n        variables={{ orderId: root.order.orderId! }}\n        renderLoading={() => null}\n        render={({ order }) => (\n          <Observer>\n            {() =>\n              order.countWares > 0 && root.user.rememberForm === null ? (\n                <StorageNotice data-testid=\"orderFormStorageNotice\">\n                  <p>\n                    <Trans>\n                      This app is using secure storage for keeping filled form\n                      data. It's not cookies, these are stored in your browser\n                      only.\n                    </Trans>\n                  </p>\n\n                  <NoticeButton\n                    color=\"success\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberYes}\n                    data-testid=\"orderFormStorageNotice__Yes\"\n                  >\n                    <Trans>Always remember</Trans>\n                  </NoticeButton>\n                  <NoticeButton\n                    color=\"secondary\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberNo}\n                    data-testid=\"orderFormStorageNotice__No\"\n                  >\n                    <Trans>Do not store</Trans>\n                  </NoticeButton>\n                </StorageNotice>\n              ) : null\n            }\n          </Observer>\n        )}\n      />\n    )}\n  />\n)\n","import { buildQuery, gql } from 'graph'\n\nimport { GOrderForm } from 'graph/types'\n\nexport const OrderFormQuery = gql`\n  query GOrderForm($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      countWares\n    }\n  }\n`\n\nexport const QueryOrderForm = buildQuery<\n  GOrderForm.Query,\n  GOrderForm.Variables\n>(OrderFormQuery)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport 'common/Modal.css'\nimport { WithOrder } from 'common/WithOrder'\n\nexport const OrderErrorModal: React.SFC = () => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <Modal\n        isOpen={order.hasErrors}\n        toggle={order.clearErrors}\n        className=\"modal__container\"\n      >\n        <ModalHeader\n          toggle={order.clearErrors}\n          tag={Container}\n          className=\"modal__header\"\n        >\n          <span>\n            <Trans>Order can not be completed</Trans>\n          </span>\n        </ModalHeader>\n        <ModalBody className=\"modal__body\">\n          <div className=\"modal__body__content\">\n            {order.hasErrors &&\n              order.submitErrors!.map((error, idx) => (\n                <div key={idx}>{error}</div>\n              ))}\n          </div>\n          <div className=\"modal__body__button__line\">\n            <div className=\"modal__body__button__strip\" />\n            <Button\n              className=\"modal__body__button\"\n              color=\"primary\"\n              onClick={order.clearErrors}\n            >\n              <Trans>I understand</Trans>\n            </Button>\n            />\n          </div>\n        </ModalBody>\n      </Modal>\n    )}\n  />\n)\n","import { Plural, Trans } from '@lingui/react'\nimport { i18n } from 'i18n'\nimport React from 'react'\nimport { Field } from 'react-form'\nimport { FormFeedback, FormGroup, FormText, Input } from 'reactstrap'\n\nexport const MAX_LENGTH = 50\nconst isTooLong = value => value && value.trim().length > MAX_LENGTH\n\nconst OrderNoteInputValidator = value =>\n  isTooLong(value) ? i18n.t`Note is too long` : null\n\nexport const OrderNoteInput: React.SFC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <Field\n      field=\"note\"\n      validate={OrderNoteInputValidator}\n      render={fieldApi => (\n        <FormGroup>\n          <Input\n            type=\"textarea\"\n            placeholder={i18n.t`Note`}\n            title={ingredientsDescription}\n            value={fieldApi.value}\n            onChange={e => fieldApi.setValue(e.target.value)}\n            onBlur={() => fieldApi.setTouched(true)}\n            valid={!fieldApi.error}\n            invalid={Boolean(fieldApi.error)}\n            data-testid=\"orderNoteInput\"\n          />\n          <FormText>{ingredientsDescription}</FormText>\n          {isTooLong(fieldApi.value) ? (\n            <FormFeedback>\n              <Trans>\n                Maximum length is{' '}\n                <Plural value={MAX_LENGTH} other=\"# characters\" />. Typed{' '}\n                <Plural\n                  value={fieldApi.value.length}\n                  one=\"# char\"\n                  other=\"# chars\"\n                />\n              </Trans>\n            </FormFeedback>\n          ) : null}\n        </FormGroup>\n      )}\n    />\n  )\n}\n","import './OrderSubmitLine.css'\n\nimport { i18n } from 'i18n'\nimport React from 'react'\n\nimport { PrimaryButton } from 'common/Buttons'\nimport { Desktop, Mobile } from 'common/Responsive'\nimport SubmitSpinner from 'common/SubmitSpinner'\nimport { WithOrder } from 'common/WithOrder'\n\ninterface IProps {\n  onClick(): void\n  canSubmit: boolean\n}\n\nexport const OrderSubmitLine: React.SFC<IProps> = ({\n  onClick,\n  canSubmit = false,\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <div className=\"order__form__submit__line\">\n        <div className=\"order__form__submit__line__strip\" />\n        <PrimaryButton\n          className=\"order__form__submit__line__button\"\n          color=\"primary\"\n          size=\"md\"\n          onClick={onClick}\n          disabled={!canSubmit || order.isSubmitting}\n          data-testid=\"orderSubmitButton\"\n        >\n          <Desktop>\n            {order.isSubmitting ? (\n              <SubmitSpinner />\n            ) : (\n              i18n.t`Place order`.toLocaleUpperCase()\n            )}\n          </Desktop>\n          <Mobile>{i18n.t`Place order`.toLocaleUpperCase()}</Mobile>\n        </PrimaryButton>\n      </div>\n    )}\n  />\n)\n","import React from 'react'\nimport Spinner from 'react-spinkit'\nimport { withTheme } from 'styled-components'\n\nconst SubmitSpinner = props => (\n  <Spinner name=\"three-bounce\" color={props.theme.primary} fadeIn=\"none\" />\n)\n\nexport default withTheme(SubmitSpinner)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.SFC<IProps> = ({ order }) => (\n  <Observer>\n    {() => (\n      <AlertModal isOpen={order.isGoPayChecking} headerText=\"GoPay platba\">\n        <TextPadding>\n          <Trans>Checking your GoPay payment, please wait...</Trans>\n        </TextPadding>\n        <Pacman noMargin={true} />\n      </AlertModal>\n    )}\n  </Observer>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { GCartView } from 'graph/types'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nexport const CartDiscounts: React.SFC<IProps> = ({ order }) =>\n  order.discounts && order.discounts.length > 0 ? (\n    <div>\n      {order.discounts.map(\n        ({ code, description, price: { formattedValue } }) => (\n          <div key={code} className=\"cart__item__summary\">\n            <div className=\"cart__item__summary__label\">{description}</div>\n            <div className=\"cart__item__summary__price\">{formattedValue}</div>\n          </div>\n        ),\n      )}\n      <div className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">\n          <Trans>Total discount</Trans>\n        </div>\n        <div className=\"cart__item__summary__price\">\n          {order.totalDiscount.formattedValue}\n        </div>\n      </div>\n    </div>\n  ) : null\n","import React from 'react'\n\nimport { css, styled } from '../../styled'\n\ninterface IButtonProps {\n  color: string\n  enabled?: boolean\n  data_testid?: string\n}\n\ninterface IIconProps {\n  icon: string\n}\n\ninterface IProps extends IButtonProps, IIconProps {\n  onClick?(): void\n}\n\nconst CartItemButtonStyled = styled<IButtonProps>('div')`\n  display: inline-block;\n  border-radius: 3rem;\n  background: white;\n  width: 1.8rem;\n  height: 1.8rem;\n  text-align: left;\n  vertical-align: top;\n  padding: 0 0 0 0rem;\n  margin: 0.3rem 0.1rem 0 0.1rem;\n  ${getButtonColor};\n  ${getHoverStyle};\n`\n\nfunction getButtonColor({ color, enabled }: IButtonProps) {\n  const useColor = enabled ? color : '#8d8d8d'\n  return css`\n    color: ${useColor};\n    border: 2px solid ${useColor};\n  `\n}\n\nfunction getHoverStyle({ enabled }: IButtonProps) {\n  return enabled\n    ? css`\n        cursor: pointer;\n        &:hover {\n          background: #c9e8d7;\n          color: #1d1d1d;\n          border-color: #1d1d1d;\n        }\n      `\n    : css`\n        cursor: default;\n      `\n}\n\nconst CartItemButtonIcon = styled<IIconProps>('span')`\n  &:before {\n    font-size: 0.8rem;\n    margin-left: 0.36rem;\n  }\n`\n\nexport const CartItemButton: React.SFC<IProps> = ({\n  color,\n  icon,\n  onClick,\n  enabled = true,\n  data_testid,\n}) => (\n  <CartItemButtonStyled\n    color={color}\n    enabled={enabled}\n    onClick={onClick}\n    data-testid={data_testid}\n  >\n    <CartItemButtonIcon icon={icon} className={`flaticon-${icon}`} />\n  </CartItemButtonStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n  onClick(): void\n}\n\nexport const EditCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  onClick,\n  ...props\n}) => {\n  const button = <CartItemButton icon=\"edit\" color=\"#d9a700\" {...props} />\n  return props.enabled ? (\n    <Link\n      to={`/order/change/${itemId}`}\n      onClick={onClick}\n      data-testid={`editCartItemButton__${itemId}`}\n    >\n      {button}\n    </Link>\n  ) : (\n    button\n  )\n}\n","import React from 'react'\n\nimport { WithRoot } from 'common/WithRoot'\n\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n}\n\nexport const RemoveCartItemButton: React.SFC<IProps> = ({ itemId }) => (\n  <WithRoot\n    render={root => (\n      <CartItemButton\n        icon=\"delete\"\n        color=\"#99230e\"\n        data_testid={`removeCartItemButton`}\n        onClick={() => root.order.removeItemFromCart(itemId)}\n      />\n    )}\n  />\n)\n","import './CartItem.css'\n\nimport { i18n } from 'i18n'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GOrder } from 'graph/types'\n\nimport { Desktop } from '../../common/Responsive'\nimport { EditCartItemButton } from './EditCartItemButton'\nimport { RemoveCartItemButton } from './RemoveCartItemButton'\n\ninterface IProps {\n  item: GOrder.Items\n  isActive: boolean\n  onEdit(): void\n}\n\nconst EditButtonsContainerStyled = styled.div`\n  flex: 0 0 auto;\n`\n\nconst CartItemStyled = styled.div`\n  width: 100%;\n  min-height: 3rem;\n  color: #1d1d1d;\n  margin: 0 0 0.4rem 0;\n  padding: 0.2rem;\n  background: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'rgba(255, 255, 255, 0.8)'};\n  text-align: left;\n  display: flex;\n`\n\nexport const CartItem: React.SFC<IProps> = ({ item, isActive, onEdit }) => (\n  <CartItemStyled isActive={isActive}>\n    <EditButtonsContainerStyled>\n      <RemoveCartItemButton itemId={item.id} />\n\n      <Desktop>\n        <EditCartItemButton\n          itemId={item.id}\n          enabled={item.recipe.sideDishCount !== 0}\n          onClick={onEdit}\n        />\n      </Desktop>\n    </EditButtonsContainerStyled>\n\n    <div className=\"cart__item__description\">\n      <div\n        className=\"cart__item__item__name\"\n        data-testid={`cardItem__Name__${item.recipe.id}`}\n      >\n        {item.recipe.nameLabel}\n      </div>\n      <div\n        className=\"cart__item__item__side__dish\"\n        data-testid={`cardItem__SideDish__${item.recipe.id}`}\n      >\n        {item.sideDishes.length > 0\n          ? `+ ${item.sideDishes\n              .map(({ recipe }) => recipe.nameLabel)\n              .join(',')}`\n          : item.recipe.sideDishCount > 0 && (\n              <span>{i18n.t`Without sidedish`.toLocaleLowerCase()}</span>\n            )}\n      </div>\n    </div>\n\n    <div\n      className=\"cart__item__item__price\"\n      data-testid={`cardItem__Price__${item.id}`}\n    >\n      {item.price.formattedValue}\n    </div>\n  </CartItemStyled>\n)\n","import Color from 'color'\nimport { i18n } from 'i18n'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GCartView } from 'graph/types'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nconst CartItemSummaryTotalThemed = styled.div`\n  background: ${({ theme }) =>\n    Color(theme.primary)\n      .alpha(0.7)\n      .hsl()\n      .string()} !important;\n`\n\nexport const CartTotals: React.SFC<IProps> = ({ order }) => (\n  <div>\n    {order.coverPrice && order.coverPrice.value ? (\n      <div key=\"casePrice\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Covers`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.coverPrice.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    {order.transportFee && order.transportFee.value ? (\n      <div key=\"transportFee\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Delivery`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.transportFee.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    <CartItemSummaryTotalThemed\n      key=\"totalPrice\"\n      className=\"cart__item__summary cart__item__summary__total\"\n    >\n      <div className=\"cart__item__summary__label\">{i18n.t`Total`}</div>\n      <div\n        className=\"cart__item__summary__price\"\n        data-testid={`cardItemSummary__Price`}\n      >\n        {order.totalSum.formattedValue}\n      </div>\n    </CartItemSummaryTotalThemed>\n  </div>\n)\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { GCartView } from 'graph/types'\n\nimport { TRootModel } from '../../models/RootModel'\nimport { CartDiscounts } from './CartDiscounts'\nimport { CartItem } from './CartItem'\nimport { CartTotals } from './CartTotals'\n\ninterface IProps {\n  order: GCartView.Order\n  rootModel: TRootModel\n}\n\nexport const CartContents: React.SFC<IProps> = ({ order, rootModel }) => (\n  <div className=\"cart__items__container\">\n    <div className=\"cart__items__container__content\">\n      <Observer>\n        {() =>\n          order.items.map(item => (\n            <CartItem\n              key={item.id}\n              item={item}\n              isActive={rootModel.order.lastActiveRecipeId === item.recipe.id}\n              onEdit={() => rootModel.order.setUsedRecipeId(item.recipe.id)}\n            />\n          ))\n        }\n      </Observer>\n      <CartDiscounts order={order} />\n      <CartTotals order={order} />\n    </div>\n  </div>\n)\n","import { i18n } from 'i18n'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst CartIsEmptyThemed = styled.span`\n  color: ${({ theme }) => theme.secondary};\n`\n\nexport const CartIsEmpty = () => (\n  <CartIsEmptyThemed\n    className=\"cart__column__cart__empty__label\"\n    data-testid=\"cartIsEmpty\"\n  >\n    {`${i18n.t`Cart is empty`}...`}\n  </CartIsEmptyThemed>\n)\n","import { Trans } from '@lingui/react'\nimport { buildQuery } from 'graph'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { GOrderCartForItem } from 'graph/types'\nimport { RM } from 'helpers/ramda'\nimport { OrderCartForItemQuery } from 'models/OrderModel.graphql'\nimport { TRootModel } from 'models/RootModel'\n\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  root: TRootModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForItem.Query,\n  GOrderCartForItem.Variables\n>(OrderCartForItemQuery)\n\nexport const ChangeCartModal: React.SFC<IProps> = ({ root }) => (\n  <Route\n    path=\"/order/change/:itemId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ itemId: match.params.itemId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <CartModal\n            recipe={data.item && data.item.recipe}\n            initialSelection={\n              data.item\n                ? (data.item.sideDishes.map(\n                    RM.path(['recipe', 'id']),\n                  ) as string[])\n                : []\n            }\n            onConfirm={sideDishes =>\n              root.order.updateItem(match.params.itemId, sideDishes)\n            }\n            onClose={() => history.goBack()}\n            isLoading={loading}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import './CartView.css'\n\nimport React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartContents } from './CartContents'\nimport { CartIsEmpty } from './CartIsEmpty'\nimport { QueryCartView } from './CartView.graphql'\nimport { ChangeCartModal } from './ChangeCartModal'\n\ninterface IProps {\n  onContentChange?(): void\n}\n\nexport const CartView: React.SFC<IProps> = () => (\n  <WithOrder\n    redirect={true}\n    render={orderModel => (\n      <>\n        <AddToCartModal order={orderModel} />\n        <ChangeCartModal root={orderModel.root} />\n        <QueryCartView\n          variables={{ orderId: orderModel.orderId! }}\n          renderLoading={false}\n          render={({ order }) => (\n            <>\n              {!order || order.countWares === 0 ? (\n                <CartIsEmpty />\n              ) : (\n                <CartContents order={order} rootModel={orderModel.root} />\n              )}\n            </>\n          )}\n        />\n      </>\n    )}\n  />\n)\n","import './CategoryNavigator.css'\n\nimport classNames from 'classnames'\nimport React, { Component } from 'react'\nimport Scroll from 'react-scroll'\nimport Swipeable from 'react-swipeable'\nimport Truncate from 'react-truncate'\nimport { compose, withState } from 'recompose'\n\nimport { Desktop, Mobile } from 'common/Responsive'\nimport { GFoodMenuCategory } from 'graph/types'\n\ninterface IProps {\n  categories: GFoodMenuCategory.Fragment[]\n}\n\ninterface IInnerProps extends IProps {\n  setActiveCategoryIndex(index: number): void\n  activeCategoryIndex: number\n}\n\nclass ContainerByPlatform extends Component {\n  state = { scroll: 0 }\n  ref: Maybe<HTMLBaseElement> = null\n  onMounted = ref => {\n    this.ref = ref\n  }\n  onSwiping = (ev, deltaX) => (this.ref!.scrollLeft += deltaX / 5)\n  onSwiped = () => this.setState({ scroll: this.ref!.scrollLeft })\n  render() {\n    return (\n      <>\n        <Desktop>\n          {isDesktop =>\n            isDesktop ? (\n              <div className=\"category__navigator\">{this.props.children}</div>\n            ) : null\n          }\n        </Desktop>\n        <Mobile className=\"category__navigator category__navigator__nowrap\">\n          <Swipeable\n            onSwiping={this.onSwiping}\n            onSwiped={this.onSwiped}\n            innerRef={this.onMounted}\n          >\n            {this.props.children}\n          </Swipeable>\n        </Mobile>\n      </>\n    )\n  }\n}\n\nexport const CategoryNavigator: React.SFC<IProps & IInnerProps> = ({\n  categories,\n  setActiveCategoryIndex,\n  activeCategoryIndex,\n}) => (\n  <ContainerByPlatform>\n    {categories.length === 0\n      ? null\n      : categories.map((category, idx) => (\n          <Scroll.Link\n            to={category.nameLabel}\n            key={category.id}\n            className={classNames('category__navigator__scroll__link', {\n              active: activeCategoryIndex === idx,\n            })}\n            onSetActive={() => setActiveCategoryIndex(idx)}\n            offset={-168}\n            smooth={true}\n            spy={true}\n            data-testid={`categoryNavigatorScrollLink__${category.id}`}\n          >\n            <div className=\"category__navigator__scroll__link__circle\">\n              <span className={`flaticon-${category.pictogram}`} />\n            </div>\n            <div className=\"category__navigator__scroll__link__description\">\n              <Truncate lines={2}>{category.nameLabel}</Truncate>\n            </div>\n          </Scroll.Link>\n        ))}\n  </ContainerByPlatform>\n)\n\nconst decorate = compose<IInnerProps, IProps>(\n  withState('activeCategoryIndex', 'setActiveCategoryIndex', 0),\n)\n\nexport default decorate(CategoryNavigator)\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport { styled } from 'styled'\n\nimport { mediaMobile } from 'common/Responsive'\nimport { GFoodMenuCategory } from 'graph/types'\n\nimport { FoodInCart } from './types'\n\ninterface IProps {\n  category: GFoodMenuCategory.Fragment\n  foodInCart?: FoodInCart\n}\n\nconst FoodCategoryStyled = styled('div')`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.SFC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default FoodCategory\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { WithRoot } from 'common/WithRoot'\n\nimport { Mobile } from '../../common/Responsive'\n\ninterface IProps {\n  recipeId: string\n  canAddToCart: boolean\n  hasSidedish: boolean\n  onClick(): void\n}\n\nconst LinkStyled = styled(Link)`\n  color: inherit;\n  &:visited div {\n    border: inherit;\n  }\n`\n\nexport const LinkToCart: React.SFC<IProps> = ({\n  recipeId,\n  hasSidedish,\n  canAddToCart,\n  onClick,\n  children,\n}) => {\n  if (!canAddToCart) {\n    return <div onClick={onClick}>{children}</div>\n  }\n  if (hasSidedish) {\n    return (\n      <LinkStyled to={{ pathname: `/order/add/${recipeId}` }} onClick={onClick}>\n        {children}\n      </LinkStyled>\n    )\n  }\n  return (\n    <WithRoot\n      render={({ order }) => (\n        <Mobile>\n          {isMobile => (\n            <div\n              onClick={() => {\n                onClick()\n                isMobile\n                  ? order.addFromRecipeMobile(recipeId)\n                  : order.addFromRecipe(recipeId)\n              }}\n            >\n              {children}\n            </div>\n          )}\n        </Mobile>\n      )}\n    />\n  )\n}\n","import './FoodMenuItem.css'\n\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { GFoodMenuRecipe } from 'graph/types'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { LinkToCart } from './LinkToCart'\n\ninterface IProps {\n  recipe: GFoodMenuRecipe.Fragment\n  inCart: number\n  isActive: boolean\n  onClick(): void\n  onPrefetch(): void\n  canAddToCart: boolean\n}\n\nconst FoodMenuItemStyled = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  position: relative;\n  min-height: 6rem;\n  &:hover {\n    background-color: #c9e8d7;\n  }\n  background-color: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'white'};\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItemCount = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n  float: left;\n  position: absolute;\n  left: -1.2rem;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  border-radius: 1.8rem;\n  font-size: 0.9rem;\n  ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n`\n\nconst FoodMenuItem: React.SFC<IProps> = ({\n  recipe,\n  inCart,\n  onPrefetch,\n  isActive,\n  onClick,\n  canAddToCart,\n}) => (\n  <LinkToCart\n    recipeId={recipe.id}\n    hasSidedish={recipe.sideDishCount > 0}\n    canAddToCart={canAddToCart}\n    onClick={onClick}\n    data-testid={`foodMenuItem__${recipe.id}`}\n  >\n    <FoodMenuItemStyled onMouseEnter={onPrefetch} isActive={isActive}>\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {inCart > 0 ? <FoodMenuItemCount>{`${inCart}x`}</FoodMenuItemCount> : ''}\n      <h4>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </FoodMenuItemStyled>\n  </LinkToCart>\n)\n\nexport default FoodMenuItem\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenu } from '../../graph/types'\nimport { TRootModel } from '../../models/RootModel'\nimport { styled } from '../../styled'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\n\ninterface IProps {\n  categories: GFoodMenu.WareCategories[]\n  inCart: { [recipeId: string]: number }\n  orderItemCount: number\n  shouldUpdate: boolean\n  rootModel: TRootModel\n}\n\nconst FoodMenuStyled = styled('div')`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`} ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n`\n\nconst FoodMenuListStyled = styled('div')`\n  ${mediaDesktop`\n    margin: 0 1.4rem 1rem 1.6rem;\n    padding: 2rem 0 2rem 0;\n  `} ${mediaMobile`\n    margin: 0 0.7rem 1rem 0.7rem;\n    padding: 0 0 4rem 0;\n  `};\n`\n\nexport class FoodMenu extends React.Component<IProps> {\n  shouldComponentUpdate({ shouldUpdate }: IProps) {\n    return shouldUpdate\n  }\n  orderLimitReached() {\n    const {\n      orderItemCount,\n      rootModel: { config },\n    } = this.props\n    return orderItemCount >= config.orderItemsMax\n  }\n  render() {\n    const {\n      categories,\n      inCart,\n      rootModel: { order, user },\n    } = this.props\n    const canAddToCart = !this.orderLimitReached()\n    return (\n      <FoodMenuStyled>\n        <FoodMenuListStyled>\n          {categories.length === 0 ? (\n            <h3>\n              <Trans>Food menu is empty. We are sorry.</Trans>\n            </h3>\n          ) : (\n            <Observer>\n              {() =>\n                categories.map(category => (\n                  <FoodCategory key={category.id} category={category}>\n                    {category.recipes.map(recipe => (\n                      <FoodMenuItem\n                        key={recipe.id}\n                        recipe={recipe}\n                        inCart={inCart[recipe.id] || 0}\n                        isActive={order.lastActiveRecipeId === recipe.id}\n                        canAddToCart={canAddToCart}\n                        onClick={() => {\n                          if (canAddToCart) {\n                            order.setUsedRecipeId(recipe.id)\n                          } else {\n                            user.showOrderLimit()\n                          }\n                        }}\n                        onPrefetch={() => {\n                          if (recipe.sideDishCount > 0) {\n                            order.prefetchFood(recipe.id)\n                          }\n                        }}\n                      />\n                    ))}\n                  </FoodCategory>\n                ))\n              }\n            </Observer>\n          )}\n        </FoodMenuListStyled>\n      </FoodMenuStyled>\n    )\n  }\n}\n","import { i18n } from 'i18n'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { WithUser } from '../../common/WithUser'\n\ninterface IProps {}\n\nexport const OrderLimitModal: React.SFC<IProps> = props => (\n  <WithUser\n    render={user => (\n      <AlertModal\n        isOpen={!user.orderLimitAlertHidden}\n        onClose={user.hideOrderLimit}\n        headerText={i18n.t`Limit has been reached`}\n      >\n        {i18n.t`The maximum number of items in the order has been reached`}\n      </AlertModal>\n    )}\n  />\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GCartPresence } from '../../graph/types'\nimport CategoryNavigator from './CategoryNavigator'\nimport { FoodMenu } from './FoodMenu'\nimport {\n  QueryFoodMenu,\n  QueryFoodMenuCartPresence,\n} from './FoodMenuView.graphql'\nimport { OrderLimitModal } from './OrderLimitModal'\n\nexport const FoodMenuView: React.SFC = () => (\n  <WithOrder\n    render={orderModel => (\n      <QueryFoodMenu\n        variables={{\n          branchId: orderModel.branchId!,\n        }}\n        render={({ wareCategories }) => (\n          <>\n            <OrderLimitModal />\n            <CategoryNavigator categories={wareCategories} />\n            <QueryFoodMenuCartPresence\n              variables={{ orderId: orderModel.orderId! }}\n              renderLoading={false}\n              render={({ order }, { loading }) => (\n                <FoodMenu\n                  categories={wareCategories}\n                  rootModel={orderModel.root}\n                  inCart={getCartPresence(order && order.items)}\n                  orderItemCount={order ? order.items.length : 0}\n                  shouldUpdate={Boolean(order && !loading)}\n                />\n              )}\n            />\n          </>\n        )}\n      />\n    )}\n  />\n)\n\nfunction getCartPresence(items: GCartPresence.Items[]) {\n  if (!items) {\n    return {}\n  }\n  return items.reduce((result, item) => {\n    const recipeId = item.recipe.id\n    if (!result[recipeId]) {\n      result[recipeId] = 0\n    }\n    result[recipeId] += 1\n    return result\n  }, {})\n}\n","import React from 'react'\nimport { InputGroupAddon } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  isVisible: boolean\n  onClick(): void\n}\n\nconst Container = styled.span`\n  color: ${({ theme }) => theme.secondary};\n  cursor: pointer;\n  position: absolute;\n  right: 0.4rem;\n  top: 0.15rem;\n`\n\nexport const GeolocationButton: React.SFC<IProps> = ({\n  onClick,\n  isVisible = false,\n}) =>\n  isVisible ? (\n    <Container>\n      <InputGroupAddon addonType=\"append\" onClick={onClick}>\n        <span className=\"flaticon-gps\" />\n      </InputGroupAddon>\n    </Container>\n  ) : null\n\nexport default GeolocationButton\n","import React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.SFC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  if (isResolving) {\n    return (\n      <div className=\"address__input__box__resolved wait\">\n        <Spinner name=\"ball-beat\" fadeIn=\"none\" />\n      </div>\n    )\n  }\n  if (!isVisible) {\n    return null\n  }\n  return (\n    <div className=\"address__input__box__resolved\" onClick={onValidClick}>\n      {address}\n    </div>\n  )\n}\n\nexport default ResolvedAddress\n","import classnames from 'classnames'\nimport debounce from 'debounce'\nimport React, { Component } from 'react'\nimport { Input } from 'reactstrap'\n\ninterface IProps {\n  onSearch(search: string): void\n  isVisible: boolean\n  isSearching: boolean\n  inputProps: Object\n}\n\ninterface IState {\n  value: string\n}\n\nclass SearchInput extends Component<IProps, IState> {\n  state = { value: '' }\n  componentDidMount() {\n    this.setFocus()\n  }\n  componentDidUpdate(nextProps: IProps) {\n    if (nextProps.isVisible !== this.props.isVisible) {\n      this.setFocus()\n    }\n  }\n  onSearch = debounce(this.props.onSearch, 2000)\n  onChange = ev => {\n    const value = ev.target.value || ''\n    this.setState({ value })\n    this.onSearch(value.trim())\n  }\n  onKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      this.onSearch.clear()\n      this.props.onSearch(this.state.value.trim())\n    }\n  }\n  inputRef: Maybe<HTMLInputElement> = null\n  onInputMount = (ref: HTMLInputElement) => {\n    this.inputRef = ref\n  }\n  isVisible() {\n    return this.props.isVisible !== false\n  }\n  isSearching() {\n    return this.props.isSearching !== false\n  }\n  setFocus() {\n    if (this.isVisible() && this.inputRef !== null) {\n      this.inputRef.focus()\n    }\n  }\n  render() {\n    const { inputProps } = this.props\n    const isHidden = !this.isVisible() || this.isSearching()\n    return (\n      <Input\n        className={classnames({ address__input__hidden: isHidden })}\n        onChange={this.onChange}\n        onKeyPress={this.onKeyPress}\n        value={this.state.value}\n        innerRef={this.onInputMount}\n        autoFocus={true}\n        {...inputProps}\n      />\n    )\n  }\n}\n\nexport default SearchInput\n","import './AddressInput.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Alert, InputGroup } from 'reactstrap'\nimport { styled } from 'styled'\n\nimport { WithRoot } from 'common/WithRoot'\nimport { TLocationModel } from 'models/LocationModel'\n\nimport { i18n } from '../../i18n'\nimport GeolocationButton from './GeolocationButton'\nimport ResolvedAddress from './ResolvedAddress'\nimport SearchInput from './SearchInput'\n\nconst AddressInputStyled = styled('div')`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n`\n\nconst AddressInputBoxStyled = styled('div')`\n  border-radius: 1rem;\n  border: 1px solid #d4d4d4;\n  background-color: white;\n  height: 2.3rem;\n  overflow: hidden;\n  & input {\n    margin: 0.2rem 2rem 0.5rem 0.7rem;\n    background: transparent;\n    border: none;\n  }\n`\n\nexport const AddressInput: React.SFC = () => (\n  <WithRoot\n    observe={true}\n    render={({ location }) => (\n      <AddressInputStyled>\n        <AddressInputBoxStyled>\n          <InputGroup size=\"sm\">\n            <ResolvedAddress\n              address={location.address || ''}\n              isVisible={location.hasAddress}\n              isResolving={location.isResolving}\n              onValidClick={location.clearAddress}\n            />\n            <SearchInput\n              inputProps={{\n                placeholder: i18n.t`Type address or choose it from map`,\n                autoComplete: 'shipping street-address',\n              }}\n              onSearch={location.withUserAddress}\n              isVisible={!location.hasAddress}\n              isSearching={location.isResolving}\n            />\n            <GeolocationButton\n              onClick={location.attemptGeolocation}\n              isVisible={\n                location.isGeolocationAvailable && !location.isResolving\n              }\n            />\n          </InputGroup>\n        </AddressInputBoxStyled>\n        {location.hasFinishedSearch ? renderErrorMessage(location) : null}\n      </AddressInputStyled>\n    )}\n  />\n)\n\nconst NoMouseAlert = styled(Alert)`\n  pointer-events: none;\n`\n\nfunction renderErrorMessage(location: TLocationModel) {\n  if (location.isResolved === false) {\n    return (\n      <NoMouseAlert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </NoMouseAlert>\n    )\n  }\n  return null\n}\n","import { i18n } from 'i18n'\nimport React from 'react'\n\nimport { PrimaryButton } from 'common/Buttons'\nimport ButtonStripe from 'common/ButtonStripe'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n  onPrefetch(): void\n}\n\nexport const AddressSubmit: React.SFC<IProps> = ({\n  enabled,\n  onClick,\n  onPrefetch,\n}) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      onMouseEnter={() => enabled && onPrefetch()}\n    >\n      {i18n.t`Confirm address`.toLocaleUpperCase()}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import './DeliveryMap.css'\n\nimport { autorun, IReactionDisposer, reaction } from 'mobx'\nimport React from 'react'\nimport { Marker } from 'react-google-maps'\n\nimport { latLngToGps } from 'helpers/gps'\nimport { TRootModel } from 'models/RootModel'\n\nimport { AddressInput } from '../destination/AddressInput'\nimport { AddressSubmit } from './AddressSubmit'\n\ninterface IProps {\n  rootModel: TRootModel\n  onConfirm(): void\n}\n\nexport class DeliveryMap extends React.Component<IProps> {\n  disposers: IReactionDisposer[] = []\n  componentDidMount() {\n    const {\n      rootModel: { location, map },\n    } = this.props\n\n    this.disposers = [\n      reaction(\n        () => map.clickPoint,\n        clickPoint => {\n          if (clickPoint) {\n            location.withUserLocation(clickPoint)\n            map.panToLocation(clickPoint)\n          }\n        },\n      ),\n\n      autorun(() => {\n        if (map.isReady && location.hasLocation) {\n          map.panToLocation(location.geoPoint)\n        }\n      }),\n    ]\n  }\n  componentWillUnmount() {\n    this.disposers.forEach(dis => dis())\n  }\n  render() {\n    const {\n      onConfirm,\n      rootModel: { location, order },\n    } = this.props\n    return (\n      <>\n        <Marker\n          position={location.latLng}\n          defaultDraggable={true}\n          onDragEnd={({ latLng }) => {\n            location.withUserLocation(latLngToGps(latLng))\n          }}\n        />\n        <div className=\"delivery__map__address\">\n          <AddressInput />\n        </div>\n        <div className=\"delivery__map__submit\">\n          <AddressSubmit\n            enabled={location.isDeliveryAddress}\n            onClick={() => {\n              order.setBranch(location.branchId!)\n              order.createDeliveryOrder(onConfirm)\n            }}\n            onPrefetch={() => order.prefetchFoodMenu(location.branchId!)}\n          />\n        </div>\n      </>\n    )\n  }\n}\n","import React from 'react'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n}\n\nconst CategoryValidationMessage: React.SFC<IProps> = ({\n  minCount,\n  maxCount,\n}) => {\n  let message = ''\n  // if (minCount === 0) {\n  //   if (maxCount > 0) {\n  //     message = `(maximálně ${maxCount})`\n  //   }\n  // }\n  // if (maxCount === 0) {\n  //   message = `(minimálně ${minCount})`\n  // } else {\n  //   message = `(minimálně ${minCount} a maximálně ${maxCount})`\n  // }\n  return <span>{message}</span>\n}\n\nexport default CategoryValidationMessage\n","import './SidedishCheckbox.css'\n\nimport React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport { styled } from 'styled'\n\nimport { GCartRecipe } from 'graph/types'\n\ninterface IProps {\n  sidedish: GCartRecipe.SideDishes\n  isSelected: boolean\n  canBeSelected: boolean\n  onClick(): void\n}\n\nconst SidedishCheckboxThemed = styled<IProps & ButtonProps>(\n  ({ isSelected, canBeSelected, ...props }) => <Button {...props} />,\n)`\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n`\n\nexport const SidedishCheckbox: React.SFC<IProps> = props => (\n  <SidedishCheckboxThemed\n    size=\"xs\"\n    outline={true}\n    data-testid={`sidedishCheckbox__${props.sidedish.id}`}\n    disabled={!props.canBeSelected && !props.isSelected}\n    {...props}\n  >\n    <div className=\"food__sidedish__picker__button__name\">\n      {props.sidedish.nameLabel}\n    </div>\n    <div className=\"food__sidedish__picker__button__price\">\n      {props.sidedish.price.formattedValue}\n    </div>\n  </SidedishCheckboxThemed>\n)\n","import './SidedishPicker.css'\n\nimport { Observer } from 'mobx-react'\nimport React, { Fragment } from 'react'\n\nimport { GCartRecipe } from 'graph/types'\n\nimport CategoryValidationMessage from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment\n  selection: ReadonlyArray<ID>\n  onToggle(item: ID): void\n}\n\nexport const SidedishPicker: React.SFC<IProps> = ({\n  recipe,\n  selection,\n  onToggle,\n}) => (\n  <Observer>\n    {() => (\n      <div className=\"food__sidedish__picker\">\n        {recipe.categories.map(category => (\n          <Fragment key={category.id}>\n            <div className=\"food__sidedish__picker__category\">\n              {category.nameLabel}{' '}\n              <CategoryValidationMessage\n                minCount={category.minCount}\n                maxCount={category.maxCount}\n              />\n            </div>\n            {category.sideDishes.map(sidedish => (\n              <SidedishCheckbox\n                key={`${sidedish.id}-${category.id}`}\n                sidedish={sidedish}\n                isSelected={selection.includes(sidedish.id)}\n                canBeSelected={true}\n                onClick={() => onToggle(sidedish.id)}\n              />\n            ))}\n          </Fragment>\n        ))}\n      </div>\n    )}\n  </Observer>\n)\n","import { observable } from 'mobx'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { PrimaryButton } from 'common/Buttons'\n\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ID[]\n  onConfirm(): Promise<void>\n  enabled: boolean\n}\n\nexport const CartOrderButton: React.SFC<IProps> = ({\n  selection,\n  onConfirm,\n}) => {\n  const isConfirming = observable.box(false)\n\n  return (\n    <Observer>\n      {() => (\n        <PrimaryButton\n          className=\"modal__body__button\"\n          disabled={isConfirming.get()} /*!cartFood.isValid*/\n          data-testid=\"cartOrderButton\"\n          onClick={async () => {\n            isConfirming.set(true)\n            await onConfirm()\n            isConfirming.set(false)\n          }}\n        >\n          {i18n\n            .plural({\n              value: selection.length,\n              0: 'Order without sidedish',\n              one: 'Order with this sidedish',\n              other: 'Order with # sidedishes',\n            })\n            .toLocaleUpperCase()}\n        </PrimaryButton>\n      )}\n    </Observer>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport { observable } from 'mobx'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport 'common/Modal.css'\nimport { GCartRecipe } from 'graph/types'\n\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment | undefined\n  initialSelection?: ID[]\n  isLoading: boolean\n  onConfirm(selection: ID[]): Promise<void>\n  onClose(): void\n}\n\nexport const CartModal: React.SFC<IProps> = ({\n  recipe,\n  initialSelection = [],\n  onConfirm,\n  onClose,\n  isLoading,\n}) => {\n  const selection = observable.array<ID>(initialSelection)\n\n  const onConfirmAndClose = async () => {\n    await onConfirm(Array.from(selection))\n    onClose()\n  }\n\n  const onToggleSidedish = (sidedishId: ID) => {\n    if (selection.includes(sidedishId)) {\n      selection.remove(sidedishId)\n    } else {\n      selection.push(sidedishId)\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={true}\n      toggle={onClose}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader toggle={onClose} tag={Container} className=\"modal__header\">\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {isLoading || !recipe ? null : (\n            <>\n              <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n              <span className=\"modal__body__food_description\">\n                {recipe.descriptionLabel}\n              </span>\n              <SidedishPicker\n                recipe={recipe}\n                selection={selection}\n                onToggle={onToggleSidedish}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n            enabled={!isLoading}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Field, FieldProps } from 'react-form'\nimport { FormFeedback, Input, InputProps } from 'reactstrap'\n\ninterface IProps\n  extends Omit<FieldProps<string>, 'render' | 'children'>,\n    Omit<InputProps, 'defaultValue'> {\n  showFeedback?: boolean\n}\n\nexport const FormTextInput: React.SFC<IProps> = ({\n  field,\n  validate,\n  showFeedback = false,\n  ...inputProps\n}) => (\n  <Field\n    field={field}\n    validate={validate}\n    render={fieldApi => (\n      <>\n        <Input\n          {...inputProps}\n          value={fieldApi.value}\n          onChange={e => fieldApi.setValue(e.target.value)}\n          onBlur={() => fieldApi.setTouched(true)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n        />\n        {showFeedback && <FormFeedback>{fieldApi.error}</FormFeedback>}\n      </>\n    )}\n  />\n)\n","import { i18n } from 'i18n'\nimport React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from 'common/FormTextInput'\n\nconst emailRx = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\nexport const OrderEmailInputValidator = value => {\n  const email = value.trim()\n  if (email === '') {\n    return i18n.t`E-mail is mandatory`\n  }\n  if (!emailRx.test(email)) {\n    return i18n.t`E-mail format is not valid`\n  }\n  return null\n}\n\nexport const OrderEmailInput: React.SFC = () => (\n  <FormGroup>\n    <FormTextInput\n      field=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder=\"E-mail\"\n      showFeedback={true}\n      validate={OrderEmailInputValidator}\n      data-testid=\"orderEmailInput\"\n    />\n  </FormGroup>\n)\n","import { i18n } from 'i18n'\nimport React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from 'common/FormTextInput'\n\nexport const OrderNameInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n        showFeedback={true}\n        validate={value =>\n          value.trim() === '' ? i18n.t`First name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__FirstName\"\n      />\n      <FormTextInput\n        field=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n        showFeedback={true}\n        validate={value =>\n          value.trim() === '' ? i18n.t`Last name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__LastName\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import { i18n } from 'i18n'\nimport React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from 'common/FormTextInput'\n\nexport const OrderPhoneInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone is mandatory` : null\n\nexport const OrderPhonePrefixInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone prefix is mandatory` : null\n\nexport const OrderPhoneInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"phonePrefix\"\n        autoComplete=\"tel-country-code\"\n        placeholder=\"+\"\n        showFeedback={true}\n        validate={OrderPhonePrefixInputValidator}\n      />\n      <FormTextInput\n        field=\"phone\"\n        type=\"tel\"\n        autoComplete=\"tel-national\"\n        placeholder={i18n.t`Phone`}\n        showFeedback={true}\n        validate={OrderPhoneInputValidator}\n        style={{ width: '55%' }}\n        data-testid=\"orderPhoneInput__Phone\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n  </>\n)\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  field: FieldType\n  defaultValue?: boolean\n  validate?(value: boolean): string | null\n}\n\nconst CheckboxContainerStyled = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n`\n\nconst CheckboxStyled = styled(Input)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: white;\n  border: 1px solid;\n  border-color: ${({ invalid }: { invalid: boolean }) =>\n    invalid ? 'red' : '#c5c5c5'};\n  width: 2rem;\n  height: 2rem;\n  min-width: 2rem;\n  border-radius: 0.25rem;\n  position: relative;\n  margin: 0;\n  outline: none;\n  &:checked {\n    background-color: white;\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: #1d1d1d;\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  margin: 0 0 0 0.8rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.SFC<IProps> = ({\n  field,\n  defaultValue = false,\n  validate,\n  children,\n  ...props\n}) => (\n  <Field field={field} defaultValue={defaultValue} validate={validate}>\n    {fieldApi => (\n      <CheckboxContainerStyled>\n        <CheckboxStyled\n          type=\"checkbox\"\n          value={fieldApi.value}\n          onChange={checked => fieldApi.setValue(checked.target.checked)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n          {...props}\n        />\n        <LabelStyled>{children}</LabelStyled>\n      </CheckboxContainerStyled>\n    )}\n  </Field>\n)\n","import { i18n } from 'i18n'\nimport { observable } from 'mobx'\nimport React from 'react'\nimport { Button, Collapse } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../common/FormInputCheckbox'\nimport { WithOrder } from '../../common/WithOrder'\nimport { TAgreement } from '../../models/OrderModel'\n\nconst { Consumer } = React.createContext(observable.array<ID>([]))\n\nconst ButtonStyled = styled(Button)`\n  padding: 0 0.5rem;\n  font-size: 0.8rem;\n  color: darkgray;\n`\n\nconst GdprAgreementStyled = styled.div`\n  font-size: 0.8rem !important;\n  color: darkgray;\n  margin: 0.5rem 0 0.5rem 0;\n  & .row {\n    margin: 0;\n  }\n`\n\nconst hideConfirmed = (agreement: TAgreement) => {\n  if (agreement.isConfirmed) {\n    // it's necessary to hide confirmed agreements like this\n    // because react-form already has validation errors stored\n    // for mandatory ones and is unable to forget it by not rendering field\n    return { style: { display: 'none' } }\n  }\n  return {}\n}\n\nexport const OrderAgreements: React.SFC = () => (\n  <Consumer>\n    {descOpen => {\n      const toggleId = (id: ID) => () => {\n        if (descOpen.includes(id)) {\n          descOpen.remove(id)\n        } else {\n          descOpen.push(id)\n        }\n      }\n      return (\n        <WithOrder\n          observe={true}\n          render={order =>\n            order.agreements.map((agreement, idx) => (\n              <div key={agreement.id} {...hideConfirmed(agreement)}>\n                <FormInputCheckbox\n                  field={['agreements', idx, 'isConfirmed']}\n                  validate={checked =>\n                    agreement.isMandatory && !(agreement.isConfirmed || checked)\n                      ? 'Agreement is mandatory'\n                      : null\n                  }\n                  data-testid={`orderAgreement__Check__${agreement.id}`}\n                >\n                  <span dangerouslySetInnerHTML={{ __html: agreement.name }} />\n                  {agreement.isMandatory && ' * '}\n                  {agreement.description && (\n                    <>\n                      <ButtonStyled\n                        color=\"link\"\n                        onClick={toggleId(agreement.id)}\n                        data-testid={`orderAgreement__MoreButton__${\n                          agreement.id\n                        }`}\n                      >\n                        {descOpen.includes(agreement.id)\n                          ? i18n.t`Less`.toLocaleLowerCase()\n                          : i18n.t`More...`.toLocaleLowerCase()}\n                      </ButtonStyled>\n                      <Collapse isOpen={descOpen.includes(agreement.id)}>\n                        <GdprAgreementStyled\n                          data-testid={`orderAgreement__Info__${agreement.id}`}\n                          dangerouslySetInnerHTML={{\n                            __html: agreement.description,\n                          }}\n                        />\n                      </Collapse>\n                    </>\n                  )}\n                </FormInputCheckbox>\n              </div>\n            ))\n          }\n        />\n      )\n    }}\n  </Consumer>\n)\n","import React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\nimport { IOrderFormState } from './OrderFormSetup'\nimport { MAX_LENGTH } from './OrderNoteInput'\n\ninterface IProps {\n  onFill(values: IOrderFormState): void\n}\n\nexport const OrderFormAutoFill: React.SFC<IProps> = ({ onFill }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <SecondaryButton\n      onClick={() => {\n        const faker: Faker.FakerStatic = require('faker')\n        faker.locale = 'cz'\n        onFill({\n          firstname: faker.name.firstName(),\n          lastname: faker.name.lastName(),\n          email: faker.internet.email(),\n          phone: faker.phone.phoneNumberFormat(0),\n          phonePrefix: '+420',\n          note: faker.lorem.sentence().slice(0, MAX_LENGTH - 1),\n          payment: PaymentGateEnum.GOPAY,\n          agreements: [],\n        })\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  ) : null\n","import debounce from 'debounce'\nimport React from 'react'\nimport { Form, IFormApi, IFormState } from 'react-form'\nimport { Route } from 'react-router'\nimport { Form as StrapForm } from 'reactstrap'\n\nimport { PaymentGateEnum } from 'graph/types'\nimport { TAgreement, TOrderModel } from 'models/OrderModel'\n\nimport { logOrder } from '../../helpers/logger'\nimport { RM } from '../../helpers/ramda'\nimport { reportError } from '../../helpers/sentry'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\n\ninterface IProps {\n  order: TOrderModel\n  render(formApi: IFormApi & IFormState<IOrderFormState>): ReactNode\n}\n\nexport interface IOrderFormState {\n  firstname: string\n  lastname: string\n  email: string\n  phonePrefix: string\n  phone: string\n  note: string\n  payment: PaymentGateEnum\n  agreements: TAgreement[]\n}\n\nfunction getFormValues(orderModel: TOrderModel): IOrderFormState {\n  return {\n    firstname: orderModel.firstname,\n    lastname: orderModel.lastname,\n    email: orderModel.email,\n    phone: orderModel.phone,\n    phonePrefix: orderModel.phonePrefix || orderModel.defaultPhonePrefix,\n    note: orderModel.note,\n    payment: PaymentGateEnum.GOPAY,\n    agreements: [],\n  }\n}\n\nconst debounceInterval = 1500\n\nexport class OrderFormSetup extends React.PureComponent<IProps> {\n  componentDidMount() {\n    const { order } = this.props\n    if (!order.isVamInitialized) {\n      order.initVam()\n    }\n  }\n  updateVam = async (\n    formState: IFormState<IOrderFormState>,\n    formApi: IFormApi,\n  ) => {\n    const { order } = this.props\n    try {\n      await order.updateVam(formState.values)\n      formApi.setValue(\n        'agreements',\n        mergeFormAgreements(formState.values.agreements, order.agreements),\n      )\n    } catch (err) {\n      reportError(err, {\n        formState: formState.values,\n      })\n    }\n  }\n\n  render() {\n    const onChange = debounce(this.updateVam, debounceInterval)\n    const { render, order } = this.props\n    return (\n      <Route>\n        {({ history }) => (\n          <Form\n            defaultValues={getFormValues(order)}\n            validateOnMount={true}\n            onChange={onChange}\n            onSubmit={async (formState: IOrderFormState) => {\n              try {\n                await order.submitOrder(formState)\n                history.replace(`/finish`)\n              } catch (e) {\n                logOrder(e)\n              }\n            }}\n          >\n            {formApi => (\n              <StrapForm onSubmit={formApi.submitForm}>\n                <OrderFormAutoFill\n                  onFill={values => formApi.setAllValues(values)}\n                />\n                {render(formApi)}\n              </StrapForm>\n            )}\n          </Form>\n        )}\n      </Route>\n    )\n  }\n}\n\nfunction mergeFormAgreements(\n  formValue: TAgreement[],\n  agreements: TAgreement[],\n) {\n  return agreements.map(agreement => {\n    const formAgreement = formValue.find(RM.propEq('id', agreement.id))\n    if (formAgreement) {\n      return { ...agreement, isConfirmed: formAgreement.isConfirmed }\n    }\n    return agreement\n  })\n}\n","import { buildQuery, gql } from 'graph'\n\nimport { CartItemFragment, PriceFragment } from 'graph/fragments.graphql'\nimport { GFinishView } from 'graph/types'\n\nexport const FinishViewOrderFragment = gql`\n  fragment GFinishViewOrder on Order {\n    id\n    items {\n      ...GCartItem\n      sideDishes {\n        ...GCartItem\n      }\n    }\n    totalSum {\n      ...GPrice\n    }\n    orderPayments {\n      paymentMethod {\n        paymentType {\n          enum\n        }\n      }\n    }\n  }\n  ${CartItemFragment}\n  ${PriceFragment}\n`\n\nexport const FinishViewQuery = gql`\n  query GFinishView($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      ...GFinishViewOrder\n    }\n    companyBranch(id: $branchId) {\n      id\n      phone\n      company {\n        id\n      }\n    }\n    androidApp: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: ANDROID\n    ) {\n      url\n    }\n    iosApp: mobileApplicationSettings(companyBranch: $branchId, platform: IOS) {\n      url\n    }\n  }\n  ${FinishViewOrderFragment}\n`\n\nexport const QueryFinishView = buildQuery<\n  GFinishView.Query,\n  GFinishView.Variables\n>(FinishViewQuery)\n","import React from 'react'\n\nimport { WithOrder } from 'common/WithOrder'\nimport { GFinishView } from 'graph/types'\n\nimport { QueryFinishView } from './FinishView.graphql'\n\ninterface IProps {\n  render(result: GFinishView.Query): ReactNode\n}\n\nexport const FinishViewLoader: React.SFC<IProps> = ({ render }) => (\n  <WithOrder\n    redirect={true}\n    render={order => (\n      <QueryFinishView\n        variables={{\n          branchId: order.branchId!,\n          orderId: order.orderId!,\n        }}\n        render={data => render(data)}\n      />\n    )}\n  />\n)\n","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-01.6d4e5108.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-02.8afb6c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-doveze.e13c0122.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-gopay.48aa4030.png\";"],"sourceRoot":""}