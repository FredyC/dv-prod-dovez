{"version":3,"sources":["segments/orderForm/OrderFormStorageNotice.tsx","segments/orderForm/OrderFormView.graphql.ts","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderAgreements.tsx","segments/orderForm/OrderFormInputs.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderFormSetup.tsx","segments/orderForm/OrderSubmitLine.tsx","common/SubmitSpinner.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/orderForm/OrderTimePicker.tsx","segments/finish/FinishView.graphql.ts","segments/destination/AddressInput.tsx","segments/destination/GeolocationButton.tsx","segments/destination/ResolvedAddress.tsx","segments/destination/SearchInput.tsx","segments/map/AddressSubmit.tsx","segments/map/DeliveryMap.graphql.ts","segments/map/DeliveryMapPanning.tsx","segments/shop/logo-commerce-01.svg","segments/shop/logo-commerce-02.svg","segments/shop/logo-doveze.svg","segments/shop/logo-gopay.png","segments/sidedishPicker/SidedishPicker.tsx","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartContents.tsx","segments/cart/CartDiscounts.tsx","segments/cart/CartItem.tsx","segments/cart/EditCartItemButton.tsx","segments/cart/RemoveCartItemButton.tsx","segments/cart/CartTotals.tsx","segments/cart/CartIsEmpty.tsx","segments/cart/ChangeCartModal.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/LinkToCart.tsx","segments/foodMenu/OrderLimitModal.tsx","common/FormInputCheckbox.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderPromoInput.tsx","hooks/useGuardedMutation.ts","segments/orderForm/OrderPromoInput.graphql.ts","segments/orderForm/OrderTimeButtons.tsx","segments/orderForm/OrderFormAutoFill.tsx","segments/timePicker/TimePicker.tsx","segments/timePicker/createTimeSteps.ts","segments/timePicker/TimePickerButton.tsx","segments/orderForm/OrderTimePicker.graphql.ts","common/WithOrder.tsx","common/ColStyle.tsx","common/ShopStatus.tsx","common/BaseMap.tsx","common/ShopAddress.tsx","common/AlertModal.tsx","common/BackgroundThemed.tsx","common/FormTextInput.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewLoader.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","segments/destination/OrderMethod.tsx","segments/map/DeliveryMap.tsx","common/ButtonStripe.tsx","segments/map/atoms/MapPanning.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","segments/cart/CartView.tsx","segments/cart/AddToCartModal.tsx","segments/cart/CartModal.tsx","common/PickerButton.tsx","segments/cart/CartItemButton.tsx","segments/foodMenu/FoodMenuView.tsx"],"names":["_react","__webpack_require__","_mobxReact","_react2","_interopRequireDefault","_reactstrap","_styledComponents","_Responsive","_WithRoot","_OrderFormView","NoticeButton","default","Button","withConfig","displayName","StorageNotice","Alert","mediaDesktop","mediaMobile","props","createElement","WithRoot","render","root","QueryOrderForm","skip","order","hasOrder","user","rememberForm","variables","orderId","renderLoading","Observer","countWares","data-testid","Trans","id","color","size","onClick","setFormRememberYes","setFormRememberNo","_graphqlTag","_graph","OrderFormQuery","buildQuery","_WithOrder","WithOrder","observe","Modal","isOpen","hasErrors","toggle","clearErrors","className","ModalHeader","tag","Container","ModalBody","submitErrors","map","error","idx","key","_mobx","_mobxReactLite","_interopRequireWildcard","_FormInputCheckbox","_i18n","ButtonStyled","GdprAgreementStyled","div","descOpen","useRef","observable","array","current","toggleId","useCallback","includes","remove","push","useRoot","useObserver","Fragment","agreements","agreement","_extends","isConfirmed","style","display","hideConfirmed","FormInputCheckbox","field","validate","checked","isMandatory","dangerouslySetInnerHTML","__html","name","description","i18n","_","toLocaleLowerCase","Collapse","_OrderEmailInput","_OrderNameInput","_OrderNoteInput","_OrderPhoneInput","_OrderPromoInput","_OrderTimeButtons","OrderNameInput","OrderPhoneInput","OrderEmailInput","OrderNoteInput","OrderTimeButtons","_reactForm","isTooLong","value","trim","length","OrderNoteInputValidator","ingredientsDescription","Field","fieldApi","FormGroup","Input","type","placeholder","title","onChange","e","setValue","target","onBlur","setTouched","valid","invalid","Boolean","FormText","FormFeedback","values","0","MAX_LENGTH","_hooks","_reactRouter","_types","_logger","_ramda","_sentry","_OrderFormAutoFill","useEffect","isVamInitialized","initVam","updateVam","formState","formApi","__awaiter","formValue","formAgreement","find","RM","propEq","Object","assign","err","reportError","useDebounceCallback","Route","history","Form","defaultValues","orderModel","firstname","lastname","email","phone","phonePrefix","defaultPhonePrefix","note","payment","PaymentGateEnum","Gopay","getFormValues","validateOnMount","onSubmit","submitOrder","replace","logOrder","submitForm","OrderFormAutoFill","onFill","setAllValues","_Buttons","_SubmitSpinner","canSubmit","PrimaryButton","disabled","isSubmitting","Desktop","toLocaleUpperCase","Mobile","_reactSpinkit","withTheme","theme","primary","fadeIn","_AlertModal","_Pacman","TextPadding","AlertModal","isGoPayChecking","headerText","noMargin","_dateFns","_reactApolloHooks","_formats","_TimePicker","_OrderTimePicker","OrderTimePicker","observer","data","loading","useQuery","OrderTimePickerQuery","branchId","suspend","selectedTime","deliverAt","header","usingDeliveryOrderMethod","timePickerOpen","closeTimePicker","autoFocus","backdrop","fade","maxDate","companyBranch","willCloseAt","Date","lastBusinessHour","last","businessHours","closed","parse","closeAt","getEndTime","TimePicker","minuteStep","minDate","minutesOffset","defaultDeliveryTime","usingPickupOrderMethod","defaultPickupTime","openAt","willOpenAt","addMinutes","getStartTime","initialTime","filterIntervals","now","filter","bhour","start","parseTime","end","getFilterIntervals","onStepChange","time","renderModalContent","setDeliverAt","_fragments","FinishViewOrderFragment","CartItemFragment","PriceFragment","FinishViewQuery","QueryFinishView","_GeolocationButton","_ResolvedAddress","_SearchInput","AddressInputStyled","AddressInputBoxStyled","location","InputGroup","address","isVisible","hasAddress","isResolving","onValidClick","clearAddress","inputProps","autoComplete","onSearch","withUserAddress","isSearching","attemptGeolocation","isGeolocationAvailable","hasFinishedSearch","isResolved","NoMouseAlert","isStreetAddress","inDeliveryLocation","renderErrorMessage","span","secondary","GeolocationButton","InputGroupAddon","addonType","ResolvedAddress","_classnames","_debounce","Component","[object Object]","this","state","ev","setState","onKeyPress","clear","inputRef","onInputMount","ref","setFocus","nextProps","focus","isHidden","address__input__hidden","innerRef","_ButtonStripe","AddressSubmit","enabled","onPrefetch","onMouseEnter","InitialMapLocationQuery","_MapPanning","initialLocation","useDisposable","reaction","clickPoint","withUserLocation","clearClickPoint","panToGps","useFullComputed","geoPoint","logMap","geolocationPoint","MapPanning","gps","get","module","exports","p","_CategoryValidationMessage","_SidedishCheckbox","recipe","selection","onToggle","categories","category","nameLabel","minCount","maxCount","sideDishes","sidedish","SidedishCheckbox","isSelected","canBeSelected","_PickerButton","Name","Price","_a","buttonProps","__rest","PickerButton","outline","width","price","formattedValue","onConfirm","isConfirming","box","set","_CartDiscounts","_CartItem","_CartTotals","rootModel","items","item","CartItem","isActive","lastActiveRecipeId","onEdit","setUsedRecipeId","CartDiscounts","CartTotals","discounts","code","totalDiscount","_EditCartItemButton","_RemoveCartItemButton","EditButtonsContainerStyled","CartItemStyled","RemoveCartItemButton","itemId","automatic","EditCartItemButton","sideDishCount","join","_reactRouterDom","_CartItemButton","button","CartItemButton","icon","Link","to","data_testid","removeItemFromCart","_color","CartItemSummaryTotalThemed","alpha","hsl","string","coverPrice","transportFee","totalSum","CartIsEmptyThemed","_OrderModel","_CartModal","QueryCart","OrderCartForItemQuery","path","match","params","renderError","CartModal","initialSelection","updateItem","onClose","goBack","isLoading","_reactScroll","_reactSwipeable","_reactTruncate","_recompose","ContainerByPlatform","scroll","onMounted","onSwiping","deltaX","scrollLeft","onSwiped","isDesktop","children","CategoryNavigator","setActiveCategoryIndex","activeCategoryIndex","active","onSetActive","offset","smooth","spy","pictogram","lines","compose","withState","decorate","_FoodCategory","_FoodMenuItem","FoodMenuStyled","FoodMenuListStyled","shouldUpdate","orderItemCount","config","orderItemsMax","inCart","canAddToCart","orderLimitReached","recipes","showOrderLimit","prefetchFood","FoodCategoryStyled","FoodCategoryTitleStyled","Element","_LinkToCart","FoodMenuItemStyled","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItemCount","LinkToCart","recipeId","hasSidedish","image","src","alt","descriptionLabel","LinkStyled","pathname","isMobile","addFromRecipeMobile","addFromRecipe","orderLimitAlertHidden","hideOrderLimit","CheckboxContainerStyled","CheckboxStyled","LabelStyled","defaultValue","touched","_FormTextInput","emailRx","OrderEmailInputValidator","test","FormTextInput","showFeedback","OrderPhoneInputValidator","OrderPhonePrefixInputValidator","_useGuardedMutation","CodesPanel","OrderPromoInputUI","codes","onCodeAdd","onCodeRemove","autoSubmitAfterTimeout","isValidating","setValidating","useState","addCode","then","catch","finally","onKeyDown","preventDefault","onPaste","SecondaryButton","OrderPromoCodesQuery","addCodeMutation","useGuardedMutation","AddOrderPromoMutation","refetchQueries","result","addOrderPromoCode","userErrors","submitFailed","removeCodeMutation","RemoveOrderPromoMutation","promoCodes","codeId","mutation","options","defaultMessage","handleGraphQLErrors","errors","window","alert","prop","handleError","hasOwnProperty","isApolloError","networkError","graphQLErrors","mutate","useMutation","PromoCodeFragment","SelectButtonThemed","selected","undefined","openTimePicker","formats","date0","weekday","hour","minute","_fp","_createTimeSteps","_TimePickerButton","TimePickerContainer","TimePickerDay","steps","useMemo","allSteps","createTimeSteps","step","some","isWithinInterval","days","eachDayOfInterval","stepIdx","setStepIdx","closestIndexTo","useEffectOnce","day","getDate","DateFormat","format","month","isEqual","startOfDay","TimePickerButton","getTime","timeClampUp","timeClampDown","subMinutes","getMinutes","Time","formatTime","redirect","Redirect","Col","sm","md","lg","xl","ShopStatus","PureComponent","timer","timedUpdate","update","forceUpdate","setTimeout","clearTimeout","status","openThresholdInMinutes","closeThresholdInMinutes","decision","isSoon","openingIn","differenceInMinutes","closingIn","threshold","Math","abs","defaultProps","_reactGoogleMaps","MapContainerStyled","MapElement","BaseMapContainer","withGoogleMap","model","containerElement","mapElement","GoogleMap","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","streetViewControl","mapTypeControl","fullscreenControl","zoomControlOptions","position","google","maps","ControlPosition","RIGHT_TOP","getMapOptions","street","houseNumber","city","modalProps","BackgroundThemed","imageName","fallbackColor","fixed","component","otherProps","CenteredButtonContainer","finish","androidApp","iosApp","href","url","PrimaryRoutedButton","textAlign","_FinishView","HeaderThemed","PriceThemed","PriceCornerThemed","orderPayments","hasMethod","Cash","getPaymentInfo","OrderItem","getPaymentPrice","pathEq","PhoneNumberLinkStyled","a","branch","OrderMethodButton","orderMethod","useOrderMethod","data-testselected","DeliveryTypeEnum","Messenger","identity","Pickup","prefetchPickup","_gps","_AddressInput","_AddressSubmit","_DeliveryMap2","_DeliveryMapPanning","business","setBranch","createDeliveryOrder","when","isValid","validateUserLocation","DeliveryMapPanning","gpsCoordinates","latLng","Marker","defaultDraggable","onDragEnd","latLngToGps","AddressInput","isDeliveryAddress","prefetchFoodMenu","autorun","isReady","panToLocation","_ShopStatus","closingTimeAlertHidden","hideClosingTime","_ColStyle","_logoCommerce","_logoCommerce2","_logoDoveze","_logoGopay","ColStyle","StatusDisplayOpen","StatusDisplayClosed","deliveryTime","pickupTime","s","_AddToCartModal","_CartContents","_CartIsEmpty","_CartView2","_ChangeCartModal","AddToCartModal","ChangeCartModal","QueryCartView","CartContents","CartIsEmpty","OrderCartForRecipeQuery","Promise","resolve","_SidedishPicker","_CartOrderButton","SidedishPicker","sidedishId","CartOrderButton","Array","from","PickerButtonStyled","tertiary","tertiaryText","tertiaryHover","onSelect","CartItemButtonStyled","useColor","css","CartItemButtonIcon","_CategoryNavigator","_FoodMenu","_FoodMenuView","_OrderLimitModal","QueryFoodMenu","wareCategories","OrderLimitModal","QueryFoodMenuCartPresence","FoodMenu","reduce","getCartPresence"],"mappings":"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","file":"static/js/1.960eaddf.chunk.js","sourcesContent":["import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { WithRoot } from '../../common/WithRoot'\nimport { QueryOrderForm } from './OrderFormView.graphql'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.SFC<IProps> = props => (\n  <WithRoot\n    render={root => (\n      <QueryOrderForm\n        skip={!root.order.hasOrder || root.user.rememberForm !== null}\n        variables={{ orderId: root.order.orderId! }}\n        renderLoading={() => null}\n        render={({ order }) => (\n          <Observer>\n            {() =>\n              order.countWares > 0 && root.user.rememberForm === null ? (\n                <StorageNotice data-testid=\"orderFormStorageNotice\">\n                  <p>\n                    <Trans>\n                      This app is using secure storage for keeping filled form\n                      data. It's not cookies, these are stored in your browser\n                      only.\n                    </Trans>\n                  </p>\n\n                  <NoticeButton\n                    color=\"success\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberYes}\n                    data-testid=\"orderFormStorageNotice__Yes\"\n                  >\n                    <Trans>Always remember</Trans>\n                  </NoticeButton>\n                  <NoticeButton\n                    color=\"secondary\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberNo}\n                    data-testid=\"orderFormStorageNotice__No\"\n                  >\n                    <Trans>Do not store</Trans>\n                  </NoticeButton>\n                </StorageNotice>\n              ) : null\n            }\n          </Observer>\n        )}\n      />\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderForm } from '../../graph/types'\n\nexport const OrderFormQuery = gql`\n  query GOrderForm($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      countWares\n    }\n  }\n`\n\nexport const QueryOrderForm = buildQuery<\n  GOrderForm.Query,\n  GOrderForm.Variables\n>(OrderFormQuery)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport '../../common/Modal.css'\nimport { WithOrder } from '../../common/WithOrder'\n\nexport const OrderErrorModal: React.SFC = () => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <Modal\n        isOpen={order.hasErrors}\n        toggle={order.clearErrors}\n        className=\"modal__container\"\n      >\n        <ModalHeader\n          toggle={order.clearErrors}\n          tag={Container}\n          className=\"modal__header\"\n        >\n          <span>\n            <Trans>Order can not be completed</Trans>\n          </span>\n        </ModalHeader>\n        <ModalBody className=\"modal__body\">\n          <div className=\"modal__body__content\">\n            {order.hasErrors &&\n              order.submitErrors!.map((error, idx) => (\n                <div key={idx}>{error}</div>\n              ))}\n          </div>\n          <div className=\"modal__body__button__line\">\n            <div className=\"modal__body__button__strip\" />\n            <Button\n              className=\"modal__body__button\"\n              color=\"primary\"\n              onClick={order.clearErrors}\n            >\n              <Trans>I understand</Trans>\n            </Button>\n            />\n          </div>\n        </ModalBody>\n      </Modal>\n    )}\n  />\n)\n","import { observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useRef } from 'react'\nimport { Button, Collapse } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../common/FormInputCheckbox'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TAgreement } from '../../models/OrderModel'\n\nconst ButtonStyled = styled(Button)`\n  padding: 0 0.5rem;\n  font-size: 0.8rem;\n  color: darkgray;\n`\n\nconst GdprAgreementStyled = styled.div`\n  font-size: 0.8rem !important;\n  color: darkgray;\n  margin: 0.5rem 0 0.5rem 0;\n  & .row {\n    margin: 0;\n  }\n`\n\nconst hideConfirmed = (agreement: TAgreement) => {\n  if (agreement.isConfirmed) {\n    // it's necessary to hide confirmed agreements like this\n    // because react-form already has validation errors stored\n    // for mandatory ones and is unable to forget it by not rendering field\n    return { style: { display: 'none' } }\n  }\n  return {}\n}\n\nexport const OrderAgreements: React.FC = () => {\n  const descOpen = useRef(observable.array<ID>([])).current\n  const toggleId = useCallback(\n    (id: ID) => () => {\n      if (descOpen.includes(id)) {\n        descOpen.remove(id)\n      } else {\n        descOpen.push(id)\n      }\n    },\n    [],\n  )\n  const { order } = useRoot()\n  return useObserver(() => (\n    <>\n      {order.agreements.map((agreement, idx) => (\n        <div key={agreement.id} {...hideConfirmed(agreement)}>\n          <FormInputCheckbox\n            field={['agreements', idx, 'isConfirmed']}\n            validate={checked =>\n              agreement.isMandatory && !(agreement.isConfirmed || checked)\n                ? 'Agreement is mandatory'\n                : null\n            }\n            data-testid={`orderAgreement__Check__${agreement.id}`}\n          >\n            <span dangerouslySetInnerHTML={{ __html: agreement.name }} />\n            {agreement.isMandatory && ' * '}\n            {agreement.description && (\n              <>\n                <ButtonStyled\n                  color=\"link\"\n                  onClick={toggleId(agreement.id)}\n                  data-testid={`orderAgreement__MoreButton__${agreement.id}`}\n                >\n                  {descOpen.includes(agreement.id)\n                    ? i18n.t`Less`.toLocaleLowerCase()\n                    : i18n.t`More...`.toLocaleLowerCase()}\n                </ButtonStyled>\n                <Collapse isOpen={descOpen.includes(agreement.id)}>\n                  <GdprAgreementStyled\n                    data-testid={`orderAgreement__Info__${agreement.id}`}\n                    dangerouslySetInnerHTML={{\n                      __html: agreement.description,\n                    }}\n                  />\n                </Collapse>\n              </>\n            )}\n          </FormInputCheckbox>\n        </div>\n      ))}\n    </>\n  ))\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\nimport OrderPromoInput from './OrderPromoInput'\nimport { OrderTimeButtons } from './OrderTimeButtons'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n    <OrderTimeButtons />\n    <OrderPromoInput />\n  </>\n)\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport { Field } from 'react-form'\nimport { FormFeedback, FormGroup, FormText, Input } from 'reactstrap'\n\nimport { i18n } from '../../i18n'\n\nexport const MAX_LENGTH = 50\nconst isTooLong = value => value && value.trim().length > MAX_LENGTH\n\nconst OrderNoteInputValidator = value =>\n  isTooLong(value) ? i18n.t`Note is too long` : null\n\nexport const OrderNoteInput: React.SFC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <Field\n      field=\"note\"\n      validate={OrderNoteInputValidator}\n      render={fieldApi => (\n        <FormGroup>\n          <Input\n            type=\"textarea\"\n            placeholder={i18n.t`Note`}\n            title={ingredientsDescription}\n            value={fieldApi.value}\n            onChange={e => fieldApi.setValue(e.target.value)}\n            onBlur={() => fieldApi.setTouched(true)}\n            valid={!fieldApi.error}\n            invalid={Boolean(fieldApi.error)}\n            data-testid=\"orderNoteInput\"\n          />\n          <FormText>{ingredientsDescription}</FormText>\n          {isTooLong(fieldApi.value) ? (\n            <FormFeedback>\n              <Trans>\n                Maximum length is{' '}\n                <Plural value={MAX_LENGTH} other=\"# characters\" />. Typed{' '}\n                <Plural\n                  value={fieldApi.value.length}\n                  one=\"# char\"\n                  other=\"# chars\"\n                />\n              </Trans>\n            </FormFeedback>\n          ) : null}\n        </FormGroup>\n      )}\n    />\n  )\n}\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { useCallback, useEffect } from 'react'\nimport { Form, IFormApi, IFormState } from 'react-form'\nimport { Route } from 'react-router'\nimport { Form as StrapForm } from 'reactstrap'\n\nimport { PaymentGateEnum } from '../../graph/types'\nimport { logOrder } from '../../helpers/logger'\nimport { RM } from '../../helpers/ramda'\nimport { reportError } from '../../helpers/sentry'\nimport { TAgreement, TOrderModel } from '../../models/OrderModel'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\n\ninterface IProps {\n  order: TOrderModel\n  render(formApi: IFormApi & IFormState<IOrderFormState>): ReactNode\n}\n\nexport interface IOrderFormState {\n  firstname: string\n  lastname: string\n  email: string\n  phonePrefix: string\n  phone: string\n  note: string\n  payment: PaymentGateEnum\n  agreements: TAgreement[]\n}\n\nfunction getFormValues(orderModel: TOrderModel): IOrderFormState {\n  return {\n    firstname: orderModel.firstname,\n    lastname: orderModel.lastname,\n    email: orderModel.email,\n    phone: orderModel.phone,\n    phonePrefix: orderModel.phonePrefix || orderModel.defaultPhonePrefix,\n    note: orderModel.note,\n    payment: PaymentGateEnum.Gopay,\n    agreements: [],\n  }\n}\n\nconst debounceInterval = 1500\n\nexport const OrderFormSetup: React.FC<IProps> = ({ order, render }) => {\n  useEffect(() => {\n    if (order.isVamInitialized) {\n      order.initVam()\n    }\n  }, [])\n\n  const updateVam = useCallback(\n    async (formState: IFormState<IOrderFormState>, formApi: IFormApi) => {\n      try {\n        await order.updateVam(formState.values)\n        formApi.setValue(\n          'agreements',\n          mergeFormAgreements(formState.values.agreements, order.agreements),\n        )\n      } catch (err) {\n        reportError(err, {\n          formState: formState.values,\n        })\n      }\n    },\n    [],\n  )\n\n  const onChange = useDebounceCallback(updateVam, debounceInterval)\n\n  return (\n    <Route>\n      {({ history }) => (\n        <Form\n          defaultValues={getFormValues(order)}\n          validateOnMount={true}\n          onChange={onChange}\n          onSubmit={async (formState: IOrderFormState) => {\n            try {\n              await order.submitOrder(formState)\n              history.replace(`/finish`)\n            } catch (e) {\n              logOrder(e)\n            }\n          }}\n        >\n          {formApi => (\n            <StrapForm onSubmit={formApi.submitForm}>\n              <OrderFormAutoFill\n                onFill={values => formApi.setAllValues(values)}\n              />\n              {render(formApi)}\n            </StrapForm>\n          )}\n        </Form>\n      )}\n    </Route>\n  )\n}\n\nfunction mergeFormAgreements(\n  formValue: TAgreement[],\n  agreements: TAgreement[],\n) {\n  return agreements.map(agreement => {\n    const formAgreement = formValue.find(RM.propEq('id', agreement.id))\n    if (formAgreement) {\n      return { ...agreement, isConfirmed: formAgreement.isConfirmed }\n    }\n    return agreement\n  })\n}\n","import './OrderSubmitLine.css'\n\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  onClick(): void\n  canSubmit: boolean\n}\n\nexport const OrderSubmitLine: React.SFC<IProps> = ({\n  onClick,\n  canSubmit = false,\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <div className=\"order__form__submit__line\">\n        <div className=\"order__form__submit__line__strip\" />\n        <PrimaryButton\n          className=\"order__form__submit__line__button\"\n          color=\"primary\"\n          size=\"md\"\n          onClick={onClick}\n          disabled={!canSubmit || order.isSubmitting}\n          data-testid=\"orderSubmitButton\"\n        >\n          <Desktop>\n            {order.isSubmitting ? (\n              <SubmitSpinner />\n            ) : (\n              i18n.t`Place order`.toLocaleUpperCase()\n            )}\n          </Desktop>\n          <Mobile>{i18n.t`Place order`.toLocaleUpperCase()}</Mobile>\n        </PrimaryButton>\n      </div>\n    )}\n  />\n)\n","import React from 'react'\nimport Spinner from 'react-spinkit'\nimport { withTheme } from 'styled-components'\n\nconst SubmitSpinner = props => (\n  <Spinner name=\"three-bounce\" color={props.theme.primary} fadeIn=\"none\" />\n)\n\nexport default withTheme(SubmitSpinner)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.SFC<IProps> = ({ order }) => (\n  <Observer>\n    {() => (\n      <AlertModal isOpen={order.isGoPayChecking} headerText=\"GoPay platba\">\n        <TextPadding>\n          <Trans>Checking your GoPay payment, please wait...</Trans>\n        </TextPadding>\n        <Pacman noMargin={true} />\n      </AlertModal>\n    )}\n  </Observer>\n)\n","import '../../common/Modal.css'\n\nimport { Trans } from '@lingui/react'\nimport { addMinutes, parse } from 'date-fns'\nimport { observer } from 'mobx-react-lite'\nimport React, { useRef } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport { GOrderTimePicker } from '../../graph/types'\nimport { parseTime } from '../../helpers/formats'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport { TimePicker } from '../timePicker/TimePicker'\nimport { OrderTimePickerQuery } from './OrderTimePicker.graphql'\n\nexport const OrderTimePicker = observer(() => {\n  const { order } = useRoot()\n\n  const { data, loading } = useQuery<\n    GOrderTimePicker.Query,\n    GOrderTimePicker.Variables\n  >(OrderTimePickerQuery, {\n    variables: { branchId: order.branchId! },\n    suspend: false,\n    skip: !order.hasOrder,\n  })\n\n  const selectedTime = useRef<Date | undefined>(order.deliverAt)\n  const onConfirmAndClose = async () => {\n    order.setDeliverAt(selectedTime.current)\n    order.closeTimePicker()\n  }\n\n  const getStartTime = () => {\n    const { companyBranch } = data!\n    let minutesOffset = 0\n    if (order.usingDeliveryOrderMethod) {\n      minutesOffset = companyBranch.defaultDeliveryTime\n    }\n    if (order.usingPickupOrderMethod) {\n      minutesOffset = companyBranch.defaultPickupTime\n    }\n    const openAt =\n      companyBranch.isOpen || !companyBranch.willOpenAt\n        ? new Date()\n        : new Date(companyBranch.willOpenAt)\n    return addMinutes(openAt, minutesOffset)\n  }\n\n  const getEndTime = () => {\n    const { companyBranch } = data!\n    if (companyBranch.isOpen && companyBranch.willCloseAt) {\n      return new Date(companyBranch.willCloseAt)\n    }\n    // if closed, grab the last returned business hour closing time\n    const lastBusinessHour = RM.last(companyBranch.businessHours)\n    if (!lastBusinessHour || lastBusinessHour.closed) {\n      return null\n    }\n    return parse(lastBusinessHour.closeAt, 'HH:mm', new Date())\n  }\n\n  const getFilterIntervals = (): Interval[] => {\n    const { companyBranch } = data!\n    const now = new Date()\n    return companyBranch.businessHours\n      .filter(RM.propEq('closed', true))\n      .map(bhour => ({\n        start: parseTime(bhour.openAt, now),\n        end: parseTime(bhour.closeAt, now),\n      }))\n  }\n\n  const renderModalContent = () => {\n    if (loading || !data) {\n      return null\n    }\n\n    const maxDate = getEndTime()\n    if (maxDate === null) {\n      return (\n        <Trans>\n          It's not possible to pick a specific order time at this moment.\n        </Trans>\n      )\n    }\n\n    return (\n      <TimePicker\n        minuteStep={15}\n        minDate={getStartTime()}\n        maxDate={maxDate}\n        initialTime={selectedTime.current}\n        filterIntervals={getFilterIntervals()}\n        onStepChange={time => (selectedTime.current = time)}\n      />\n    )\n  }\n\n  const header = order.usingDeliveryOrderMethod\n    ? i18n.t`Deliver at what time?`\n    : i18n.t`When you will pickup the order?`\n\n  return (\n    <Modal\n      isOpen={order.timePickerOpen}\n      toggle={order.closeTimePicker}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader\n        toggle={order.closeTimePicker}\n        tag={Container}\n        className=\"modal__header\"\n      >\n        <span>{header}</span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">{renderModalContent()}</div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <PrimaryButton\n            onClick={onConfirmAndClose}\n            size=\"md\"\n            className=\"modal__body__button\"\n          >\n            {i18n.t`Confirm time`.toLocaleUpperCase()}\n          </PrimaryButton>\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n})\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { CartItemFragment, PriceFragment } from '../../graph/fragments.graphql'\nimport { GFinishView } from '../../graph/types'\n\nexport const FinishViewOrderFragment = gql`\n  fragment GFinishViewOrder on Order {\n    id\n    items {\n      ...GCartItem\n      sideDishes {\n        ...GCartItem\n      }\n    }\n    totalSum {\n      ...GPrice\n    }\n    orderPayments {\n      paymentMethod {\n        paymentType {\n          enum\n        }\n      }\n    }\n  }\n  ${CartItemFragment}\n  ${PriceFragment}\n`\n\nexport const FinishViewQuery = gql`\n  query GFinishView($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      ...GFinishViewOrder\n    }\n    companyBranch(id: $branchId) {\n      id\n      phone\n      company {\n        id\n      }\n    }\n    androidApp: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: ANDROID\n    ) {\n      url\n    }\n    iosApp: mobileApplicationSettings(companyBranch: $branchId, platform: IOS) {\n      url\n    }\n  }\n  ${FinishViewOrderFragment}\n`\n\nexport const QueryFinishView = buildQuery<\n  GFinishView.Query,\n  GFinishView.Variables\n>(FinishViewQuery)\n","import './AddressInput.css'\n\nimport { Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TLocationModel } from '../../models/LocationModel'\nimport GeolocationButton from './GeolocationButton'\nimport ResolvedAddress from './ResolvedAddress'\nimport SearchInput from './SearchInput'\n\nconst AddressInputStyled = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n`\n\nconst AddressInputBoxStyled = styled.div`\n  border-radius: 1rem;\n  border: 1px solid #d4d4d4;\n  background-color: white;\n  height: 2.3rem;\n  overflow: hidden;\n  & input {\n    margin: 0.2rem 2rem 0.5rem 0.7rem;\n    background: transparent;\n    border: none;\n  }\n`\n\nexport const AddressInput: React.FC = () => {\n  const { location } = useRoot()\n  return useObserver(() => (\n    <AddressInputStyled>\n      <AddressInputBoxStyled>\n        <InputGroup size=\"sm\">\n          <ResolvedAddress\n            address={location.address || ''}\n            isVisible={location.hasAddress}\n            isResolving={location.isResolving}\n            onValidClick={location.clearAddress}\n          />\n          <SearchInput\n            inputProps={{\n              placeholder: i18n.t`Type address or choose it from map`,\n              autoComplete: 'shipping street-address',\n            }}\n            onSearch={location.withUserAddress}\n            isVisible={!location.hasAddress}\n            isSearching={location.isResolving}\n          />\n          <GeolocationButton\n            onClick={location.attemptGeolocation}\n            isVisible={location.isGeolocationAvailable && !location.isResolving}\n          />\n        </InputGroup>\n      </AddressInputBoxStyled>\n      {location.hasFinishedSearch ? renderErrorMessage(location) : null}\n    </AddressInputStyled>\n  ))\n}\n\nconst NoMouseAlert = styled(Alert)`\n  pointer-events: none;\n`\n\nfunction renderErrorMessage(location: TLocationModel) {\n  if (location.isResolved === false) {\n    return (\n      <NoMouseAlert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </NoMouseAlert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport { InputGroupAddon } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  isVisible: boolean\n  onClick(): void\n}\n\nconst Container = styled.span`\n  color: ${({ theme }) => theme.secondary};\n  cursor: pointer;\n  position: absolute;\n  right: 0.4rem;\n  top: 0.15rem;\n`\n\nexport const GeolocationButton: React.SFC<IProps> = ({\n  onClick,\n  isVisible = false,\n}) =>\n  isVisible ? (\n    <Container>\n      <InputGroupAddon addonType=\"append\" onClick={onClick}>\n        <span className=\"flaticon-gps\" />\n      </InputGroupAddon>\n    </Container>\n  ) : null\n\nexport default GeolocationButton\n","import React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.SFC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  if (isResolving) {\n    return (\n      <div className=\"address__input__box__resolved wait\">\n        <Spinner name=\"ball-beat\" fadeIn=\"none\" />\n      </div>\n    )\n  }\n  if (!isVisible) {\n    return null\n  }\n  return (\n    <div className=\"address__input__box__resolved\" onClick={onValidClick}>\n      {address}\n    </div>\n  )\n}\n\nexport default ResolvedAddress\n","import classnames from 'classnames'\nimport debounce from 'debounce'\nimport React, { Component } from 'react'\nimport { Input } from 'reactstrap'\n\ninterface IProps {\n  onSearch(search: string): void\n  isVisible: boolean\n  isSearching: boolean\n  inputProps: Object\n}\n\ninterface IState {\n  value: string\n}\n\nclass SearchInput extends Component<IProps, IState> {\n  state = { value: '' }\n  componentDidMount() {\n    this.setFocus()\n  }\n  componentDidUpdate(nextProps: IProps) {\n    if (nextProps.isVisible !== this.props.isVisible) {\n      this.setFocus()\n    }\n  }\n  onSearch = debounce(this.props.onSearch, 2000)\n  onChange = ev => {\n    const value = ev.target.value || ''\n    this.setState({ value })\n    this.onSearch(value.trim())\n  }\n  onKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      this.onSearch.clear()\n      this.props.onSearch(this.state.value.trim())\n    }\n  }\n  inputRef: Maybe<HTMLInputElement> = null\n  onInputMount = (ref: HTMLInputElement) => {\n    this.inputRef = ref\n  }\n  isVisible() {\n    return this.props.isVisible !== false\n  }\n  isSearching() {\n    return this.props.isSearching !== false\n  }\n  setFocus() {\n    if (this.isVisible() && this.inputRef !== null) {\n      this.inputRef.focus()\n    }\n  }\n  render() {\n    const { inputProps } = this.props\n    const isHidden = !this.isVisible() || this.isSearching()\n    return (\n      <Input\n        className={classnames({ address__input__hidden: isHidden })}\n        onChange={this.onChange}\n        onKeyPress={this.onKeyPress}\n        value={this.state.value}\n        innerRef={this.onInputMount}\n        autoFocus={true}\n        {...inputProps}\n      />\n    )\n  }\n}\n\nexport default SearchInput\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n  onPrefetch(): void\n}\n\nexport const AddressSubmit: React.SFC<IProps> = ({\n  enabled,\n  onClick,\n  onPrefetch,\n}) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      onMouseEnter={() => enabled && onPrefetch()}\n    >\n      {i18n.t`Confirm address`.toLocaleUpperCase()}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import gql from 'graphql-tag'\n\nexport const InitialMapLocationQuery = gql`\n  query GInitialLocation {\n    initialLocation: resolveLocation {\n      gpsCoordinates {\n        latitude\n        longitude\n      }\n    }\n  }\n`\n","import { useFullComputed } from '@speedlo/hooks'\nimport { reaction } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GeoPoint } from '../../helpers/gps'\nimport { logMap } from '../../helpers/logger'\nimport { MapPanning } from './atoms/MapPanning'\n\ninterface IProps {\n  initialLocation: Maybe<GeoPoint>\n}\n\nexport const DeliveryMapPanning: React.SFC<IProps> = ({ initialLocation }) => {\n  const { location, map } = useRoot()\n\n  useDisposable(() =>\n    reaction(\n      () => map.clickPoint,\n      clickPoint => {\n        if (clickPoint) {\n          location.withUserLocation(clickPoint)\n          map.clearClickPoint()\n        }\n      },\n    ),\n  )\n\n  const panToGps = useFullComputed(\n    () => {\n      if (location.geoPoint) {\n        logMap('pan to user location', location.geoPoint)\n        return location.geoPoint\n      } else if (location.geolocationPoint) {\n        logMap('pan to geolocation', location.geolocationPoint)\n        return location.geolocationPoint\n      } else if (initialLocation) {\n        logMap('pan to initial location', initialLocation)\n        return initialLocation\n      }\n      logMap('no pan location available')\n      return\n    },\n    [initialLocation],\n  )\n\n  return useObserver(() => <MapPanning gps={panToGps.get()} map={map} />)\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-01.6d4e5108.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-02.8afb6c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-doveze.e13c0122.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-gopay.48aa4030.png\";","import './SidedishPicker.css'\n\nimport { Observer } from 'mobx-react'\nimport React, { Fragment } from 'react'\n\nimport { GCartRecipe } from '../../graph/types'\n\nimport CategoryValidationMessage from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment\n  selection: ReadonlyArray<ID>\n  onToggle(item: ID): void\n}\n\nexport const SidedishPicker: React.SFC<IProps> = ({\n  recipe,\n  selection,\n  onToggle,\n}) => (\n  <Observer>\n    {() => (\n      <div className=\"food__sidedish__picker\">\n        {recipe.categories.map(category => (\n          <Fragment key={category.id}>\n            <div className=\"food__sidedish__picker__category\">\n              {category.nameLabel}{' '}\n              <CategoryValidationMessage\n                minCount={category.minCount}\n                maxCount={category.maxCount}\n              />\n            </div>\n            {category.sideDishes.map(sidedish => (\n              <SidedishCheckbox\n                key={`${sidedish.id}-${category.id}`}\n                sidedish={sidedish}\n                isSelected={selection.includes(sidedish.id)}\n                canBeSelected={true}\n                onClick={() => onToggle(sidedish.id)}\n              />\n            ))}\n          </Fragment>\n        ))}\n      </div>\n    )}\n  </Observer>\n)\n","import React from 'react'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n}\n\nconst CategoryValidationMessage: React.SFC<IProps> = ({\n  minCount,\n  maxCount,\n}) => {\n  let message = ''\n  // if (minCount === 0) {\n  //   if (maxCount > 0) {\n  //     message = `(maximálně ${maxCount})`\n  //   }\n  // }\n  // if (maxCount === 0) {\n  //   message = `(minimálně ${minCount})`\n  // } else {\n  //   message = `(minimálně ${minCount} a maximálně ${maxCount})`\n  // }\n  return <span>{message}</span>\n}\n\nexport default CategoryValidationMessage\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { GCartRecipe } from '../../graph/types'\n\ninterface IProps extends ButtonProps {\n  sidedish: GCartRecipe.SideDishes\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Name = styled.div`\n  float: left;\n`\n\nconst Price = styled.div`\n  font-weight: bold;\n  float: right;\n`\n\nexport const SidedishCheckbox: React.FC<IProps> = ({\n  sidedish,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"17.5rem\"\n    data-testid={`sidedishCheckbox__${sidedish.id}`}\n    {...buttonProps}\n  >\n    <Name>{sidedish.nameLabel}</Name>\n    <Price>{sidedish.price.formattedValue}</Price>\n  </PickerButton>\n)\n","import { observable } from 'mobx'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ID[]\n  onConfirm(): Promise<void>\n  enabled: boolean\n}\n\nexport const CartOrderButton: React.SFC<IProps> = ({\n  selection,\n  onConfirm,\n}) => {\n  const isConfirming = observable.box(false)\n\n  return (\n    <Observer>\n      {() => (\n        <PrimaryButton\n          className=\"modal__body__button\"\n          disabled={isConfirming.get()} /*!cartFood.isValid*/\n          data-testid=\"cartOrderButton\"\n          onClick={async () => {\n            isConfirming.set(true)\n            await onConfirm()\n            isConfirming.set(false)\n          }}\n        >\n          {i18n\n            .plural({\n              value: selection.length,\n              0: 'Order without sidedish',\n              one: 'Order with this sidedish',\n              other: 'Order with # sidedishes',\n            })\n            .toLocaleUpperCase()}\n        </PrimaryButton>\n      )}\n    </Observer>\n  )\n}\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { GCartView } from '../../graph/types'\n\nimport { TRootModel } from '../../models/RootModel'\nimport { CartDiscounts } from './CartDiscounts'\nimport { CartItem } from './CartItem'\nimport { CartTotals } from './CartTotals'\n\ninterface IProps {\n  order: GCartView.Order\n  rootModel: TRootModel\n}\n\nexport const CartContents: React.SFC<IProps> = ({ order, rootModel }) => (\n  <div className=\"cart__items__container\">\n    <div className=\"cart__items__container__content\">\n      <Observer>\n        {() =>\n          order.items.map(item => (\n            <CartItem\n              key={item.id}\n              item={item}\n              isActive={rootModel.order.lastActiveRecipeId === item.recipe.id}\n              onEdit={() => rootModel.order.setUsedRecipeId(item.recipe.id)}\n            />\n          ))\n        }\n      </Observer>\n      <CartDiscounts order={order} />\n      <CartTotals order={order} />\n    </div>\n  </div>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { GCartView } from '../../graph/types'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nexport const CartDiscounts: React.SFC<IProps> = ({ order }) =>\n  order.discounts && order.discounts.length > 0 ? (\n    <div>\n      {order.discounts.map(\n        ({ code, description, price: { formattedValue } }) => (\n          <div key={code} className=\"cart__item__summary\">\n            <div className=\"cart__item__summary__label\">{description}</div>\n            <div className=\"cart__item__summary__price\">{formattedValue}</div>\n          </div>\n        ),\n      )}\n      <div className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">\n          <Trans>Total discount</Trans>\n        </div>\n        <div className=\"cart__item__summary__price\">\n          {order.totalDiscount.formattedValue}\n        </div>\n      </div>\n    </div>\n  ) : null\n","import './CartItem.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Desktop } from '../../common/Responsive'\nimport { GOrder } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { EditCartItemButton } from './EditCartItemButton'\nimport { RemoveCartItemButton } from './RemoveCartItemButton'\n\ninterface IProps {\n  item: GOrder.Items\n  isActive: boolean\n  onEdit(): void\n}\n\nconst EditButtonsContainerStyled = styled.div`\n  flex: 0 0 auto;\n`\n\nconst CartItemStyled = styled.div`\n  width: 100%;\n  min-height: 3rem;\n  color: #1d1d1d;\n  margin: 0 0 0.4rem 0;\n  padding: 0.2rem;\n  background: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'rgba(255, 255, 255, 0.8)'};\n  text-align: left;\n  display: flex;\n`\n\nexport const CartItem: React.SFC<IProps> = ({ item, isActive, onEdit }) => (\n  <CartItemStyled isActive={isActive}>\n    <EditButtonsContainerStyled>\n      <RemoveCartItemButton itemId={item.id} enabled={!item.automatic} />\n\n      <Desktop>\n        <EditCartItemButton\n          itemId={item.id}\n          enabled={item.recipe.sideDishCount !== 0 && !item.automatic}\n          onClick={onEdit}\n        />\n      </Desktop>\n    </EditButtonsContainerStyled>\n\n    <div className=\"cart__item__description\">\n      <div\n        className=\"cart__item__item__name\"\n        data-testid={`cardItem__Name__${item.recipe.id}`}\n      >\n        {item.recipe.nameLabel}\n      </div>\n      <div\n        className=\"cart__item__item__side__dish\"\n        data-testid={`cardItem__SideDish__${item.recipe.id}`}\n      >\n        {item.sideDishes.length > 0\n          ? `+ ${item.sideDishes\n              .map(({ recipe }) => recipe.nameLabel)\n              .join(',')}`\n          : item.recipe.sideDishCount > 0 && (\n              <span>{i18n.t`Without sidedish`.toLocaleLowerCase()}</span>\n            )}\n      </div>\n    </div>\n\n    <div\n      className=\"cart__item__item__price\"\n      data-testid={`cardItem__Price__${item.id}`}\n    >\n      {item.automatic ? i18n.t`For free` : item.price.formattedValue}\n    </div>\n  </CartItemStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n  onClick(): void\n}\n\nexport const EditCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  onClick,\n  ...props\n}) => {\n  const button = <CartItemButton icon=\"edit\" color=\"#d9a700\" {...props} />\n  return props.enabled ? (\n    <Link\n      to={`/order/change/${itemId}`}\n      onClick={onClick}\n      data-testid={`editCartItemButton__${itemId}`}\n    >\n      {button}\n    </Link>\n  ) : (\n    button\n  )\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n}\n\nexport const RemoveCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  enabled,\n}) => (\n  <WithRoot\n    render={root => (\n      <CartItemButton\n        icon=\"delete\"\n        color=\"#99230e\"\n        enabled={enabled}\n        data_testid={`removeCartItemButton`}\n        onClick={() => root.order.removeItemFromCart(itemId)}\n      />\n    )}\n  />\n)\n","import Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GCartView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nconst CartItemSummaryTotalThemed = styled.div`\n  background: ${({ theme }) =>\n    Color(theme.primary)\n      .alpha(0.7)\n      .hsl()\n      .string()} !important;\n`\n\nexport const CartTotals: React.SFC<IProps> = ({ order }) => (\n  <div>\n    {order.coverPrice && order.coverPrice.value ? (\n      <div key=\"casePrice\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Covers`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.coverPrice.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    {order.transportFee && order.transportFee.value ? (\n      <div key=\"transportFee\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Delivery`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.transportFee.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    <CartItemSummaryTotalThemed\n      key=\"totalPrice\"\n      className=\"cart__item__summary cart__item__summary__total\"\n    >\n      <div className=\"cart__item__summary__label\">{i18n.t`Total`}</div>\n      <div\n        className=\"cart__item__summary__price\"\n        data-testid={`cardItemSummary__Price`}\n      >\n        {order.totalSum.formattedValue}\n      </div>\n    </CartItemSummaryTotalThemed>\n  </div>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { i18n } from '../../i18n'\n\nconst CartIsEmptyThemed = styled.span`\n  color: ${({ theme }) => theme.secondary};\n`\n\nexport const CartIsEmpty = () => (\n  <CartIsEmptyThemed\n    className=\"cart__column__cart__empty__label\"\n    data-testid=\"cartIsEmpty\"\n  >\n    {`${i18n.t`Cart is empty`}...`}\n  </CartIsEmptyThemed>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForItem } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { OrderCartForItemQuery } from '../../models/OrderModel.graphql'\nimport { TRootModel } from '../../models/RootModel'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  root: TRootModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForItem.Query,\n  GOrderCartForItem.Variables\n>(OrderCartForItemQuery)\n\nexport const ChangeCartModal: React.SFC<IProps> = ({ root }) => (\n  <Route\n    path=\"/order/change/:itemId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ itemId: match.params.itemId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <CartModal\n            recipe={data.item && data.item.recipe}\n            initialSelection={\n              data.item\n                ? (data.item.sideDishes.map(\n                    RM.path(['recipe', 'id']),\n                  ) as string[])\n                : []\n            }\n            onConfirm={sideDishes =>\n              root.order.updateItem(match.params.itemId, sideDishes)\n            }\n            onClose={() => history.goBack()}\n            isLoading={loading}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import './CategoryNavigator.css'\n\nimport classNames from 'classnames'\nimport React, { Component } from 'react'\nimport Scroll from 'react-scroll'\nimport Swipeable from 'react-swipeable'\nimport Truncate from 'react-truncate'\nimport { compose, withState } from 'recompose'\n\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenuCategory.Fragment>\n}\n\ninterface IInnerProps extends IProps {\n  setActiveCategoryIndex(index: number): void\n  activeCategoryIndex: number\n}\n\nclass ContainerByPlatform extends Component {\n  state = { scroll: 0 }\n  ref: Maybe<HTMLBaseElement> = null\n  onMounted = ref => {\n    this.ref = ref\n  }\n  onSwiping = (ev, deltaX) => (this.ref!.scrollLeft += deltaX / 5)\n  onSwiped = () => this.setState({ scroll: this.ref!.scrollLeft })\n  render() {\n    return (\n      <>\n        <Desktop>\n          {isDesktop =>\n            isDesktop ? (\n              <div className=\"category__navigator\">{this.props.children}</div>\n            ) : null\n          }\n        </Desktop>\n        <Mobile>\n          <Swipeable\n            className=\"category__navigator category__navigator__nowrap\"\n            onSwiping={this.onSwiping}\n            onSwiped={this.onSwiped}\n            innerRef={this.onMounted}\n          >\n            {this.props.children}\n          </Swipeable>\n        </Mobile>\n      </>\n    )\n  }\n}\n\nexport const CategoryNavigator: React.SFC<IProps & IInnerProps> = ({\n  categories,\n  setActiveCategoryIndex,\n  activeCategoryIndex,\n}) => (\n  <ContainerByPlatform>\n    {categories.length === 0\n      ? null\n      : categories.map((category, idx) => (\n          <Scroll.Link\n            to={category.nameLabel}\n            key={category.id}\n            className={classNames('category__navigator__scroll__link', {\n              active: activeCategoryIndex === idx,\n            })}\n            onSetActive={() => setActiveCategoryIndex(idx)}\n            offset={-168}\n            smooth={true}\n            spy={true}\n            data-testid={`categoryNavigatorScrollLink__${category.id}`}\n          >\n            <div className=\"category__navigator__scroll__link__circle\">\n              <span className={`flaticon-${category.pictogram}`} />\n            </div>\n            <div className=\"category__navigator__scroll__link__description\">\n              <Truncate lines={2}>{category.nameLabel}</Truncate>\n            </div>\n          </Scroll.Link>\n        ))}\n  </ContainerByPlatform>\n)\n\nconst decorate = compose<IInnerProps, IProps>(\n  withState('activeCategoryIndex', 'setActiveCategoryIndex', 0),\n)\n\nexport default decorate(CategoryNavigator)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenu } from '../../graph/types'\nimport { TRootModel } from '../../models/RootModel'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenu.WareCategories>\n  inCart: { [recipeId: string]: number }\n  orderItemCount: number\n  shouldUpdate: boolean\n  rootModel: TRootModel\n}\n\nconst FoodMenuStyled = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n`\n\nconst FoodMenuListStyled = styled.div`\n  ${mediaDesktop`\n    margin: 0 1.4rem 1rem 1.6rem;\n    padding: 2rem 0 2rem 0;\n  `};\n  ${mediaMobile`\n    margin: 0 0.7rem 1rem 0.7rem;\n    padding: 0 0 4rem 0;\n  `};\n`\n\nexport class FoodMenu extends React.Component<IProps> {\n  shouldComponentUpdate({ shouldUpdate }: IProps) {\n    return shouldUpdate\n  }\n  orderLimitReached() {\n    const {\n      orderItemCount,\n      rootModel: { config },\n    } = this.props\n    return orderItemCount >= config.orderItemsMax\n  }\n  render() {\n    const {\n      categories,\n      inCart,\n      rootModel: { order, user },\n    } = this.props\n    const canAddToCart = !this.orderLimitReached()\n    return (\n      <FoodMenuStyled>\n        <FoodMenuListStyled>\n          {categories.length === 0 ? (\n            <h3>\n              <Trans>Food menu is empty. We are sorry.</Trans>\n            </h3>\n          ) : (\n            <Observer>\n              {() =>\n                categories.map(category => (\n                  <FoodCategory key={category.id} category={category}>\n                    {category.recipes.map(recipe => (\n                      <FoodMenuItem\n                        key={recipe.id}\n                        recipe={recipe}\n                        inCart={inCart[recipe.id] || 0}\n                        isActive={order.lastActiveRecipeId === recipe.id}\n                        canAddToCart={canAddToCart}\n                        onClick={() => {\n                          if (canAddToCart) {\n                            order.setUsedRecipeId(recipe.id)\n                          } else {\n                            user.showOrderLimit()\n                          }\n                        }}\n                        onPrefetch={() => {\n                          if (recipe.sideDishCount > 0) {\n                            order.prefetchFood(recipe.id)\n                          }\n                        }}\n                      />\n                    ))}\n                  </FoodCategory>\n                ))\n              }\n            </Observer>\n          )}\n        </FoodMenuListStyled>\n      </FoodMenuStyled>\n    )\n  }\n}\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\nimport { FoodInCart } from './types'\n\ninterface IProps {\n  category: GFoodMenuCategory.Fragment\n  foodInCart?: FoodInCart\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.SFC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default FoodCategory\n","import './FoodMenuItem.css'\n\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { GFoodMenuRecipe } from '../../graph/types'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { LinkToCart } from './LinkToCart'\n\ninterface IProps {\n  recipe: GFoodMenuRecipe.Fragment\n  inCart: number\n  isActive: boolean\n  onClick(): void\n  onPrefetch(): void\n  canAddToCart: boolean\n}\n\nconst FoodMenuItemStyled = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  position: relative;\n  min-height: 6rem;\n  &:hover {\n    background-color: #c9e8d7;\n  }\n  background-color: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'white'};\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItemCount = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n  float: left;\n  position: absolute;\n  left: -1.2rem;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  border-radius: 1.8rem;\n  font-size: 0.9rem;\n  ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n`\n\nconst FoodMenuItem: React.SFC<IProps> = ({\n  recipe,\n  inCart,\n  onPrefetch,\n  isActive,\n  onClick,\n  canAddToCart,\n}) => (\n  <LinkToCart\n    recipeId={recipe.id}\n    hasSidedish={recipe.sideDishCount > 0}\n    canAddToCart={canAddToCart}\n    onClick={onClick}\n    data-testid={`foodMenuItem__${recipe.id}`}\n  >\n    <FoodMenuItemStyled onMouseEnter={onPrefetch} isActive={isActive}>\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {inCart > 0 ? <FoodMenuItemCount>{`${inCart}x`}</FoodMenuItemCount> : ''}\n      <h4>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </FoodMenuItemStyled>\n  </LinkToCart>\n)\n\nexport default FoodMenuItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { WithRoot } from '../../common/WithRoot'\n\nimport { Mobile } from '../../common/Responsive'\n\ninterface IProps {\n  recipeId: string\n  canAddToCart: boolean\n  hasSidedish: boolean\n  onClick(): void\n}\n\nconst LinkStyled = styled(Link)`\n  color: inherit;\n  &:visited div {\n    border: inherit;\n  }\n`\n\nexport const LinkToCart: React.SFC<IProps> = ({\n  recipeId,\n  hasSidedish,\n  canAddToCart,\n  onClick,\n  children,\n}) => {\n  if (!canAddToCart) {\n    return <div onClick={onClick}>{children}</div>\n  }\n  if (hasSidedish) {\n    return (\n      <LinkStyled to={{ pathname: `/order/add/${recipeId}` }} onClick={onClick}>\n        {children}\n      </LinkStyled>\n    )\n  }\n  return (\n    <WithRoot\n      render={({ order }) => (\n        <Mobile>\n          {isMobile => (\n            <div\n              onClick={() => {\n                onClick()\n                isMobile\n                  ? order.addFromRecipeMobile(recipeId)\n                  : order.addFromRecipe(recipeId)\n              }}\n            >\n              {children}\n            </div>\n          )}\n        </Mobile>\n      )}\n    />\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  field: FieldType\n  defaultValue?: boolean\n  validate?(value: boolean): string | null\n}\n\nconst CheckboxContainerStyled = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n`\n\nconst CheckboxStyled = styled(Input)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: white;\n  border: 1px solid;\n  border-color: ${({ invalid }: { invalid: boolean }) =>\n    invalid ? 'red' : '#c5c5c5'};\n  width: 2rem;\n  height: 2rem;\n  min-width: 2rem;\n  border-radius: 0.25rem;\n  position: relative;\n  margin: 0;\n  outline: none;\n  &:checked {\n    background-color: white;\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: #1d1d1d;\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  margin: 0 0 0 0.8rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.SFC<IProps> = ({\n  field,\n  defaultValue = false,\n  validate,\n  children,\n  ...props\n}) => (\n  <Field field={field} defaultValue={defaultValue} validate={validate}>\n    {fieldApi => (\n      <CheckboxContainerStyled>\n        <CheckboxStyled\n          type=\"checkbox\"\n          value={fieldApi.value}\n          onChange={checked => fieldApi.setValue(checked.target.checked)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n          {...props}\n        />\n        <LabelStyled>{children}</LabelStyled>\n      </CheckboxContainerStyled>\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nconst emailRx = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\nexport const OrderEmailInputValidator = value => {\n  const email = value.trim()\n  if (email === '') {\n    return i18n.t`E-mail is mandatory`\n  }\n  if (!emailRx.test(email)) {\n    return i18n.t`E-mail format is not valid`\n  }\n  return null\n}\n\nexport const OrderEmailInput: React.SFC = () => (\n  <FormGroup>\n    <FormTextInput\n      field=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder=\"E-mail\"\n      showFeedback={true}\n      validate={OrderEmailInputValidator}\n      data-testid=\"orderEmailInput\"\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n        validate={value =>\n          value.trim() === '' ? i18n.t`First name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__FirstName\"\n      />\n      <FormTextInput\n        field=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n        validate={value =>\n          value.trim() === '' ? i18n.t`Last name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__LastName\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone is mandatory` : null\n\nexport const OrderPhonePrefixInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone prefix is mandatory` : null\n\nexport const OrderPhoneInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"phonePrefix\"\n        autoComplete=\"tel-country-code\"\n        placeholder=\"+\"\n        validate={OrderPhonePrefixInputValidator}\n      />\n      <FormTextInput\n        field=\"phone\"\n        type=\"tel\"\n        autoComplete=\"tel-national\"\n        placeholder={i18n.t`Phone`}\n        validate={OrderPhoneInputValidator}\n        style={{ width: '55%' }}\n        data-testid=\"orderPhoneInput__Phone\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { KeyboardEvent, useCallback, useRef, useState } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport {\n  GOrderPromoCodes,\n  GPromoCode,\n  MAddOrderPromo,\n  MRemoveOrderPromo,\n} from '../../graph/types'\nimport { useGuardedMutation } from '../../hooks/useGuardedMutation'\nimport { i18n } from '../../i18n'\nimport {\n  AddOrderPromoMutation,\n  OrderPromoCodesQuery,\n  RemoveOrderPromoMutation,\n} from './OrderPromoInput.graphql'\n\ntype TPromoCode = GPromoCode.Fragment\n\ninterface IProps {\n  codes: ReadonlyArray<TPromoCode>\n  onCodeAdd(codeInput: string): Promise<void>\n  onCodeRemove(codeId: ID): void\n  autoSubmitAfterTimeout?: number\n}\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport function OrderPromoInputUI({\n  codes,\n  onCodeAdd,\n  onCodeRemove,\n  autoSubmitAfterTimeout = 2000,\n}: IProps) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isValidating, setValidating] = useState(false)\n\n  const addCode = useCallback(\n    () => {\n      if (inputRef.current && !inputRef.current.disabled) {\n        const code = inputRef.current.value.trim()\n        if (code.length > 0) {\n          setValidating(true)\n          inputRef.current.disabled = true\n          inputRef.current.value = i18n.t`Validating promo code ${code}...`\n          onCodeAdd(code)\n            .then(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.value = ''\n              }\n            })\n            .catch(() => {\n              if (inputRef.current) {\n                inputRef.current.value = code\n              }\n            })\n            .finally(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.disabled = false\n                inputRef.current.focus()\n              }\n            })\n        }\n      }\n    },\n    [onCodeAdd],\n  )\n\n  const onChange = useDebounceCallback(addCode, autoSubmitAfterTimeout)\n\n  const onKeyDown = useCallback((ev: KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === 'Enter') {\n      addCode()\n      ev.preventDefault()\n    }\n  }, [])\n\n  return (\n    <FormGroup>\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          disabled={isValidating}\n          placeholder={i18n.t`Promo codes`}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          onBlur={addCode}\n          onPaste={addCode}\n        />\n      </InputGroup>\n      <CodesPanel>\n        {codes.map(({ id, code }) => (\n          <SecondaryButton key={id} onClick={() => onCodeRemove(id)}>\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  )\n}\n\nconst OrderPromoInput: React.FC = () => {\n  const { order } = useRoot()\n\n  const { data } = useQuery<GOrderPromoCodes.Query, GOrderPromoCodes.Variables>(\n    OrderPromoCodesQuery,\n    {\n      suspend: false,\n      variables: { orderId: order.orderId! },\n    },\n  )\n\n  const addCodeMutation = useGuardedMutation<\n    MAddOrderPromo.Mutation,\n    MAddOrderPromo.Variables\n  >(AddOrderPromoMutation, {\n    refetchQueries: ['GCartView'],\n  })\n\n  const onCodeAdd = useCallback(async (code: string) => {\n    if (!order.orderId) {\n      return\n    }\n    const result = await addCodeMutation({\n      orderId: order.orderId!,\n      code: code,\n    })\n    if (result && result.addOrderPromoCode.userErrors.length) {\n      order.submitFailed(result.addOrderPromoCode.userErrors)\n    }\n  }, [])\n\n  const removeCodeMutation = useGuardedMutation<\n    MRemoveOrderPromo.Mutation,\n    MRemoveOrderPromo.Variables\n  >(RemoveOrderPromoMutation, { refetchQueries: ['GCartView'] })\n\n  const onCodeRemove = (codeId: ID) => {\n    if (order.orderId) {\n      removeCodeMutation({ codeId, orderId: order.orderId })\n    }\n  }\n\n  return (\n    <OrderPromoInputUI\n      codes={data && data.order ? data.order.promoCodes : []}\n      onCodeAdd={onCodeAdd}\n      onCodeRemove={onCodeRemove}\n    />\n  )\n}\n\nexport default OrderPromoInput\n","import { ApolloError } from 'apollo-client'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(RM.propEq('showToUser', true))\n      if (userErrors.length === 0) {\n        window.alert(defaultMessage)\n      } else {\n        window.alert(userErrors.map(RM.prop('message')).join('\\n'))\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        window.alert(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      return result.data as TData\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors')\n}\n","import gql from 'graphql-tag'\n\nimport { PromoCodeFragment } from '../../graph/fragments.graphql'\n\nexport const OrderPromoCodesQuery = gql`\n  query GOrderPromoCodes($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const AddOrderPromoMutation = gql`\n  mutation MAddOrderPromo($orderId: ID!, $code: String!) {\n    addOrderPromoCode(order: $orderId, promoCode: $code) {\n      userErrors: errors\n      order {\n        id\n        promoCodes {\n          ...GPromoCode\n        }\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const RemoveOrderPromoMutation = gql`\n  mutation MRemoveOrderPromo($orderId: ID!, $codeId: ID!) {\n    removeOrderPromoCode(order: $orderId, promoCode: $codeId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n","import './OrderPaymentMethod.css'\n\nimport { DateFormat, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\n\nexport const OrderTimeButtons: React.FC = () => {\n  const { order } = useRoot()\n\n  return useObserver(() => (\n    <div className=\"order__payment__method\">\n      <SelectButtonThemed\n        data-testid=\"orderTimeButtonNow\"\n        selected={order.deliverAt === undefined}\n        onClick={() => order.setDeliverAt(undefined)}\n      >\n        {i18n.t`When possible`}\n      </SelectButtonThemed>\n      <SelectButtonThemed\n        data-testid=\"orderTimeButtonLater\"\n        selected={order.deliverAt !== undefined}\n        onClick={order.openTimePicker}\n      >\n        {order.deliverAt ? (\n          <Trans>\n            at{' '}\n            <DateFormat\n              value={order.deliverAt}\n              format={{ weekday: 'long', hour: 'numeric', minute: 'numeric' }}\n            />\n          </Trans>\n        ) : (\n          i18n.t`Choose time`\n        )}\n      </SelectButtonThemed>\n    </div>\n  ))\n}\n","import React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\nimport { IOrderFormState } from './OrderFormSetup'\nimport { MAX_LENGTH } from './OrderNoteInput'\n\ninterface IProps {\n  onFill(values: IOrderFormState): void\n}\n\nexport const OrderFormAutoFill: React.SFC<IProps> = ({ onFill }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <SecondaryButton\n      onClick={() => {\n        const faker: Faker.FakerStatic = require('faker')\n        faker.locale = 'cz'\n        onFill({\n          firstname: faker.name.firstName(),\n          lastname: faker.name.lastName(),\n          email: faker.internet.email(),\n          phone: faker.phone.phoneNumberFormat(0),\n          phonePrefix: '+420',\n          note: faker.lorem.sentence().slice(0, MAX_LENGTH - 1),\n          payment: PaymentGateEnum.Gopay,\n          agreements: [],\n        })\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  ) : null\n","import { DateFormat } from '@lingui/react'\nimport { useEffectOnce } from '@speedlo/hooks'\nimport {\n  closestIndexTo,\n  eachDayOfInterval,\n  isEqual,\n  startOfDay,\n} from 'date-fns'\nimport { isWithinInterval } from 'date-fns/fp'\nimport React, { Fragment, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { createTimeSteps } from './createTimeSteps'\nimport { TimePickerButton } from './TimePickerButton'\n\ninterface IProps {\n  minDate: Date\n  maxDate: Date\n  minuteStep: number\n  onStepChange(step: Date): void\n  initialTime?: Date\n  filterIntervals?: Interval[]\n}\n\nconst TimePickerContainer = styled.div`\n  margin-top: 1rem;\n`\n\nconst TimePickerDay = styled.div`\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: left;\n  margin: 0 0 0.2rem 0.2rem;\n`\n\nexport const TimePicker: React.FC<IProps> = ({\n  minDate,\n  maxDate,\n  minuteStep,\n  onStepChange,\n  initialTime,\n  filterIntervals = [],\n}) => {\n  const steps = useMemo(\n    () => {\n      const allSteps = createTimeSteps(minDate, maxDate, minuteStep)\n      if (filterIntervals.length) {\n        return allSteps.filter(step =>\n          filterIntervals.some(isWithinInterval(step)),\n        )\n      }\n      return allSteps\n    },\n    [minDate, maxDate, minuteStep, filterIntervals],\n  )\n\n  const days = useMemo(\n    () => {\n      return eachDayOfInterval({ start: minDate, end: maxDate })\n    },\n    [minDate, maxDate],\n  )\n\n  const [stepIdx, setStepIdx] = useState(0)\n\n  useEffect(\n    () => {\n      if (initialTime) {\n        setStepIdx(closestIndexTo(initialTime, steps))\n      }\n    },\n    [initialTime],\n  )\n\n  useEffectOnce(() => {\n    onStepChange(steps[stepIdx])\n  })\n\n  return (\n    <TimePickerContainer>\n      {days.map(day => (\n        <Fragment key={day.getDate()}>\n          <TimePickerDay>\n            <DateFormat\n              value={day}\n              format={{ month: 'long', day: 'numeric', weekday: 'long' }}\n            />\n          </TimePickerDay>\n          {steps.map((step, idx) =>\n            isEqual(day, startOfDay(step)) ? (\n              <TimePickerButton\n                key={step.getTime()}\n                time={step}\n                isSelected={idx === stepIdx}\n                canBeSelected={true}\n                onClick={() => {\n                  setStepIdx(idx)\n                  onStepChange(step)\n                }}\n              />\n            ) : null,\n          )}\n        </Fragment>\n      ))}\n    </TimePickerContainer>\n  )\n}\n","import { addMinutes, getMinutes, subMinutes } from 'date-fns'\n\nexport function createTimeSteps(start: Date, end: Date, minuteStep: number) {\n  let current = timeClampUp(start, minuteStep)\n  const steps = [current]\n  while (current < end) {\n    current = addMinutes(current, minuteStep)\n    steps.push(current)\n  }\n  return steps\n}\n\nexport function timeClampUp(time: Date, minuteStep: number) {\n  return addMinutes(timeClampDown(time, minuteStep), minuteStep)\n}\n\nexport function timeClampDown(time: Date, minuteStep: number) {\n  return subMinutes(time, getMinutes(time) % minuteStep)\n}\n","import React from 'react'\nimport { ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PickerButton } from '../../common/PickerButton'\nimport { formatTime } from '../../helpers/formats'\n\ninterface IProps extends ButtonProps {\n  time: Date\n  isSelected: boolean\n  canBeSelected: boolean\n}\n\nconst Time = styled.div`\n  font-size: 1.2rem;\n`\n\nexport const TimePickerButton: React.FC<IProps> = ({\n  time,\n  ...buttonProps\n}) => (\n  <PickerButton\n    size=\"xs\"\n    outline={true}\n    width=\"10rem\"\n    data-testid={`timePickerButton__${time.getTime()}`}\n    {...buttonProps}\n  >\n    <Time>{formatTime(time)}</Time>\n  </PickerButton>\n)\n","import gql from 'graphql-tag'\n\nexport const OrderTimePickerQuery = gql`\n  query GOrderTimePicker($branchId: ID!) {\n    companyBranch(id: $branchId) {\n      id\n      isOpen\n      businessHours {\n        id\n        closeAt\n        openAt\n        closed\n      }\n      defaultDeliveryTime\n      defaultPickupTime\n      willOpenAt\n      willCloseAt\n    }\n  }\n`\n","import React from 'react'\nimport { Redirect } from 'react-router'\n\nimport { TOrderModel } from '../models/OrderModel'\nimport { WithRoot } from './WithRoot'\n\ninterface IProps {\n  render(root: TOrderModel): ReactNode\n  observe?: boolean\n  redirect?: boolean\n}\n\nexport const WithOrder: React.SFC<IProps> = ({\n  render,\n  observe,\n  redirect = false,\n}) => (\n  <WithRoot\n    observe={observe}\n    render={({ order }) => {\n      return order.hasOrder ? (\n        render(order)\n      ) : redirect ? (\n        <Redirect to=\"/\" />\n      ) : null\n    }}\n  />\n)\n","import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import { differenceInMinutes } from 'date-fns'\nimport { PureComponent } from 'react'\n\nimport { GCompanyBranchStatus } from '../graph/types'\n\nexport type TStatus = GCompanyBranchStatus.Fragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\nexport interface IShopStatusRender {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\ninterface IProps {\n  status: TStatus\n  render(opts: IShopStatusRender): ReactNode\n  openThresholdInMinutes?: number\n  closeThresholdInMinutes?: number\n  timedUpdate?: boolean\n  now?: Date\n}\n\nexport class ShopStatus extends PureComponent<IProps> {\n  static defaultProps = {\n    openThresholdInMinutes: 30,\n    closeThresholdInMinutes: 30,\n  }\n  timer: Maybe<NodeJS.Timer> = null\n  componentDidMount() {\n    if (!this.props.timedUpdate) {\n      return\n    }\n    const update = () => {\n      this.forceUpdate()\n      this.timer = setTimeout(update, 30 * 1000)\n    }\n    update()\n  }\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  }\n  render() {\n    const {\n      status,\n      render,\n      now = new Date(),\n      openThresholdInMinutes,\n      closeThresholdInMinutes,\n    } = this.props\n\n    const { isOpen, willCloseAt, willOpenAt } = status\n\n    let decision: TStatusDecision\n\n    if (isOpen) {\n      decision = isSoon(willCloseAt, closeThresholdInMinutes!, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openThresholdInMinutes!, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n\n    return render({\n      decision,\n      get openingIn() {\n        return willOpenAt ? differenceInMinutes(willOpenAt, new Date()) : 0\n      },\n      get closingIn() {\n        return willCloseAt ? differenceInMinutes(willCloseAt, new Date()) : 0\n      },\n    })\n  }\n}\n\nfunction isSoon(time: Maybe<string>, threshold: number, now: Date) {\n  return time ? Math.abs(differenceInMinutes(time, now)) <= threshold : false\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from '../models/MapModel'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n}\n\nconst MapContainerStyled = styled.div`\n  border-radius: 0 0 0.5rem 0.5rem;\n  overflow: hidden;\n  height: calc(100% - 3.75rem);\n`\n\nconst MapElement = styled.div`\n  height: 100%;\n  position: relative;\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nconst getMapOptions = (): google.maps.MapOptions => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    zoomControlOptions: {\n      position: google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nexport const BaseMap: React.FC<IBaseMapProps> = ({ model, children }) => {\n  return useObserver(() => (\n    <BaseMapContainer\n      containerElement={\n        <MapContainerStyled\n          className=\"map__container\"\n          data-testid=\"googleMap\"\n        />\n      }\n      mapElement={<MapElement />}\n    >\n      <GoogleMap\n        ref={model.setMapRef}\n        zoom={model.zoom}\n        center={model.center}\n        onCenterChanged={model.updatePosition}\n        onZoomChanged={model.updateZoom}\n        onClick={model.onClick}\n        options={getMapOptions()}\n      >\n        {children}\n      </GoogleMap>\n    </BaseMapContainer>\n  ))\n}\n","import React from 'react'\n\nimport { GAddress } from '../graph/types'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address?: GAddress.Fragment\n}\n\nexport const ShopAddress: React.SFC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import './Modal.css'\n\nimport React from 'react'\nimport {\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalProps,\n} from 'reactstrap'\n\ninterface IProps extends ModalProps {\n  isOpen: boolean\n  headerText: string\n  onClose?(): void\n}\n\nexport const AlertModal: React.SFC<IProps> = ({\n  isOpen,\n  headerText,\n  onClose,\n  children,\n  ...modalProps\n}) => (\n  <Modal\n    isOpen={isOpen}\n    toggle={onClose}\n    className=\"modal__container\"\n    {...modalProps}\n    data-testid=\"alertModal\"\n  >\n    <ModalHeader tag={Container} toggle={onClose} className=\"modal__header\">\n      <span>{headerText}</span>\n    </ModalHeader>\n    <ModalBody className=\"modal__body\">\n      <div className=\"modal__body__content\">{children}</div>\n    </ModalBody>\n  </Modal>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  className: string\n  imageName: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.SFC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import React from 'react'\nimport { Field, FieldProps } from 'react-form'\nimport { FormFeedback, Input, InputProps } from 'reactstrap'\n\ninterface IProps\n  extends Omit<FieldProps<string>, 'render' | 'children'>,\n    Omit<InputProps, 'defaultValue'> {\n  showFeedback?: boolean\n}\n\nexport const FormTextInput: React.SFC<IProps> = ({\n  field,\n  validate,\n  showFeedback = false,\n  ...inputProps\n}) => (\n  <Field\n    field={field}\n    validate={validate}\n    render={fieldApi => (\n      <>\n        <Input\n          {...inputProps}\n          value={fieldApi.value}\n          onChange={e => fieldApi.setValue(e.target.value)}\n          onBlur={() => fieldApi.setTouched(true)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n        />\n        {showFeedback && <FormFeedback>{fieldApi.error}</FormFeedback>}\n      </>\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PrimaryRoutedButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFinishView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  finish: GFinishView.Query\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.SFC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => (\n  <>\n    <Desktop>\n      {(androidApp || iosApp) && (\n        <div className=\"finish__view__apps__propagation\">\n          <div className=\"finish__view__apps__propagation__header\">\n            <Trans>What about mobile app?</Trans>\n          </div>\n          <div className=\"finish__view__apps__propagation__description\">\n            <Trans>\n              We have prepared mobile app, so you could order from anywhere!\n            </Trans>\n          </div>\n\n          {androidApp && (\n            <a href={androidApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                Google Play\n              </Button>\n            </a>\n          )}\n\n          {iosApp && (\n            <a href={iosApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                App Store\n              </Button>\n            </a>\n          )}\n        </div>\n      )}\n      <CenteredButtonContainer>\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </CenteredButtonContainer>\n    </Desktop>\n\n    <Mobile>\n      <div\n        className=\"finish__view__submit__line\"\n        style={{ textAlign: 'center' }}\n      >\n        <div className=\"finish__view__submit__line__strip\" />\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </div>\n    </Mobile>\n  </>\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GFinishView } from '../../graph/types'\n\nimport { QueryFinishView } from './FinishView.graphql'\n\ninterface IProps {\n  render(result: GFinishView.Query): ReactNode\n}\n\nexport const FinishViewLoader: React.SFC<IProps> = ({ render }) => (\n  <WithOrder\n    redirect={true}\n    render={order => (\n      <QueryFinishView\n        variables={{\n          branchId: order.branchId!,\n          orderId: order.orderId!,\n        }}\n        render={data => render(data)}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishViewOrder, PaymentGateEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GFinishViewOrder.Fragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.SFC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = RM.pathEq(['paymentMethod', 'paymentType', 'enum'])\n\nfunction getPaymentInfo({ orderPayments }: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({\n  orderPayments,\n  totalSum,\n}: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: GFinishViewOrder.Items) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishView } from '../../graph/types'\n\ninterface IProps {\n  branch: GFinishView.CompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.SFC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './OrderMethod.css'\n\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { WithRoot } from '../../common/WithRoot'\nimport { DeliveryTypeEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\ninterface IButtonProps {\n  orderModel: TOrderModel\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n  onPrefetch?(): void\n}\n\nconst OrderMethodButton: React.SFC<IButtonProps> = ({\n  orderModel,\n  orderMethod,\n  onChange,\n  onPrefetch,\n  children,\n}) => (\n  <Observer>\n    {() => (\n      <SelectButtonThemed\n        selected={orderModel.orderMethod === orderMethod}\n        onMouseEnter={onPrefetch}\n        onClick={() => {\n          orderModel.useOrderMethod(orderMethod)\n          onChange(orderModel)\n        }}\n        data-testid={`orderMethod-${orderMethod}`}\n        data-testselected={orderModel.orderMethod === orderMethod}\n      >\n        {children}\n      </SelectButtonThemed>\n    )}\n  </Observer>\n)\n\nexport const OrderMethod: React.SFC<IProps> = ({ onChange }) => (\n  <WithRoot\n    observe={false}\n    render={({ order }) => (\n      <div className=\"order__method\">\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Messenger}\n          onChange={onChange || RM.identity}\n        >\n          <span className=\"flaticon-transport\" />\n          {i18n.t`I want to deliver`.toLocaleUpperCase()}\n        </OrderMethodButton>\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Pickup}\n          onChange={onChange || RM.identity}\n          onPrefetch={order.prefetchPickup}\n        >\n          <span className=\"flaticon-restaurant\" />\n          {i18n.t`I'll pick up`.toLocaleUpperCase()}\n        </OrderMethodButton>\n      </div>\n    )}\n  />\n)\n","import './DeliveryMap.css'\n\nimport { when } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { Marker } from 'react-google-maps'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GInitialLocation } from '../../graph/types'\nimport { latLngToGps } from '../../helpers/gps'\nimport { AddressInput } from '../destination/AddressInput'\nimport { AddressSubmit } from './AddressSubmit'\nimport { InitialMapLocationQuery } from './DeliveryMap.graphql'\nimport { DeliveryMapPanning } from './DeliveryMapPanning'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const DeliveryMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { business, order, location } = useRoot()\n  const { data } = useQuery<GInitialLocation.Query>(InitialMapLocationQuery)\n\n  const onSubmit = useCallback(\n    async () => {\n      if (location.branchId) {\n        order.setBranch(location.branchId)\n      }\n      await order.createDeliveryOrder()\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  useDisposable(() =>\n    when(() => business.isValid, location.validateUserLocation),\n  )\n\n  return useObserver(() => (\n    <>\n      <DeliveryMapPanning\n        initialLocation={data ? data.initialLocation.gpsCoordinates : null}\n      />\n      {location.latLng ? (\n        <Marker\n          position={location.latLng}\n          defaultDraggable={true}\n          onDragEnd={({ latLng }) => {\n            location.withUserLocation(latLngToGps(latLng))\n          }}\n        />\n      ) : null}\n      <div className=\"delivery__map__address\">\n        <AddressInput />\n      </div>\n      <div className=\"delivery__map__submit\">\n        <AddressSubmit\n          enabled={location.isDeliveryAddress}\n          onClick={onSubmit}\n          onPrefetch={() => {\n            if (location.branchId) {\n              order.prefetchFoodMenu(location.branchId)\n            }\n          }}\n        />\n      </div>\n    </>\n  ))\n}\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.SFC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { autorun } from 'mobx'\nimport { useDisposable } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { GeoPoint } from '../../../helpers/gps'\nimport { TMapModel } from '../../../models/MapModel'\n\ninterface IProps {\n  gps: GeoPoint | undefined\n  map: TMapModel\n}\n\nexport const MapPanning: React.FC<IProps> = ({ map, gps }) => {\n  useDisposable(\n    () =>\n      autorun(() => {\n        if (map.isReady && gps) {\n          map.panToLocation(gps)\n        }\n      }),\n    [gps],\n  )\n  return null\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { useRoot } from '../../common/WithRoot'\nimport { GCompanyBranchStatus } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nexport const ShopClosingTimeModal: React.FC<IProps> = ({ status }) => {\n  const { user } = useRoot()\n  if (!status) {\n    return null\n  }\n  return (\n    <ShopStatus\n      status={status}\n      render={({ decision, openingIn }) => (\n        <Observer>\n          {() => (\n            <AlertModal\n              isOpen={\n                (decision === 'Closed' || decision === 'OpeningSoon') &&\n                !user.closingTimeAlertHidden\n              }\n              onClose={user.hideClosingTime}\n              headerText={i18n.t`We are closed right now`}\n            >\n              {i18n.t`We're sorry, but we do not accept new orders at this time.`}\n              {decision === 'OpeningSoon' && (\n                <Trans>\n                  You can prepare your order because we are{' '}\n                  <Plural\n                    value={openingIn}\n                    one=\"opening in 1 minute\"\n                    other=\"opening in # minutes\"\n                  />\n                  !\n                </Trans>\n              )}\n            </AlertModal>\n          )}\n        </Observer>\n      )}\n    />\n  )\n}\n","import './ShopHeaderIcons.css'\n\nimport React from 'react'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport logoCommerce01 from './logo-commerce-01.svg'\nimport logoCommerce02 from './logo-commerce-02.svg'\nimport logoDoveze from './logo-doveze.svg'\nimport logoGoPay from './logo-gopay.png'\n\nexport const ShopHeaderIcons = () => (\n  <ColStyle>\n    <img\n      src={logoDoveze}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={logoCommerce02}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={logoCommerce01}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={logoGoPay}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </ColStyle>\n)\n","import { Plural, Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { useRoot } from '../../common/WithRoot'\nimport { GCompanyBranchStatus } from '../../graph/types'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n  deliveryTime: number\n  pickupTime: number\n}\n\nconst StatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nconst StatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.FC<IProps> = ({\n  status,\n  deliveryTime,\n  pickupTime,\n}) => {\n  const { order } = useRoot()\n  if (!status) {\n    return null\n  }\n  return useObserver(() => (\n    <ShopStatus\n      status={status}\n      render={s => {\n        switch (s.decision) {\n          case 'Open':\n            return (\n              <StatusDisplayOpen data-testid=\"statusDisplayOpen\">\n                {order.usingDeliveryOrderMethod ? (\n                  <Trans>We are delivering in {deliveryTime} minutes</Trans>\n                ) : (\n                  <Trans>\n                    We can prepare your order in {pickupTime} minutes\n                  </Trans>\n                )}\n              </StatusDisplayOpen>\n            )\n          case 'OpeningSoon':\n            return (\n              <StatusDisplayClosed>\n                <Plural\n                  value={s.openingIn}\n                  one=\"Opening in 1 minute\"\n                  other=\"Opening in # minutes\"\n                />\n              </StatusDisplayClosed>\n            )\n          case 'ClosingSoon':\n            return (\n              <StatusDisplayOpen>\n                <Plural\n                  value={s.closingIn}\n                  one=\"Closing in 1 minute\"\n                  other=\"Closing in # minutes\"\n                />\n              </StatusDisplayOpen>\n            )\n          case 'Closed':\n            return (\n              <StatusDisplayClosed>\n                <Trans>Closed</Trans>\n              </StatusDisplayClosed>\n            )\n        }\n      }}\n    />\n  ))\n}\n","import './CartView.css'\n\nimport React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartContents } from './CartContents'\nimport { CartIsEmpty } from './CartIsEmpty'\nimport { QueryCartView } from './CartView.graphql'\nimport { ChangeCartModal } from './ChangeCartModal'\n\ninterface IProps {\n  onContentChange?(): void\n}\n\nexport const CartView: React.SFC<IProps> = () => (\n  <WithOrder\n    redirect={true}\n    render={orderModel => (\n      <>\n        <AddToCartModal order={orderModel} />\n        <ChangeCartModal root={orderModel.root} />\n        <QueryCartView\n          variables={{ orderId: orderModel.orderId! }}\n          renderLoading={false}\n          render={({ order }) => (\n            <>\n              {!order || order.countWares === 0 ? (\n                <CartIsEmpty />\n              ) : (\n                <CartContents order={order} rootModel={orderModel.root} />\n              )}\n            </>\n          )}\n        />\n      </>\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { Mobile } from '../../common/Responsive'\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForRecipe } from '../../graph/types'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { OrderCartForRecipeQuery } from '../../models/OrderModel.graphql'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForRecipe.Query,\n  GOrderCartForRecipe.Variables\n>(OrderCartForRecipeQuery)\n\nexport const AddToCartModal: React.SFC<IProps> = ({ order }) => (\n  <Route\n    path=\"/order/add/:recipeId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ recipeId: match.params.recipeId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <Mobile>\n            {isMobile => (\n              <CartModal\n                recipe={data.recipe}\n                onConfirm={sideDishes => {\n                  if (isMobile) {\n                    order.addFromRecipeMobile(match.params.recipeId, sideDishes)\n                    // let the optimistic response happen in this case\n                    return Promise.resolve()\n                  }\n                  return order.addFromRecipe(match.params.recipeId, sideDishes)\n                }}\n                onClose={() => history.goBack()}\n                isLoading={loading}\n              />\n            )}\n          </Mobile>\n        )}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport { observable } from 'mobx'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport '../../common/Modal.css'\nimport { GCartRecipe } from '../../graph/types'\n\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment | undefined\n  initialSelection?: ID[]\n  isLoading: boolean\n  onConfirm(selection: ID[]): Promise<void>\n  onClose(): void\n}\n\nexport const CartModal: React.SFC<IProps> = ({\n  recipe,\n  initialSelection = [],\n  onConfirm,\n  onClose,\n  isLoading,\n}) => {\n  const selection = observable.array<ID>(initialSelection)\n\n  const onConfirmAndClose = async () => {\n    await onConfirm(Array.from(selection))\n    onClose()\n  }\n\n  const onToggleSidedish = (sidedishId: ID) => {\n    if (selection.includes(sidedishId)) {\n      selection.remove(sidedishId)\n    } else {\n      selection.push(sidedishId)\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={true}\n      toggle={onClose}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader toggle={onClose} tag={Container} className=\"modal__header\">\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {isLoading || !recipe ? null : (\n            <>\n              <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n              <span className=\"modal__body__food_description\">\n                {recipe.descriptionLabel}\n              </span>\n              <SidedishPicker\n                recipe={recipe}\n                selection={selection}\n                onToggle={onToggleSidedish}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n            enabled={!isLoading}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps extends ButtonProps {\n  isSelected: boolean\n  canBeSelected: boolean\n  width: string\n}\n\nconst PickerButtonStyled = styled(\n  ({ isSelected, canBeSelected, width, ...props }) => <Button {...props} />,\n)`\n  border-radius: 0.6rem;\n  margin: 0.5rem;\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n  width: ${props => props.width};\n  @media (max-width: 370px) {\n    width: 100%;\n  }\n  &.btn-outline-secondary {\n    color: #2e2e2e;\n    border-color: #d4d4d4;\n  }\n  &.btn-outline-secondary.active {\n    color: white;\n  }\n`\n\nexport const PickerButton: React.FC<IProps> = ({\n  isSelected,\n  canBeSelected,\n  onSelect,\n  children,\n  ...buttonProps\n}) => {\n  return (\n    <PickerButtonStyled\n      disabled={!canBeSelected && !isSelected}\n      isSelected={isSelected}\n      {...buttonProps}\n    >\n      {children}\n    </PickerButtonStyled>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface IButtonProps {\n  color: string\n  enabled?: boolean\n  data_testid?: string\n}\n\ninterface IIconProps {\n  icon: string\n}\n\ninterface IProps extends IButtonProps, IIconProps {\n  onClick?(): void\n}\n\nconst CartItemButtonStyled = styled.div<IButtonProps>`\n  display: inline-block;\n  border-radius: 3rem;\n  background: white;\n  width: 1.8rem;\n  height: 1.8rem;\n  text-align: left;\n  vertical-align: top;\n  padding: 0 0 0 0rem;\n  margin: 0.3rem 0.1rem 0 0.1rem;\n  ${getButtonColor};\n  ${getHoverStyle};\n`\n\nfunction getButtonColor({ color, enabled }: IButtonProps) {\n  const useColor = enabled ? color : '#8d8d8d'\n  return css`\n    color: ${useColor};\n    border: 2px solid ${useColor};\n  `\n}\n\nfunction getHoverStyle({ enabled }: IButtonProps) {\n  return enabled\n    ? css`\n        cursor: pointer;\n        &:hover {\n          background: #c9e8d7;\n          color: #1d1d1d;\n          border-color: #1d1d1d;\n        }\n      `\n    : css`\n        cursor: default;\n      `\n}\n\nconst CartItemButtonIcon = styled.span<IIconProps>`\n  &:before {\n    font-size: 0.8rem;\n    margin-left: 0.36rem;\n  }\n`\n\nexport const CartItemButton: React.SFC<IProps> = ({\n  color,\n  icon,\n  onClick,\n  enabled = true,\n  data_testid,\n}) => (\n  <CartItemButtonStyled\n    color={color}\n    enabled={enabled}\n    onClick={onClick}\n    data-testid={data_testid}\n  >\n    <CartItemButtonIcon icon={icon} className={`flaticon-${icon}`} />\n  </CartItemButtonStyled>\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GCartPresence } from '../../graph/types'\nimport CategoryNavigator from './CategoryNavigator'\nimport { FoodMenu } from './FoodMenu'\nimport {\n  QueryFoodMenu,\n  QueryFoodMenuCartPresence,\n} from './FoodMenuView.graphql'\nimport { OrderLimitModal } from './OrderLimitModal'\n\nexport const FoodMenuView: React.SFC = () => (\n  <WithOrder\n    render={orderModel => (\n      <QueryFoodMenu\n        variables={{\n          branchId: orderModel.branchId!,\n        }}\n        render={({ wareCategories }) => (\n          <>\n            <OrderLimitModal />\n            <CategoryNavigator categories={wareCategories} />\n            <QueryFoodMenuCartPresence\n              variables={{ orderId: orderModel.orderId! }}\n              renderLoading={false}\n              render={({ order }, { loading }) => (\n                <FoodMenu\n                  categories={wareCategories}\n                  rootModel={orderModel.root}\n                  inCart={getCartPresence(order && order.items)}\n                  orderItemCount={order ? order.items.length : 0}\n                  shouldUpdate={Boolean(order && !loading)}\n                />\n              )}\n            />\n          </>\n        )}\n      />\n    )}\n  />\n)\n\nfunction getCartPresence(items: ReadonlyArray<GCartPresence.Items>) {\n  if (!items) {\n    return {}\n  }\n  return items.reduce((result, item) => {\n    const recipeId = item.recipe.id\n    if (!result[recipeId]) {\n      result[recipeId] = 0\n    }\n    result[recipeId] += 1\n    return result\n  }, {})\n}\n"],"sourceRoot":""}