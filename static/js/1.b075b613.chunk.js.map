{"version":3,"sources":["common/Buttons.tsx","common/WithOrder.tsx","common/ColStyle.tsx","common/ShopStatus.tsx","common/BaseMap.tsx","common/ShopAddress.tsx","common/AlertModal.tsx","common/BackgroundThemed.tsx","common/FormTextInput.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewLoader.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","segments/destination/OrderMethod.tsx","segments/map/DeliveryMap.tsx","common/ButtonStripe.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","segments/cart/CartView.tsx","segments/cart/AddToCartModal.tsx","segments/cart/CartModal.tsx","segments/cart/CartItemButton.tsx","segments/foodMenu/FoodMenuView.tsx","segments/orderForm/OrderFormStorageNotice.tsx","segments/orderForm/OrderFormView.graphql.ts","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderAgreements.tsx","segments/orderForm/OrderFormInputs.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderFormSetup.tsx","segments/orderForm/OrderSubmitLine.tsx","common/SubmitSpinner.tsx","segments/orderForm/OrderGoPayModal.tsx","common/RouteButton.tsx","segments/finish/FinishView.graphql.ts","segments/destination/AddressInput.tsx","segments/destination/GeolocationButton.tsx","segments/destination/ResolvedAddress.tsx","segments/destination/SearchInput.tsx","segments/map/AddressSubmit.tsx","segments/shop/logo-commerce-01.svg","segments/shop/logo-commerce-02.svg","segments/shop/logo-doveze.svg","segments/shop/logo-gopay.png","segments/sidedishPicker/SidedishPicker.tsx","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartContents.tsx","segments/cart/CartDiscounts.tsx","segments/cart/CartItem.tsx","segments/cart/EditCartItemButton.tsx","segments/cart/RemoveCartItemButton.tsx","segments/cart/CartTotals.tsx","segments/cart/CartIsEmpty.tsx","segments/cart/ChangeCartModal.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/LinkToCart.tsx","segments/foodMenu/OrderLimitModal.tsx","common/FormInputCheckbox.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderPromoInput.tsx","hooks/useGuardedMutation.ts","segments/orderForm/OrderPromoInput.graphql.ts","segments/orderForm/OrderFormAutoFill.tsx"],"names":["_react","__webpack_require__","_reactstrap","_styledComponents","_interopRequireWildcard","_Responsive","_RouteButton","PrimaryButton","default","Button","withConfig","displayName","themeProp","SecondaryButton","PrimaryRoutedButton","RouteButton","MobileHeaderButton","_a","isConfirm","theme","props","__rest","createElement","primary","SelectButtonThemed","selected","css","mediaDesktop","tertiary","unselected","mediaMobile","tertiaryText","unselectedText","tertiaryHover","unselectedHover","name","_reactRouter","_WithRoot","render","observe","redirect","WithRoot","order","hasOrder","Redirect","to","children","Col","className","sm","md","lg","xl","_dateFns","ShopStatus","PureComponent","[object Object]","this","timer","timedUpdate","update","forceUpdate","setTimeout","clearTimeout","status","now","Date","openThresholdInMinutes","closeThresholdInMinutes","isOpen","willCloseAt","willOpenAt","decision","isSoon","openingIn","differenceInMinutes","closingIn","time","threshold","Boolean","Math","abs","defaultProps","_mobxReact","_interopRequireDefault","_reactGoogleMaps","MapContainerStyled","div","BaseMapContainer","withGoogleMap","Fragment","model","containerElement","data-testid","mapElement","style","height","position","Observer","GoogleMap","ref","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","onClick","options","streetViewControl","mapTypeControl","fullscreenControl","zoomControlOptions","google","maps","ControlPosition","RIGHT_TOP","getMapOptions","_i18n","address","location","i18n","_","street","houseNumber","city","headerText","onClose","modalProps","Modal","_extends","toggle","ModalHeader","tag","Container","ModalBody","BackgroundThemed","imageName","fallbackColor","fixed","size","component","otherProps","_reactForm","field","validate","showFeedback","inputProps","Field","fieldApi","Input","value","onChange","e","setValue","target","onBlur","setTouched","invalid","touched","error","FormFeedback","_react2","_Buttons","CenteredButtonContainer","finish","androidApp","iosApp","Desktop","Trans","id","href","url","color","toLocaleUpperCase","Mobile","textAlign","_WithOrder","_FinishView","WithOrder","QueryFinishView","variables","branchId","orderId","data","_types","_ramda","HeaderThemed","PriceThemed","PriceCornerThemed","orderPayments","some","hasMethod","PaymentGateEnum","Cash","Gopay","getPaymentInfo","items","map","item","OrderItem","key","totalSum","getPaymentPrice","formattedValue","RM","pathEq","recipe","sideDishes","nameLabel","length","path","join","PhoneNumberLinkStyled","a","branch","phone","OrderMethodButton","orderModel","orderMethod","onPrefetch","onMouseEnter","useOrderMethod","data-testselected","DeliveryTypeEnum","Messenger","identity","Pickup","prefetchPickup","_mobx","_gps","_AddressInput","_AddressSubmit","Component","disposers","rootModel","reaction","clickPoint","withUserLocation","panToLocation","autorun","isReady","hasLocation","geoPoint","forEach","dis","onConfirm","Marker","latLng","defaultDraggable","onDragEnd","latLngToGps","AddressInput","AddressSubmit","enabled","isDeliveryAddress","setBranch","createDeliveryOrder","prefetchFoodMenu","_mobxReactLite","_AlertModal","_ShopStatus","user","useRoot","AlertModal","closingTimeAlertHidden","hideClosingTime","values","_ColStyle","_logoCommerce","_logoCommerce2","_logoDoveze","_logoGopay","ColStyle","src","alt","StatusDisplayOpen","span","StatusDisplayClosed","s","0","_AddToCartModal","_CartContents","_CartIsEmpty","_CartView2","_ChangeCartModal","AddToCartModal","ChangeCartModal","root","QueryCartView","renderLoading","countWares","CartContents","CartIsEmpty","_reactRouterDom","_graph","_OrderModel","_CartModal","QueryCart","buildQuery","OrderCartForRecipeQuery","Route","match","history","recipeId","params","renderError","Alert","loading","isMobile","CartModal","addFromRecipeMobile","Promise","resolve","addFromRecipe","goBack","isLoading","_SidedishPicker","_CartOrderButton","initialSelection","selection","observable","array","autoFocus","backdrop","fade","descriptionLabel","SidedishPicker","onToggle","sidedishId","includes","remove","push","CartOrderButton","__awaiter","Array","from","CartItemButtonStyled","useColor","CartItemButtonIcon","icon","data_testid","_CategoryNavigator","_FoodMenu","_FoodMenuView","_OrderLimitModal","QueryFoodMenu","wareCategories","OrderLimitModal","categories","QueryFoodMenuCartPresence","FoodMenu","inCart","reduce","result","getCartPresence","orderItemCount","shouldUpdate","_OrderFormView","NoticeButton","StorageNotice","QueryOrderForm","skip","rememberForm","setFormRememberYes","setFormRememberNo","_graphqlTag","OrderFormQuery","hasErrors","clearErrors","submitErrors","idx","_FormInputCheckbox","ButtonStyled","GdprAgreementStyled","descOpen","useRef","current","toggleId","useCallback","useObserver","agreements","agreement","isConfirmed","display","hideConfirmed","FormInputCheckbox","checked","isMandatory","dangerouslySetInnerHTML","__html","description","toLocaleLowerCase","Collapse","_OrderEmailInput","_OrderNameInput","_OrderNoteInput","_OrderPhoneInput","_OrderPromoInput","OrderNameInput","OrderPhoneInput","OrderEmailInput","OrderNoteInput","isTooLong","trim","OrderNoteInputValidator","ingredientsDescription","FormGroup","type","placeholder","title","valid","FormText","MAX_LENGTH","_hooks","_logger","_sentry","_OrderFormAutoFill","useEffect","isVamInitialized","initVam","updateVam","formState","formApi","formValue","formAgreement","find","propEq","Object","assign","err","reportError","useDebounceCallback","Form","defaultValues","firstname","lastname","email","phonePrefix","defaultPhonePrefix","note","payment","getFormValues","validateOnMount","onSubmit","submitOrder","replace","logOrder","submitForm","OrderFormAutoFill","onFill","setAllValues","_SubmitSpinner","canSubmit","disabled","isSubmitting","_reactSpinkit","withTheme","fadeIn","_Pacman","TextPadding","isGoPayChecking","noMargin","buttonProps","Link","_fragments","FinishViewOrderFragment","CartItemFragment","PriceFragment","FinishViewQuery","_GeolocationButton","_ResolvedAddress","_SearchInput","AddressInputStyled","AddressInputBoxStyled","InputGroup","isVisible","hasAddress","isResolving","onValidClick","clearAddress","autoComplete","onSearch","withUserAddress","isSearching","attemptGeolocation","isGeolocationAvailable","hasFinishedSearch","isResolved","NoMouseAlert","isStreetAddress","inDeliveryLocation","renderErrorMessage","secondary","GeolocationButton","InputGroupAddon","addonType","ResolvedAddress","_classnames","_debounce","state","ev","setState","onKeyPress","clear","inputRef","onInputMount","setFocus","nextProps","focus","isHidden","address__input__hidden","innerRef","_ButtonStripe","module","exports","p","_CategoryValidationMessage","_SidedishCheckbox","category","minCount","maxCount","sidedish","SidedishCheckbox","isSelected","canBeSelected","SidedishCheckboxThemed","outline","price","isConfirming","box","get","set","_CartDiscounts","_CartItem","_CartTotals","CartItem","isActive","lastActiveRecipeId","onEdit","setUsedRecipeId","CartDiscounts","CartTotals","discounts","code","totalDiscount","_EditCartItemButton","_RemoveCartItemButton","EditButtonsContainerStyled","CartItemStyled","RemoveCartItemButton","itemId","automatic","EditCartItemButton","sideDishCount","_CartItemButton","button","CartItemButton","removeItemFromCart","_color","CartItemSummaryTotalThemed","alpha","hsl","string","coverPrice","transportFee","CartIsEmptyThemed","OrderCartForItemQuery","updateItem","_reactScroll","_reactSwipeable","_reactTruncate","_recompose","ContainerByPlatform","scroll","onMounted","onSwiping","deltaX","scrollLeft","onSwiped","isDesktop","CategoryNavigator","setActiveCategoryIndex","activeCategoryIndex","active","onSetActive","offset","smooth","spy","pictogram","lines","compose","withState","decorate","_FoodCategory","_FoodMenuItem","FoodMenuStyled","FoodMenuListStyled","config","orderItemsMax","canAddToCart","orderLimitReached","recipes","showOrderLimit","prefetchFood","FoodCategoryStyled","FoodCategoryTitleStyled","Element","_LinkToCart","FoodMenuItemStyled","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItemCount","LinkToCart","hasSidedish","image","LinkStyled","pathname","orderLimitAlertHidden","hideOrderLimit","CheckboxContainerStyled","CheckboxStyled","LabelStyled","defaultValue","_FormTextInput","emailRx","OrderEmailInputValidator","test","FormTextInput","OrderPhoneInputValidator","OrderPhonePrefixInputValidator","width","_reactApolloHooks","_useGuardedMutation","CodesPanel","OrderPromoInputUI","codes","onCodeAdd","onCodeRemove","autoSubmitAfterTimeout","isValidating","setValidating","useState","addCode","then","catch","finally","onKeyDown","preventDefault","onPaste","useQuery","OrderPromoCodesQuery","suspend","addCodeMutation","useGuardedMutation","AddOrderPromoMutation","refetchQueries","addOrderPromoCode","userErrors","submitFailed","removeCodeMutation","RemoveOrderPromoMutation","promoCodes","codeId","mutation","defaultMessage","handleGraphQLErrors","errors","filter","window","alert","prop","handleError","hasOwnProperty","isApolloError","networkError","graphQLErrors","mutate","useMutation","PromoCodeFragment"],"mappings":"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","file":"static/js/1.b075b613.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, ButtonProps } from 'reactstrap'\nimport styled, { css } from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../common/Responsive'\nimport { TThemeModel, TThemeModelProps } from '../models/ThemeModel'\nimport { RouteButton } from './RouteButton'\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${themeProp('secondary')};\n  border-color: ${themeProp('secondary')};\n  &:hover {\n    background-color: ${themeProp('secondaryHover')};\n    border-color: ${themeProp('secondaryHover')};\n  }\n  &:active {\n    background-color: #262626 !important;\n  }\n`\n\nPrimaryButton.displayName = 'PrimaryButton'\n\nexport const SecondaryButton = styled(Button)`\n  background-color: ${themeProp('tertiary')};\n  border-color: ${themeProp('tertiary')};\n  &:hover {\n    background-color: ${themeProp('tertiaryHover')};\n    border-color: ${themeProp('tertiaryHover')};\n  }\n`\n\nSecondaryButton.displayName = 'SecondaryButton'\n\nexport const PrimaryRoutedButton = styled(RouteButton)`\n  background-color: ${themeProp('secondary')};\n  border-color: ${themeProp('secondary')};\n  &:hover {\n    background-color: ${themeProp('secondaryHover')};\n    border-color: ${themeProp('secondaryHover')};\n  }\n`\n\nPrimaryRoutedButton.displayName = 'PrimaryRoutedButton'\n\ninterface IMobileHeaderButton {\n  isConfirm?: boolean\n  theme: TThemeModelProps\n}\n\nexport const MobileHeaderButton = styled(\n  ({ isConfirm, theme, ...props }: ButtonProps & IMobileHeaderButton) => (\n    <Button {...props} />\n  ),\n)`\n  background-color: ${({ isConfirm, theme }) =>\n    isConfirm ? theme.primary : 'white'};\n  color: ${({ isConfirm, theme }) => (isConfirm ? 'white' : theme.primary)};\n`\n\nMobileHeaderButton.displayName = 'MobileHeaderButton'\n\ninterface ISelectButtonThemed {\n  selected?: boolean\n  theme: TThemeModelProps\n}\n\nexport const SelectButtonThemed = styled(\n  ({ selected, theme, ...props }: ButtonProps & ISelectButtonThemed) => (\n    <Button {...props} />\n  ),\n)`\n  ${({ theme, selected }: ISelectButtonThemed) => css`\n    ${mediaDesktop`\n      background-color: ${selected ? theme.tertiary : theme.unselected}\n    `};\n    ${mediaMobile`\n    background-color: ${selected ? theme.tertiary : 'white'}`}\n    border-color: ${selected ? theme.tertiary : theme.unselected};\n    color: ${selected ? theme.tertiaryText : theme.unselectedText};\n    height: 3.7rem;\n    &:hover {\n      background-color: ${\n        selected ? theme.tertiaryHover : theme.unselectedHover\n      };\n      border-color: ${selected ? theme.tertiaryHover : theme.unselectedHover};\n      color: ${selected ? theme.tertiaryText : theme.unselectedText};\n    }\n  `};\n`\n\nSelectButtonThemed.displayName = 'SelectButtonThemed'\n\nfunction themeProp(name: keyof TThemeModelProps) {\n  return ({ theme }: { theme?: TThemeModel }) => theme![name] as string\n}\n","import React from 'react'\nimport { Redirect } from 'react-router'\n\nimport { TOrderModel } from '../models/OrderModel'\nimport { WithRoot } from './WithRoot'\n\ninterface IProps {\n  render(root: TOrderModel): ReactNode\n  observe?: boolean\n  redirect?: boolean\n}\n\nexport const WithOrder: React.SFC<IProps> = ({\n  render,\n  observe,\n  redirect = false,\n}) => (\n  <WithRoot\n    observe={observe}\n    render={({ order }) => {\n      return order.hasOrder ? (\n        render(order)\n      ) : redirect ? (\n        <Redirect to=\"/\" />\n      ) : null\n    }}\n  />\n)\n","import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import { differenceInMinutes } from 'date-fns'\nimport { PureComponent } from 'react'\n\nimport { GCompanyBranchStatus } from '../graph/types'\n\nexport type TStatus = GCompanyBranchStatus.Fragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\nexport interface IShopStatusRender {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\ninterface IProps {\n  status: TStatus\n  render(opts: IShopStatusRender): ReactNode\n  openThresholdInMinutes?: number\n  closeThresholdInMinutes?: number\n  timedUpdate?: boolean\n  now?: Date\n}\n\nexport class ShopStatus extends PureComponent<IProps> {\n  static defaultProps = {\n    openThresholdInMinutes: 30,\n    closeThresholdInMinutes: 30,\n  }\n  timer: Maybe<NodeJS.Timer> = null\n  componentDidMount() {\n    if (!this.props.timedUpdate) {\n      return\n    }\n    const update = () => {\n      this.forceUpdate()\n      this.timer = setTimeout(update, 30 * 1000)\n    }\n    update()\n  }\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  }\n  render() {\n    const {\n      status,\n      render,\n      now = new Date(),\n      openThresholdInMinutes,\n      closeThresholdInMinutes,\n    } = this.props\n\n    const { isOpen, willCloseAt, willOpenAt } = status\n\n    let decision: TStatusDecision\n\n    if (isOpen) {\n      decision = isSoon(willCloseAt, closeThresholdInMinutes!, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openThresholdInMinutes!, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n\n    return render({\n      decision,\n      get openingIn() {\n        return willOpenAt && differenceInMinutes(willOpenAt, new Date())\n      },\n      get closingIn() {\n        return willCloseAt && differenceInMinutes(willCloseAt, new Date())\n      },\n    })\n  }\n}\n\nfunction isSoon(time: Maybe<Date>, threshold: number, now: Date) {\n  return Boolean(time) && Math.abs(differenceInMinutes(time!, now)) <= threshold\n}\n","import { Observer } from 'mobx-react'\nimport React from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from '../models/MapModel'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n  render(control: IMapControl): ReactNode\n}\n\ninterface IMapControl {}\n\nconst MapContainerStyled = styled.div`\n  border-radius: 0 0 0.5rem 0.5rem;\n  overflow: hidden;\n  height: calc(100% - 3.75rem);\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nconst getMapOptions = () => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    zoomControlOptions: {\n      position: google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nexport const BaseMap: React.SFC<IBaseMapProps> = ({ render, model }) => (\n  <BaseMapContainer\n    containerElement={\n      <MapContainerStyled className=\"map__container\" data-testid=\"googleMap\" />\n    }\n    mapElement={<div style={{ height: '100%', position: 'relative' }} />}\n  >\n    <Observer>\n      {() => (\n        <GoogleMap\n          ref={model.setMapRef}\n          zoom={model.zoom}\n          center={model.center}\n          onCenterChanged={model.updatePosition}\n          onZoomChanged={model.updateZoom}\n          onClick={model.onClick}\n          options={getMapOptions()}\n        >\n          {render({})}\n        </GoogleMap>\n      )}\n    </Observer>\n  </BaseMapContainer>\n)\n","import React from 'react'\n\nimport { GAddress } from '../graph/types'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address?: GAddress.Fragment\n}\n\nexport const ShopAddress: React.SFC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import './Modal.css'\n\nimport React from 'react'\nimport {\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalProps,\n} from 'reactstrap'\n\ninterface IProps extends ModalProps {\n  isOpen: boolean\n  headerText: string\n  onClose?(): void\n}\n\nexport const AlertModal: React.SFC<IProps> = ({\n  isOpen,\n  headerText,\n  onClose,\n  children,\n  ...modalProps\n}) => (\n  <Modal\n    isOpen={isOpen}\n    toggle={onClose}\n    className=\"modal__container\"\n    {...modalProps}\n    data-testid=\"alertModal\"\n  >\n    <ModalHeader tag={Container} toggle={onClose} className=\"modal__header\">\n      <span>{headerText}</span>\n    </ModalHeader>\n    <ModalBody className=\"modal__body\">\n      <div className=\"modal__body__content\">{children}</div>\n    </ModalBody>\n  </Modal>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  className: string\n  imageName: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.SFC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import React from 'react'\nimport { Field, FieldProps } from 'react-form'\nimport { FormFeedback, Input, InputProps } from 'reactstrap'\n\ninterface IProps\n  extends Omit<FieldProps<string>, 'render' | 'children'>,\n    Omit<InputProps, 'defaultValue'> {\n  showFeedback?: boolean\n}\n\nexport const FormTextInput: React.SFC<IProps> = ({\n  field,\n  validate,\n  showFeedback = false,\n  ...inputProps\n}) => (\n  <Field\n    field={field}\n    validate={validate}\n    render={fieldApi => (\n      <>\n        <Input\n          {...inputProps}\n          value={fieldApi.value}\n          onChange={e => fieldApi.setValue(e.target.value)}\n          onBlur={() => fieldApi.setTouched(true)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n        />\n        {showFeedback && <FormFeedback>{fieldApi.error}</FormFeedback>}\n      </>\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PrimaryRoutedButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFinishView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  finish: GFinishView.Query\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.SFC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => (\n  <>\n    <Desktop>\n      {(androidApp || iosApp) && (\n        <div className=\"finish__view__apps__propagation\">\n          <div className=\"finish__view__apps__propagation__header\">\n            <Trans>What about mobile app?</Trans>\n          </div>\n          <div className=\"finish__view__apps__propagation__description\">\n            <Trans>\n              We have prepared mobile app, so you could order from anywhere!\n            </Trans>\n          </div>\n\n          {androidApp && (\n            <a href={androidApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                Google Play\n              </Button>\n            </a>\n          )}\n\n          {iosApp && (\n            <a href={iosApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                App Store\n              </Button>\n            </a>\n          )}\n        </div>\n      )}\n      <CenteredButtonContainer>\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </CenteredButtonContainer>\n    </Desktop>\n\n    <Mobile>\n      <div\n        className=\"finish__view__submit__line\"\n        style={{ textAlign: 'center' }}\n      >\n        <div className=\"finish__view__submit__line__strip\" />\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </div>\n    </Mobile>\n  </>\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GFinishView } from '../../graph/types'\n\nimport { QueryFinishView } from './FinishView.graphql'\n\ninterface IProps {\n  render(result: GFinishView.Query): ReactNode\n}\n\nexport const FinishViewLoader: React.SFC<IProps> = ({ render }) => (\n  <WithOrder\n    redirect={true}\n    render={order => (\n      <QueryFinishView\n        variables={{\n          branchId: order.branchId!,\n          orderId: order.orderId!,\n        }}\n        render={data => render(data)}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishViewOrder, PaymentGateEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GFinishViewOrder.Fragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.SFC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = RM.pathEq(['paymentMethod', 'paymentType', 'enum'])\n\nfunction getPaymentInfo({ orderPayments }: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({\n  orderPayments,\n  totalSum,\n}: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: GFinishViewOrder.Items) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishView } from '../../graph/types'\n\ninterface IProps {\n  branch: GFinishView.CompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.SFC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './OrderMethod.css'\n\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { WithRoot } from '../../common/WithRoot'\nimport { DeliveryTypeEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\ninterface IButtonProps {\n  orderModel: TOrderModel\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n  onPrefetch?(): void\n}\n\nconst OrderMethodButton: React.SFC<IButtonProps> = ({\n  orderModel,\n  orderMethod,\n  onChange,\n  onPrefetch,\n  children,\n}) => (\n  <Observer>\n    {() => (\n      <SelectButtonThemed\n        selected={orderModel.orderMethod === orderMethod}\n        onMouseEnter={onPrefetch}\n        onClick={() => {\n          orderModel.useOrderMethod(orderMethod)\n          onChange(orderModel)\n        }}\n        data-testid={`orderMethod-${orderMethod}`}\n        data-testselected={orderModel.orderMethod === orderMethod}\n      >\n        {children}\n      </SelectButtonThemed>\n    )}\n  </Observer>\n)\n\nexport const OrderMethod: React.SFC<IProps> = ({ onChange }) => (\n  <WithRoot\n    observe={false}\n    render={({ order }) => (\n      <div className=\"order__method\">\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Messenger}\n          onChange={onChange || RM.identity}\n        >\n          <span className=\"flaticon-transport\" />\n          {i18n.t`I want to deliver`.toLocaleUpperCase()}\n        </OrderMethodButton>\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Pickup}\n          onChange={onChange || RM.identity}\n          onPrefetch={order.prefetchPickup}\n        >\n          <span className=\"flaticon-restaurant\" />\n          {i18n.t`I'll pick up`.toLocaleUpperCase()}\n        </OrderMethodButton>\n      </div>\n    )}\n  />\n)\n","import './DeliveryMap.css'\n\nimport { autorun, IReactionDisposer, reaction } from 'mobx'\nimport React from 'react'\nimport { Marker } from 'react-google-maps'\n\nimport { latLngToGps } from '../../helpers/gps'\nimport { TRootModel } from '../../models/RootModel'\nimport { AddressInput } from '../destination/AddressInput'\nimport { AddressSubmit } from './AddressSubmit'\n\ninterface IProps {\n  rootModel: TRootModel\n  onConfirm(): void\n}\n\nexport class DeliveryMap extends React.Component<IProps> {\n  disposers: IReactionDisposer[] = []\n  componentDidMount() {\n    const {\n      rootModel: { location, map },\n    } = this.props\n\n    this.disposers = [\n      reaction(\n        () => map.clickPoint,\n        clickPoint => {\n          if (clickPoint) {\n            location.withUserLocation(clickPoint)\n            map.panToLocation(clickPoint)\n          }\n        },\n      ),\n\n      autorun(() => {\n        if (map.isReady && location.hasLocation) {\n          map.panToLocation(location.geoPoint)\n        }\n      }),\n    ]\n  }\n  componentWillUnmount() {\n    this.disposers.forEach(dis => dis())\n  }\n  render() {\n    const {\n      onConfirm,\n      rootModel: { location, order },\n    } = this.props\n    return (\n      <>\n        <Marker\n          position={location.latLng}\n          defaultDraggable={true}\n          onDragEnd={({ latLng }) => {\n            location.withUserLocation(latLngToGps(latLng))\n          }}\n        />\n        <div className=\"delivery__map__address\">\n          <AddressInput />\n        </div>\n        <div className=\"delivery__map__submit\">\n          <AddressSubmit\n            enabled={location.isDeliveryAddress}\n            onClick={() => {\n              order.setBranch(location.branchId!)\n              order.createDeliveryOrder(onConfirm)\n            }}\n            onPrefetch={() => order.prefetchFoodMenu(location.branchId!)}\n          />\n        </div>\n      </>\n    )\n  }\n}\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.SFC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { Plural, Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { useRoot } from '../../common/WithRoot'\nimport { GCompanyBranchStatus } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nexport const ShopClosingTimeModal: React.FC<IProps> = ({ status }) => {\n  const { user } = useRoot()\n  if (!status) {\n    return null\n  }\n  return (\n    <ShopStatus\n      status={status}\n      render={({ decision, openingIn }) => (\n        <Observer>\n          {() => (\n            <AlertModal\n              isOpen={\n                (decision === 'Closed' || decision === 'OpeningSoon') &&\n                !user.closingTimeAlertHidden\n              }\n              onClose={user.hideClosingTime}\n              headerText={i18n.t`We are closed right now`}\n            >\n              {i18n.t`We're sorry, but we do not accept new orders at this time.`}\n              {decision === 'OpeningSoon' && (\n                <Trans>\n                  You can prepare your order because we are{' '}\n                  <Plural\n                    value={openingIn}\n                    one=\"opening in 1 minute\"\n                    other=\"opening in # minutes\"\n                  />\n                  !\n                </Trans>\n              )}\n            </AlertModal>\n          )}\n        </Observer>\n      )}\n    />\n  )\n}\n","import './ShopHeaderIcons.css'\n\nimport React from 'react'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport logoCommerce01 from './logo-commerce-01.svg'\nimport logoCommerce02 from './logo-commerce-02.svg'\nimport logoDoveze from './logo-doveze.svg'\nimport logoGoPay from './logo-gopay.png'\n\nexport const ShopHeaderIcons = () => (\n  <ColStyle>\n    <img\n      src={logoDoveze}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={logoCommerce02}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={logoCommerce01}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={logoGoPay}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </ColStyle>\n)\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { GCompanyBranchStatus } from '../../graph/types'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nconst StatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nconst StatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.SFC<IProps> = ({ status }) =>\n  status ? (\n    <ShopStatus\n      status={status}\n      render={s => {\n        switch (s.decision) {\n          case 'Open':\n            return (\n              <StatusDisplayOpen data-testid=\"statusDisplayOpen\">\n                <Trans>We are open</Trans>\n              </StatusDisplayOpen>\n            )\n          case 'OpeningSoon':\n            return (\n              <StatusDisplayClosed>\n                <Plural\n                  value={s.openingIn}\n                  one=\"Opening in 1 minute\"\n                  other=\"Opening in # minutes\"\n                />\n              </StatusDisplayClosed>\n            )\n          case 'ClosingSoon':\n            return (\n              <StatusDisplayOpen>\n                <Plural\n                  value={s.closingIn}\n                  one=\"Closing in 1 minute\"\n                  other=\"Closing in # minutes\"\n                />\n              </StatusDisplayOpen>\n            )\n          case 'Closed':\n            return (\n              <StatusDisplayClosed>\n                <Trans>Closed</Trans>\n              </StatusDisplayClosed>\n            )\n        }\n      }}\n    />\n  ) : null\n","import './CartView.css'\n\nimport React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartContents } from './CartContents'\nimport { CartIsEmpty } from './CartIsEmpty'\nimport { QueryCartView } from './CartView.graphql'\nimport { ChangeCartModal } from './ChangeCartModal'\n\ninterface IProps {\n  onContentChange?(): void\n}\n\nexport const CartView: React.SFC<IProps> = () => (\n  <WithOrder\n    redirect={true}\n    render={orderModel => (\n      <>\n        <AddToCartModal order={orderModel} />\n        <ChangeCartModal root={orderModel.root} />\n        <QueryCartView\n          variables={{ orderId: orderModel.orderId! }}\n          renderLoading={false}\n          render={({ order }) => (\n            <>\n              {!order || order.countWares === 0 ? (\n                <CartIsEmpty />\n              ) : (\n                <CartContents order={order} rootModel={orderModel.root} />\n              )}\n            </>\n          )}\n        />\n      </>\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { Mobile } from '../../common/Responsive'\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForRecipe } from '../../graph/types'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { OrderCartForRecipeQuery } from '../../models/OrderModel.graphql'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForRecipe.Query,\n  GOrderCartForRecipe.Variables\n>(OrderCartForRecipeQuery)\n\nexport const AddToCartModal: React.SFC<IProps> = ({ order }) => (\n  <Route\n    path=\"/order/add/:recipeId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ recipeId: match.params.recipeId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <Mobile>\n            {isMobile => (\n              <CartModal\n                recipe={data.recipe}\n                onConfirm={sideDishes => {\n                  if (isMobile) {\n                    order.addFromRecipeMobile(match.params.recipeId, sideDishes)\n                    // let the optimistic response happen in this case\n                    return Promise.resolve()\n                  }\n                  return order.addFromRecipe(match.params.recipeId, sideDishes)\n                }}\n                onClose={() => history.goBack()}\n                isLoading={loading}\n              />\n            )}\n          </Mobile>\n        )}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport { observable } from 'mobx'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport '../../common/Modal.css'\nimport { GCartRecipe } from '../../graph/types'\n\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment | undefined\n  initialSelection?: ID[]\n  isLoading: boolean\n  onConfirm(selection: ID[]): Promise<void>\n  onClose(): void\n}\n\nexport const CartModal: React.SFC<IProps> = ({\n  recipe,\n  initialSelection = [],\n  onConfirm,\n  onClose,\n  isLoading,\n}) => {\n  const selection = observable.array<ID>(initialSelection)\n\n  const onConfirmAndClose = async () => {\n    await onConfirm(Array.from(selection))\n    onClose()\n  }\n\n  const onToggleSidedish = (sidedishId: ID) => {\n    if (selection.includes(sidedishId)) {\n      selection.remove(sidedishId)\n    } else {\n      selection.push(sidedishId)\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={true}\n      toggle={onClose}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader toggle={onClose} tag={Container} className=\"modal__header\">\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {isLoading || !recipe ? null : (\n            <>\n              <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n              <span className=\"modal__body__food_description\">\n                {recipe.descriptionLabel}\n              </span>\n              <SidedishPicker\n                recipe={recipe}\n                selection={selection}\n                onToggle={onToggleSidedish}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n            enabled={!isLoading}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface IButtonProps {\n  color: string\n  enabled?: boolean\n  data_testid?: string\n}\n\ninterface IIconProps {\n  icon: string\n}\n\ninterface IProps extends IButtonProps, IIconProps {\n  onClick?(): void\n}\n\nconst CartItemButtonStyled = styled.div<IButtonProps>`\n  display: inline-block;\n  border-radius: 3rem;\n  background: white;\n  width: 1.8rem;\n  height: 1.8rem;\n  text-align: left;\n  vertical-align: top;\n  padding: 0 0 0 0rem;\n  margin: 0.3rem 0.1rem 0 0.1rem;\n  ${getButtonColor};\n  ${getHoverStyle};\n`\n\nfunction getButtonColor({ color, enabled }: IButtonProps) {\n  const useColor = enabled ? color : '#8d8d8d'\n  return css`\n    color: ${useColor};\n    border: 2px solid ${useColor};\n  `\n}\n\nfunction getHoverStyle({ enabled }: IButtonProps) {\n  return enabled\n    ? css`\n        cursor: pointer;\n        &:hover {\n          background: #c9e8d7;\n          color: #1d1d1d;\n          border-color: #1d1d1d;\n        }\n      `\n    : css`\n        cursor: default;\n      `\n}\n\nconst CartItemButtonIcon = styled.span<IIconProps>`\n  &:before {\n    font-size: 0.8rem;\n    margin-left: 0.36rem;\n  }\n`\n\nexport const CartItemButton: React.SFC<IProps> = ({\n  color,\n  icon,\n  onClick,\n  enabled = true,\n  data_testid,\n}) => (\n  <CartItemButtonStyled\n    color={color}\n    enabled={enabled}\n    onClick={onClick}\n    data-testid={data_testid}\n  >\n    <CartItemButtonIcon icon={icon} className={`flaticon-${icon}`} />\n  </CartItemButtonStyled>\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GCartPresence } from '../../graph/types'\nimport CategoryNavigator from './CategoryNavigator'\nimport { FoodMenu } from './FoodMenu'\nimport {\n  QueryFoodMenu,\n  QueryFoodMenuCartPresence,\n} from './FoodMenuView.graphql'\nimport { OrderLimitModal } from './OrderLimitModal'\n\nexport const FoodMenuView: React.SFC = () => (\n  <WithOrder\n    render={orderModel => (\n      <QueryFoodMenu\n        variables={{\n          branchId: orderModel.branchId!,\n        }}\n        render={({ wareCategories }) => (\n          <>\n            <OrderLimitModal />\n            <CategoryNavigator categories={wareCategories} />\n            <QueryFoodMenuCartPresence\n              variables={{ orderId: orderModel.orderId! }}\n              renderLoading={false}\n              render={({ order }, { loading }) => (\n                <FoodMenu\n                  categories={wareCategories}\n                  rootModel={orderModel.root}\n                  inCart={getCartPresence(order && order.items)}\n                  orderItemCount={order ? order.items.length : 0}\n                  shouldUpdate={Boolean(order && !loading)}\n                />\n              )}\n            />\n          </>\n        )}\n      />\n    )}\n  />\n)\n\nfunction getCartPresence(items: ReadonlyArray<GCartPresence.Items>) {\n  if (!items) {\n    return {}\n  }\n  return items.reduce((result, item) => {\n    const recipeId = item.recipe.id\n    if (!result[recipeId]) {\n      result[recipeId] = 0\n    }\n    result[recipeId] += 1\n    return result\n  }, {})\n}\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { WithRoot } from '../../common/WithRoot'\nimport { QueryOrderForm } from './OrderFormView.graphql'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.SFC<IProps> = props => (\n  <WithRoot\n    render={root => (\n      <QueryOrderForm\n        skip={!root.order.hasOrder || root.user.rememberForm !== null}\n        variables={{ orderId: root.order.orderId! }}\n        renderLoading={() => null}\n        render={({ order }) => (\n          <Observer>\n            {() =>\n              order.countWares > 0 && root.user.rememberForm === null ? (\n                <StorageNotice data-testid=\"orderFormStorageNotice\">\n                  <p>\n                    <Trans>\n                      This app is using secure storage for keeping filled form\n                      data. It's not cookies, these are stored in your browser\n                      only.\n                    </Trans>\n                  </p>\n\n                  <NoticeButton\n                    color=\"success\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberYes}\n                    data-testid=\"orderFormStorageNotice__Yes\"\n                  >\n                    <Trans>Always remember</Trans>\n                  </NoticeButton>\n                  <NoticeButton\n                    color=\"secondary\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberNo}\n                    data-testid=\"orderFormStorageNotice__No\"\n                  >\n                    <Trans>Do not store</Trans>\n                  </NoticeButton>\n                </StorageNotice>\n              ) : null\n            }\n          </Observer>\n        )}\n      />\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderForm } from '../../graph/types'\n\nexport const OrderFormQuery = gql`\n  query GOrderForm($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      countWares\n    }\n  }\n`\n\nexport const QueryOrderForm = buildQuery<\n  GOrderForm.Query,\n  GOrderForm.Variables\n>(OrderFormQuery)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport '../../common/Modal.css'\nimport { WithOrder } from '../../common/WithOrder'\n\nexport const OrderErrorModal: React.SFC = () => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <Modal\n        isOpen={order.hasErrors}\n        toggle={order.clearErrors}\n        className=\"modal__container\"\n      >\n        <ModalHeader\n          toggle={order.clearErrors}\n          tag={Container}\n          className=\"modal__header\"\n        >\n          <span>\n            <Trans>Order can not be completed</Trans>\n          </span>\n        </ModalHeader>\n        <ModalBody className=\"modal__body\">\n          <div className=\"modal__body__content\">\n            {order.hasErrors &&\n              order.submitErrors!.map((error, idx) => (\n                <div key={idx}>{error}</div>\n              ))}\n          </div>\n          <div className=\"modal__body__button__line\">\n            <div className=\"modal__body__button__strip\" />\n            <Button\n              className=\"modal__body__button\"\n              color=\"primary\"\n              onClick={order.clearErrors}\n            >\n              <Trans>I understand</Trans>\n            </Button>\n            />\n          </div>\n        </ModalBody>\n      </Modal>\n    )}\n  />\n)\n","import { observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useRef } from 'react'\nimport { Button, Collapse } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../common/FormInputCheckbox'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TAgreement } from '../../models/OrderModel'\n\nconst ButtonStyled = styled(Button)`\n  padding: 0 0.5rem;\n  font-size: 0.8rem;\n  color: darkgray;\n`\n\nconst GdprAgreementStyled = styled.div`\n  font-size: 0.8rem !important;\n  color: darkgray;\n  margin: 0.5rem 0 0.5rem 0;\n  & .row {\n    margin: 0;\n  }\n`\n\nconst hideConfirmed = (agreement: TAgreement) => {\n  if (agreement.isConfirmed) {\n    // it's necessary to hide confirmed agreements like this\n    // because react-form already has validation errors stored\n    // for mandatory ones and is unable to forget it by not rendering field\n    return { style: { display: 'none' } }\n  }\n  return {}\n}\n\nexport const OrderAgreements: React.FC = () => {\n  const descOpen = useRef(observable.array<ID>([])).current\n  const toggleId = useCallback(\n    (id: ID) => () => {\n      if (descOpen.includes(id)) {\n        descOpen.remove(id)\n      } else {\n        descOpen.push(id)\n      }\n    },\n    [],\n  )\n  const { order } = useRoot()\n  return useObserver(() => (\n    <>\n      {order.agreements.map((agreement, idx) => (\n        <div key={agreement.id} {...hideConfirmed(agreement)}>\n          <FormInputCheckbox\n            field={['agreements', idx, 'isConfirmed']}\n            validate={checked =>\n              agreement.isMandatory && !(agreement.isConfirmed || checked)\n                ? 'Agreement is mandatory'\n                : null\n            }\n            data-testid={`orderAgreement__Check__${agreement.id}`}\n          >\n            <span dangerouslySetInnerHTML={{ __html: agreement.name }} />\n            {agreement.isMandatory && ' * '}\n            {agreement.description && (\n              <>\n                <ButtonStyled\n                  color=\"link\"\n                  onClick={toggleId(agreement.id)}\n                  data-testid={`orderAgreement__MoreButton__${agreement.id}`}\n                >\n                  {descOpen.includes(agreement.id)\n                    ? i18n.t`Less`.toLocaleLowerCase()\n                    : i18n.t`More...`.toLocaleLowerCase()}\n                </ButtonStyled>\n                <Collapse isOpen={descOpen.includes(agreement.id)}>\n                  <GdprAgreementStyled\n                    data-testid={`orderAgreement__Info__${agreement.id}`}\n                    dangerouslySetInnerHTML={{\n                      __html: agreement.description,\n                    }}\n                  />\n                </Collapse>\n              </>\n            )}\n          </FormInputCheckbox>\n        </div>\n      ))}\n    </>\n  ))\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\nimport OrderPromoInput from './OrderPromoInput'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n    <OrderPromoInput />\n  </>\n)\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport { Field } from 'react-form'\nimport { FormFeedback, FormGroup, FormText, Input } from 'reactstrap'\n\nimport { i18n } from '../../i18n'\n\nexport const MAX_LENGTH = 50\nconst isTooLong = value => value && value.trim().length > MAX_LENGTH\n\nconst OrderNoteInputValidator = value =>\n  isTooLong(value) ? i18n.t`Note is too long` : null\n\nexport const OrderNoteInput: React.SFC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <Field\n      field=\"note\"\n      validate={OrderNoteInputValidator}\n      render={fieldApi => (\n        <FormGroup>\n          <Input\n            type=\"textarea\"\n            placeholder={i18n.t`Note`}\n            title={ingredientsDescription}\n            value={fieldApi.value}\n            onChange={e => fieldApi.setValue(e.target.value)}\n            onBlur={() => fieldApi.setTouched(true)}\n            valid={!fieldApi.error}\n            invalid={Boolean(fieldApi.error)}\n            data-testid=\"orderNoteInput\"\n          />\n          <FormText>{ingredientsDescription}</FormText>\n          {isTooLong(fieldApi.value) ? (\n            <FormFeedback>\n              <Trans>\n                Maximum length is{' '}\n                <Plural value={MAX_LENGTH} other=\"# characters\" />. Typed{' '}\n                <Plural\n                  value={fieldApi.value.length}\n                  one=\"# char\"\n                  other=\"# chars\"\n                />\n              </Trans>\n            </FormFeedback>\n          ) : null}\n        </FormGroup>\n      )}\n    />\n  )\n}\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { useCallback, useEffect } from 'react'\nimport { Form, IFormApi, IFormState } from 'react-form'\nimport { Route } from 'react-router'\nimport { Form as StrapForm } from 'reactstrap'\n\nimport { PaymentGateEnum } from '../../graph/types'\nimport { logOrder } from '../../helpers/logger'\nimport { RM } from '../../helpers/ramda'\nimport { reportError } from '../../helpers/sentry'\nimport { TAgreement, TOrderModel } from '../../models/OrderModel'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\n\ninterface IProps {\n  order: TOrderModel\n  render(formApi: IFormApi & IFormState<IOrderFormState>): ReactNode\n}\n\nexport interface IOrderFormState {\n  firstname: string\n  lastname: string\n  email: string\n  phonePrefix: string\n  phone: string\n  note: string\n  payment: PaymentGateEnum\n  agreements: TAgreement[]\n}\n\nfunction getFormValues(orderModel: TOrderModel): IOrderFormState {\n  return {\n    firstname: orderModel.firstname,\n    lastname: orderModel.lastname,\n    email: orderModel.email,\n    phone: orderModel.phone,\n    phonePrefix: orderModel.phonePrefix || orderModel.defaultPhonePrefix,\n    note: orderModel.note,\n    payment: PaymentGateEnum.Gopay,\n    agreements: [],\n  }\n}\n\nconst debounceInterval = 1500\n\nexport const OrderFormSetup: React.FC<IProps> = ({ order, render }) => {\n  useEffect(() => {\n    if (order.isVamInitialized) {\n      order.initVam()\n    }\n  }, [])\n\n  const updateVam = useCallback(\n    async (formState: IFormState<IOrderFormState>, formApi: IFormApi) => {\n      try {\n        await order.updateVam(formState.values)\n        formApi.setValue(\n          'agreements',\n          mergeFormAgreements(formState.values.agreements, order.agreements),\n        )\n      } catch (err) {\n        reportError(err, {\n          formState: formState.values,\n        })\n      }\n    },\n    [],\n  )\n\n  const onChange = useDebounceCallback(updateVam, debounceInterval)\n\n  return (\n    <Route>\n      {({ history }) => (\n        <Form\n          defaultValues={getFormValues(order)}\n          validateOnMount={true}\n          onChange={onChange}\n          onSubmit={async (formState: IOrderFormState) => {\n            try {\n              await order.submitOrder(formState)\n              history.replace(`/finish`)\n            } catch (e) {\n              logOrder(e)\n            }\n          }}\n        >\n          {formApi => (\n            <StrapForm onSubmit={formApi.submitForm}>\n              <OrderFormAutoFill\n                onFill={values => formApi.setAllValues(values)}\n              />\n              {render(formApi)}\n            </StrapForm>\n          )}\n        </Form>\n      )}\n    </Route>\n  )\n}\n\nfunction mergeFormAgreements(\n  formValue: TAgreement[],\n  agreements: TAgreement[],\n) {\n  return agreements.map(agreement => {\n    const formAgreement = formValue.find(RM.propEq('id', agreement.id))\n    if (formAgreement) {\n      return { ...agreement, isConfirmed: formAgreement.isConfirmed }\n    }\n    return agreement\n  })\n}\n","import './OrderSubmitLine.css'\n\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  onClick(): void\n  canSubmit: boolean\n}\n\nexport const OrderSubmitLine: React.SFC<IProps> = ({\n  onClick,\n  canSubmit = false,\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <div className=\"order__form__submit__line\">\n        <div className=\"order__form__submit__line__strip\" />\n        <PrimaryButton\n          className=\"order__form__submit__line__button\"\n          color=\"primary\"\n          size=\"md\"\n          onClick={onClick}\n          disabled={!canSubmit || order.isSubmitting}\n          data-testid=\"orderSubmitButton\"\n        >\n          <Desktop>\n            {order.isSubmitting ? (\n              <SubmitSpinner />\n            ) : (\n              i18n.t`Place order`.toLocaleUpperCase()\n            )}\n          </Desktop>\n          <Mobile>{i18n.t`Place order`.toLocaleUpperCase()}</Mobile>\n        </PrimaryButton>\n      </div>\n    )}\n  />\n)\n","import React from 'react'\nimport Spinner from 'react-spinkit'\nimport { withTheme } from 'styled-components'\n\nconst SubmitSpinner = props => (\n  <Spinner name=\"three-bounce\" color={props.theme.primary} fadeIn=\"none\" />\n)\n\nexport default withTheme(SubmitSpinner)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.SFC<IProps> = ({ order }) => (\n  <Observer>\n    {() => (\n      <AlertModal isOpen={order.isGoPayChecking} headerText=\"GoPay platba\">\n        <TextPadding>\n          <Trans>Checking your GoPay payment, please wait...</Trans>\n        </TextPadding>\n        <Pacman noMargin={true} />\n      </AlertModal>\n    )}\n  </Observer>\n)\n","import { LocationDescriptor } from 'history'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, ButtonProps } from 'reactstrap'\n\ninterface IProps extends ButtonProps {\n  to: LocationDescriptor\n  replace?: boolean\n}\n\nexport const RouteButton: React.SFC<IProps> = ({\n  to,\n  replace,\n  children,\n  ...buttonProps\n}) => (\n  <Link to={to} replace={replace}>\n    <Button {...buttonProps}>{children}</Button>\n  </Link>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { CartItemFragment, PriceFragment } from '../../graph/fragments.graphql'\nimport { GFinishView } from '../../graph/types'\n\nexport const FinishViewOrderFragment = gql`\n  fragment GFinishViewOrder on Order {\n    id\n    items {\n      ...GCartItem\n      sideDishes {\n        ...GCartItem\n      }\n    }\n    totalSum {\n      ...GPrice\n    }\n    orderPayments {\n      paymentMethod {\n        paymentType {\n          enum\n        }\n      }\n    }\n  }\n  ${CartItemFragment}\n  ${PriceFragment}\n`\n\nexport const FinishViewQuery = gql`\n  query GFinishView($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      ...GFinishViewOrder\n    }\n    companyBranch(id: $branchId) {\n      id\n      phone\n      company {\n        id\n      }\n    }\n    androidApp: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: ANDROID\n    ) {\n      url\n    }\n    iosApp: mobileApplicationSettings(companyBranch: $branchId, platform: IOS) {\n      url\n    }\n  }\n  ${FinishViewOrderFragment}\n`\n\nexport const QueryFinishView = buildQuery<\n  GFinishView.Query,\n  GFinishView.Variables\n>(FinishViewQuery)\n","import './AddressInput.css'\n\nimport { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Alert, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TLocationModel } from '../../models/LocationModel'\nimport GeolocationButton from './GeolocationButton'\nimport ResolvedAddress from './ResolvedAddress'\nimport SearchInput from './SearchInput'\n\nconst AddressInputStyled = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n`\n\nconst AddressInputBoxStyled = styled.div`\n  border-radius: 1rem;\n  border: 1px solid #d4d4d4;\n  background-color: white;\n  height: 2.3rem;\n  overflow: hidden;\n  & input {\n    margin: 0.2rem 2rem 0.5rem 0.7rem;\n    background: transparent;\n    border: none;\n  }\n`\n\nexport const AddressInput: React.SFC = () => (\n  <WithRoot\n    observe={true}\n    render={({ location }) => (\n      <AddressInputStyled>\n        <AddressInputBoxStyled>\n          <InputGroup size=\"sm\">\n            <ResolvedAddress\n              address={location.address || ''}\n              isVisible={location.hasAddress}\n              isResolving={location.isResolving}\n              onValidClick={location.clearAddress}\n            />\n            <SearchInput\n              inputProps={{\n                placeholder: i18n.t`Type address or choose it from map`,\n                autoComplete: 'shipping street-address',\n              }}\n              onSearch={location.withUserAddress}\n              isVisible={!location.hasAddress}\n              isSearching={location.isResolving}\n            />\n            <GeolocationButton\n              onClick={location.attemptGeolocation}\n              isVisible={\n                location.isGeolocationAvailable && !location.isResolving\n              }\n            />\n          </InputGroup>\n        </AddressInputBoxStyled>\n        {location.hasFinishedSearch ? renderErrorMessage(location) : null}\n      </AddressInputStyled>\n    )}\n  />\n)\n\nconst NoMouseAlert = styled(Alert)`\n  pointer-events: none;\n`\n\nfunction renderErrorMessage(location: TLocationModel) {\n  if (location.isResolved === false) {\n    return (\n      <NoMouseAlert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </NoMouseAlert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport { InputGroupAddon } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  isVisible: boolean\n  onClick(): void\n}\n\nconst Container = styled.span`\n  color: ${({ theme }) => theme.secondary};\n  cursor: pointer;\n  position: absolute;\n  right: 0.4rem;\n  top: 0.15rem;\n`\n\nexport const GeolocationButton: React.SFC<IProps> = ({\n  onClick,\n  isVisible = false,\n}) =>\n  isVisible ? (\n    <Container>\n      <InputGroupAddon addonType=\"append\" onClick={onClick}>\n        <span className=\"flaticon-gps\" />\n      </InputGroupAddon>\n    </Container>\n  ) : null\n\nexport default GeolocationButton\n","import React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.SFC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  if (isResolving) {\n    return (\n      <div className=\"address__input__box__resolved wait\">\n        <Spinner name=\"ball-beat\" fadeIn=\"none\" />\n      </div>\n    )\n  }\n  if (!isVisible) {\n    return null\n  }\n  return (\n    <div className=\"address__input__box__resolved\" onClick={onValidClick}>\n      {address}\n    </div>\n  )\n}\n\nexport default ResolvedAddress\n","import classnames from 'classnames'\nimport debounce from 'debounce'\nimport React, { Component } from 'react'\nimport { Input } from 'reactstrap'\n\ninterface IProps {\n  onSearch(search: string): void\n  isVisible: boolean\n  isSearching: boolean\n  inputProps: Object\n}\n\ninterface IState {\n  value: string\n}\n\nclass SearchInput extends Component<IProps, IState> {\n  state = { value: '' }\n  componentDidMount() {\n    this.setFocus()\n  }\n  componentDidUpdate(nextProps: IProps) {\n    if (nextProps.isVisible !== this.props.isVisible) {\n      this.setFocus()\n    }\n  }\n  onSearch = debounce(this.props.onSearch, 2000)\n  onChange = ev => {\n    const value = ev.target.value || ''\n    this.setState({ value })\n    this.onSearch(value.trim())\n  }\n  onKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      this.onSearch.clear()\n      this.props.onSearch(this.state.value.trim())\n    }\n  }\n  inputRef: Maybe<HTMLInputElement> = null\n  onInputMount = (ref: HTMLInputElement) => {\n    this.inputRef = ref\n  }\n  isVisible() {\n    return this.props.isVisible !== false\n  }\n  isSearching() {\n    return this.props.isSearching !== false\n  }\n  setFocus() {\n    if (this.isVisible() && this.inputRef !== null) {\n      this.inputRef.focus()\n    }\n  }\n  render() {\n    const { inputProps } = this.props\n    const isHidden = !this.isVisible() || this.isSearching()\n    return (\n      <Input\n        className={classnames({ address__input__hidden: isHidden })}\n        onChange={this.onChange}\n        onKeyPress={this.onKeyPress}\n        value={this.state.value}\n        innerRef={this.onInputMount}\n        autoFocus={true}\n        {...inputProps}\n      />\n    )\n  }\n}\n\nexport default SearchInput\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n  onPrefetch(): void\n}\n\nexport const AddressSubmit: React.SFC<IProps> = ({\n  enabled,\n  onClick,\n  onPrefetch,\n}) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      onMouseEnter={() => enabled && onPrefetch()}\n    >\n      {i18n.t`Confirm address`.toLocaleUpperCase()}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-01.6d4e5108.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-02.8afb6c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-doveze.e13c0122.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-gopay.48aa4030.png\";","import './SidedishPicker.css'\n\nimport { Observer } from 'mobx-react'\nimport React, { Fragment } from 'react'\n\nimport { GCartRecipe } from '../../graph/types'\n\nimport CategoryValidationMessage from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment\n  selection: ReadonlyArray<ID>\n  onToggle(item: ID): void\n}\n\nexport const SidedishPicker: React.SFC<IProps> = ({\n  recipe,\n  selection,\n  onToggle,\n}) => (\n  <Observer>\n    {() => (\n      <div className=\"food__sidedish__picker\">\n        {recipe.categories.map(category => (\n          <Fragment key={category.id}>\n            <div className=\"food__sidedish__picker__category\">\n              {category.nameLabel}{' '}\n              <CategoryValidationMessage\n                minCount={category.minCount}\n                maxCount={category.maxCount}\n              />\n            </div>\n            {category.sideDishes.map(sidedish => (\n              <SidedishCheckbox\n                key={`${sidedish.id}-${category.id}`}\n                sidedish={sidedish}\n                isSelected={selection.includes(sidedish.id)}\n                canBeSelected={true}\n                onClick={() => onToggle(sidedish.id)}\n              />\n            ))}\n          </Fragment>\n        ))}\n      </div>\n    )}\n  </Observer>\n)\n","import React from 'react'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n}\n\nconst CategoryValidationMessage: React.SFC<IProps> = ({\n  minCount,\n  maxCount,\n}) => {\n  let message = ''\n  // if (minCount === 0) {\n  //   if (maxCount > 0) {\n  //     message = `(maximálně ${maxCount})`\n  //   }\n  // }\n  // if (maxCount === 0) {\n  //   message = `(minimálně ${minCount})`\n  // } else {\n  //   message = `(minimálně ${minCount} a maximálně ${maxCount})`\n  // }\n  return <span>{message}</span>\n}\n\nexport default CategoryValidationMessage\n","import './SidedishCheckbox.css'\n\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { GCartRecipe } from '../../graph/types'\n\ninterface IProps {\n  sidedish: GCartRecipe.SideDishes\n  isSelected: boolean\n  canBeSelected: boolean\n  onClick(): void\n}\n\nconst SidedishCheckboxThemed = styled(\n  ({ isSelected, canBeSelected, ...props }) => <Button {...props} />,\n)`\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n`\n\nexport const SidedishCheckbox: React.SFC<IProps> = props => (\n  <SidedishCheckboxThemed\n    size=\"xs\"\n    outline={true}\n    data-testid={`sidedishCheckbox__${props.sidedish.id}`}\n    disabled={!props.canBeSelected && !props.isSelected}\n    {...props}\n  >\n    <div className=\"food__sidedish__picker__button__name\">\n      {props.sidedish.nameLabel}\n    </div>\n    <div className=\"food__sidedish__picker__button__price\">\n      {props.sidedish.price.formattedValue}\n    </div>\n  </SidedishCheckboxThemed>\n)\n","import { observable } from 'mobx'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ID[]\n  onConfirm(): Promise<void>\n  enabled: boolean\n}\n\nexport const CartOrderButton: React.SFC<IProps> = ({\n  selection,\n  onConfirm,\n}) => {\n  const isConfirming = observable.box(false)\n\n  return (\n    <Observer>\n      {() => (\n        <PrimaryButton\n          className=\"modal__body__button\"\n          disabled={isConfirming.get()} /*!cartFood.isValid*/\n          data-testid=\"cartOrderButton\"\n          onClick={async () => {\n            isConfirming.set(true)\n            await onConfirm()\n            isConfirming.set(false)\n          }}\n        >\n          {i18n\n            .plural({\n              value: selection.length,\n              0: 'Order without sidedish',\n              one: 'Order with this sidedish',\n              other: 'Order with # sidedishes',\n            })\n            .toLocaleUpperCase()}\n        </PrimaryButton>\n      )}\n    </Observer>\n  )\n}\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { GCartView } from '../../graph/types'\n\nimport { TRootModel } from '../../models/RootModel'\nimport { CartDiscounts } from './CartDiscounts'\nimport { CartItem } from './CartItem'\nimport { CartTotals } from './CartTotals'\n\ninterface IProps {\n  order: GCartView.Order\n  rootModel: TRootModel\n}\n\nexport const CartContents: React.SFC<IProps> = ({ order, rootModel }) => (\n  <div className=\"cart__items__container\">\n    <div className=\"cart__items__container__content\">\n      <Observer>\n        {() =>\n          order.items.map(item => (\n            <CartItem\n              key={item.id}\n              item={item}\n              isActive={rootModel.order.lastActiveRecipeId === item.recipe.id}\n              onEdit={() => rootModel.order.setUsedRecipeId(item.recipe.id)}\n            />\n          ))\n        }\n      </Observer>\n      <CartDiscounts order={order} />\n      <CartTotals order={order} />\n    </div>\n  </div>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { GCartView } from '../../graph/types'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nexport const CartDiscounts: React.SFC<IProps> = ({ order }) =>\n  order.discounts && order.discounts.length > 0 ? (\n    <div>\n      {order.discounts.map(\n        ({ code, description, price: { formattedValue } }) => (\n          <div key={code} className=\"cart__item__summary\">\n            <div className=\"cart__item__summary__label\">{description}</div>\n            <div className=\"cart__item__summary__price\">{formattedValue}</div>\n          </div>\n        ),\n      )}\n      <div className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">\n          <Trans>Total discount</Trans>\n        </div>\n        <div className=\"cart__item__summary__price\">\n          {order.totalDiscount.formattedValue}\n        </div>\n      </div>\n    </div>\n  ) : null\n","import './CartItem.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Desktop } from '../../common/Responsive'\nimport { GOrder } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { EditCartItemButton } from './EditCartItemButton'\nimport { RemoveCartItemButton } from './RemoveCartItemButton'\n\ninterface IProps {\n  item: GOrder.Items\n  isActive: boolean\n  onEdit(): void\n}\n\nconst EditButtonsContainerStyled = styled.div`\n  flex: 0 0 auto;\n`\n\nconst CartItemStyled = styled.div`\n  width: 100%;\n  min-height: 3rem;\n  color: #1d1d1d;\n  margin: 0 0 0.4rem 0;\n  padding: 0.2rem;\n  background: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'rgba(255, 255, 255, 0.8)'};\n  text-align: left;\n  display: flex;\n`\n\nexport const CartItem: React.SFC<IProps> = ({ item, isActive, onEdit }) => (\n  <CartItemStyled isActive={isActive}>\n    <EditButtonsContainerStyled>\n      <RemoveCartItemButton itemId={item.id} enabled={!item.automatic} />\n\n      <Desktop>\n        <EditCartItemButton\n          itemId={item.id}\n          enabled={item.recipe.sideDishCount !== 0 && !item.automatic}\n          onClick={onEdit}\n        />\n      </Desktop>\n    </EditButtonsContainerStyled>\n\n    <div className=\"cart__item__description\">\n      <div\n        className=\"cart__item__item__name\"\n        data-testid={`cardItem__Name__${item.recipe.id}`}\n      >\n        {item.recipe.nameLabel}\n      </div>\n      <div\n        className=\"cart__item__item__side__dish\"\n        data-testid={`cardItem__SideDish__${item.recipe.id}`}\n      >\n        {item.sideDishes.length > 0\n          ? `+ ${item.sideDishes\n              .map(({ recipe }) => recipe.nameLabel)\n              .join(',')}`\n          : item.recipe.sideDishCount > 0 && (\n              <span>{i18n.t`Without sidedish`.toLocaleLowerCase()}</span>\n            )}\n      </div>\n    </div>\n\n    <div\n      className=\"cart__item__item__price\"\n      data-testid={`cardItem__Price__${item.id}`}\n    >\n      {item.automatic ? i18n.t`For free` : item.price.formattedValue}\n    </div>\n  </CartItemStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n  onClick(): void\n}\n\nexport const EditCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  onClick,\n  ...props\n}) => {\n  const button = <CartItemButton icon=\"edit\" color=\"#d9a700\" {...props} />\n  return props.enabled ? (\n    <Link\n      to={`/order/change/${itemId}`}\n      onClick={onClick}\n      data-testid={`editCartItemButton__${itemId}`}\n    >\n      {button}\n    </Link>\n  ) : (\n    button\n  )\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n}\n\nexport const RemoveCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  enabled,\n}) => (\n  <WithRoot\n    render={root => (\n      <CartItemButton\n        icon=\"delete\"\n        color=\"#99230e\"\n        enabled={enabled}\n        data_testid={`removeCartItemButton`}\n        onClick={() => root.order.removeItemFromCart(itemId)}\n      />\n    )}\n  />\n)\n","import Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GCartView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nconst CartItemSummaryTotalThemed = styled.div`\n  background: ${({ theme }) =>\n    Color(theme.primary)\n      .alpha(0.7)\n      .hsl()\n      .string()} !important;\n`\n\nexport const CartTotals: React.SFC<IProps> = ({ order }) => (\n  <div>\n    {order.coverPrice && order.coverPrice.value ? (\n      <div key=\"casePrice\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Covers`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.coverPrice.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    {order.transportFee && order.transportFee.value ? (\n      <div key=\"transportFee\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Delivery`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.transportFee.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    <CartItemSummaryTotalThemed\n      key=\"totalPrice\"\n      className=\"cart__item__summary cart__item__summary__total\"\n    >\n      <div className=\"cart__item__summary__label\">{i18n.t`Total`}</div>\n      <div\n        className=\"cart__item__summary__price\"\n        data-testid={`cardItemSummary__Price`}\n      >\n        {order.totalSum.formattedValue}\n      </div>\n    </CartItemSummaryTotalThemed>\n  </div>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { i18n } from '../../i18n'\n\nconst CartIsEmptyThemed = styled.span`\n  color: ${({ theme }) => theme.secondary};\n`\n\nexport const CartIsEmpty = () => (\n  <CartIsEmptyThemed\n    className=\"cart__column__cart__empty__label\"\n    data-testid=\"cartIsEmpty\"\n  >\n    {`${i18n.t`Cart is empty`}...`}\n  </CartIsEmptyThemed>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForItem } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { OrderCartForItemQuery } from '../../models/OrderModel.graphql'\nimport { TRootModel } from '../../models/RootModel'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  root: TRootModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForItem.Query,\n  GOrderCartForItem.Variables\n>(OrderCartForItemQuery)\n\nexport const ChangeCartModal: React.SFC<IProps> = ({ root }) => (\n  <Route\n    path=\"/order/change/:itemId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ itemId: match.params.itemId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <CartModal\n            recipe={data.item && data.item.recipe}\n            initialSelection={\n              data.item\n                ? (data.item.sideDishes.map(\n                    RM.path(['recipe', 'id']),\n                  ) as string[])\n                : []\n            }\n            onConfirm={sideDishes =>\n              root.order.updateItem(match.params.itemId, sideDishes)\n            }\n            onClose={() => history.goBack()}\n            isLoading={loading}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import './CategoryNavigator.css'\n\nimport classNames from 'classnames'\nimport React, { Component } from 'react'\nimport Scroll from 'react-scroll'\nimport Swipeable from 'react-swipeable'\nimport Truncate from 'react-truncate'\nimport { compose, withState } from 'recompose'\n\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenuCategory.Fragment>\n}\n\ninterface IInnerProps extends IProps {\n  setActiveCategoryIndex(index: number): void\n  activeCategoryIndex: number\n}\n\nclass ContainerByPlatform extends Component {\n  state = { scroll: 0 }\n  ref: Maybe<HTMLBaseElement> = null\n  onMounted = ref => {\n    this.ref = ref\n  }\n  onSwiping = (ev, deltaX) => (this.ref!.scrollLeft += deltaX / 5)\n  onSwiped = () => this.setState({ scroll: this.ref!.scrollLeft })\n  render() {\n    return (\n      <>\n        <Desktop>\n          {isDesktop =>\n            isDesktop ? (\n              <div className=\"category__navigator\">{this.props.children}</div>\n            ) : null\n          }\n        </Desktop>\n        <Mobile className=\"category__navigator category__navigator__nowrap\">\n          <Swipeable\n            onSwiping={this.onSwiping}\n            onSwiped={this.onSwiped}\n            innerRef={this.onMounted}\n          >\n            {this.props.children}\n          </Swipeable>\n        </Mobile>\n      </>\n    )\n  }\n}\n\nexport const CategoryNavigator: React.SFC<IProps & IInnerProps> = ({\n  categories,\n  setActiveCategoryIndex,\n  activeCategoryIndex,\n}) => (\n  <ContainerByPlatform>\n    {categories.length === 0\n      ? null\n      : categories.map((category, idx) => (\n          <Scroll.Link\n            to={category.nameLabel}\n            key={category.id}\n            className={classNames('category__navigator__scroll__link', {\n              active: activeCategoryIndex === idx,\n            })}\n            onSetActive={() => setActiveCategoryIndex(idx)}\n            offset={-168}\n            smooth={true}\n            spy={true}\n            data-testid={`categoryNavigatorScrollLink__${category.id}`}\n          >\n            <div className=\"category__navigator__scroll__link__circle\">\n              <span className={`flaticon-${category.pictogram}`} />\n            </div>\n            <div className=\"category__navigator__scroll__link__description\">\n              <Truncate lines={2}>{category.nameLabel}</Truncate>\n            </div>\n          </Scroll.Link>\n        ))}\n  </ContainerByPlatform>\n)\n\nconst decorate = compose<IInnerProps, IProps>(\n  withState('activeCategoryIndex', 'setActiveCategoryIndex', 0),\n)\n\nexport default decorate(CategoryNavigator)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenu } from '../../graph/types'\nimport { TRootModel } from '../../models/RootModel'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenu.WareCategories>\n  inCart: { [recipeId: string]: number }\n  orderItemCount: number\n  shouldUpdate: boolean\n  rootModel: TRootModel\n}\n\nconst FoodMenuStyled = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n`\n\nconst FoodMenuListStyled = styled.div`\n  ${mediaDesktop`\n    margin: 0 1.4rem 1rem 1.6rem;\n    padding: 2rem 0 2rem 0;\n  `};\n  ${mediaMobile`\n    margin: 0 0.7rem 1rem 0.7rem;\n    padding: 0 0 4rem 0;\n  `};\n`\n\nexport class FoodMenu extends React.Component<IProps> {\n  shouldComponentUpdate({ shouldUpdate }: IProps) {\n    return shouldUpdate\n  }\n  orderLimitReached() {\n    const {\n      orderItemCount,\n      rootModel: { config },\n    } = this.props\n    return orderItemCount >= config.orderItemsMax\n  }\n  render() {\n    const {\n      categories,\n      inCart,\n      rootModel: { order, user },\n    } = this.props\n    const canAddToCart = !this.orderLimitReached()\n    return (\n      <FoodMenuStyled>\n        <FoodMenuListStyled>\n          {categories.length === 0 ? (\n            <h3>\n              <Trans>Food menu is empty. We are sorry.</Trans>\n            </h3>\n          ) : (\n            <Observer>\n              {() =>\n                categories.map(category => (\n                  <FoodCategory key={category.id} category={category}>\n                    {category.recipes.map(recipe => (\n                      <FoodMenuItem\n                        key={recipe.id}\n                        recipe={recipe}\n                        inCart={inCart[recipe.id] || 0}\n                        isActive={order.lastActiveRecipeId === recipe.id}\n                        canAddToCart={canAddToCart}\n                        onClick={() => {\n                          if (canAddToCart) {\n                            order.setUsedRecipeId(recipe.id)\n                          } else {\n                            user.showOrderLimit()\n                          }\n                        }}\n                        onPrefetch={() => {\n                          if (recipe.sideDishCount > 0) {\n                            order.prefetchFood(recipe.id)\n                          }\n                        }}\n                      />\n                    ))}\n                  </FoodCategory>\n                ))\n              }\n            </Observer>\n          )}\n        </FoodMenuListStyled>\n      </FoodMenuStyled>\n    )\n  }\n}\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\nimport { FoodInCart } from './types'\n\ninterface IProps {\n  category: GFoodMenuCategory.Fragment\n  foodInCart?: FoodInCart\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.SFC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default FoodCategory\n","import './FoodMenuItem.css'\n\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { GFoodMenuRecipe } from '../../graph/types'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { LinkToCart } from './LinkToCart'\n\ninterface IProps {\n  recipe: GFoodMenuRecipe.Fragment\n  inCart: number\n  isActive: boolean\n  onClick(): void\n  onPrefetch(): void\n  canAddToCart: boolean\n}\n\nconst FoodMenuItemStyled = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  position: relative;\n  min-height: 6rem;\n  &:hover {\n    background-color: #c9e8d7;\n  }\n  background-color: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'white'};\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItemCount = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n  float: left;\n  position: absolute;\n  left: -1.2rem;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  border-radius: 1.8rem;\n  font-size: 0.9rem;\n  ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n`\n\nconst FoodMenuItem: React.SFC<IProps> = ({\n  recipe,\n  inCart,\n  onPrefetch,\n  isActive,\n  onClick,\n  canAddToCart,\n}) => (\n  <LinkToCart\n    recipeId={recipe.id}\n    hasSidedish={recipe.sideDishCount > 0}\n    canAddToCart={canAddToCart}\n    onClick={onClick}\n    data-testid={`foodMenuItem__${recipe.id}`}\n  >\n    <FoodMenuItemStyled onMouseEnter={onPrefetch} isActive={isActive}>\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {inCart > 0 ? <FoodMenuItemCount>{`${inCart}x`}</FoodMenuItemCount> : ''}\n      <h4>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </FoodMenuItemStyled>\n  </LinkToCart>\n)\n\nexport default FoodMenuItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { WithRoot } from '../../common/WithRoot'\n\nimport { Mobile } from '../../common/Responsive'\n\ninterface IProps {\n  recipeId: string\n  canAddToCart: boolean\n  hasSidedish: boolean\n  onClick(): void\n}\n\nconst LinkStyled = styled(Link)`\n  color: inherit;\n  &:visited div {\n    border: inherit;\n  }\n`\n\nexport const LinkToCart: React.SFC<IProps> = ({\n  recipeId,\n  hasSidedish,\n  canAddToCart,\n  onClick,\n  children,\n}) => {\n  if (!canAddToCart) {\n    return <div onClick={onClick}>{children}</div>\n  }\n  if (hasSidedish) {\n    return (\n      <LinkStyled to={{ pathname: `/order/add/${recipeId}` }} onClick={onClick}>\n        {children}\n      </LinkStyled>\n    )\n  }\n  return (\n    <WithRoot\n      render={({ order }) => (\n        <Mobile>\n          {isMobile => (\n            <div\n              onClick={() => {\n                onClick()\n                isMobile\n                  ? order.addFromRecipeMobile(recipeId)\n                  : order.addFromRecipe(recipeId)\n              }}\n            >\n              {children}\n            </div>\n          )}\n        </Mobile>\n      )}\n    />\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  field: FieldType\n  defaultValue?: boolean\n  validate?(value: boolean): string | null\n}\n\nconst CheckboxContainerStyled = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n`\n\nconst CheckboxStyled = styled(Input)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: white;\n  border: 1px solid;\n  border-color: ${({ invalid }: { invalid: boolean }) =>\n    invalid ? 'red' : '#c5c5c5'};\n  width: 2rem;\n  height: 2rem;\n  min-width: 2rem;\n  border-radius: 0.25rem;\n  position: relative;\n  margin: 0;\n  outline: none;\n  &:checked {\n    background-color: white;\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: #1d1d1d;\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  margin: 0 0 0 0.8rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.SFC<IProps> = ({\n  field,\n  defaultValue = false,\n  validate,\n  children,\n  ...props\n}) => (\n  <Field field={field} defaultValue={defaultValue} validate={validate}>\n    {fieldApi => (\n      <CheckboxContainerStyled>\n        <CheckboxStyled\n          type=\"checkbox\"\n          value={fieldApi.value}\n          onChange={checked => fieldApi.setValue(checked.target.checked)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n          {...props}\n        />\n        <LabelStyled>{children}</LabelStyled>\n      </CheckboxContainerStyled>\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nconst emailRx = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\nexport const OrderEmailInputValidator = value => {\n  const email = value.trim()\n  if (email === '') {\n    return i18n.t`E-mail is mandatory`\n  }\n  if (!emailRx.test(email)) {\n    return i18n.t`E-mail format is not valid`\n  }\n  return null\n}\n\nexport const OrderEmailInput: React.SFC = () => (\n  <FormGroup>\n    <FormTextInput\n      field=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder=\"E-mail\"\n      showFeedback={true}\n      validate={OrderEmailInputValidator}\n      data-testid=\"orderEmailInput\"\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n        showFeedback={true}\n        validate={value =>\n          value.trim() === '' ? i18n.t`First name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__FirstName\"\n      />\n      <FormTextInput\n        field=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n        showFeedback={true}\n        validate={value =>\n          value.trim() === '' ? i18n.t`Last name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__LastName\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone is mandatory` : null\n\nexport const OrderPhonePrefixInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone prefix is mandatory` : null\n\nexport const OrderPhoneInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"phonePrefix\"\n        autoComplete=\"tel-country-code\"\n        placeholder=\"+\"\n        showFeedback={true}\n        validate={OrderPhonePrefixInputValidator}\n      />\n      <FormTextInput\n        field=\"phone\"\n        type=\"tel\"\n        autoComplete=\"tel-national\"\n        placeholder={i18n.t`Phone`}\n        showFeedback={true}\n        validate={OrderPhoneInputValidator}\n        style={{ width: '55%' }}\n        data-testid=\"orderPhoneInput__Phone\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { KeyboardEvent, useCallback, useRef, useState } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport {\n  GOrderPromoCodes,\n  GPromoCode,\n  MAddOrderPromo,\n  MRemoveOrderPromo,\n} from '../../graph/types'\nimport { useGuardedMutation } from '../../hooks/useGuardedMutation'\nimport { i18n } from '../../i18n'\nimport {\n  AddOrderPromoMutation,\n  OrderPromoCodesQuery,\n  RemoveOrderPromoMutation,\n} from './OrderPromoInput.graphql'\n\ntype TPromoCode = GPromoCode.Fragment\n\ninterface IProps {\n  codes: ReadonlyArray<TPromoCode>\n  onCodeAdd(codeInput: string): Promise<void>\n  onCodeRemove(codeId: ID): void\n  autoSubmitAfterTimeout?: number\n}\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport function OrderPromoInputUI({\n  codes,\n  onCodeAdd,\n  onCodeRemove,\n  autoSubmitAfterTimeout = 2000,\n}: IProps) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isValidating, setValidating] = useState(false)\n\n  const addCode = useCallback(\n    () => {\n      if (inputRef.current && !inputRef.current.disabled) {\n        const code = inputRef.current.value.trim()\n        if (code.length > 0) {\n          setValidating(true)\n          inputRef.current.disabled = true\n          inputRef.current.value = i18n.t`Validating promo code ${code}...`\n          onCodeAdd(code)\n            .then(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.value = ''\n              }\n            })\n            .catch(() => {\n              if (inputRef.current) {\n                inputRef.current.value = code\n              }\n            })\n            .finally(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.disabled = false\n                inputRef.current.focus()\n              }\n            })\n        }\n      }\n    },\n    [onCodeAdd],\n  )\n\n  const onChange = useDebounceCallback(addCode, autoSubmitAfterTimeout)\n\n  const onKeyDown = useCallback((ev: KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === 'Enter') {\n      addCode()\n      ev.preventDefault()\n    }\n  }, [])\n\n  return (\n    <FormGroup>\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          disabled={isValidating}\n          placeholder={i18n.t`Promo codes`}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          onBlur={addCode}\n          onPaste={addCode}\n        />\n      </InputGroup>\n      <CodesPanel>\n        {codes.map(({ id, code }) => (\n          <SecondaryButton key={id} onClick={() => onCodeRemove(id)}>\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  )\n}\n\nconst OrderPromoInput: React.FC = () => {\n  const { order } = useRoot()\n\n  const { data } = useQuery<GOrderPromoCodes.Query, GOrderPromoCodes.Variables>(\n    OrderPromoCodesQuery,\n    {\n      suspend: false,\n      variables: { orderId: order.orderId! },\n    },\n  )\n\n  const addCodeMutation = useGuardedMutation<\n    MAddOrderPromo.Mutation,\n    MAddOrderPromo.Variables\n  >(AddOrderPromoMutation, {\n    refetchQueries: ['GCartView'],\n  })\n\n  const onCodeAdd = useCallback(async (code: string) => {\n    if (!order.orderId) {\n      return\n    }\n    const result = await addCodeMutation({\n      orderId: order.orderId!,\n      code: code,\n    })\n    if (result && result.addOrderPromoCode.userErrors.length) {\n      order.submitFailed(result.addOrderPromoCode.userErrors)\n    }\n  }, [])\n\n  const removeCodeMutation = useGuardedMutation<\n    MRemoveOrderPromo.Mutation,\n    MRemoveOrderPromo.Variables\n  >(RemoveOrderPromoMutation, { refetchQueries: ['GCartView'] })\n\n  const onCodeRemove = (codeId: ID) => {\n    if (order.orderId) {\n      removeCodeMutation({ codeId, orderId: order.orderId })\n    }\n  }\n\n  return (\n    <OrderPromoInputUI\n      codes={data && data.order ? data.order.promoCodes : []}\n      onCodeAdd={onCodeAdd}\n      onCodeRemove={onCodeRemove}\n    />\n  )\n}\n\nexport default OrderPromoInput\n","import { ApolloError } from 'apollo-client'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(RM.propEq('showToUser', true))\n      if (userErrors.length === 0) {\n        window.alert(defaultMessage)\n      } else {\n        window.alert(userErrors.map(RM.prop('message')).join('\\n'))\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        window.alert(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      return result.data as TData\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors')\n}\n","import gql from 'graphql-tag'\n\nimport { PromoCodeFragment } from '../../graph/fragments.graphql'\n\nexport const OrderPromoCodesQuery = gql`\n  query GOrderPromoCodes($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const AddOrderPromoMutation = gql`\n  mutation MAddOrderPromo($orderId: ID!, $code: String!) {\n    addOrderPromoCode(order: $orderId, promoCode: $code) {\n      userErrors: errors\n      order {\n        id\n        promoCodes {\n          ...GPromoCode\n        }\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const RemoveOrderPromoMutation = gql`\n  mutation MRemoveOrderPromo($orderId: ID!, $codeId: ID!) {\n    removeOrderPromoCode(order: $orderId, promoCode: $codeId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n","import React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\nimport { IOrderFormState } from './OrderFormSetup'\nimport { MAX_LENGTH } from './OrderNoteInput'\n\ninterface IProps {\n  onFill(values: IOrderFormState): void\n}\n\nexport const OrderFormAutoFill: React.SFC<IProps> = ({ onFill }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <SecondaryButton\n      onClick={() => {\n        const faker: Faker.FakerStatic = require('faker')\n        faker.locale = 'cz'\n        onFill({\n          firstname: faker.name.firstName(),\n          lastname: faker.name.lastName(),\n          email: faker.internet.email(),\n          phone: faker.phone.phoneNumberFormat(0),\n          phonePrefix: '+420',\n          note: faker.lorem.sentence().slice(0, MAX_LENGTH - 1),\n          payment: PaymentGateEnum.Gopay,\n          agreements: [],\n        })\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  ) : null\n"],"sourceRoot":""}