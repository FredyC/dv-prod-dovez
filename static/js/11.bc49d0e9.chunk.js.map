{"version":3,"sources":["app/icons/share-icon.svg","segments/mobile/AppleBanner.tsx","common/ScrollToTop.tsx","segments/mobile/MobileHeader.tsx","segments/mobile/MobilePaymentMethod.tsx","segments/mobile/MobileSubmitButton.tsx","segments/mobile/MobileConfirmView.tsx","segments/mobile/MobileDeliveryView.tsx","segments/mobile/MobileFinishView.tsx","segments/mobile/MobileShopIntro.graphql.ts","segments/mobile/MobileShopIntro.tsx","segments/mobile/MobileIntroView.tsx","segments/mobile/MobileCartSummary.tsx","segments/mobile/MobileCart.tsx","segments/mobile/MobileClosingTimeModal.graphql.ts","segments/mobile/MobileClosingTimeModal.tsx","segments/mobile/MobileOrderView.tsx","segments/mobile/MobilePickupList.tsx","segments/mobile/MobilePickupMap.tsx","segments/mobile/MobilePickupView.tsx","segments/mobile/MobileSmartBanner.tsx","app/MobileApp.tsx"],"names":["module","exports","__webpack_require__","p","StyledAppleBanner","styled","div","withConfig","displayName","componentId","ShareIcon","react_default","a","createElement","width","height","src","shareIcon","alt","AppleBanner","user","useRoot","useObserver","showAppleBanner","UAParser","window","navigator","userAgent","getOS","name","standalone","onClick","hideAppleBanner","_lingui_react","id","components","AppleBanner_ShareIcon","ScrollToTop","_PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","scrollTo","PureComponent","MobileHeader","_ref","text","buttonText","_ref$buttonRight","buttonRight","onButtonClick","leftButton","Buttons","className","data-testid","rightButton","isConfirm","MobilePaymentMethod","OrderPaymentButton","method","PaymentGateEnum","Gopay","i18n","_","toLocaleUpperCase","Cash","OrderFormTipInput","MobileSubmitButtonStyled","PrimaryButton","MobileSubmitButton","disabled","children","props","objectWithoutProperties","orderModel","order","assign","isSubmitting","isVamInitialized","_onClick","toString","SubmitSpinner","MobileConfirmView","history","segments_mobile_MobileHeader","goBack","OrderFormSetup","render","form","Fragment","ScrollToTop_ScrollToTop","OrderFormStorageNotice","OrderGoPayModal","OrderErrorModal","OrderTimePicker","OrderFormAutoFill","onFill","values","setAllValues","OrderFormInputs","OrderAgreements","MobilePaymentMethod_MobilePaymentMethod","MobileSubmitButton_MobileSubmitButton","submitForm","MobileDeliveryView","map","useRouterContext","BaseMap","model","DeliveryMap","onConfirm","push","MobileFinishView","objectDestructuringEmpty","reactstrap_es","ColStyle","FinishViewLoader","result","FinishViewOrder","FinishViewSupport","branch","companyBranch","FinishViewFooter","finish","MobileShopIntroQuery","gql","_templateObject","QueryMobileShopIntro","buildQuery","MobileShopIntro","business","variables","brandOrBranch","skip","isValid","renderLoading","headerText","intro","MobileIntroView","BackgroundThemed","imageName","size","fixed","ShopHeaderIcons","MobileShopIntro_MobileShopIntro","react_router","OrderMethod","onChange","usingDeliveryOrderMethod","usingPickupOrderMethod","MobileCartSummaryCountThemed","theme","secondary","MobileCartSummaryPriceThemed","span","_ref2","primary","MobileCartSummary","_ref3","count","price","isLoading","logDebug","showContent","MobileCart","orderId","_useQMobileCart","useQMobileCart","data","loading","refetch","useCartRefresh","_useState","useState","_useState2","slicedToArray","isOpen","setOpen","isEmpty","_data$order","countWares","totalSum","formattedValue","useEffect","classNames","mobile__sliding__cart__open","MobileCartSummary_MobileCartSummary","open","CartView","OrderSubmitLine","canSubmit","MobileShopStatusQuery","MobileClosingTimeModal_graphql_templateObject","FCompanyBranchStatusFragmentDoc","QueryMobileShopStatus","MobileClosingTimeModal","branchId","ShopClosingTimeModal","status","MobileOrderView","hasOrder","FoodMenuView","MobileCart_MobileCart","AddToCartModal","MobileClosingTimeModal_MobileClosingTimeModal","to","StatusDisplayPosition","MobilePickupList","branches","onSelect","onShowMap","onPrefetch","ShopAddress","address","ShopStatusDisplay","deliveryTime","defaultDeliveryTime","pickupTime","defaultPickupTime","pickupEnabled","onMouseEnter","toLocaleLowerCase","ButtonStripeContainerStyled","MobilePickupMap","panToBranch","_this$props","panToLocation","gps","_this$props2","latlng","gpsToLatLng","latitude","Number","longitude","undefined","lib","position","ButtonStripe","MobilePickupView","match","_useRoot","onSelectBranch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","createPickupOrder","stop","_x","renderHeader","renderMap","mobile_MobilePickupMap","params","isBrand","PickupMap_graphql","brandId","_ref5","find","RM","propEq","segments_mobile_MobilePickupList","concat","_ref4","prefetchFoodMenu","renderList","_ref6","_ref7","SmartBannerContainer","MobileSmartBanner","observer","platform","os","MobilePlatformEnum","Ios","Android","getPlatformType","showBanner","banner","ensureBannerForCurrentBranch","shouldBeVisible","_useQSmartBanner","useQSmartBanner","app","setClosedNow","style","backgroundImage","icon","title","href","url","setInstalledNow","MobileApp","fluid","exact","path","component","AppleBanner_AppleBanner"],"mappings":"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","file":"static/js/11.bc49d0e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/share-icon.9dc3f608.svg\";","import { Trans } from '@lingui/macro'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\nimport UAParser from 'ua-parser-js'\n\nimport shareIcon from '../../app/icons/share-icon.svg'\nimport { useRoot } from '../../app/useRoot'\n\nconst StyledAppleBanner = styled.div`\n  width: 100%;\n  height: 5rem;\n  background: #f4f4f4;\n  padding: 1rem;\n  position: absolute;\n  bottom: 0rem;\n  z-index: 50;\n  opacity: 0.9;\n\n  a {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0 5px 0 0;\n    font-family: ArialRoundedMTBold, Arial;\n    font-size: 20px;\n    text-align: center;\n  }\n`\n\nconst ShareIcon: React.FC = () => {\n  return <img width=\"26\" height=\"26\" src={shareIcon} alt=\"Share\" />\n}\n\nexport const AppleBanner: React.FC = () => {\n  const { user } = useRoot()\n\n  return useObserver(() => {\n    if (user.showAppleBanner && isIos() && !isInStandaloneMode()) {\n      return (\n        <StyledAppleBanner onClick={user.hideAppleBanner}>\n          <a>&times;</a>\n          <Trans>\n            Install this webapp on your device: Tap <ShareIcon /> and then Add\n            to homescreen.\n          </Trans>\n        </StyledAppleBanner>\n      )\n    }\n    return null\n  })\n}\n\nfunction isIos() {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  return os.name === 'iOS'\n}\n\nfunction isInStandaloneMode() {\n  // @ts-ignore standalone typing\n  return 'standalone' in window.navigator && window.navigator.standalone\n}\n","import { PureComponent } from 'react'\n\ninterface IProps {}\n\nexport class ScrollToTop extends PureComponent<IProps> {\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return null\n  }\n}\n","import './MobileHeader.css'\n\nimport React from 'react'\n\nimport { MobileHeaderButton } from '../../common/Buttons'\n\ninterface IProps {\n  text: string\n  buttonText: string\n  buttonRight?: boolean\n  onButtonClick(): void\n}\n\nconst MobileHeader: React.FC<IProps> = ({\n  text,\n  buttonText,\n  buttonRight = false,\n  onButtonClick,\n}) => {\n  const leftButton =\n    buttonRight === false ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Left\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  const rightButton =\n    buttonRight === true ? (\n      <MobileHeaderButton\n        className=\"mobile__header__button\"\n        data-testid=\"MobileHeaderButton__Right\"\n        // size=\"sm\"\n        onClick={onButtonClick}\n        isConfirm={true}\n      >\n        {buttonText}\n      </MobileHeaderButton>\n    ) : null\n  return (\n    <div className=\"mobile__header\">\n      {leftButton}\n      <div className=\"mobile__header__text\">{text}</div>\n      {rightButton}\n    </div>\n  )\n}\n\nexport default MobileHeader\n","import './MobilePaymentMethod.css'\n\nimport React from 'react'\n\nimport { PaymentGateEnum } from '../../graph/generated'\nimport { i18n } from '../../i18n'\nimport { OrderFormTipInput } from '../orderForm/OrderFormTipInput'\nimport { OrderPaymentButton } from '../orderForm/OrderPaymentButton'\n\ninterface IProps {}\n\nexport const MobilePaymentMethod: React.FC<IProps> = () => {\n  return (\n    <div className=\"mobile__confirm__payment__method\">\n      <OrderPaymentButton\n        method={PaymentGateEnum.Gopay}\n        data-testid=\"mobilePaymentMethodGoPay\"\n      >\n        <span className=\"flaticon-credit-card\">\n          {i18n.t`Pay by card`.toLocaleUpperCase()}\n        </span>\n      </OrderPaymentButton>\n      <OrderPaymentButton\n        method={PaymentGateEnum.Cash}\n        data-testid=\"mobilePaymentMethodCash\"\n      >\n        <span className=\"flaticon-money\">\n          {i18n.t`Pay by cash`.toLocaleUpperCase()}\n        </span>\n      </OrderPaymentButton>\n      <OrderFormTipInput />\n    </div>\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../app/useRoot'\nimport { PrimaryButton } from '../../common/Buttons'\nimport SubmitSpinner from '../../common/SubmitSpinner'\n\ninterface IProps {\n  disabled?: boolean\n  onClick(): void\n}\n\nconst MobileSubmitButtonStyled = styled(PrimaryButton)`\n  margin: 0.2rem;\n  padding: 1rem 4rem;\n  text-transform: uppercase;\n`\n\nexport const MobileSubmitButton: React.FC<IProps> = ({\n  disabled,\n  children,\n  onClick,\n  ...props\n}) => {\n  const { order: orderModel } = useRoot()\n  return useObserver(() => (\n    <MobileSubmitButtonStyled\n      disabled={\n        disabled || orderModel.isSubmitting || !orderModel.isVamInitialized\n      }\n      onClick={() => {\n        onClick()\n      }}\n      {...props}\n    >\n      {orderModel.isSubmitting ? <SubmitSpinner /> : children}\n    </MobileSubmitButtonStyled>\n  ))\n}\n","import './MobileConfirmView.css'\n\nimport { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { ScrollToTop } from '../../common/ScrollToTop'\nimport { i18n } from '../../i18n'\nimport { OrderAgreements } from '../orderForm/OrderAgreements'\nimport { OrderErrorModal } from '../orderForm/OrderErrorModal'\nimport { OrderFormAutoFill } from '../orderForm/OrderFormAutoFill'\nimport { OrderFormInputs } from '../orderForm/OrderFormInputs'\nimport { OrderFormSetup } from '../orderForm/OrderFormSetup'\nimport { OrderFormStorageNotice } from '../orderForm/OrderFormStorageNotice'\nimport { OrderGoPayModal } from '../orderForm/OrderGoPayModal'\nimport { OrderTimePicker } from '../orderForm/OrderTimePicker'\nimport MobileHeader from './MobileHeader'\nimport { MobilePaymentMethod } from './MobilePaymentMethod'\nimport { MobileSubmitButton } from './MobileSubmitButton'\n\ninterface IProps extends RouteComponentProps<{}> {}\n\nexport const MobileConfirmView: React.FC<IProps> = ({ history }) => {\n  return (\n    <div className=\"mobile__confirm__view\">\n      <MobileHeader\n        text={i18n.t`Order confirmation`}\n        buttonText={i18n.t`Cancel`}\n        onButtonClick={() => history.goBack()}\n      />\n      <OrderFormSetup\n        render={form => (\n          <>\n            <ScrollToTop />\n            <OrderFormStorageNotice />\n            <OrderGoPayModal />\n            <OrderErrorModal />\n            <OrderTimePicker />\n            <OrderFormAutoFill onFill={values => form.setAllValues(values)} />\n            <div className=\"mobile__confirm__view__form\">\n              <h3>\n                <Trans>Where and to whom we deliver?</Trans>\n              </h3>\n              <OrderFormInputs />\n              <OrderAgreements />\n            </div>\n            <div className=\"mobile__confirm__view__submit\">\n              <h4>\n                <Trans>Place order</Trans>\n              </h4>\n              <MobilePaymentMethod />\n\n              <MobileSubmitButton onClick={form.submitForm}>\n                <Trans>Place order</Trans>\n              </MobileSubmitButton>\n            </div>\n          </>\n        )}\n      />\n    </div>\n  )\n}\n","import './MobileMap.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { BaseMap } from '../../common/BaseMap'\nimport { i18n } from '../../i18n'\nimport { DeliveryMap } from '../map/DeliveryMap'\nimport MobileHeader from './MobileHeader'\n\nexport const MobileDeliveryView: React.FC = () => {\n  const { map } = useRoot()\n  const { history } = useRouterContext()\n  return (\n    <div>\n      <MobileHeader\n        text={i18n.t`Enter the address`}\n        buttonText={i18n.t`Back`}\n        onButtonClick={() => history.goBack()}\n      />\n      <div className=\"mobile__map__view\">\n        <BaseMap model={map}>\n          <DeliveryMap onConfirm={() => history.push('/order')} />\n        </BaseMap>\n      </div>\n    </div>\n  )\n}\n","import '../finish/FinishView.css'\n\nimport React from 'react'\nimport { Row } from 'reactstrap'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport { FinishViewFooter } from '../finish/FinishViewFooter'\nimport { FinishViewLoader } from '../finish/FinishViewLoader'\nimport { FinishViewOrder } from '../finish/FinishViewOrder'\nimport { FinishViewSupport } from '../finish/FinishViewSupport'\n\ninterface IProps {}\n\nexport const MobileFinishView: React.FC<IProps> = ({}) => (\n  <Row className=\"justify-content-md-center\">\n    <ColStyle>\n      <div className=\"finish__view__mobile\">\n        <FinishViewLoader\n          render={result => (\n            <>\n              <FinishViewOrder order={result.order} />\n              <FinishViewSupport branch={result.companyBranch} />\n              <FinishViewFooter finish={result} />\n            </>\n          )}\n        />\n      </div>\n    </ColStyle>\n  </Row>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph/buildQuery'\nimport { GMobileShopIntro } from '../../graph/types'\n\nexport const MobileShopIntroQuery = gql`\n  query GMobileShopIntro($brandId: ID, $branchId: ID) {\n    intro: applicationSettings(brand: $brandId, companyBranch: $branchId) {\n      headerText\n      homepageUrl\n    }\n  }\n`\n\nexport const QueryMobileShopIntro = buildQuery<\n  GMobileShopIntro.Query,\n  GMobileShopIntro.Variables\n>(MobileShopIntroQuery)\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../app/useRoot'\nimport { QueryMobileShopIntro } from './MobileShopIntro.graphql'\n\nexport const MobileShopIntro: React.FC = () => {\n  const { business } = useRoot()\n  return useObserver(() => (\n    <QueryMobileShopIntro\n      variables={business.brandOrBranch}\n      skip={!business.isValid}\n      renderLoading={() => null}\n      render={({ intro: { headerText } }) => (\n        <div data-testid=\"MobileShopIntro\">{headerText}</div>\n      )}\n    />\n  ))\n}\n","import './MobileIntroView.css'\n\nimport React from 'react'\nimport { Route } from 'react-router-dom'\n\nimport BackgroundThemed from '../../common/BackgroundThemed'\nimport { OrderMethod } from '../destination/OrderMethod'\nimport { ShopHeaderIcons } from '../shop/ShopHeaderIcons'\nimport { MobileShopIntro } from './MobileShopIntro'\n\nexport const MobileIntroView: React.FC = () => (\n  <div className=\"mobile__intro\">\n    <BackgroundThemed\n      className=\"mobile__intro__logo\"\n      data-testid=\"MobileIntroView__BackgroundThemed\"\n      imageName=\"storeLogoMobile\"\n      size=\"cover\"\n      fixed={false}\n    >\n      <ShopHeaderIcons />\n    </BackgroundThemed>\n    <div className=\"mobile__intro__info\">\n      <MobileShopIntro />\n      <Route>\n        {({ history }) => (\n          <OrderMethod\n            onChange={order => {\n              if (order.usingDeliveryOrderMethod) {\n                history.push('/delivery')\n              } else if (order.usingPickupOrderMethod) {\n                history.push('/pickup')\n              }\n            }}\n          />\n        )}\n      </Route>\n    </div>\n  </div>\n)\n","import './MobileCartSummary.css'\n\nimport { Trans } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { logDebug } from '../../helpers/logger'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  count: number\n  price: string\n  isLoading: boolean\n  onClick(): void\n}\n\nconst MobileCartSummaryCountThemed = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n`\n\nconst MobileCartSummaryPriceThemed = styled.span`\n  color: ${({ theme }) => theme.primary};\n`\n\nexport const MobileCartSummary: React.FC<IProps> = ({\n  count,\n  price,\n  isLoading,\n  onClick,\n}) => {\n  logDebug(count, isLoading)\n  const showContent = count > 0 || isLoading === true\n  return (\n    <div\n      className=\"mobile__cart__summary\"\n      data-testid=\"mobileCartSummary\"\n      onClick={onClick}\n    >\n      {showContent ? (\n        <div className=\"mobile__cart__summary__toggle\">\n          <span className=\"flaticon-chevron-up\" />\n        </div>\n      ) : null}\n\n      <div className=\"mobile__cart__summary__info\">\n        <span className=\"flaticon-cart\" />\n        {showContent ? (\n          <MobileCartSummaryCountThemed\n            className=\"mobile__cart__summary__count\"\n            data-testid=\"mobileCartSummary__Count\"\n          >\n            {count || '?'}\n          </MobileCartSummaryCountThemed>\n        ) : null}\n        {!showContent ? (\n          <span data-testid=\"cartIsEmpty\">{i18n.t`Cart is empty`}</span>\n        ) : (\n          <div\n            className=\"mobile__cart__summary__cart__with__price\"\n            data-testid=\"mobileCartSummary__Price\"\n          >\n            <Trans>\n              In the cart you have goods for\n              <MobileCartSummaryPriceThemed className=\"mobile__cart__summary__price\">\n                {price}\n              </MobileCartSummaryPriceThemed>\n            </Trans>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import './MobileCart.css'\nimport './MobileSlidingCart.css'\n\nimport { useRouterContext } from '@speedlo/hooks'\nimport classNames from 'classnames'\nimport React, { useEffect, useState } from 'react'\n\nimport { useQMobileCart } from '../../graph/generated'\nimport { CartView } from '../cart/CartView'\nimport { useCartRefresh } from '../cart/useCartRefresh'\nimport { OrderSubmitLine } from '../orderForm/OrderSubmitLine'\nimport { MobileCartSummary } from './MobileCartSummary'\n\ninterface IProps {\n  orderId: ID\n}\n\nexport const MobileCart: React.FC<IProps> = ({ orderId }) => {\n  const { history } = useRouterContext()\n  const { data, loading, refetch } = useQMobileCart({ orderId })\n\n  useCartRefresh(refetch)\n\n  const [isOpen, setOpen] = useState(false)\n\n  const onSubmit = () => history.push('/confirm')\n\n  let count = 0\n  let price = '???'\n  let isEmpty = true\n  if (data && data.order) {\n    const { countWares, totalSum } = data.order\n    count = countWares\n    isEmpty = countWares === 0\n    price = totalSum.formattedValue\n  }\n\n  useEffect(\n    () => {\n      // auto close empty cart\n      if (count === 0 && isOpen === true) {\n        setOpen(false)\n      }\n    },\n    [count, isOpen],\n  )\n\n  const onToggle = () => {\n    setOpen(open => !(open || count === 0))\n  }\n\n  return (\n    <div\n      className={classNames('mobile__sliding__cart', {\n        mobile__sliding__cart__open: isOpen,\n      })}\n    >\n      <div className=\"mobile__cart__view\">\n        <MobileCartSummary\n          count={count}\n          price={price}\n          isLoading={loading || !(data && data.order)}\n          onClick={onToggle}\n        />\n        {isOpen ? (\n          <>\n            <CartView orderId={orderId} />\n            <OrderSubmitLine canSubmit={!isEmpty} onClick={onSubmit} />\n          </>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { FCompanyBranchStatusFragmentDoc } from '../../graph/generated'\nimport { GMobileShopStatus } from '../../graph/types'\n\nexport const MobileShopStatusQuery = gql`\n  query GMobileShopStatus($branchId: ID!) {\n    branch: companyBranch(id: $branchId) {\n      id\n      ...FCompanyBranchStatus\n    }\n  }\n  ${FCompanyBranchStatusFragmentDoc}\n`\n\nexport const QueryMobileShopStatus = buildQuery<\n  GMobileShopStatus.Query,\n  GMobileShopStatus.Variables\n>(MobileShopStatusQuery)\n","import React from 'react'\n\nimport { ShopClosingTimeModal } from '../shop/ShopClosingTimeModal'\nimport { QueryMobileShopStatus } from './MobileClosingTimeModal.graphql'\n\ninterface IProps {\n  branchId: ID\n}\n\nexport const MobileClosingTimeModal: React.FC<IProps> = ({ branchId }) => (\n  <QueryMobileShopStatus\n    variables={{ branchId }}\n    render={({ branch }) => branch && <ShopClosingTimeModal status={branch} />}\n  />\n)\n","import './MobileOrderView.css'\n\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport { useRoot } from '../../app/useRoot'\nimport { AddToCartModal } from '../cart/AddToCartModal'\nimport { FoodMenuView } from '../foodMenu/FoodMenuView'\nimport { MobileCart } from './MobileCart'\nimport { MobileClosingTimeModal } from './MobileClosingTimeModal'\n\nexport const MobileOrderView = () => {\n  const { order: orderModel } = useRoot()\n  if (!orderModel.hasOrder) {\n    return <Redirect to=\"/\" />\n  }\n  return useObserver(() => (\n    <div className=\"mobile__order__view\">\n      <FoodMenuView />\n      <MobileCart orderId={orderModel.orderId!} />\n      <AddToCartModal />\n      <MobileClosingTimeModal branchId={orderModel.branchId!} />\n    </div>\n  ))\n}\n","import './MobilePickupList.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { PrimaryButton, SecondaryButton } from '../../common/Buttons'\nimport { ShopAddress } from '../../common/ShopAddress'\nimport { GPickupBranch } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { ShopStatusDisplay } from '../shop/ShopStatusDisplay'\n\ninterface IProps {\n  branches: ReadonlyArray<GPickupBranch.Fragment>\n  onSelect(site: GPickupBranch.Fragment): void\n  onShowMap(site: GPickupBranch.Fragment): void\n  onPrefetch(branchId: ID): void\n}\n\nconst StatusDisplayPosition = styled.div``\n\nconst MobilePickupList: React.FC<IProps> = ({\n  branches,\n  onSelect,\n  onShowMap,\n  onPrefetch,\n}) => {\n  const renderBranch = (branch: GPickupBranch.Fragment) => {\n    return (\n      <div\n        className=\"mobile__pickup__list__item\"\n        data-testid=\"MobilePickupList\"\n        key={branch.id}\n      >\n        <div className=\"mobile__pickup__list__header\">{branch.name}</div>\n        <ShopAddress address={branch.address} />\n        <StatusDisplayPosition>\n          <ShopStatusDisplay\n            status={branch}\n            deliveryTime={branch.defaultDeliveryTime}\n            pickupTime={branch.defaultPickupTime}\n          />\n        </StatusDisplayPosition>\n\n        <div className=\"mobile__pickup__list__buttons\">\n          <SecondaryButton onClick={() => onShowMap(branch)}>\n            <span className=\"flaticon-signs\">\n              {i18n.t`Show on map`.toLocaleUpperCase()}\n            </span>\n          </SecondaryButton>\n          {branch.pickupEnabled ? (\n            <PrimaryButton\n              onClick={() => onSelect(branch)}\n              onMouseEnter={() => onPrefetch(branch.id)}\n            >\n              <span className=\"flaticon-mark\">\n                {i18n.t`Choose`.toLocaleUpperCase()}\n              </span>\n            </PrimaryButton>\n          ) : (\n            <PrimaryButton disabled={true}>\n              <span className=\"flaticon-mark\">\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </span>\n            </PrimaryButton>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"mobile__pickup__list\">\n      {branches && branches.map(renderBranch)}\n    </div>\n  )\n}\n\nexport default MobilePickupList\n","import React, { PureComponent } from 'react'\nimport { Marker } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { BaseMap } from '../../common/BaseMap'\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { GPickupBranch } from '../../graph/types'\nimport { gpsToLatLng } from '../../helpers/gps'\nimport { i18n } from '../../i18n'\nimport { TMapModel } from '../../models/MapModel'\n\ninterface IProps {\n  model: TMapModel\n  branch: Maybe<GPickupBranch.Fragment>\n  onSelect(): void\n}\n\nconst ButtonStripeContainerStyled = styled.div`\n  margin-top: 2rem;\n  z-index: 10;\n`\n\nclass MobilePickupMap extends PureComponent<IProps> {\n  componentDidMount() {\n    this.panToBranch()\n  }\n  componentDidUpdate() {\n    this.panToBranch()\n  }\n  panToBranch() {\n    const { model, branch } = this.props\n    if (branch) {\n      model.panToLocation(branch.gps)\n    }\n  }\n  render() {\n    const { model, branch, onSelect } = this.props\n    const latlng = branch\n      ? gpsToLatLng({\n          latitude: Number(branch.gps.latitude),\n          longitude: Number(branch.gps.longitude),\n        })\n      : undefined\n    return (\n      <div>\n        <div className=\"mobile__map__view\">\n          <BaseMap model={model}>\n            <Marker position={latlng} />\n          </BaseMap>\n        </div>\n        {branch && branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                onClick={onSelect}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Choose branch`.toLocaleUpperCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n        {branch && !branch.pickupEnabled && (\n          <ButtonStripeContainerStyled>\n            <ButtonStripe>\n              <PrimaryButton\n                disabled={true}\n                data-testid=\"mobilePickupMap__SubmitButton\"\n              >\n                {i18n.t`Delivery only`.toLocaleLowerCase()}\n              </PrimaryButton>\n            </ButtonStripe>\n          </ButtonStripeContainerStyled>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default MobilePickupMap\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { useRoot } from '../../app/useRoot'\nimport { GPickupBranch } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport {\n  QueryPickupMapBranch,\n  QueryPickupMapBrand,\n} from '../map/PickupMap.graphql'\nimport MobileHeader from './MobileHeader'\nimport MobilePickupList from './MobilePickupList'\nimport MobilePickupMap from './MobilePickupMap'\n\ninterface IRouteParams {\n  branchId?: string\n}\n\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nexport const MobilePickupView: React.FC<IProps> = ({ history, match }) => {\n  const { order, map, business } = useRoot()\n  const onSelectBranch = async (id: ID) => {\n    await order.createPickupOrder(id)\n    history.push('/order')\n  }\n  const renderHeader = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobileHeader\n      text={branch ? branch.name : i18n.t`Choose branch`}\n      buttonText={i18n.t`Back`}\n      onButtonClick={() => history.goBack()}\n    />\n  )\n  const renderMap = (branch: Maybe<GPickupBranch.Fragment>) => (\n    <MobilePickupMap\n      model={map}\n      branch={branch}\n      onSelect={() => branch && onSelectBranch(branch.id)}\n    />\n  )\n  const renderList = (branches: ReadonlyArray<GPickupBranch.Fragment>) => (\n    <MobilePickupList\n      branches={branches}\n      onShowMap={({ id }) => history.push(`/pickup/${id}`)}\n      onSelect={({ id }) => onSelectBranch(id)}\n      onPrefetch={id => order.prefetchFoodMenu(id)}\n    />\n  )\n\n  const { branchId } = match.params\n\n  return business.isBrand ? (\n    <QueryPickupMapBrand\n      variables={{ brandId: business.brandId! }}\n      renderLoading={!branchId}\n      render={({ branches }) => {\n        const branch =\n          (branches && branches.find(RM.propEq('id', branchId))) || null\n        return (\n          <>\n            {renderHeader(branch)}\n            {branch ? renderMap(branch) : renderList(branches)}\n          </>\n        )\n      }}\n    />\n  ) : (\n    <QueryPickupMapBranch\n      variables={{ branchId: business.branchId! }}\n      renderLoading={false}\n      render={({ branch }, { loading }) => (\n        <>\n          {renderHeader(branch)}\n          {renderMap(branch)}\n        </>\n      )}\n    />\n  )\n}\n","import './MobileSmartBanner.css'\n\nimport { Trans } from '@lingui/macro'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport styled from 'styled-components'\nimport UAParser from 'ua-parser-js'\n\nimport { useRoot } from '../../app/useRoot'\nimport { MobilePlatformEnum, useQSmartBanner } from '../../graph/generated'\nimport { TBannerModel } from '../../models/BannerModel'\n\nconst SmartBannerContainer = styled.div`\n  border-bottom: 1px solid #8f8f8f;\n  height: 81px;\n  position: absolute;\n  z-index: 1;\n  top: 3rem;\n  width: 100%;\n`\n\nexport const MobileSmartBanner = observer(() => {\n  const { business } = useRoot()\n  const platform = getPlatformType()\n\n  let showBanner: Maybe<TBannerModel> = null\n  if (business.isValid && platform !== null) {\n    const banner = business.ensureBannerForCurrentBranch()\n    if (banner.shouldBeVisible) {\n      showBanner = banner\n    }\n  }\n\n  const { data, loading } = useQSmartBanner(\n    {\n      branchId: business.branchId!,\n      platform: platform!,\n    },\n    {\n      skip: showBanner === null,\n    },\n  )\n\n  if (showBanner === null || loading || !data.app) {\n    return null\n  }\n\n  const { app } = data\n\n  const wrapperClassName = `smartbanner smartbanner-ios smartbanner-top`\n\n  return (\n    <SmartBannerContainer>\n      <div className={wrapperClassName}>\n        <div className=\"smartbanner-container\">\n          <a className=\"smartbanner-close\" onClick={showBanner.setClosedNow}>\n            &times;\n          </a>\n          <span\n            className=\"smartbanner-icon\"\n            style={{ backgroundImage: `url(${app.icon})` }}\n          />\n          <div className=\"smartbanner-info\">\n            <div className=\"smartbanner-title\">{app.title}</div>\n            <div className=\"smartbanner-description\">\n              <Trans>Free</Trans>\n            </div>\n          </div>\n          <div className=\"smartbanner-wrapper\">\n            <a\n              href={app.url}\n              onClick={showBanner.setInstalledNow}\n              className=\"smartbanner-button\"\n            >\n              <span className=\"smartbanner-button-text\">\n                <Trans>Show app</Trans>\n              </span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </SmartBannerContainer>\n  )\n})\n\nexport function getPlatformType(): Maybe<MobilePlatformEnum> {\n  const agent = new UAParser(window.navigator.userAgent)\n  const os = agent.getOS()\n  if (os.name === 'iOS') {\n    return MobilePlatformEnum.Ios\n  } else if (os.name === 'Android') {\n    return MobilePlatformEnum.Android\n  }\n  return null\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport { AppleBanner } from '../segments/mobile/AppleBanner'\nimport { MobileConfirmView } from '../segments/mobile/MobileConfirmView'\nimport { MobileDeliveryView } from '../segments/mobile/MobileDeliveryView'\nimport { MobileFinishView } from '../segments/mobile/MobileFinishView'\nimport { MobileIntroView } from '../segments/mobile/MobileIntroView'\nimport { MobileOrderView } from '../segments/mobile/MobileOrderView'\nimport { MobilePickupView } from '../segments/mobile/MobilePickupView'\nimport { MobileSmartBanner } from '../segments/mobile/MobileSmartBanner'\n\nconst MobileApp = () => (\n  <>\n    <Container fluid={true}>\n      <Route exact={true} path=\"/\" component={MobileIntroView} />\n      <Route path=\"/pickup/:branchId?\" component={MobilePickupView} />\n      <Route path=\"/delivery\" component={MobileDeliveryView} />\n      <Route path=\"/order\" component={MobileOrderView} />\n      <Route path=\"/confirm\" component={MobileConfirmView} />\n      <Route path=\"/finish\" component={MobileFinishView} />\n    </Container>\n    <Route path={['/', '/finish']} exact={true} component={MobileSmartBanner} />\n    <AppleBanner />\n  </>\n)\n\nexport default MobileApp\n"],"sourceRoot":""}