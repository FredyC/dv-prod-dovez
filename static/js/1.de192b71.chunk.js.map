{"version":3,"sources":["common/WithOrder.tsx","common/ColStyle.tsx","common/ShopStatus.tsx","common/BaseMap.tsx","common/ShopAddress.tsx","common/AlertModal.tsx","common/BackgroundThemed.tsx","common/FormTextInput.tsx","segments/finish/FinishViewFooter.tsx","segments/finish/FinishViewLoader.tsx","segments/finish/FinishViewOrder.tsx","segments/finish/FinishViewSupport.tsx","segments/destination/OrderMethod.tsx","segments/map/DeliveryMap.tsx","common/ButtonStripe.tsx","segments/map/atoms/MapPanning.tsx","segments/shop/ShopClosingTimeModal.tsx","segments/shop/ShopHeaderIcons.tsx","segments/shop/ShopStatusDisplay.tsx","segments/cart/CartView.tsx","segments/cart/AddToCartModal.tsx","segments/cart/CartModal.tsx","segments/cart/CartItemButton.tsx","segments/foodMenu/FoodMenuView.tsx","segments/orderForm/OrderFormStorageNotice.tsx","segments/orderForm/OrderFormView.graphql.ts","segments/orderForm/OrderErrorModal.tsx","segments/orderForm/OrderAgreements.tsx","segments/orderForm/OrderFormInputs.tsx","segments/orderForm/OrderNoteInput.tsx","segments/orderForm/OrderFormSetup.tsx","segments/orderForm/OrderSubmitLine.tsx","common/SubmitSpinner.tsx","segments/orderForm/OrderGoPayModal.tsx","segments/finish/FinishView.graphql.ts","segments/destination/AddressInput.tsx","segments/destination/GeolocationButton.tsx","segments/destination/ResolvedAddress.tsx","segments/destination/SearchInput.tsx","segments/map/AddressSubmit.tsx","segments/map/DeliveryMap.graphql.ts","segments/map/DeliveryMapPanning.tsx","segments/shop/logo-commerce-01.svg","segments/shop/logo-commerce-02.svg","segments/shop/logo-doveze.svg","segments/shop/logo-gopay.png","segments/sidedishPicker/SidedishPicker.tsx","segments/sidedishPicker/CategoryValidationMessage.tsx","segments/sidedishPicker/SidedishCheckbox.tsx","segments/cart/CartOrderButton.tsx","segments/cart/CartContents.tsx","segments/cart/CartDiscounts.tsx","segments/cart/CartItem.tsx","segments/cart/EditCartItemButton.tsx","segments/cart/RemoveCartItemButton.tsx","segments/cart/CartTotals.tsx","segments/cart/CartIsEmpty.tsx","segments/cart/ChangeCartModal.tsx","segments/foodMenu/CategoryNavigator.tsx","segments/foodMenu/FoodMenu.tsx","segments/foodMenu/FoodCategory.tsx","segments/foodMenu/FoodMenuItem.tsx","segments/foodMenu/LinkToCart.tsx","segments/foodMenu/OrderLimitModal.tsx","common/FormInputCheckbox.tsx","segments/orderForm/OrderEmailInput.tsx","segments/orderForm/OrderNameInput.tsx","segments/orderForm/OrderPhoneInput.tsx","segments/orderForm/OrderPromoInput.tsx","hooks/useGuardedMutation.ts","segments/orderForm/OrderPromoInput.graphql.ts","segments/orderForm/OrderFormAutoFill.tsx"],"names":["_react","__webpack_require__","_reactRouter","_WithRoot","render","observe","redirect","default","createElement","WithRoot","order","hasOrder","Redirect","to","_reactstrap","children","Col","className","sm","md","lg","xl","_dateFns","ShopStatus","PureComponent","[object Object]","this","timer","props","timedUpdate","update","forceUpdate","setTimeout","clearTimeout","status","now","Date","openThresholdInMinutes","closeThresholdInMinutes","isOpen","willCloseAt","willOpenAt","decision","isSoon","openingIn","differenceInMinutes","closingIn","time","threshold","Math","abs","defaultProps","_mobxReactLite","_interopRequireDefault","_reactGoogleMaps","_styledComponents","MapContainerStyled","div","withConfig","displayName","MapElement","BaseMapContainer","withGoogleMap","Fragment","model","useObserver","containerElement","data-testid","mapElement","GoogleMap","ref","setMapRef","zoom","center","onCenterChanged","updatePosition","onZoomChanged","updateZoom","onClick","options","streetViewControl","mapTypeControl","fullscreenControl","zoomControlOptions","position","google","maps","ControlPosition","RIGHT_TOP","getMapOptions","_i18n","address","location","i18n","_","street","houseNumber","city","_a","headerText","onClose","modalProps","__rest","Modal","_extends","toggle","ModalHeader","tag","Container","ModalBody","BackgroundThemed","imageName","fallbackColor","fixed","size","component","otherProps","theme","_reactForm","field","validate","showFeedback","inputProps","Field","fieldApi","Input","value","onChange","e","setValue","target","onBlur","setTouched","invalid","touched","Boolean","error","FormFeedback","_react2","_Buttons","_Responsive","CenteredButtonContainer","finish","androidApp","iosApp","Desktop","Trans","id","href","url","Button","color","PrimaryRoutedButton","toLocaleUpperCase","Mobile","style","textAlign","_WithOrder","_FinishView","WithOrder","QueryFinishView","variables","branchId","orderId","data","_types","_ramda","HeaderThemed","primary","PriceThemed","PriceCornerThemed","orderPayments","some","hasMethod","PaymentGateEnum","Cash","Gopay","getPaymentInfo","items","map","item","OrderItem","key","totalSum","getPaymentPrice","formattedValue","RM","pathEq","recipe","sideDishes","nameLabel","length","path","join","PhoneNumberLinkStyled","a","branch","phone","_mobxReact","OrderMethodButton","orderModel","orderMethod","onPrefetch","Observer","SelectButtonThemed","selected","onMouseEnter","useOrderMethod","data-testselected","DeliveryTypeEnum","Messenger","identity","Pickup","prefetchPickup","_mobx","_interopRequireWildcard","_reactApolloHooks","_gps","_AddressInput","_AddressSubmit","_DeliveryMap2","_DeliveryMapPanning","onConfirm","business","useRoot","useQuery","InitialMapLocationQuery","onSubmit","useCallback","__awaiter","setBranch","createDeliveryOrder","useDisposable","when","isValid","validateUserLocation","DeliveryMapPanning","initialLocation","gpsCoordinates","latLng","Marker","defaultDraggable","onDragEnd","withUserLocation","latLngToGps","AddressInput","AddressSubmit","enabled","isDeliveryAddress","prefetchFoodMenu","gps","autorun","isReady","panToLocation","_AlertModal","_ShopStatus","user","AlertModal","closingTimeAlertHidden","hideClosingTime","values","_ColStyle","_logoCommerce","_logoCommerce2","_logoDoveze","_logoGopay","ColStyle","src","alt","StatusDisplayOpen","span","StatusDisplayClosed","s","0","_AddToCartModal","_CartContents","_CartIsEmpty","_CartView2","_ChangeCartModal","AddToCartModal","ChangeCartModal","root","QueryCartView","renderLoading","countWares","CartContents","rootModel","CartIsEmpty","_reactRouterDom","_graph","_OrderModel","_CartModal","QueryCart","buildQuery","OrderCartForRecipeQuery","Route","match","history","recipeId","params","renderError","Alert","loading","isMobile","CartModal","addFromRecipeMobile","Promise","resolve","addFromRecipe","goBack","isLoading","_SidedishPicker","_CartOrderButton","initialSelection","selection","observable","array","autoFocus","backdrop","fade","descriptionLabel","SidedishPicker","onToggle","sidedishId","includes","remove","push","CartOrderButton","Array","from","CartItemButtonStyled","useColor","css","CartItemButtonIcon","icon","data_testid","_CategoryNavigator","_FoodMenu","_FoodMenuView","_OrderLimitModal","QueryFoodMenu","wareCategories","OrderLimitModal","categories","QueryFoodMenuCartPresence","FoodMenu","inCart","reduce","result","getCartPresence","orderItemCount","shouldUpdate","_OrderFormView","NoticeButton","StorageNotice","mediaDesktop","mediaMobile","QueryOrderForm","skip","rememberForm","setFormRememberYes","setFormRememberNo","_graphqlTag","OrderFormQuery","hasErrors","clearErrors","submitErrors","idx","_FormInputCheckbox","ButtonStyled","GdprAgreementStyled","descOpen","useRef","current","toggleId","agreements","agreement","isConfirmed","display","hideConfirmed","FormInputCheckbox","checked","isMandatory","dangerouslySetInnerHTML","__html","name","description","toLocaleLowerCase","Collapse","_OrderEmailInput","_OrderNameInput","_OrderNoteInput","_OrderPhoneInput","_OrderPromoInput","OrderNameInput","OrderPhoneInput","OrderEmailInput","OrderNoteInput","isTooLong","trim","OrderNoteInputValidator","ingredientsDescription","FormGroup","type","placeholder","title","valid","FormText","MAX_LENGTH","_hooks","_logger","_sentry","_OrderFormAutoFill","useEffect","isVamInitialized","initVam","updateVam","formState","formApi","formValue","formAgreement","find","propEq","Object","assign","err","reportError","useDebounceCallback","Form","defaultValues","firstname","lastname","email","phonePrefix","defaultPhonePrefix","note","payment","getFormValues","validateOnMount","submitOrder","replace","logOrder","submitForm","OrderFormAutoFill","onFill","setAllValues","_SubmitSpinner","canSubmit","PrimaryButton","disabled","isSubmitting","_reactSpinkit","withTheme","fadeIn","_Pacman","TextPadding","isGoPayChecking","noMargin","_fragments","FinishViewOrderFragment","CartItemFragment","PriceFragment","FinishViewQuery","_GeolocationButton","_ResolvedAddress","_SearchInput","AddressInputStyled","AddressInputBoxStyled","InputGroup","isVisible","hasAddress","isResolving","onValidClick","clearAddress","autoComplete","onSearch","withUserAddress","isSearching","attemptGeolocation","isGeolocationAvailable","hasFinishedSearch","isResolved","NoMouseAlert","isStreetAddress","inDeliveryLocation","renderErrorMessage","secondary","GeolocationButton","InputGroupAddon","addonType","ResolvedAddress","_classnames","_debounce","Component","state","ev","setState","onKeyPress","clear","inputRef","onInputMount","setFocus","nextProps","focus","isHidden","address__input__hidden","innerRef","_ButtonStripe","_MapPanning","reaction","clickPoint","clearClickPoint","panToGps","useFullComputed","geoPoint","logMap","geolocationPoint","MapPanning","get","module","exports","p","_CategoryValidationMessage","_SidedishCheckbox","category","minCount","maxCount","sidedish","SidedishCheckbox","isSelected","canBeSelected","SidedishCheckboxThemed","tertiary","tertiaryText","tertiaryHover","outline","price","isConfirming","box","set","_CartDiscounts","_CartItem","_CartTotals","CartItem","isActive","lastActiveRecipeId","onEdit","setUsedRecipeId","CartDiscounts","CartTotals","discounts","code","totalDiscount","_EditCartItemButton","_RemoveCartItemButton","EditButtonsContainerStyled","CartItemStyled","RemoveCartItemButton","itemId","automatic","EditCartItemButton","sideDishCount","_CartItemButton","button","CartItemButton","Link","removeItemFromCart","_color","CartItemSummaryTotalThemed","alpha","hsl","string","coverPrice","transportFee","CartIsEmptyThemed","OrderCartForItemQuery","updateItem","_reactScroll","_reactSwipeable","_reactTruncate","_recompose","ContainerByPlatform","scroll","onMounted","onSwiping","deltaX","scrollLeft","onSwiped","isDesktop","CategoryNavigator","setActiveCategoryIndex","activeCategoryIndex","active","onSetActive","offset","smooth","spy","pictogram","lines","compose","withState","decorate","_FoodCategory","_FoodMenuItem","FoodMenuStyled","FoodMenuListStyled","config","orderItemsMax","canAddToCart","orderLimitReached","recipes","showOrderLimit","prefetchFood","FoodCategoryStyled","FoodCategoryTitleStyled","Element","_LinkToCart","FoodMenuItemStyled","FoodMenuItemImage","img","FoodMenuItemPriceCorner","FoodMenuItemPrice","FoodMenuItemCount","LinkToCart","hasSidedish","image","LinkStyled","pathname","orderLimitAlertHidden","hideOrderLimit","CheckboxContainerStyled","CheckboxStyled","LabelStyled","defaultValue","_FormTextInput","emailRx","OrderEmailInputValidator","test","FormTextInput","OrderPhoneInputValidator","OrderPhonePrefixInputValidator","width","_useGuardedMutation","CodesPanel","OrderPromoInputUI","codes","onCodeAdd","onCodeRemove","autoSubmitAfterTimeout","isValidating","setValidating","useState","addCode","then","catch","finally","onKeyDown","preventDefault","onPaste","SecondaryButton","OrderPromoCodesQuery","suspend","addCodeMutation","useGuardedMutation","AddOrderPromoMutation","refetchQueries","addOrderPromoCode","userErrors","submitFailed","removeCodeMutation","RemoveOrderPromoMutation","promoCodes","codeId","mutation","defaultMessage","handleGraphQLErrors","errors","filter","window","alert","prop","handleError","hasOwnProperty","isApolloError","networkError","graphQLErrors","mutate","useMutation","PromoCodeFragment"],"mappings":"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","file":"static/js/1.de192b71.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router'\n\nimport { TOrderModel } from '../models/OrderModel'\nimport { WithRoot } from './WithRoot'\n\ninterface IProps {\n  render(root: TOrderModel): ReactNode\n  observe?: boolean\n  redirect?: boolean\n}\n\nexport const WithOrder: React.SFC<IProps> = ({\n  render,\n  observe,\n  redirect = false,\n}) => (\n  <WithRoot\n    observe={observe}\n    render={({ order }) => {\n      return order.hasOrder ? (\n        render(order)\n      ) : redirect ? (\n        <Redirect to=\"/\" />\n      ) : null\n    }}\n  />\n)\n","import React from 'react'\nimport { Col } from 'reactstrap'\n\nexport const ColStyle = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"12\" md=\"12\" lg=\"10\" xl=\"8\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleLeft = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"8\" md=\"8\" lg=\"6\" xl=\"5\">\n    {children}\n  </Col>\n)\n\nexport const ColStyleRight = ({ children }) => (\n  <Col className=\"pl-sm-0\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\">\n    {children}\n  </Col>\n)\n","import { differenceInMinutes } from 'date-fns'\nimport { PureComponent } from 'react'\n\nimport { GCompanyBranchStatus } from '../graph/types'\n\nexport type TStatus = GCompanyBranchStatus.Fragment\n\nexport type TStatusDecision = 'Open' | 'Closed' | 'ClosingSoon' | 'OpeningSoon'\n\nexport interface IShopStatusRender {\n  decision: TStatusDecision\n  openingIn: number\n  closingIn: number\n}\n\ninterface IProps {\n  status: TStatus\n  render(opts: IShopStatusRender): ReactNode\n  openThresholdInMinutes?: number\n  closeThresholdInMinutes?: number\n  timedUpdate?: boolean\n  now?: Date\n}\n\nexport class ShopStatus extends PureComponent<IProps> {\n  static defaultProps = {\n    openThresholdInMinutes: 30,\n    closeThresholdInMinutes: 30,\n  }\n  timer: Maybe<NodeJS.Timer> = null\n  componentDidMount() {\n    if (!this.props.timedUpdate) {\n      return\n    }\n    const update = () => {\n      this.forceUpdate()\n      this.timer = setTimeout(update, 30 * 1000)\n    }\n    update()\n  }\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  }\n  render() {\n    const {\n      status,\n      render,\n      now = new Date(),\n      openThresholdInMinutes,\n      closeThresholdInMinutes,\n    } = this.props\n\n    const { isOpen, willCloseAt, willOpenAt } = status\n\n    let decision: TStatusDecision\n\n    if (isOpen) {\n      decision = isSoon(willCloseAt, closeThresholdInMinutes!, now)\n        ? 'ClosingSoon'\n        : 'Open'\n    } else {\n      decision = isSoon(willOpenAt, openThresholdInMinutes!, now)\n        ? 'OpeningSoon'\n        : 'Closed'\n    }\n\n    return render({\n      decision,\n      get openingIn() {\n        return willOpenAt ? differenceInMinutes(willOpenAt, new Date()) : 0\n      },\n      get closingIn() {\n        return willCloseAt ? differenceInMinutes(willCloseAt, new Date()) : 0\n      },\n    })\n  }\n}\n\nfunction isSoon(time: Maybe<string>, threshold: number, now: Date) {\n  return time ? Math.abs(differenceInMinutes(time, now)) <= threshold : false\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { GoogleMap, GoogleMapProps, withGoogleMap } from 'react-google-maps'\nimport styled from 'styled-components'\n\nimport { TMapModel } from '../models/MapModel'\n\ninterface IBaseMapProps extends GoogleMapProps {\n  model: TMapModel\n}\n\nconst MapContainerStyled = styled.div`\n  border-radius: 0 0 0.5rem 0.5rem;\n  overflow: hidden;\n  height: calc(100% - 3.75rem);\n`\n\nconst MapElement = styled.div`\n  height: 100%;\n  position: relative;\n`\n\nconst BaseMapContainer = withGoogleMap(({ children }) => <>{children}</>)\n\nconst getMapOptions = (): google.maps.MapOptions => {\n  return {\n    streetViewControl: false,\n    mapTypeControl: false,\n    fullscreenControl: false,\n    zoomControlOptions: {\n      position: google.maps.ControlPosition.RIGHT_TOP,\n    },\n  }\n}\n\nexport const BaseMap: React.FC<IBaseMapProps> = ({ model, children }) => {\n  return useObserver(() => (\n    <BaseMapContainer\n      containerElement={\n        <MapContainerStyled\n          className=\"map__container\"\n          data-testid=\"googleMap\"\n        />\n      }\n      mapElement={<MapElement />}\n    >\n      <GoogleMap\n        ref={model.setMapRef}\n        zoom={model.zoom}\n        center={model.center}\n        onCenterChanged={model.updatePosition}\n        onZoomChanged={model.updateZoom}\n        onClick={model.onClick}\n        options={getMapOptions()}\n      >\n        {children}\n      </GoogleMap>\n    </BaseMapContainer>\n  ))\n}\n","import React from 'react'\n\nimport { GAddress } from '../graph/types'\nimport { i18n } from '../i18n'\n\ninterface IProps {\n  address?: GAddress.Fragment\n}\n\nexport const ShopAddress: React.SFC<IProps> = ({ address }) => {\n  if (!address || !address.location) {\n    return <span>{i18n.t`Unknown address`}</span>\n  }\n  const { location } = address\n  return (\n    <span>{`${location.street} ${location.houseNumber},\\n ${\n      location.city\n    }`}</span>\n  )\n}\n","import './Modal.css'\n\nimport React from 'react'\nimport {\n  Container,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalProps,\n} from 'reactstrap'\n\ninterface IProps extends ModalProps {\n  isOpen: boolean\n  headerText: string\n  onClose?(): void\n}\n\nexport const AlertModal: React.SFC<IProps> = ({\n  isOpen,\n  headerText,\n  onClose,\n  children,\n  ...modalProps\n}) => (\n  <Modal\n    isOpen={isOpen}\n    toggle={onClose}\n    className=\"modal__container\"\n    {...modalProps}\n    data-testid=\"alertModal\"\n  >\n    <ModalHeader tag={Container} toggle={onClose} className=\"modal__header\">\n      <span>{headerText}</span>\n    </ModalHeader>\n    <ModalBody className=\"modal__body\">\n      <div className=\"modal__body__content\">{children}</div>\n    </ModalBody>\n  </Modal>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n  className: string\n  imageName: string\n  fallbackColor?: string\n  fixed?: boolean\n  size?: 'cover' | 'contain' | 'inherit'\n  children?: any\n  component?: any\n}\n\nexport const BackgroundThemed: React.SFC<IProps> = ({\n  imageName,\n  fallbackColor = '#5b453c',\n  fixed = false,\n  size = 'inherit',\n  children,\n  component = 'div',\n  ...otherProps\n}) =>\n  React.createElement(\n    styled(component)`\n      background-image: ${props => `url(${props.theme[imageName]})`};\n      background-attachment: ${props => (fixed ? 'fixed' : 'inherit')};\n      background-repeat: no-repeat;\n      background-position: left top;\n      background-size: ${props => size};\n    `,\n    otherProps,\n    children,\n  )\n\nexport default BackgroundThemed\n","import React from 'react'\nimport { Field, FieldProps } from 'react-form'\nimport { FormFeedback, Input, InputProps } from 'reactstrap'\n\ninterface IProps\n  extends Omit<FieldProps<string>, 'render' | 'children'>,\n    Omit<InputProps, 'defaultValue'> {\n  showFeedback?: boolean\n}\n\nexport const FormTextInput: React.SFC<IProps> = ({\n  field,\n  validate,\n  showFeedback = false,\n  ...inputProps\n}) => (\n  <Field\n    field={field}\n    validate={validate}\n    render={fieldApi => (\n      <>\n        <Input\n          {...inputProps}\n          value={fieldApi.value}\n          onChange={e => fieldApi.setValue(e.target.value)}\n          onBlur={() => fieldApi.setTouched(true)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n        />\n        {showFeedback && <FormFeedback>{fieldApi.error}</FormFeedback>}\n      </>\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { PrimaryRoutedButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFinishView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  finish: GFinishView.Query\n}\nconst CenteredButtonContainer = styled.div`\n  text-align: center;\n`\n\nexport const FinishViewFooter: React.SFC<IProps> = ({\n  finish: { androidApp, iosApp },\n}) => (\n  <>\n    <Desktop>\n      {(androidApp || iosApp) && (\n        <div className=\"finish__view__apps__propagation\">\n          <div className=\"finish__view__apps__propagation__header\">\n            <Trans>What about mobile app?</Trans>\n          </div>\n          <div className=\"finish__view__apps__propagation__description\">\n            <Trans>\n              We have prepared mobile app, so you could order from anywhere!\n            </Trans>\n          </div>\n\n          {androidApp && (\n            <a href={androidApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                Google Play\n              </Button>\n            </a>\n          )}\n\n          {iosApp && (\n            <a href={iosApp.url}>\n              <Button\n                className=\"finish__view__apps__propagation__button\"\n                color=\"secondary\"\n              >\n                App Store\n              </Button>\n            </a>\n          )}\n        </div>\n      )}\n      <CenteredButtonContainer>\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </CenteredButtonContainer>\n    </Desktop>\n\n    <Mobile>\n      <div\n        className=\"finish__view__submit__line\"\n        style={{ textAlign: 'center' }}\n      >\n        <div className=\"finish__view__submit__line__strip\" />\n        <PrimaryRoutedButton\n          to=\"/\"\n          className=\"finish__view__submit__line__button\"\n          data-testid=\"finishViewFooterBackButton\"\n        >\n          {i18n.t`Back to home page`.toLocaleUpperCase()}\n        </PrimaryRoutedButton>\n      </div>\n    </Mobile>\n  </>\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GFinishView } from '../../graph/types'\n\nimport { QueryFinishView } from './FinishView.graphql'\n\ninterface IProps {\n  render(result: GFinishView.Query): ReactNode\n}\n\nexport const FinishViewLoader: React.SFC<IProps> = ({ render }) => (\n  <WithOrder\n    redirect={true}\n    render={order => (\n      <QueryFinishView\n        variables={{\n          branchId: order.branchId!,\n          orderId: order.orderId!,\n        }}\n        render={data => render(data)}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishViewOrder, PaymentGateEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GFinishViewOrder.Fragment\n}\n\nconst HeaderThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceThemed = styled.div`\n  background-color: ${({ theme }) => theme.primary};\n`\n\nconst PriceCornerThemed = styled.div`\n  border-top-color: ${({ theme }) => theme.primary} !important;\n`\n\nexport const FinishViewOrder: React.SFC<IProps> = ({ order }) => (\n  <>\n    <HeaderThemed className=\"finish__view__header\">\n      <div className=\"finish__view__header__inner\">\n        <span className=\"flaticon-transport-1 finish__view__header__icon\" />\n        <h3>\n          <Trans>It's done! Thank you :-)</Trans>\n        </h3>\n      </div>\n    </HeaderThemed>\n    <h4>\n      <Trans>Your order was successfully accepted!</Trans>{' '}\n      {getPaymentInfo(order)}\n    </h4>\n    <div className=\"finish__view__items\">\n      <div className=\"finish__view__items__look__to\">\n        <Trans>You can look forward to:</Trans>\n      </div>\n      {order.items.map(item => (\n        <OrderItem key={item.id} {...item} />\n      ))}\n      <PriceCornerThemed className=\"finish__view__items__price__corner\" />\n      <PriceThemed className=\"finish__view__items__price\">\n        {getPaymentPrice(order)} <b>{order.totalSum.formattedValue}</b>\n      </PriceThemed>\n    </div>\n  </>\n)\n\nconst hasMethod = RM.pathEq(['paymentMethod', 'paymentType', 'enum'])\n\nfunction getPaymentInfo({ orderPayments }: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`You will pay at pickup.`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`You have payed.`\n  }\n  return null\n}\n\nfunction getPaymentPrice({\n  orderPayments,\n  totalSum,\n}: GFinishViewOrder.Fragment) {\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Cash))) {\n    return i18n.t`Total cost to be payed:`\n  }\n  if (orderPayments.some(hasMethod(PaymentGateEnum.Gopay))) {\n    return i18n.t`Total cost payed:`\n  }\n  return null\n}\n\nfunction OrderItem({ recipe, sideDishes }: GFinishViewOrder.Items) {\n  return (\n    <div>\n      <b>{recipe.nameLabel}</b>\n      {sideDishes.length\n        ? ` + ${sideDishes.map(RM.path(['recipe', 'nameLabel'])).join(',')}`\n        : null}\n    </div>\n  )\n}\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GFinishView } from '../../graph/types'\n\ninterface IProps {\n  branch: GFinishView.CompanyBranch\n}\n\nconst PhoneNumberLinkStyled = styled.a`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const FinishViewSupport: React.SFC<IProps> = ({ branch }) => (\n  <div className=\"finish__view__support\">\n    <h4>\n      <Trans>Any question? Do you have a problem? Call:</Trans>\n    </h4>\n    <span className=\"flaticon-technology finish__view__support__icon\" />\n    <span className=\"finish__view__support__phone\">\n      <PhoneNumberLinkStyled href={`tel:${branch.phone}`}>\n        {branch.phone}\n      </PhoneNumberLinkStyled>\n    </span>\n  </div>\n)\n","import './OrderMethod.css'\n\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { SelectButtonThemed } from '../../common/Buttons'\nimport { WithRoot } from '../../common/WithRoot'\nimport { DeliveryTypeEnum } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { i18n } from '../../i18n'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  onChange?(order: TOrderModel): void\n}\n\ninterface IButtonProps {\n  orderModel: TOrderModel\n  orderMethod: DeliveryTypeEnum\n  onChange(order: TOrderModel): void\n  onPrefetch?(): void\n}\n\nconst OrderMethodButton: React.SFC<IButtonProps> = ({\n  orderModel,\n  orderMethod,\n  onChange,\n  onPrefetch,\n  children,\n}) => (\n  <Observer>\n    {() => (\n      <SelectButtonThemed\n        selected={orderModel.orderMethod === orderMethod}\n        onMouseEnter={onPrefetch}\n        onClick={() => {\n          orderModel.useOrderMethod(orderMethod)\n          onChange(orderModel)\n        }}\n        data-testid={`orderMethod-${orderMethod}`}\n        data-testselected={orderModel.orderMethod === orderMethod}\n      >\n        {children}\n      </SelectButtonThemed>\n    )}\n  </Observer>\n)\n\nexport const OrderMethod: React.SFC<IProps> = ({ onChange }) => (\n  <WithRoot\n    observe={false}\n    render={({ order }) => (\n      <div className=\"order__method\">\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Messenger}\n          onChange={onChange || RM.identity}\n        >\n          <span className=\"flaticon-transport\" />\n          {i18n.t`I want to deliver`.toLocaleUpperCase()}\n        </OrderMethodButton>\n        <OrderMethodButton\n          orderModel={order}\n          orderMethod={DeliveryTypeEnum.Pickup}\n          onChange={onChange || RM.identity}\n          onPrefetch={order.prefetchPickup}\n        >\n          <span className=\"flaticon-restaurant\" />\n          {i18n.t`I'll pick up`.toLocaleUpperCase()}\n        </OrderMethodButton>\n      </div>\n    )}\n  />\n)\n","import './DeliveryMap.css'\n\nimport { when } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React, { useCallback } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { Marker } from 'react-google-maps'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GInitialLocation } from '../../graph/types'\nimport { latLngToGps } from '../../helpers/gps'\nimport { AddressInput } from '../destination/AddressInput'\nimport { AddressSubmit } from './AddressSubmit'\nimport { InitialMapLocationQuery } from './DeliveryMap.graphql'\nimport { DeliveryMapPanning } from './DeliveryMapPanning'\n\ninterface IProps {\n  onConfirm(): void\n}\n\nexport const DeliveryMap: React.FC<IProps> = ({ onConfirm }) => {\n  const { business, order, location } = useRoot()\n  const { data } = useQuery<GInitialLocation.Query>(InitialMapLocationQuery)\n\n  const onSubmit = useCallback(\n    async () => {\n      if (location.branchId) {\n        order.setBranch(location.branchId)\n      }\n      await order.createDeliveryOrder()\n      onConfirm()\n    },\n    [onConfirm],\n  )\n\n  useDisposable(() =>\n    when(() => business.isValid, location.validateUserLocation),\n  )\n\n  return useObserver(() => (\n    <>\n      <DeliveryMapPanning\n        initialLocation={data.initialLocation.gpsCoordinates}\n      />\n      {location.latLng ? (\n        <Marker\n          position={location.latLng}\n          defaultDraggable={true}\n          onDragEnd={({ latLng }) => {\n            location.withUserLocation(latLngToGps(latLng))\n          }}\n        />\n      ) : null}\n      <div className=\"delivery__map__address\">\n        <AddressInput />\n      </div>\n      <div className=\"delivery__map__submit\">\n        <AddressSubmit\n          enabled={location.isDeliveryAddress}\n          onClick={onSubmit}\n          onPrefetch={() => {\n            if (location.branchId) {\n              order.prefetchFoodMenu(location.branchId)\n            }\n          }}\n        />\n      </div>\n    </>\n  ))\n}\n","import './ButtonStripe.css'\n\nimport React from 'react'\n\nconst ButtonStripe: React.SFC = ({ children }) => (\n  <div className=\"button__stripe\">\n    <div className=\"button__stripe__bar\" />\n    <div className=\"button__stripe__button\">{children}</div>\n  </div>\n)\n\nexport default ButtonStripe\n","import { autorun } from 'mobx'\nimport { useDisposable } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { GeoPoint } from '../../../helpers/gps'\nimport { TMapModel } from '../../../models/MapModel'\n\ninterface IProps {\n  gps: GeoPoint | undefined\n  map: TMapModel\n}\n\nexport const MapPanning: React.FC<IProps> = ({ map, gps }) => {\n  useDisposable(\n    () =>\n      autorun(() => {\n        if (map.isReady && gps) {\n          map.panToLocation(gps)\n        }\n      }),\n    [gps],\n  )\n  return null\n}\n","import { Plural, Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { useRoot } from '../../common/WithRoot'\nimport { GCompanyBranchStatus } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nexport const ShopClosingTimeModal: React.FC<IProps> = ({ status }) => {\n  const { user } = useRoot()\n  if (!status) {\n    return null\n  }\n  return (\n    <ShopStatus\n      status={status}\n      render={({ decision, openingIn }) => (\n        <Observer>\n          {() => (\n            <AlertModal\n              isOpen={\n                (decision === 'Closed' || decision === 'OpeningSoon') &&\n                !user.closingTimeAlertHidden\n              }\n              onClose={user.hideClosingTime}\n              headerText={i18n.t`We are closed right now`}\n            >\n              {i18n.t`We're sorry, but we do not accept new orders at this time.`}\n              {decision === 'OpeningSoon' && (\n                <Trans>\n                  You can prepare your order because we are{' '}\n                  <Plural\n                    value={openingIn}\n                    one=\"opening in 1 minute\"\n                    other=\"opening in # minutes\"\n                  />\n                  !\n                </Trans>\n              )}\n            </AlertModal>\n          )}\n        </Observer>\n      )}\n    />\n  )\n}\n","import './ShopHeaderIcons.css'\n\nimport React from 'react'\n\nimport { ColStyle } from '../../common/ColStyle'\n\nimport logoCommerce01 from './logo-commerce-01.svg'\nimport logoCommerce02 from './logo-commerce-02.svg'\nimport logoDoveze from './logo-doveze.svg'\nimport logoGoPay from './logo-gopay.png'\n\nexport const ShopHeaderIcons = () => (\n  <ColStyle>\n    <img\n      src={logoDoveze}\n      className=\"shop__header__icons__doveze\"\n      data-testid=\"ShopHeaderIcons__AppLogo\"\n      alt=\"logo Doveze.cz\"\n    />\n    <img\n      src={logoCommerce02}\n      className=\"shop__header__icons__commerce\"\n      alt=\"MasterCard\"\n    />\n    <img\n      src={logoCommerce01}\n      className=\"shop__header__icons__commerce\"\n      data-testid=\"ShopHeaderIcons__VisaLogo\"\n      alt=\"VISA\"\n    />\n    <img\n      src={logoGoPay}\n      className=\"shop__header__icons__gopay\"\n      alt=\"GoPay\"\n      data-testid=\"ShopHeaderIcons__GoPayLogo\"\n    />\n  </ColStyle>\n)\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { ShopStatus } from '../../common/ShopStatus'\nimport { GCompanyBranchStatus } from '../../graph/types'\n\ninterface IProps {\n  status?: GCompanyBranchStatus.Fragment\n}\n\nconst StatusDisplayOpen = styled.span`\n  font-style: italic;\n  color: #0f9849;\n`\n\nconst StatusDisplayClosed = styled.span`\n  font-style: italic;\n  color: #b40000;\n`\n\nexport const ShopStatusDisplay: React.SFC<IProps> = ({ status }) =>\n  status ? (\n    <ShopStatus\n      status={status}\n      render={s => {\n        switch (s.decision) {\n          case 'Open':\n            return (\n              <StatusDisplayOpen data-testid=\"statusDisplayOpen\">\n                <Trans>We are open</Trans>\n              </StatusDisplayOpen>\n            )\n          case 'OpeningSoon':\n            return (\n              <StatusDisplayClosed>\n                <Plural\n                  value={s.openingIn}\n                  one=\"Opening in 1 minute\"\n                  other=\"Opening in # minutes\"\n                />\n              </StatusDisplayClosed>\n            )\n          case 'ClosingSoon':\n            return (\n              <StatusDisplayOpen>\n                <Plural\n                  value={s.closingIn}\n                  one=\"Closing in 1 minute\"\n                  other=\"Closing in # minutes\"\n                />\n              </StatusDisplayOpen>\n            )\n          case 'Closed':\n            return (\n              <StatusDisplayClosed>\n                <Trans>Closed</Trans>\n              </StatusDisplayClosed>\n            )\n        }\n      }}\n    />\n  ) : null\n","import './CartView.css'\n\nimport React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { AddToCartModal } from './AddToCartModal'\nimport { CartContents } from './CartContents'\nimport { CartIsEmpty } from './CartIsEmpty'\nimport { QueryCartView } from './CartView.graphql'\nimport { ChangeCartModal } from './ChangeCartModal'\n\ninterface IProps {\n  onContentChange?(): void\n}\n\nexport const CartView: React.SFC<IProps> = () => (\n  <WithOrder\n    redirect={true}\n    render={orderModel => (\n      <>\n        <AddToCartModal order={orderModel} />\n        <ChangeCartModal root={orderModel.root} />\n        <QueryCartView\n          variables={{ orderId: orderModel.orderId! }}\n          renderLoading={false}\n          render={({ order }) => (\n            <>\n              {!order || order.countWares === 0 ? (\n                <CartIsEmpty />\n              ) : (\n                <CartContents order={order} rootModel={orderModel.root} />\n              )}\n            </>\n          )}\n        />\n      </>\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { Mobile } from '../../common/Responsive'\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForRecipe } from '../../graph/types'\nimport { TOrderModel } from '../../models/OrderModel'\nimport { OrderCartForRecipeQuery } from '../../models/OrderModel.graphql'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForRecipe.Query,\n  GOrderCartForRecipe.Variables\n>(OrderCartForRecipeQuery)\n\nexport const AddToCartModal: React.SFC<IProps> = ({ order }) => (\n  <Route\n    path=\"/order/add/:recipeId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ recipeId: match.params.recipeId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <Mobile>\n            {isMobile => (\n              <CartModal\n                recipe={data.recipe}\n                onConfirm={sideDishes => {\n                  if (isMobile) {\n                    order.addFromRecipeMobile(match.params.recipeId, sideDishes)\n                    // let the optimistic response happen in this case\n                    return Promise.resolve()\n                  }\n                  return order.addFromRecipe(match.params.recipeId, sideDishes)\n                }}\n                onClose={() => history.goBack()}\n                isLoading={loading}\n              />\n            )}\n          </Mobile>\n        )}\n      />\n    )}\n  />\n)\n","import { Trans } from '@lingui/react'\nimport { observable } from 'mobx'\nimport React from 'react'\nimport { Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport '../../common/Modal.css'\nimport { GCartRecipe } from '../../graph/types'\n\nimport { SidedishPicker } from '../sidedishPicker/SidedishPicker'\nimport { CartOrderButton } from './CartOrderButton'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment | undefined\n  initialSelection?: ID[]\n  isLoading: boolean\n  onConfirm(selection: ID[]): Promise<void>\n  onClose(): void\n}\n\nexport const CartModal: React.SFC<IProps> = ({\n  recipe,\n  initialSelection = [],\n  onConfirm,\n  onClose,\n  isLoading,\n}) => {\n  const selection = observable.array<ID>(initialSelection)\n\n  const onConfirmAndClose = async () => {\n    await onConfirm(Array.from(selection))\n    onClose()\n  }\n\n  const onToggleSidedish = (sidedishId: ID) => {\n    if (selection.includes(sidedishId)) {\n      selection.remove(sidedishId)\n    } else {\n      selection.push(sidedishId)\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={true}\n      toggle={onClose}\n      className=\"modal__container\"\n      autoFocus={true}\n      backdrop=\"static\"\n      fade={false}\n    >\n      <ModalHeader toggle={onClose} tag={Container} className=\"modal__header\">\n        <span>\n          <Trans>Do you want to add something?</Trans>\n        </span>\n      </ModalHeader>\n      <ModalBody className=\"modal__body\">\n        <div className=\"modal__body__content\">\n          {isLoading || !recipe ? null : (\n            <>\n              <h3 className=\"modal__body__food__name\">{recipe.nameLabel}</h3>\n              <span className=\"modal__body__food_description\">\n                {recipe.descriptionLabel}\n              </span>\n              <SidedishPicker\n                recipe={recipe}\n                selection={selection}\n                onToggle={onToggleSidedish}\n              />\n            </>\n          )}\n        </div>\n        <div className=\"modal__body__button__line\">\n          <div className=\"modal__body__button__strip\" />\n          <CartOrderButton\n            selection={selection}\n            onConfirm={onConfirmAndClose}\n            enabled={!isLoading}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface IButtonProps {\n  color: string\n  enabled?: boolean\n  data_testid?: string\n}\n\ninterface IIconProps {\n  icon: string\n}\n\ninterface IProps extends IButtonProps, IIconProps {\n  onClick?(): void\n}\n\nconst CartItemButtonStyled = styled.div<IButtonProps>`\n  display: inline-block;\n  border-radius: 3rem;\n  background: white;\n  width: 1.8rem;\n  height: 1.8rem;\n  text-align: left;\n  vertical-align: top;\n  padding: 0 0 0 0rem;\n  margin: 0.3rem 0.1rem 0 0.1rem;\n  ${getButtonColor};\n  ${getHoverStyle};\n`\n\nfunction getButtonColor({ color, enabled }: IButtonProps) {\n  const useColor = enabled ? color : '#8d8d8d'\n  return css`\n    color: ${useColor};\n    border: 2px solid ${useColor};\n  `\n}\n\nfunction getHoverStyle({ enabled }: IButtonProps) {\n  return enabled\n    ? css`\n        cursor: pointer;\n        &:hover {\n          background: #c9e8d7;\n          color: #1d1d1d;\n          border-color: #1d1d1d;\n        }\n      `\n    : css`\n        cursor: default;\n      `\n}\n\nconst CartItemButtonIcon = styled.span<IIconProps>`\n  &:before {\n    font-size: 0.8rem;\n    margin-left: 0.36rem;\n  }\n`\n\nexport const CartItemButton: React.SFC<IProps> = ({\n  color,\n  icon,\n  onClick,\n  enabled = true,\n  data_testid,\n}) => (\n  <CartItemButtonStyled\n    color={color}\n    enabled={enabled}\n    onClick={onClick}\n    data-testid={data_testid}\n  >\n    <CartItemButtonIcon icon={icon} className={`flaticon-${icon}`} />\n  </CartItemButtonStyled>\n)\n","import React from 'react'\n\nimport { WithOrder } from '../../common/WithOrder'\nimport { GCartPresence } from '../../graph/types'\nimport CategoryNavigator from './CategoryNavigator'\nimport { FoodMenu } from './FoodMenu'\nimport {\n  QueryFoodMenu,\n  QueryFoodMenuCartPresence,\n} from './FoodMenuView.graphql'\nimport { OrderLimitModal } from './OrderLimitModal'\n\nexport const FoodMenuView: React.SFC = () => (\n  <WithOrder\n    render={orderModel => (\n      <QueryFoodMenu\n        variables={{\n          branchId: orderModel.branchId!,\n        }}\n        render={({ wareCategories }) => (\n          <>\n            <OrderLimitModal />\n            <CategoryNavigator categories={wareCategories} />\n            <QueryFoodMenuCartPresence\n              variables={{ orderId: orderModel.orderId! }}\n              renderLoading={false}\n              render={({ order }, { loading }) => (\n                <FoodMenu\n                  categories={wareCategories}\n                  rootModel={orderModel.root}\n                  inCart={getCartPresence(order && order.items)}\n                  orderItemCount={order ? order.items.length : 0}\n                  shouldUpdate={Boolean(order && !loading)}\n                />\n              )}\n            />\n          </>\n        )}\n      />\n    )}\n  />\n)\n\nfunction getCartPresence(items: ReadonlyArray<GCartPresence.Items>) {\n  if (!items) {\n    return {}\n  }\n  return items.reduce((result, item) => {\n    const recipeId = item.recipe.id\n    if (!result[recipeId]) {\n      result[recipeId] = 0\n    }\n    result[recipeId] += 1\n    return result\n  }, {})\n}\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport { Alert, Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { WithRoot } from '../../common/WithRoot'\nimport { QueryOrderForm } from './OrderFormView.graphql'\n\ninterface IProps {}\n\nconst NoticeButton = styled(Button)`\n  font-size: 0.9rem;\n  margin: 0.2rem 1rem;\n  padding: 0.5em 1rem;\n`\n\nconst StorageNotice = styled(Alert)`\n  width: 100%;\n  z-index: 5;\n  ${mediaDesktop`\n    font-size: 0.9rem;\n    position: sticky;\n    bottom: 0;\n  `};\n  ${mediaMobile`\n    position: fixed;\n    top: 5rem;\n    font-size: 0.8rem;\n    `};\n  padding: 0.5rem 1rem;\n  background-color: #d4eddadc;\n`\n\nexport const OrderFormStorageNotice: React.SFC<IProps> = props => (\n  <WithRoot\n    render={root => (\n      <QueryOrderForm\n        skip={!root.order.hasOrder || root.user.rememberForm !== null}\n        variables={{ orderId: root.order.orderId! }}\n        renderLoading={() => null}\n        render={({ order }) => (\n          <Observer>\n            {() =>\n              order.countWares > 0 && root.user.rememberForm === null ? (\n                <StorageNotice data-testid=\"orderFormStorageNotice\">\n                  <p>\n                    <Trans>\n                      This app is using secure storage for keeping filled form\n                      data. It's not cookies, these are stored in your browser\n                      only.\n                    </Trans>\n                  </p>\n\n                  <NoticeButton\n                    color=\"success\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberYes}\n                    data-testid=\"orderFormStorageNotice__Yes\"\n                  >\n                    <Trans>Always remember</Trans>\n                  </NoticeButton>\n                  <NoticeButton\n                    color=\"secondary\"\n                    size=\"sm\"\n                    onClick={root.user.setFormRememberNo}\n                    data-testid=\"orderFormStorageNotice__No\"\n                  >\n                    <Trans>Do not store</Trans>\n                  </NoticeButton>\n                </StorageNotice>\n              ) : null\n            }\n          </Observer>\n        )}\n      />\n    )}\n  />\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderForm } from '../../graph/types'\n\nexport const OrderFormQuery = gql`\n  query GOrderForm($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      countWares\n    }\n  }\n`\n\nexport const QueryOrderForm = buildQuery<\n  GOrderForm.Query,\n  GOrderForm.Variables\n>(OrderFormQuery)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Button, Container, Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nimport '../../common/Modal.css'\nimport { WithOrder } from '../../common/WithOrder'\n\nexport const OrderErrorModal: React.SFC = () => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <Modal\n        isOpen={order.hasErrors}\n        toggle={order.clearErrors}\n        className=\"modal__container\"\n      >\n        <ModalHeader\n          toggle={order.clearErrors}\n          tag={Container}\n          className=\"modal__header\"\n        >\n          <span>\n            <Trans>Order can not be completed</Trans>\n          </span>\n        </ModalHeader>\n        <ModalBody className=\"modal__body\">\n          <div className=\"modal__body__content\">\n            {order.hasErrors &&\n              order.submitErrors!.map((error, idx) => (\n                <div key={idx}>{error}</div>\n              ))}\n          </div>\n          <div className=\"modal__body__button__line\">\n            <div className=\"modal__body__button__strip\" />\n            <Button\n              className=\"modal__body__button\"\n              color=\"primary\"\n              onClick={order.clearErrors}\n            >\n              <Trans>I understand</Trans>\n            </Button>\n            />\n          </div>\n        </ModalBody>\n      </Modal>\n    )}\n  />\n)\n","import { observable } from 'mobx'\nimport { useObserver } from 'mobx-react-lite'\nimport React, { useCallback, useRef } from 'react'\nimport { Button, Collapse } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { FormInputCheckbox } from '../../common/FormInputCheckbox'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TAgreement } from '../../models/OrderModel'\n\nconst ButtonStyled = styled(Button)`\n  padding: 0 0.5rem;\n  font-size: 0.8rem;\n  color: darkgray;\n`\n\nconst GdprAgreementStyled = styled.div`\n  font-size: 0.8rem !important;\n  color: darkgray;\n  margin: 0.5rem 0 0.5rem 0;\n  & .row {\n    margin: 0;\n  }\n`\n\nconst hideConfirmed = (agreement: TAgreement) => {\n  if (agreement.isConfirmed) {\n    // it's necessary to hide confirmed agreements like this\n    // because react-form already has validation errors stored\n    // for mandatory ones and is unable to forget it by not rendering field\n    return { style: { display: 'none' } }\n  }\n  return {}\n}\n\nexport const OrderAgreements: React.FC = () => {\n  const descOpen = useRef(observable.array<ID>([])).current\n  const toggleId = useCallback(\n    (id: ID) => () => {\n      if (descOpen.includes(id)) {\n        descOpen.remove(id)\n      } else {\n        descOpen.push(id)\n      }\n    },\n    [],\n  )\n  const { order } = useRoot()\n  return useObserver(() => (\n    <>\n      {order.agreements.map((agreement, idx) => (\n        <div key={agreement.id} {...hideConfirmed(agreement)}>\n          <FormInputCheckbox\n            field={['agreements', idx, 'isConfirmed']}\n            validate={checked =>\n              agreement.isMandatory && !(agreement.isConfirmed || checked)\n                ? 'Agreement is mandatory'\n                : null\n            }\n            data-testid={`orderAgreement__Check__${agreement.id}`}\n          >\n            <span dangerouslySetInnerHTML={{ __html: agreement.name }} />\n            {agreement.isMandatory && ' * '}\n            {agreement.description && (\n              <>\n                <ButtonStyled\n                  color=\"link\"\n                  onClick={toggleId(agreement.id)}\n                  data-testid={`orderAgreement__MoreButton__${agreement.id}`}\n                >\n                  {descOpen.includes(agreement.id)\n                    ? i18n.t`Less`.toLocaleLowerCase()\n                    : i18n.t`More...`.toLocaleLowerCase()}\n                </ButtonStyled>\n                <Collapse isOpen={descOpen.includes(agreement.id)}>\n                  <GdprAgreementStyled\n                    data-testid={`orderAgreement__Info__${agreement.id}`}\n                    dangerouslySetInnerHTML={{\n                      __html: agreement.description,\n                    }}\n                  />\n                </Collapse>\n              </>\n            )}\n          </FormInputCheckbox>\n        </div>\n      ))}\n    </>\n  ))\n}\n","import React from 'react'\n\nimport { OrderEmailInput } from './OrderEmailInput'\nimport { OrderNameInput } from './OrderNameInput'\nimport { OrderNoteInput } from './OrderNoteInput'\nimport { OrderPhoneInput } from './OrderPhoneInput'\nimport OrderPromoInput from './OrderPromoInput'\n\nexport const OrderFormInputs = () => (\n  <>\n    <OrderNameInput />\n    <OrderPhoneInput />\n    <OrderEmailInput />\n    <OrderNoteInput />\n    <OrderPromoInput />\n  </>\n)\n","import { Plural, Trans } from '@lingui/react'\nimport React from 'react'\nimport { Field } from 'react-form'\nimport { FormFeedback, FormGroup, FormText, Input } from 'reactstrap'\n\nimport { i18n } from '../../i18n'\n\nexport const MAX_LENGTH = 50\nconst isTooLong = value => value && value.trim().length > MAX_LENGTH\n\nconst OrderNoteInputValidator = value =>\n  isTooLong(value) ? i18n.t`Note is too long` : null\n\nexport const OrderNoteInput: React.SFC = () => {\n  const ingredientsDescription = i18n.t`eg. ingredients change, company...`\n  return (\n    <Field\n      field=\"note\"\n      validate={OrderNoteInputValidator}\n      render={fieldApi => (\n        <FormGroup>\n          <Input\n            type=\"textarea\"\n            placeholder={i18n.t`Note`}\n            title={ingredientsDescription}\n            value={fieldApi.value}\n            onChange={e => fieldApi.setValue(e.target.value)}\n            onBlur={() => fieldApi.setTouched(true)}\n            valid={!fieldApi.error}\n            invalid={Boolean(fieldApi.error)}\n            data-testid=\"orderNoteInput\"\n          />\n          <FormText>{ingredientsDescription}</FormText>\n          {isTooLong(fieldApi.value) ? (\n            <FormFeedback>\n              <Trans>\n                Maximum length is{' '}\n                <Plural value={MAX_LENGTH} other=\"# characters\" />. Typed{' '}\n                <Plural\n                  value={fieldApi.value.length}\n                  one=\"# char\"\n                  other=\"# chars\"\n                />\n              </Trans>\n            </FormFeedback>\n          ) : null}\n        </FormGroup>\n      )}\n    />\n  )\n}\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { useCallback, useEffect } from 'react'\nimport { Form, IFormApi, IFormState } from 'react-form'\nimport { Route } from 'react-router'\nimport { Form as StrapForm } from 'reactstrap'\n\nimport { PaymentGateEnum } from '../../graph/types'\nimport { logOrder } from '../../helpers/logger'\nimport { RM } from '../../helpers/ramda'\nimport { reportError } from '../../helpers/sentry'\nimport { TAgreement, TOrderModel } from '../../models/OrderModel'\nimport { OrderFormAutoFill } from './OrderFormAutoFill'\n\ninterface IProps {\n  order: TOrderModel\n  render(formApi: IFormApi & IFormState<IOrderFormState>): ReactNode\n}\n\nexport interface IOrderFormState {\n  firstname: string\n  lastname: string\n  email: string\n  phonePrefix: string\n  phone: string\n  note: string\n  payment: PaymentGateEnum\n  agreements: TAgreement[]\n}\n\nfunction getFormValues(orderModel: TOrderModel): IOrderFormState {\n  return {\n    firstname: orderModel.firstname,\n    lastname: orderModel.lastname,\n    email: orderModel.email,\n    phone: orderModel.phone,\n    phonePrefix: orderModel.phonePrefix || orderModel.defaultPhonePrefix,\n    note: orderModel.note,\n    payment: PaymentGateEnum.Gopay,\n    agreements: [],\n  }\n}\n\nconst debounceInterval = 1500\n\nexport const OrderFormSetup: React.FC<IProps> = ({ order, render }) => {\n  useEffect(() => {\n    if (order.isVamInitialized) {\n      order.initVam()\n    }\n  }, [])\n\n  const updateVam = useCallback(\n    async (formState: IFormState<IOrderFormState>, formApi: IFormApi) => {\n      try {\n        await order.updateVam(formState.values)\n        formApi.setValue(\n          'agreements',\n          mergeFormAgreements(formState.values.agreements, order.agreements),\n        )\n      } catch (err) {\n        reportError(err, {\n          formState: formState.values,\n        })\n      }\n    },\n    [],\n  )\n\n  const onChange = useDebounceCallback(updateVam, debounceInterval)\n\n  return (\n    <Route>\n      {({ history }) => (\n        <Form\n          defaultValues={getFormValues(order)}\n          validateOnMount={true}\n          onChange={onChange}\n          onSubmit={async (formState: IOrderFormState) => {\n            try {\n              await order.submitOrder(formState)\n              history.replace(`/finish`)\n            } catch (e) {\n              logOrder(e)\n            }\n          }}\n        >\n          {formApi => (\n            <StrapForm onSubmit={formApi.submitForm}>\n              <OrderFormAutoFill\n                onFill={values => formApi.setAllValues(values)}\n              />\n              {render(formApi)}\n            </StrapForm>\n          )}\n        </Form>\n      )}\n    </Route>\n  )\n}\n\nfunction mergeFormAgreements(\n  formValue: TAgreement[],\n  agreements: TAgreement[],\n) {\n  return agreements.map(agreement => {\n    const formAgreement = formValue.find(RM.propEq('id', agreement.id))\n    if (formAgreement) {\n      return { ...agreement, isConfirmed: formAgreement.isConfirmed }\n    }\n    return agreement\n  })\n}\n","import './OrderSubmitLine.css'\n\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport SubmitSpinner from '../../common/SubmitSpinner'\nimport { WithOrder } from '../../common/WithOrder'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  onClick(): void\n  canSubmit: boolean\n}\n\nexport const OrderSubmitLine: React.SFC<IProps> = ({\n  onClick,\n  canSubmit = false,\n}) => (\n  <WithOrder\n    observe={true}\n    render={order => (\n      <div className=\"order__form__submit__line\">\n        <div className=\"order__form__submit__line__strip\" />\n        <PrimaryButton\n          className=\"order__form__submit__line__button\"\n          color=\"primary\"\n          size=\"md\"\n          onClick={onClick}\n          disabled={!canSubmit || order.isSubmitting}\n          data-testid=\"orderSubmitButton\"\n        >\n          <Desktop>\n            {order.isSubmitting ? (\n              <SubmitSpinner />\n            ) : (\n              i18n.t`Place order`.toLocaleUpperCase()\n            )}\n          </Desktop>\n          <Mobile>{i18n.t`Place order`.toLocaleUpperCase()}</Mobile>\n        </PrimaryButton>\n      </div>\n    )}\n  />\n)\n","import React from 'react'\nimport Spinner from 'react-spinkit'\nimport { withTheme } from 'styled-components'\n\nconst SubmitSpinner = props => (\n  <Spinner name=\"three-bounce\" color={props.theme.primary} fadeIn=\"none\" />\n)\n\nexport default withTheme(SubmitSpinner)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport Pacman from '../../common/Pacman'\nimport { TOrderModel } from '../../models/OrderModel'\n\ninterface IProps {\n  order: TOrderModel\n}\n\nconst TextPadding = styled.div`\n  padding-bottom: 2rem;\n`\n\nexport const OrderGoPayModal: React.SFC<IProps> = ({ order }) => (\n  <Observer>\n    {() => (\n      <AlertModal isOpen={order.isGoPayChecking} headerText=\"GoPay platba\">\n        <TextPadding>\n          <Trans>Checking your GoPay payment, please wait...</Trans>\n        </TextPadding>\n        <Pacman noMargin={true} />\n      </AlertModal>\n    )}\n  </Observer>\n)\n","import gql from 'graphql-tag'\n\nimport { buildQuery } from '../../graph'\nimport { CartItemFragment, PriceFragment } from '../../graph/fragments.graphql'\nimport { GFinishView } from '../../graph/types'\n\nexport const FinishViewOrderFragment = gql`\n  fragment GFinishViewOrder on Order {\n    id\n    items {\n      ...GCartItem\n      sideDishes {\n        ...GCartItem\n      }\n    }\n    totalSum {\n      ...GPrice\n    }\n    orderPayments {\n      paymentMethod {\n        paymentType {\n          enum\n        }\n      }\n    }\n  }\n  ${CartItemFragment}\n  ${PriceFragment}\n`\n\nexport const FinishViewQuery = gql`\n  query GFinishView($orderId: ID!, $branchId: ID!) {\n    order(id: $orderId) {\n      ...GFinishViewOrder\n    }\n    companyBranch(id: $branchId) {\n      id\n      phone\n      company {\n        id\n      }\n    }\n    androidApp: mobileApplicationSettings(\n      companyBranch: $branchId\n      platform: ANDROID\n    ) {\n      url\n    }\n    iosApp: mobileApplicationSettings(companyBranch: $branchId, platform: IOS) {\n      url\n    }\n  }\n  ${FinishViewOrderFragment}\n`\n\nexport const QueryFinishView = buildQuery<\n  GFinishView.Query,\n  GFinishView.Variables\n>(FinishViewQuery)\n","import './AddressInput.css'\n\nimport { Trans } from '@lingui/react'\nimport { useObserver } from 'mobx-react-lite'\nimport React from 'react'\nimport { Alert, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\nimport { TLocationModel } from '../../models/LocationModel'\nimport GeolocationButton from './GeolocationButton'\nimport ResolvedAddress from './ResolvedAddress'\nimport SearchInput from './SearchInput'\n\nconst AddressInputStyled = styled.div`\n  width: 90%;\n  min-width: 14rem;\n  margin: 1rem auto;\n  text-align: center;\n`\n\nconst AddressInputBoxStyled = styled.div`\n  border-radius: 1rem;\n  border: 1px solid #d4d4d4;\n  background-color: white;\n  height: 2.3rem;\n  overflow: hidden;\n  & input {\n    margin: 0.2rem 2rem 0.5rem 0.7rem;\n    background: transparent;\n    border: none;\n  }\n`\n\nexport const AddressInput: React.FC = () => {\n  const { location } = useRoot()\n  return useObserver(() => (\n    <AddressInputStyled>\n      <AddressInputBoxStyled>\n        <InputGroup size=\"sm\">\n          <ResolvedAddress\n            address={location.address || ''}\n            isVisible={location.hasAddress}\n            isResolving={location.isResolving}\n            onValidClick={location.clearAddress}\n          />\n          <SearchInput\n            inputProps={{\n              placeholder: i18n.t`Type address or choose it from map`,\n              autoComplete: 'shipping street-address',\n            }}\n            onSearch={location.withUserAddress}\n            isVisible={!location.hasAddress}\n            isSearching={location.isResolving}\n          />\n          <GeolocationButton\n            onClick={location.attemptGeolocation}\n            isVisible={location.isGeolocationAvailable && !location.isResolving}\n          />\n        </InputGroup>\n      </AddressInputBoxStyled>\n      {location.hasFinishedSearch ? renderErrorMessage(location) : null}\n    </AddressInputStyled>\n  ))\n}\n\nconst NoMouseAlert = styled(Alert)`\n  pointer-events: none;\n`\n\nfunction renderErrorMessage(location: TLocationModel) {\n  if (location.isResolved === false) {\n    return (\n      <NoMouseAlert color=\"danger\">\n        <Trans>Address was not recognized.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.isStreetAddress === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>Please enter address with house number.</Trans>\n      </NoMouseAlert>\n    )\n  }\n  if (location.inDeliveryLocation === false) {\n    return (\n      <NoMouseAlert color=\"warning\">\n        <Trans>\n          Meal can't be delivered to your chosen address by any restaurant.\n        </Trans>\n      </NoMouseAlert>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport { InputGroupAddon } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  isVisible: boolean\n  onClick(): void\n}\n\nconst Container = styled.span`\n  color: ${({ theme }) => theme.secondary};\n  cursor: pointer;\n  position: absolute;\n  right: 0.4rem;\n  top: 0.15rem;\n`\n\nexport const GeolocationButton: React.SFC<IProps> = ({\n  onClick,\n  isVisible = false,\n}) =>\n  isVisible ? (\n    <Container>\n      <InputGroupAddon addonType=\"append\" onClick={onClick}>\n        <span className=\"flaticon-gps\" />\n      </InputGroupAddon>\n    </Container>\n  ) : null\n\nexport default GeolocationButton\n","import React from 'react'\nimport Spinner from 'react-spinkit'\n\ninterface IProps {\n  address: string\n  isVisible: boolean\n  isResolving: boolean\n  onValidClick(): void\n}\n\nexport const ResolvedAddress: React.SFC<IProps> = ({\n  address,\n  isVisible,\n  isResolving,\n  onValidClick,\n}) => {\n  if (isResolving) {\n    return (\n      <div className=\"address__input__box__resolved wait\">\n        <Spinner name=\"ball-beat\" fadeIn=\"none\" />\n      </div>\n    )\n  }\n  if (!isVisible) {\n    return null\n  }\n  return (\n    <div className=\"address__input__box__resolved\" onClick={onValidClick}>\n      {address}\n    </div>\n  )\n}\n\nexport default ResolvedAddress\n","import classnames from 'classnames'\nimport debounce from 'debounce'\nimport React, { Component } from 'react'\nimport { Input } from 'reactstrap'\n\ninterface IProps {\n  onSearch(search: string): void\n  isVisible: boolean\n  isSearching: boolean\n  inputProps: Object\n}\n\ninterface IState {\n  value: string\n}\n\nclass SearchInput extends Component<IProps, IState> {\n  state = { value: '' }\n  componentDidMount() {\n    this.setFocus()\n  }\n  componentDidUpdate(nextProps: IProps) {\n    if (nextProps.isVisible !== this.props.isVisible) {\n      this.setFocus()\n    }\n  }\n  onSearch = debounce(this.props.onSearch, 2000)\n  onChange = ev => {\n    const value = ev.target.value || ''\n    this.setState({ value })\n    this.onSearch(value.trim())\n  }\n  onKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      this.onSearch.clear()\n      this.props.onSearch(this.state.value.trim())\n    }\n  }\n  inputRef: Maybe<HTMLInputElement> = null\n  onInputMount = (ref: HTMLInputElement) => {\n    this.inputRef = ref\n  }\n  isVisible() {\n    return this.props.isVisible !== false\n  }\n  isSearching() {\n    return this.props.isSearching !== false\n  }\n  setFocus() {\n    if (this.isVisible() && this.inputRef !== null) {\n      this.inputRef.focus()\n    }\n  }\n  render() {\n    const { inputProps } = this.props\n    const isHidden = !this.isVisible() || this.isSearching()\n    return (\n      <Input\n        className={classnames({ address__input__hidden: isHidden })}\n        onChange={this.onChange}\n        onKeyPress={this.onKeyPress}\n        value={this.state.value}\n        innerRef={this.onInputMount}\n        autoFocus={true}\n        {...inputProps}\n      />\n    )\n  }\n}\n\nexport default SearchInput\n","import React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport ButtonStripe from '../../common/ButtonStripe'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  enabled: boolean\n  onClick(): void\n  onPrefetch(): void\n}\n\nexport const AddressSubmit: React.SFC<IProps> = ({\n  enabled,\n  onClick,\n  onPrefetch,\n}) => (\n  <ButtonStripe>\n    <PrimaryButton\n      color=\"primary\"\n      disabled={!enabled}\n      onClick={onClick}\n      onMouseEnter={() => enabled && onPrefetch()}\n    >\n      {i18n.t`Confirm address`.toLocaleUpperCase()}\n    </PrimaryButton>\n  </ButtonStripe>\n)\n\nexport default AddressSubmit\n","import gql from 'graphql-tag'\n\nexport const InitialMapLocationQuery = gql`\n  query GInitialLocation {\n    initialLocation: resolveLocation {\n      gpsCoordinates {\n        latitude\n        longitude\n      }\n    }\n  }\n`\n","import { useFullComputed } from '@speedlo/hooks'\nimport { reaction } from 'mobx'\nimport { useDisposable, useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { useRoot } from '../../common/WithRoot'\nimport { GeoPoint } from '../../helpers/gps'\nimport { logMap } from '../../helpers/logger'\nimport { MapPanning } from './atoms/MapPanning'\n\ninterface IProps {\n  initialLocation: Maybe<GeoPoint>\n}\n\nexport const DeliveryMapPanning: React.SFC<IProps> = ({ initialLocation }) => {\n  const { location, map } = useRoot()\n\n  useDisposable(() =>\n    reaction(\n      () => map.clickPoint,\n      clickPoint => {\n        if (clickPoint) {\n          location.withUserLocation(clickPoint)\n          map.clearClickPoint()\n        }\n      },\n    ),\n  )\n\n  const panToGps = useFullComputed(\n    () => {\n      if (location.geoPoint) {\n        logMap('pan to user location', location.geoPoint)\n        return location.geoPoint\n      } else if (location.geolocationPoint) {\n        logMap('pan to geolocation', location.geolocationPoint)\n        return location.geolocationPoint\n      } else if (initialLocation) {\n        logMap('pan to initial location', initialLocation)\n        return initialLocation\n      }\n      logMap('no pan location available')\n      return\n    },\n    [initialLocation],\n  )\n\n  return useObserver(() => <MapPanning gps={panToGps.get()} map={map} />)\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-01.6d4e5108.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-commerce-02.8afb6c6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-doveze.e13c0122.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-gopay.48aa4030.png\";","import './SidedishPicker.css'\n\nimport { Observer } from 'mobx-react'\nimport React, { Fragment } from 'react'\n\nimport { GCartRecipe } from '../../graph/types'\n\nimport CategoryValidationMessage from './CategoryValidationMessage'\nimport { SidedishCheckbox } from './SidedishCheckbox'\n\ninterface IProps {\n  recipe: GCartRecipe.Fragment\n  selection: ReadonlyArray<ID>\n  onToggle(item: ID): void\n}\n\nexport const SidedishPicker: React.SFC<IProps> = ({\n  recipe,\n  selection,\n  onToggle,\n}) => (\n  <Observer>\n    {() => (\n      <div className=\"food__sidedish__picker\">\n        {recipe.categories.map(category => (\n          <Fragment key={category.id}>\n            <div className=\"food__sidedish__picker__category\">\n              {category.nameLabel}{' '}\n              <CategoryValidationMessage\n                minCount={category.minCount}\n                maxCount={category.maxCount}\n              />\n            </div>\n            {category.sideDishes.map(sidedish => (\n              <SidedishCheckbox\n                key={`${sidedish.id}-${category.id}`}\n                sidedish={sidedish}\n                isSelected={selection.includes(sidedish.id)}\n                canBeSelected={true}\n                onClick={() => onToggle(sidedish.id)}\n              />\n            ))}\n          </Fragment>\n        ))}\n      </div>\n    )}\n  </Observer>\n)\n","import React from 'react'\n\ninterface IProps {\n  minCount: number\n  maxCount: number\n}\n\nconst CategoryValidationMessage: React.SFC<IProps> = ({\n  minCount,\n  maxCount,\n}) => {\n  let message = ''\n  // if (minCount === 0) {\n  //   if (maxCount > 0) {\n  //     message = `(maximálně ${maxCount})`\n  //   }\n  // }\n  // if (maxCount === 0) {\n  //   message = `(minimálně ${minCount})`\n  // } else {\n  //   message = `(minimálně ${minCount} a maximálně ${maxCount})`\n  // }\n  return <span>{message}</span>\n}\n\nexport default CategoryValidationMessage\n","import './SidedishCheckbox.css'\n\nimport React from 'react'\nimport { Button } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { GCartRecipe } from '../../graph/types'\n\ninterface IProps {\n  sidedish: GCartRecipe.SideDishes\n  isSelected: boolean\n  canBeSelected: boolean\n  onClick(): void\n}\n\nconst SidedishCheckboxThemed = styled(\n  ({ isSelected, canBeSelected, ...props }) => <Button {...props} />,\n)`\n  background-color: ${props =>\n    props.isSelected ? props.theme.tertiary : 'transparent'} !important;\n  color: ${props =>\n    props.isSelected ? props.theme.tertiaryText : 'initial'} !important;\n  &:hover {\n    border-color: ${({ theme }) => theme.tertiaryHover} !important;\n  }\n`\n\nexport const SidedishCheckbox: React.SFC<IProps> = props => (\n  <SidedishCheckboxThemed\n    size=\"xs\"\n    outline={true}\n    data-testid={`sidedishCheckbox__${props.sidedish.id}`}\n    disabled={!props.canBeSelected && !props.isSelected}\n    {...props}\n  >\n    <div className=\"food__sidedish__picker__button__name\">\n      {props.sidedish.nameLabel}\n    </div>\n    <div className=\"food__sidedish__picker__button__price\">\n      {props.sidedish.price.formattedValue}\n    </div>\n  </SidedishCheckboxThemed>\n)\n","import { observable } from 'mobx'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { PrimaryButton } from '../../common/Buttons'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  selection: ID[]\n  onConfirm(): Promise<void>\n  enabled: boolean\n}\n\nexport const CartOrderButton: React.SFC<IProps> = ({\n  selection,\n  onConfirm,\n}) => {\n  const isConfirming = observable.box(false)\n\n  return (\n    <Observer>\n      {() => (\n        <PrimaryButton\n          className=\"modal__body__button\"\n          disabled={isConfirming.get()} /*!cartFood.isValid*/\n          data-testid=\"cartOrderButton\"\n          onClick={async () => {\n            isConfirming.set(true)\n            await onConfirm()\n            isConfirming.set(false)\n          }}\n        >\n          {i18n\n            .plural({\n              value: selection.length,\n              0: 'Order without sidedish',\n              one: 'Order with this sidedish',\n              other: 'Order with # sidedishes',\n            })\n            .toLocaleUpperCase()}\n        </PrimaryButton>\n      )}\n    </Observer>\n  )\n}\n","import { Observer } from 'mobx-react'\nimport React from 'react'\n\nimport { GCartView } from '../../graph/types'\n\nimport { TRootModel } from '../../models/RootModel'\nimport { CartDiscounts } from './CartDiscounts'\nimport { CartItem } from './CartItem'\nimport { CartTotals } from './CartTotals'\n\ninterface IProps {\n  order: GCartView.Order\n  rootModel: TRootModel\n}\n\nexport const CartContents: React.SFC<IProps> = ({ order, rootModel }) => (\n  <div className=\"cart__items__container\">\n    <div className=\"cart__items__container__content\">\n      <Observer>\n        {() =>\n          order.items.map(item => (\n            <CartItem\n              key={item.id}\n              item={item}\n              isActive={rootModel.order.lastActiveRecipeId === item.recipe.id}\n              onEdit={() => rootModel.order.setUsedRecipeId(item.recipe.id)}\n            />\n          ))\n        }\n      </Observer>\n      <CartDiscounts order={order} />\n      <CartTotals order={order} />\n    </div>\n  </div>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\n\nimport { GCartView } from '../../graph/types'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nexport const CartDiscounts: React.SFC<IProps> = ({ order }) =>\n  order.discounts && order.discounts.length > 0 ? (\n    <div>\n      {order.discounts.map(\n        ({ code, description, price: { formattedValue } }) => (\n          <div key={code} className=\"cart__item__summary\">\n            <div className=\"cart__item__summary__label\">{description}</div>\n            <div className=\"cart__item__summary__price\">{formattedValue}</div>\n          </div>\n        ),\n      )}\n      <div className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">\n          <Trans>Total discount</Trans>\n        </div>\n        <div className=\"cart__item__summary__price\">\n          {order.totalDiscount.formattedValue}\n        </div>\n      </div>\n    </div>\n  ) : null\n","import './CartItem.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { Desktop } from '../../common/Responsive'\nimport { GOrder } from '../../graph/types'\nimport { i18n } from '../../i18n'\nimport { EditCartItemButton } from './EditCartItemButton'\nimport { RemoveCartItemButton } from './RemoveCartItemButton'\n\ninterface IProps {\n  item: GOrder.Items\n  isActive: boolean\n  onEdit(): void\n}\n\nconst EditButtonsContainerStyled = styled.div`\n  flex: 0 0 auto;\n`\n\nconst CartItemStyled = styled.div`\n  width: 100%;\n  min-height: 3rem;\n  color: #1d1d1d;\n  margin: 0 0 0.4rem 0;\n  padding: 0.2rem;\n  background: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'rgba(255, 255, 255, 0.8)'};\n  text-align: left;\n  display: flex;\n`\n\nexport const CartItem: React.SFC<IProps> = ({ item, isActive, onEdit }) => (\n  <CartItemStyled isActive={isActive}>\n    <EditButtonsContainerStyled>\n      <RemoveCartItemButton itemId={item.id} enabled={!item.automatic} />\n\n      <Desktop>\n        <EditCartItemButton\n          itemId={item.id}\n          enabled={item.recipe.sideDishCount !== 0 && !item.automatic}\n          onClick={onEdit}\n        />\n      </Desktop>\n    </EditButtonsContainerStyled>\n\n    <div className=\"cart__item__description\">\n      <div\n        className=\"cart__item__item__name\"\n        data-testid={`cardItem__Name__${item.recipe.id}`}\n      >\n        {item.recipe.nameLabel}\n      </div>\n      <div\n        className=\"cart__item__item__side__dish\"\n        data-testid={`cardItem__SideDish__${item.recipe.id}`}\n      >\n        {item.sideDishes.length > 0\n          ? `+ ${item.sideDishes\n              .map(({ recipe }) => recipe.nameLabel)\n              .join(',')}`\n          : item.recipe.sideDishCount > 0 && (\n              <span>{i18n.t`Without sidedish`.toLocaleLowerCase()}</span>\n            )}\n      </div>\n    </div>\n\n    <div\n      className=\"cart__item__item__price\"\n      data-testid={`cardItem__Price__${item.id}`}\n    >\n      {item.automatic ? i18n.t`For free` : item.price.formattedValue}\n    </div>\n  </CartItemStyled>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n  onClick(): void\n}\n\nexport const EditCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  onClick,\n  ...props\n}) => {\n  const button = <CartItemButton icon=\"edit\" color=\"#d9a700\" {...props} />\n  return props.enabled ? (\n    <Link\n      to={`/order/change/${itemId}`}\n      onClick={onClick}\n      data-testid={`editCartItemButton__${itemId}`}\n    >\n      {button}\n    </Link>\n  ) : (\n    button\n  )\n}\n","import React from 'react'\n\nimport { WithRoot } from '../../common/WithRoot'\nimport { CartItemButton } from './CartItemButton'\n\ninterface IProps {\n  itemId: ID\n  enabled: boolean\n}\n\nexport const RemoveCartItemButton: React.SFC<IProps> = ({\n  itemId,\n  enabled,\n}) => (\n  <WithRoot\n    render={root => (\n      <CartItemButton\n        icon=\"delete\"\n        color=\"#99230e\"\n        enabled={enabled}\n        data_testid={`removeCartItemButton`}\n        onClick={() => root.order.removeItemFromCart(itemId)}\n      />\n    )}\n  />\n)\n","import Color from 'color'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { GCartView } from '../../graph/types'\nimport { i18n } from '../../i18n'\n\ninterface IProps {\n  order: GCartView.Order\n}\n\nconst CartItemSummaryTotalThemed = styled.div`\n  background: ${({ theme }) =>\n    Color(theme.primary)\n      .alpha(0.7)\n      .hsl()\n      .string()} !important;\n`\n\nexport const CartTotals: React.SFC<IProps> = ({ order }) => (\n  <div>\n    {order.coverPrice && order.coverPrice.value ? (\n      <div key=\"casePrice\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Covers`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.coverPrice.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    {order.transportFee && order.transportFee.value ? (\n      <div key=\"transportFee\" className=\"cart__item__summary\">\n        <div className=\"cart__item__summary__label\">{i18n.t`Delivery`}</div>\n        <div className=\"cart__item__summary__price\">\n          {order.transportFee.formattedValue}\n        </div>\n      </div>\n    ) : null}\n    <CartItemSummaryTotalThemed\n      key=\"totalPrice\"\n      className=\"cart__item__summary cart__item__summary__total\"\n    >\n      <div className=\"cart__item__summary__label\">{i18n.t`Total`}</div>\n      <div\n        className=\"cart__item__summary__price\"\n        data-testid={`cardItemSummary__Price`}\n      >\n        {order.totalSum.formattedValue}\n      </div>\n    </CartItemSummaryTotalThemed>\n  </div>\n)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { i18n } from '../../i18n'\n\nconst CartIsEmptyThemed = styled.span`\n  color: ${({ theme }) => theme.secondary};\n`\n\nexport const CartIsEmpty = () => (\n  <CartIsEmptyThemed\n    className=\"cart__column__cart__empty__label\"\n    data-testid=\"cartIsEmpty\"\n  >\n    {`${i18n.t`Cart is empty`}...`}\n  </CartIsEmptyThemed>\n)\n","import { Trans } from '@lingui/react'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\nimport { Alert } from 'reactstrap'\n\nimport { buildQuery } from '../../graph'\nimport { GOrderCartForItem } from '../../graph/types'\nimport { RM } from '../../helpers/ramda'\nimport { OrderCartForItemQuery } from '../../models/OrderModel.graphql'\nimport { TRootModel } from '../../models/RootModel'\nimport { CartModal } from './CartModal'\n\ninterface IProps {\n  root: TRootModel\n}\n\nconst QueryCart = buildQuery<\n  GOrderCartForItem.Query,\n  GOrderCartForItem.Variables\n>(OrderCartForItemQuery)\n\nexport const ChangeCartModal: React.SFC<IProps> = ({ root }) => (\n  <Route\n    path=\"/order/change/:itemId\"\n    render={({ match, history }) => (\n      <QueryCart\n        variables={{ itemId: match.params.itemId }}\n        renderLoading={false}\n        renderError={() => (\n          <Alert color=\"warning\">\n            <Trans>Error in loading cart item. Issue was reported.</Trans>\n          </Alert>\n        )}\n        render={(data, { loading }) => (\n          <CartModal\n            recipe={data.item && data.item.recipe}\n            initialSelection={\n              data.item\n                ? (data.item.sideDishes.map(\n                    RM.path(['recipe', 'id']),\n                  ) as string[])\n                : []\n            }\n            onConfirm={sideDishes =>\n              root.order.updateItem(match.params.itemId, sideDishes)\n            }\n            onClose={() => history.goBack()}\n            isLoading={loading}\n          />\n        )}\n      />\n    )}\n  />\n)\n","import './CategoryNavigator.css'\n\nimport classNames from 'classnames'\nimport React, { Component } from 'react'\nimport Scroll from 'react-scroll'\nimport Swipeable from 'react-swipeable'\nimport Truncate from 'react-truncate'\nimport { compose, withState } from 'recompose'\n\nimport { Desktop, Mobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenuCategory.Fragment>\n}\n\ninterface IInnerProps extends IProps {\n  setActiveCategoryIndex(index: number): void\n  activeCategoryIndex: number\n}\n\nclass ContainerByPlatform extends Component {\n  state = { scroll: 0 }\n  ref: Maybe<HTMLBaseElement> = null\n  onMounted = ref => {\n    this.ref = ref\n  }\n  onSwiping = (ev, deltaX) => (this.ref!.scrollLeft += deltaX / 5)\n  onSwiped = () => this.setState({ scroll: this.ref!.scrollLeft })\n  render() {\n    return (\n      <>\n        <Desktop>\n          {isDesktop =>\n            isDesktop ? (\n              <div className=\"category__navigator\">{this.props.children}</div>\n            ) : null\n          }\n        </Desktop>\n        <Mobile>\n          <Swipeable\n            className=\"category__navigator category__navigator__nowrap\"\n            onSwiping={this.onSwiping}\n            onSwiped={this.onSwiped}\n            innerRef={this.onMounted}\n          >\n            {this.props.children}\n          </Swipeable>\n        </Mobile>\n      </>\n    )\n  }\n}\n\nexport const CategoryNavigator: React.SFC<IProps & IInnerProps> = ({\n  categories,\n  setActiveCategoryIndex,\n  activeCategoryIndex,\n}) => (\n  <ContainerByPlatform>\n    {categories.length === 0\n      ? null\n      : categories.map((category, idx) => (\n          <Scroll.Link\n            to={category.nameLabel}\n            key={category.id}\n            className={classNames('category__navigator__scroll__link', {\n              active: activeCategoryIndex === idx,\n            })}\n            onSetActive={() => setActiveCategoryIndex(idx)}\n            offset={-168}\n            smooth={true}\n            spy={true}\n            data-testid={`categoryNavigatorScrollLink__${category.id}`}\n          >\n            <div className=\"category__navigator__scroll__link__circle\">\n              <span className={`flaticon-${category.pictogram}`} />\n            </div>\n            <div className=\"category__navigator__scroll__link__description\">\n              <Truncate lines={2}>{category.nameLabel}</Truncate>\n            </div>\n          </Scroll.Link>\n        ))}\n  </ContainerByPlatform>\n)\n\nconst decorate = compose<IInnerProps, IProps>(\n  withState('activeCategoryIndex', 'setActiveCategoryIndex', 0),\n)\n\nexport default decorate(CategoryNavigator)\n","import { Trans } from '@lingui/react'\nimport { Observer } from 'mobx-react'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaDesktop, mediaMobile } from '../../common/Responsive'\nimport { GFoodMenu } from '../../graph/types'\nimport { TRootModel } from '../../models/RootModel'\nimport FoodCategory from './FoodCategory'\nimport FoodMenuItem from './FoodMenuItem'\n\ninterface IProps {\n  categories: ReadonlyArray<GFoodMenu.WareCategories>\n  inCart: { [recipeId: string]: number }\n  orderItemCount: number\n  shouldUpdate: boolean\n  rootModel: TRootModel\n}\n\nconst FoodMenuStyled = styled.div`\n  border-radius: 0 0 0.6rem 0.6rem;\n  ${mediaDesktop`background: white;`};\n  ${mediaMobile`\n    background: #eee9e7;\n    background-size: cover;\n    background-attachment: scroll;\n  `};\n`\n\nconst FoodMenuListStyled = styled.div`\n  ${mediaDesktop`\n    margin: 0 1.4rem 1rem 1.6rem;\n    padding: 2rem 0 2rem 0;\n  `};\n  ${mediaMobile`\n    margin: 0 0.7rem 1rem 0.7rem;\n    padding: 0 0 4rem 0;\n  `};\n`\n\nexport class FoodMenu extends React.Component<IProps> {\n  shouldComponentUpdate({ shouldUpdate }: IProps) {\n    return shouldUpdate\n  }\n  orderLimitReached() {\n    const {\n      orderItemCount,\n      rootModel: { config },\n    } = this.props\n    return orderItemCount >= config.orderItemsMax\n  }\n  render() {\n    const {\n      categories,\n      inCart,\n      rootModel: { order, user },\n    } = this.props\n    const canAddToCart = !this.orderLimitReached()\n    return (\n      <FoodMenuStyled>\n        <FoodMenuListStyled>\n          {categories.length === 0 ? (\n            <h3>\n              <Trans>Food menu is empty. We are sorry.</Trans>\n            </h3>\n          ) : (\n            <Observer>\n              {() =>\n                categories.map(category => (\n                  <FoodCategory key={category.id} category={category}>\n                    {category.recipes.map(recipe => (\n                      <FoodMenuItem\n                        key={recipe.id}\n                        recipe={recipe}\n                        inCart={inCart[recipe.id] || 0}\n                        isActive={order.lastActiveRecipeId === recipe.id}\n                        canAddToCart={canAddToCart}\n                        onClick={() => {\n                          if (canAddToCart) {\n                            order.setUsedRecipeId(recipe.id)\n                          } else {\n                            user.showOrderLimit()\n                          }\n                        }}\n                        onPrefetch={() => {\n                          if (recipe.sideDishCount > 0) {\n                            order.prefetchFood(recipe.id)\n                          }\n                        }}\n                      />\n                    ))}\n                  </FoodCategory>\n                ))\n              }\n            </Observer>\n          )}\n        </FoodMenuListStyled>\n      </FoodMenuStyled>\n    )\n  }\n}\n","import React from 'react'\nimport Scroll from 'react-scroll'\nimport styled from 'styled-components'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { GFoodMenuCategory } from '../../graph/types'\nimport { FoodInCart } from './types'\n\ninterface IProps {\n  category: GFoodMenuCategory.Fragment\n  foodInCart?: FoodInCart\n}\n\nconst FoodCategoryStyled = styled.div`\n  color: #474747;\n  display: block;\n  font-size: 1.6rem;\n  & a {\n    text-decoration: none;\n  }\n`\n\nconst FoodCategoryTitleStyled = styled('h3')`\n  ${mediaMobile`margin: 1rem 0 0.4rem 1rem;`};\n`\n\nconst FoodCategory: React.SFC<IProps> = ({ category, children }) => (\n  <Scroll.Element name={category.nameLabel}>\n    <FoodCategoryStyled>\n      <FoodCategoryTitleStyled>{category.nameLabel}</FoodCategoryTitleStyled>\n      {children}\n    </FoodCategoryStyled>\n  </Scroll.Element>\n)\n\nexport default FoodCategory\n","import './FoodMenuItem.css'\n\nimport React from 'react'\nimport Truncate from 'react-truncate'\nimport styled from 'styled-components'\n\nimport { GFoodMenuRecipe } from '../../graph/types'\n\nimport { mediaMobile } from '../../common/Responsive'\nimport { LinkToCart } from './LinkToCart'\n\ninterface IProps {\n  recipe: GFoodMenuRecipe.Fragment\n  inCart: number\n  isActive: boolean\n  onClick(): void\n  onPrefetch(): void\n  canAddToCart: boolean\n}\n\nconst FoodMenuItemStyled = styled.div`\n  padding: 1rem 0.5rem 0.3rem 1.1rem;\n  border: 1px solid #d5d5d5 !important;\n  margin: 0 0 0.4rem 0;\n  border-radius: 0.8rem;\n  cursor: pointer;\n  position: relative;\n  min-height: 6rem;\n  &:hover {\n    background-color: #c9e8d7;\n  }\n  background-color: ${({ isActive }: { isActive: boolean }) =>\n    isActive ? '#b3ebcc' : 'white'};\n  h4 {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #404040;\n    margin-bottom: 0.1rem;\n    margin-right: 6rem;\n  }\n  p {\n    color: #666666;\n    margin: 0.6rem 0 0 0;\n    font-size: 0.9rem;\n    max-height: 2.5rem;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n`\nconst FoodMenuItemImage = styled.img`\n  width: 6rem;\n  height: 6rem;\n  display: block;\n  float: left;\n  margin: -1.05rem 1rem 0 -1.2rem;\n  border-radius: 0.8rem 0 0 0.8rem;\n  object-fit: cover;\n`\n\nconst FoodMenuItemPriceCorner = styled.div`\n  border-top-width: 1.8rem;\n  border-top-style: solid;\n  border-top-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 4.799rem;\n  top: 1rem;\n  width: 0;\n  height: 0;\n  border-left: 1.8rem solid transparent;\n`\n\nconst FoodMenuItemPrice = styled.div`\n  background-color: ${({ theme }) => theme.primary} !important;\n  position: absolute;\n  right: 0;\n  top: 1rem;\n  width: 4.8rem;\n  height: 1.8rem;\n  padding: 0.12rem 0.7rem 0.3rem 0rem;\n  font-weight: 500;\n  font-size: 1.1rem;\n  color: white;\n  text-align: right;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst FoodMenuItemCount = styled.div`\n  background-color: ${({ theme }) => theme.secondary};\n  float: left;\n  position: absolute;\n  left: -1.2rem;\n  padding: 0.4rem 0.6rem;\n  color: white;\n  border-radius: 1.8rem;\n  font-size: 0.9rem;\n  ${mediaMobile`\n    left: -0.6rem;\n    top: -0.7rem;\n  `};\n`\n\nconst FoodMenuItem: React.SFC<IProps> = ({\n  recipe,\n  inCart,\n  onPrefetch,\n  isActive,\n  onClick,\n  canAddToCart,\n}) => (\n  <LinkToCart\n    recipeId={recipe.id}\n    hasSidedish={recipe.sideDishCount > 0}\n    canAddToCart={canAddToCart}\n    onClick={onClick}\n    data-testid={`foodMenuItem__${recipe.id}`}\n  >\n    <FoodMenuItemStyled onMouseEnter={onPrefetch} isActive={isActive}>\n      {recipe.image && (\n        <FoodMenuItemImage src={recipe.image} alt={recipe.nameLabel} />\n      )}\n\n      <FoodMenuItemPriceCorner />\n      <FoodMenuItemPrice data-testid={`foodMenuItem__Price__${recipe.id}`}>\n        {recipe.price.formattedValue}\n      </FoodMenuItemPrice>\n      {inCart > 0 ? <FoodMenuItemCount>{`${inCart}x`}</FoodMenuItemCount> : ''}\n      <h4>\n        <Truncate lines={2} data-testid={`foodMenuItem__Name__${recipe.id}`}>\n          {recipe.nameLabel}\n        </Truncate>\n      </h4>\n      <p>\n        <Truncate\n          lines={2}\n          data-testid={`foodMenuItem__Description__${recipe.id}`}\n        >\n          {recipe.descriptionLabel}\n        </Truncate>\n      </p>\n    </FoodMenuItemStyled>\n  </LinkToCart>\n)\n\nexport default FoodMenuItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { WithRoot } from '../../common/WithRoot'\n\nimport { Mobile } from '../../common/Responsive'\n\ninterface IProps {\n  recipeId: string\n  canAddToCart: boolean\n  hasSidedish: boolean\n  onClick(): void\n}\n\nconst LinkStyled = styled(Link)`\n  color: inherit;\n  &:visited div {\n    border: inherit;\n  }\n`\n\nexport const LinkToCart: React.SFC<IProps> = ({\n  recipeId,\n  hasSidedish,\n  canAddToCart,\n  onClick,\n  children,\n}) => {\n  if (!canAddToCart) {\n    return <div onClick={onClick}>{children}</div>\n  }\n  if (hasSidedish) {\n    return (\n      <LinkStyled to={{ pathname: `/order/add/${recipeId}` }} onClick={onClick}>\n        {children}\n      </LinkStyled>\n    )\n  }\n  return (\n    <WithRoot\n      render={({ order }) => (\n        <Mobile>\n          {isMobile => (\n            <div\n              onClick={() => {\n                onClick()\n                isMobile\n                  ? order.addFromRecipeMobile(recipeId)\n                  : order.addFromRecipe(recipeId)\n              }}\n            >\n              {children}\n            </div>\n          )}\n        </Mobile>\n      )}\n    />\n  )\n}\n","import { useObserver } from 'mobx-react-lite'\nimport React from 'react'\n\nimport { AlertModal } from '../../common/AlertModal'\nimport { useRoot } from '../../common/WithRoot'\nimport { i18n } from '../../i18n'\n\nexport const OrderLimitModal: React.FC = () => {\n  const { user } = useRoot()\n  return useObserver(() => (\n    <AlertModal\n      isOpen={!user.orderLimitAlertHidden}\n      onClose={user.hideOrderLimit}\n      headerText={i18n.t`Limit has been reached`}\n    >\n      {i18n.t`The maximum number of items in the order has been reached`}\n    </AlertModal>\n  ))\n}\n","import React from 'react'\nimport { Field, FieldType } from 'react-form'\nimport { Input } from 'reactstrap'\nimport styled from 'styled-components'\n\ninterface IProps {\n  field: FieldType\n  defaultValue?: boolean\n  validate?(value: boolean): string | null\n}\n\nconst CheckboxContainerStyled = styled.div`\n  display: flex;\n  margin-bottom: 0.5rem;\n`\n\nconst CheckboxStyled = styled(Input)`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  background-color: white;\n  border: 1px solid;\n  border-color: ${({ invalid }: { invalid: boolean }) =>\n    invalid ? 'red' : '#c5c5c5'};\n  width: 2rem;\n  height: 2rem;\n  min-width: 2rem;\n  border-radius: 0.25rem;\n  position: relative;\n  margin: 0;\n  outline: none;\n  &:checked {\n    background-color: white;\n  }\n  &:checked:after {\n    content: '\\\\2714';\n    font-size: 2rem;\n    position: absolute;\n    top: -0.5rem;\n    left: 0.1rem;\n    color: #1d1d1d;\n    overflow: hidden;\n  }\n`\n\nconst LabelStyled = styled.div`\n  margin: 0 0 0 0.8rem;\n  vertical-align: top;\n`\n\nexport const FormInputCheckbox: React.SFC<IProps> = ({\n  field,\n  defaultValue = false,\n  validate,\n  children,\n  ...props\n}) => (\n  <Field field={field} defaultValue={defaultValue} validate={validate}>\n    {fieldApi => (\n      <CheckboxContainerStyled>\n        <CheckboxStyled\n          type=\"checkbox\"\n          value={fieldApi.value}\n          onChange={checked => fieldApi.setValue(checked.target.checked)}\n          invalid={fieldApi.touched && Boolean(fieldApi.error)}\n          {...props}\n        />\n        <LabelStyled>{children}</LabelStyled>\n      </CheckboxContainerStyled>\n    )}\n  </Field>\n)\n","import React from 'react'\nimport { FormGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nconst emailRx = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\nexport const OrderEmailInputValidator = value => {\n  const email = value.trim()\n  if (email === '') {\n    return i18n.t`E-mail is mandatory`\n  }\n  if (!emailRx.test(email)) {\n    return i18n.t`E-mail format is not valid`\n  }\n  return null\n}\n\nexport const OrderEmailInput: React.SFC = () => (\n  <FormGroup>\n    <FormTextInput\n      field=\"email\"\n      type=\"email\"\n      autoComplete=\"email\"\n      placeholder=\"E-mail\"\n      showFeedback={true}\n      validate={OrderEmailInputValidator}\n      data-testid=\"orderEmailInput\"\n    />\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderNameInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"firstname\"\n        autoComplete=\"given-name\"\n        placeholder={i18n.t`First name`}\n        showFeedback={true}\n        validate={value =>\n          value.trim() === '' ? i18n.t`First name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__FirstName\"\n      />\n      <FormTextInput\n        field=\"lastname\"\n        autoComplete=\"family-name\"\n        placeholder={i18n.t`Last name`}\n        showFeedback={true}\n        validate={value =>\n          value.trim() === '' ? i18n.t`Last name is mandatory` : null\n        }\n        data-testid=\"orderNameInput__LastName\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import React from 'react'\nimport { FormGroup, InputGroup } from 'reactstrap'\n\nimport { FormTextInput } from '../../common/FormTextInput'\nimport { i18n } from '../../i18n'\n\nexport const OrderPhoneInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone is mandatory` : null\n\nexport const OrderPhonePrefixInputValidator = value =>\n  value.trim() === '' ? i18n.t`Phone prefix is mandatory` : null\n\nexport const OrderPhoneInput: React.SFC = () => (\n  <FormGroup>\n    <InputGroup>\n      <FormTextInput\n        field=\"phonePrefix\"\n        autoComplete=\"tel-country-code\"\n        placeholder=\"+\"\n        showFeedback={true}\n        validate={OrderPhonePrefixInputValidator}\n      />\n      <FormTextInput\n        field=\"phone\"\n        type=\"tel\"\n        autoComplete=\"tel-national\"\n        placeholder={i18n.t`Phone`}\n        showFeedback={true}\n        validate={OrderPhoneInputValidator}\n        style={{ width: '55%' }}\n        data-testid=\"orderPhoneInput__Phone\"\n      />\n    </InputGroup>\n  </FormGroup>\n)\n","import { useDebounceCallback } from '@speedlo/hooks'\nimport React, { KeyboardEvent, useCallback, useRef, useState } from 'react'\nimport { useQuery } from 'react-apollo-hooks'\nimport { FormGroup, Input, InputGroup } from 'reactstrap'\nimport styled from 'styled-components'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { useRoot } from '../../common/WithRoot'\nimport {\n  GOrderPromoCodes,\n  GPromoCode,\n  MAddOrderPromo,\n  MRemoveOrderPromo,\n} from '../../graph/types'\nimport { useGuardedMutation } from '../../hooks/useGuardedMutation'\nimport { i18n } from '../../i18n'\nimport {\n  AddOrderPromoMutation,\n  OrderPromoCodesQuery,\n  RemoveOrderPromoMutation,\n} from './OrderPromoInput.graphql'\n\ntype TPromoCode = GPromoCode.Fragment\n\ninterface IProps {\n  codes: ReadonlyArray<TPromoCode>\n  onCodeAdd(codeInput: string): Promise<void>\n  onCodeRemove(codeId: ID): void\n  autoSubmitAfterTimeout?: number\n}\n\nconst CodesPanel = styled.div`\n  margin-top: 0.5rem;\n  & button {\n    margin-right: 0.5rem;\n    font-size: 0.7rem;\n  }\n`\n\nexport function OrderPromoInputUI({\n  codes,\n  onCodeAdd,\n  onCodeRemove,\n  autoSubmitAfterTimeout = 2000,\n}: IProps) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isValidating, setValidating] = useState(false)\n\n  const addCode = useCallback(\n    () => {\n      if (inputRef.current && !inputRef.current.disabled) {\n        const code = inputRef.current.value.trim()\n        if (code.length > 0) {\n          setValidating(true)\n          inputRef.current.disabled = true\n          inputRef.current.value = i18n.t`Validating promo code ${code}...`\n          onCodeAdd(code)\n            .then(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.value = ''\n              }\n            })\n            .catch(() => {\n              if (inputRef.current) {\n                inputRef.current.value = code\n              }\n            })\n            .finally(() => {\n              setValidating(false)\n              if (inputRef.current) {\n                inputRef.current.disabled = false\n                inputRef.current.focus()\n              }\n            })\n        }\n      }\n    },\n    [onCodeAdd],\n  )\n\n  const onChange = useDebounceCallback(addCode, autoSubmitAfterTimeout)\n\n  const onKeyDown = useCallback((ev: KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === 'Enter') {\n      addCode()\n      ev.preventDefault()\n    }\n  }, [])\n\n  return (\n    <FormGroup>\n      <InputGroup>\n        <Input\n          innerRef={inputRef}\n          autoComplete=\"off\"\n          disabled={isValidating}\n          placeholder={i18n.t`Promo codes`}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          onBlur={addCode}\n          onPaste={addCode}\n        />\n      </InputGroup>\n      <CodesPanel>\n        {codes.map(({ id, code }) => (\n          <SecondaryButton key={id} onClick={() => onCodeRemove(id)}>\n            {`${code} ✖`}\n          </SecondaryButton>\n        ))}\n      </CodesPanel>\n    </FormGroup>\n  )\n}\n\nconst OrderPromoInput: React.FC = () => {\n  const { order } = useRoot()\n\n  const { data } = useQuery<GOrderPromoCodes.Query, GOrderPromoCodes.Variables>(\n    OrderPromoCodesQuery,\n    {\n      suspend: false,\n      variables: { orderId: order.orderId! },\n    },\n  )\n\n  const addCodeMutation = useGuardedMutation<\n    MAddOrderPromo.Mutation,\n    MAddOrderPromo.Variables\n  >(AddOrderPromoMutation, {\n    refetchQueries: ['GCartView'],\n  })\n\n  const onCodeAdd = useCallback(async (code: string) => {\n    if (!order.orderId) {\n      return\n    }\n    const result = await addCodeMutation({\n      orderId: order.orderId!,\n      code: code,\n    })\n    if (result && result.addOrderPromoCode.userErrors.length) {\n      order.submitFailed(result.addOrderPromoCode.userErrors)\n    }\n  }, [])\n\n  const removeCodeMutation = useGuardedMutation<\n    MRemoveOrderPromo.Mutation,\n    MRemoveOrderPromo.Variables\n  >(RemoveOrderPromoMutation, { refetchQueries: ['GCartView'] })\n\n  const onCodeRemove = (codeId: ID) => {\n    if (order.orderId) {\n      removeCodeMutation({ codeId, orderId: order.orderId })\n    }\n  }\n\n  return (\n    <OrderPromoInputUI\n      codes={data && data.order ? data.order.promoCodes : []}\n      onCodeAdd={onCodeAdd}\n      onCodeRemove={onCodeRemove}\n    />\n  )\n}\n\nexport default OrderPromoInput\n","import { ApolloError } from 'apollo-client'\nimport { DocumentNode, GraphQLError } from 'graphql'\nimport { useCallback } from 'react'\nimport { MutationHookOptions, useMutation } from 'react-apollo-hooks'\n\nimport { RM } from '../helpers/ramda'\nimport { reportError } from '../helpers/sentry'\nimport { i18n } from '../i18n'\n\ninterface IGuardedMutationOptions<TData, TVariables>\n  extends MutationHookOptions<TData, TVariables> {}\n\nexport function useGuardedMutation<TData, TVariables>(\n  mutation: DocumentNode,\n  options: IGuardedMutationOptions<TData, TVariables> = {},\n) {\n  const defaultMessage = i18n.t`Unexpected error occured while sending a request. Our team was notified about the issue.`\n\n  const handleGraphQLErrors = useCallback(\n    (errors: ReadonlyArray<GraphQLError>) => {\n      const userErrors = errors.filter(RM.propEq('showToUser', true))\n      if (userErrors.length === 0) {\n        window.alert(defaultMessage)\n      } else {\n        window.alert(userErrors.map(RM.prop('message')).join('\\n'))\n      }\n    },\n    [],\n  )\n\n  const handleError = useCallback((err: Error) => {\n    if (isApolloError(err)) {\n      if (err.networkError) {\n        window.alert(\n          i18n.t`Communication with server has failed. Please retry the operation in a moment again.`,\n        )\n        return\n      } else if (err.graphQLErrors) {\n        handleGraphQLErrors(err.graphQLErrors)\n        return\n      }\n    }\n    reportError(err)\n  }, [])\n\n  const mutate = useMutation(mutation, options)\n  return async (variables: TVariables) => {\n    try {\n      const result = await mutate({ variables })\n      if (result.errors) {\n        handleGraphQLErrors(result.errors)\n        return null\n      }\n      if (!result.data) {\n        return null\n      }\n      return result.data as TData\n    } catch (err) {\n      handleError(err)\n      return null\n    }\n  }\n}\n\nfunction isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors')\n}\n","import gql from 'graphql-tag'\n\nimport { PromoCodeFragment } from '../../graph/fragments.graphql'\n\nexport const OrderPromoCodesQuery = gql`\n  query GOrderPromoCodes($orderId: ID!) {\n    order(id: $orderId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const AddOrderPromoMutation = gql`\n  mutation MAddOrderPromo($orderId: ID!, $code: String!) {\n    addOrderPromoCode(order: $orderId, promoCode: $code) {\n      userErrors: errors\n      order {\n        id\n        promoCodes {\n          ...GPromoCode\n        }\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n\nexport const RemoveOrderPromoMutation = gql`\n  mutation MRemoveOrderPromo($orderId: ID!, $codeId: ID!) {\n    removeOrderPromoCode(order: $orderId, promoCode: $codeId) {\n      id\n      promoCodes {\n        ...GPromoCode\n      }\n    }\n  }\n  ${PromoCodeFragment}\n`\n","import React from 'react'\n\nimport { SecondaryButton } from '../../common/Buttons'\nimport { PaymentGateEnum } from '../../graph/types'\nimport { IOrderFormState } from './OrderFormSetup'\nimport { MAX_LENGTH } from './OrderNoteInput'\n\ninterface IProps {\n  onFill(values: IOrderFormState): void\n}\n\nexport const OrderFormAutoFill: React.SFC<IProps> = ({ onFill }) =>\n  process.env.REACT_APP_STAGE !== 'prod' ? (\n    <SecondaryButton\n      onClick={() => {\n        const faker: Faker.FakerStatic = require('faker')\n        faker.locale = 'cz'\n        onFill({\n          firstname: faker.name.firstName(),\n          lastname: faker.name.lastName(),\n          email: faker.internet.email(),\n          phone: faker.phone.phoneNumberFormat(0),\n          phonePrefix: '+420',\n          note: faker.lorem.sentence().slice(0, MAX_LENGTH - 1),\n          payment: PaymentGateEnum.Gopay,\n          agreements: [],\n        })\n      }}\n    >\n      Autofill form [DEV ONLY]\n    </SecondaryButton>\n  ) : null\n"],"sourceRoot":""}